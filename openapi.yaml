openapi: 3.0.3
info:
  title: Operator
  version: v1.8.21
paths:
  /api/v0alpha/acd/acceptsecureformfield:
    post:
      tags:
      - Acd
      operationId: Acd_AcceptSecureFormField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AcceptSecureFormFieldReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AcceptSecureFormFieldRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/acdgetallagentsstatuses:
    post:
      tags:
      - Acd
      operationId: Acd_ACDGetAllAgentsStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ACDGetAllAgentsStatusesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ACDGetAllAgentsStatusesReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentIntercom:
    post:
      tags:
      - Acd
      operationId: Acd_AgentIntercom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentIntercomRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentIntercomReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentdisconnect:
    post:
      tags:
      - Acd
      operationId: Acd_AgentDisconnect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentDisconnectRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentDisconnectReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentgetcallfromhold:
    post:
      tags:
      - Acd
      operationId: Acd_AgentGetCallFromHold
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentGetCallFromHoldRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentGetCallFromHoldReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentgetconnectedparty:
    post:
      tags:
      - Acd
      operationId: Acd_AgentGetConnectedParty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentGetConnectedPartyRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentGetConnectedPartyReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentgetspecificcallfromhold:
    post:
      tags:
      - Acd
      operationId: Acd_AgentGetSpecificCallFromHold
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentGetSpecificCallFromHoldRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentGetSpecificCallFromHoldReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentgetstatus:
    post:
      tags:
      - Acd
      operationId: Acd_AgentGetStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentGetStatusRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentGetStatusReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentgetstatusstream:
    post:
      tags:
      - Acd
      operationId: Acd_AgentGetStatusStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentGetStatusRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentGetStatusReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentguibusy:
    post:
      tags:
      - Acd
      operationId: Acd_AgentGUIBusy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentGUIBusyRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentGUIBusyReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentintercomaccept:
    post:
      tags:
      - Acd
      operationId: Acd_AgentIntercomAccept
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentIntercomAcceptRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentIntercomAcceptReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentintercomcancel:
    post:
      tags:
      - Acd
      operationId: Acd_AgentIntercomCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentIntercomCancelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentIntercomCancelReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentintercomreject:
    post:
      tags:
      - Acd
      operationId: Acd_AgentIntercomReject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentIntercomRejectRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentIntercomRejectReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentinvitetransfercallertoconference:
    post:
      tags:
      - Acd
      operationId: Acd_AgentInviteTransferCallerToConference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentInviteTransferCallerToConferenceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentInviteTransferCallerToConferenceReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentmonitorcalls:
    post:
      tags:
      - Acd
      operationId: Acd_AgentMonitorCalls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentMonitorCallsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentMonitorCallsReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentmute:
    post:
      tags:
      - Acd
      description: endpoint used to mute and agent's mic
      operationId: Acd_AgentMute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentMuteRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentMuteReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentpause:
    post:
      tags:
      - Acd
      operationId: Acd_AgentPause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentPauseRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentPauseReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentpbxapprovecall:
    post:
      tags:
      - Acd
      operationId: Acd_AgentPBXApproveCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentPBXApproveCallRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentPBXApproveCallReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentpbxrejectcall:
    post:
      tags:
      - Acd
      operationId: Acd_AgentPBXRejectCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentPBXRejectCallRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentPBXRejectCallReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentputcallonhold:
    post:
      tags:
      - Acd
      operationId: Acd_AgentPutCallOnHold
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentPutCallOnHoldRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentPutCallOnHoldReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentreceivemessage:
    post:
      tags:
      - Acd
      operationId: Acd_AgentReceiveMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentReceiveMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentReceiveMessageReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentsetready:
    post:
      tags:
      - Acd
      operationId: Acd_AgentSetReady
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentSetReadyRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentSetReadyReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/agentunmute:
    post:
      tags:
      - Acd
      description: endpoint used to unmute and agent's mic
      operationId: Acd_AgentUnmute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentUnmuteRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentUnmuteReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/callerrequeue:
    post:
      tags:
      - Acd
      operationId: Acd_CallerRequeue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CallerRequeueRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CallerRequeueReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/callersendtovoicemail:
    post:
      tags:
      - Acd
      operationId: Acd_CallerSendToVoicemail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CallerSendToVoicemailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CallerSendToVoicemailReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/collectsecureformfield:
    post:
      tags:
      - Acd
      operationId: Acd_CollectSecureFormField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CollectSecureFormFieldReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CollectSecureFormFieldRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/createwarmoutboundtransferdmember:
    post:
      tags:
      - Acd
      description: creates a new outbound transfer member using the given src/dst
        numbers
      operationId: Acd_CreateWarmOutboundTransferMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateWarmOutboundTransferMemberRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateWarmOutboundTransferMemberReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/deletewarmoutboundtransferdmember:
    post:
      tags:
      - Acd
      description: hangups a transfer member using the given member identifier
      operationId: Acd_RemoveTransferMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RemoveTransferMemberRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RemoveTransferMemberReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/dialmanualcancel:
    post:
      tags:
      - Acd
      operationId: Acd_DialManualCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DialManualCancelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DialManualCancelReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/dialmanualprepare:
    post:
      tags:
      - Acd
      operationId: Acd_DialManualPrepare
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DialManualPrepareRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DialManualPrepareReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/dialpreviewprepare:
    post:
      tags:
      - Acd
      operationId: Acd_DialPreviewPrepare
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DialPreviewPrepareRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DialPreviewPrepareReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/finishsecureformhandling:
    post:
      tags:
      - Acd
      operationId: Acd_FinishSecureFormHandling
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.FinishSecureFormHandlingReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.FinishSecureFormHandlingRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/getagentcallcounts:
    post:
      tags:
      - Acd
      operationId: Acd_GetAgentCallCounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentCallCountsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAgentCallCountsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/getcallerlostpeer:
    post:
      tags:
      - Acd
      operationId: Acd_GetCallerLostPeer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCallerLostPeerRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetCallerLostPeerReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/getcallerraweventreply:
    post:
      tags:
      - Acd
      operationId: Acd_CallerGetRawEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CallerGetRawEventRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CallerGetRawEventReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/manageragentgetconnectedparty:
    post:
      tags:
      - Acd
      operationId: Acd_ManagerAgentGetConnectedParty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ManagerAgentGetConnectedPartyRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ManagerAgentGetConnectedPartyReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/mutetransferpartymember:
    post:
      tags:
      - Acd
      operationId: Acd_HoldTransferMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.HoldTransferMemberReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.HoldTransferMemberRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/peeragentwithcaller:
    post:
      tags:
      - Acd
      operationId: Acd_PeerAgentWithCaller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.PeerAgentWithCallerRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PeerAgentWithCallerReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/playdtmf:
    post:
      tags:
      - Acd
      description: endpoint used to play a dtmf tone to all members of a the agent's
        conference
      operationId: Acd_PlayDTMF
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.PlayDTMFRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PlayDTMFReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/playsoundboardentity:
    post:
      tags:
      - Acd
      description: endpoint used to play a soundboard file for a customer
      operationId: Acd_PlaySoundboardEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.PlaySoundboardEntityReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PlaySoundboardEntityRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/populateworkflowfields:
    post:
      tags:
      - Acd
      operationId: Acd_PopulateWorkflowFields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.PopulateWorkflowFieldsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PopulateWorkflowFieldsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/processsecureform:
    post:
      tags:
      - Acd
      operationId: Acd_ProcessSecureForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ProcessSecureFormReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ProcessSecureFormRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/reportagentsessionevent:
    post:
      tags:
      - Acd
      operationId: Acd_ReportAgentSessionEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AgentSessionEventReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentSessionEventRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/resetsecureformfield:
    post:
      tags:
      - Acd
      operationId: Acd_ResetSecureFormField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ResetSecureFormFieldReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ResetSecureFormFieldRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/startsecureform:
    post:
      tags:
      - Acd
      operationId: Acd_StartSecureForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.StartSecureFormReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.StartSecureFormRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/stopsoundboardentity:
    post:
      tags:
      - Acd
      description: endpoint used to stop a soundboard file for a customer
      operationId: Acd_StopSoundboardEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.StopSoundboardEntityReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.StopSoundboardEntityRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/transfercoldtoagent:
    post:
      tags:
      - Acd
      operationId: Acd_TransferColdToAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.TransferColdToAgentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.TransferColdToAgentReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/transfercoldtooutbound:
    post:
      tags:
      - Acd
      operationId: Acd_TransferColdToOutbound
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.TransferColdToOutboundRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.TransferColdToOutboundReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/transferwarmtoagentapprove:
    post:
      tags:
      - Acd
      operationId: Acd_TransferWarmToAgentApprove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.TransferWarmToAgentApproveRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.TransferWarmToAgentApproveReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/transferwarmtoagentcancel:
    post:
      tags:
      - Acd
      operationId: Acd_TransferWarmToAgentCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.TransferWarmToAgentCancelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.TransferWarmToAgentCancelReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/transferwarmtoagentstart:
    post:
      tags:
      - Acd
      operationId: Acd_TransferWarmToAgentStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.TransferWarmToAgentStartRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.TransferWarmToAgentStartReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/transferwarmtooutboundapprove:
    post:
      tags:
      - Acd
      operationId: Acd_TransferWarmToOutboundApprove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.TransferWarmToOutboundApproveRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.TransferWarmToOutboundApproveReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/transferwarmtooutboundcancel:
    post:
      tags:
      - Acd
      operationId: Acd_TransferWarmToOutboundCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.TransferWarmToOutboundCancelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.TransferWarmToOutboundCancelReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/transferwarmtooutboundstart:
    post:
      tags:
      - Acd
      operationId: Acd_TransferWarmToOutboundStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.TransferWarmToOutboundStartRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.TransferWarmToOutboundStartReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/unmutetransfermember:
    post:
      tags:
      - Acd
      operationId: Acd_UnholdTransferMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UnholdTransferMemberReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UnholdTransferMemberRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/updateagentskills:
    post:
      tags:
      - Acd
      description: endpoint used to update an agent's skills
      operationId: Acd_UpdateAgentSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentSkillsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentSkillsReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/validatefield:
    post:
      tags:
      - Acd
      operationId: Acd_ValidateField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ValidateFieldReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ValidateFieldRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/warmcallertransferapprove:
    post:
      tags:
      - Acd
      description: endpoint used to approve a warm caller transfer
      operationId: Acd_WarmCallerTransferApprove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.WarmCallerTransferApproveReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.WarmCallerTransferApproveRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/warmcallertransfercancel:
    post:
      tags:
      - Acd
      description: endpoint used to cancel a warm caller transfer
      operationId: Acd_WarmCallerTransferCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.WarmCallerTransferCancelReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.WarmCallerTransferCancelRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/acd/warmcallertransferstart:
    post:
      tags:
      - Acd
      description: endpoint used to start a warm caller transfer
      operationId: Acd_WarmCallerTransferStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.WarmCallerTransferStartReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.WarmCallerTransferStartRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/AdoptAnaAccount:
    post:
      tags:
      - Ana
      description: allow the parent to view the data of the adoptable child
      operationId: Ana_AdoptAnaAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SetAnaAccountRelationReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SetAnaAccountRelationRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/CopyDashViz:
    post:
      tags:
      - Ana
      description: "copies the reports (dashboards legacy and visualizations legacy)\n
        corresponding with the ids provided"
      operationId: Ana_CopyDashViz
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CopyDashVizReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CopyDashVizRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/DisableCustomReports:
    post:
      tags:
      - Ana
      description: "disable custom report usage for the client\n org.Permission_EDIT_CLIENT_PREFERENCES"
      operationId: Ana_DisableCustomReports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SetCustomReportsEnabledReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SetCustomReportsEnabledRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/DisownAnaAccount:
    post:
      tags:
      - Ana
      description: disallow the parent from viewing the data of the child
      operationId: Ana_DisownAnaAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SetAnaAccountRelationReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SetAnaAccountRelationRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/EnableCustomReports:
    post:
      tags:
      - Ana
      description: "enable custom report usage for the client\n org.Permission_EDIT_CLIENT_PREFERENCES"
      operationId: Ana_EnableCustomReports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SetCustomReportsEnabledReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SetCustomReportsEnabledRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GenerateVizDataById:
    post:
      tags:
      - Ana
      description: generate visualization data for the id
      operationId: Ana_GenerateVizDataById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GenerateVizDataByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GenerateVizDataByIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GetAccessibleClients:
    post:
      tags:
      - Ana
      description: gets all clients that can be viewed by the client including the
        client
      operationId: Ana_GetAccessibleClients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAccessibleClientsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SimpleRelations'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GetAccount:
    post:
      tags:
      - Ana
      description: "gets account details for the client\n org.Permission_VIEW_REPORTS"
      operationId: Ana_GetAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAccountReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AnaAccount'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GetAllowedDataVisibility:
    post:
      tags:
      - Ana
      description: "gets the client's data visibility as defined in the database (source
        of\n truth); internal use only"
      operationId: Ana_GetAllowedDataVisibility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetVisibilityReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DataVisibility'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GetAuditableDataVisibility:
    post:
      tags:
      - Ana
      description: "gets the client's data visibility as exists in the elasticsearch
        data;\n internal use only"
      operationId: Ana_GetAuditableDataVisibility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetVisibilityReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DataVisibility'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GetAuthorizedAnalyticsLink:
    post:
      tags:
      - Ana
      description: Gets an authorized url for the clients BI analytics page
      operationId: Ana_GetAuthorizedAnalyticsLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAuthorizedAnalyticsLinkReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAuthorizedAnalyticsLinkRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GetCurrentDataVisibility:
    post:
      tags:
      - Ana
      description: "gets the client's data visibility as is evident from the elasticsearch\n
        indices structure; internal use only"
      operationId: Ana_GetCurrentDataVisibility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetVisibilityReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DataVisibility'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GetFamily:
    post:
      tags:
      - Ana
      description: "gets all relations in which the client is involved grouped by
        whether the\n client is the parent or child account"
      operationId: Ana_GetFamily
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetFamilyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Family'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GetIndicesVisibility:
    post:
      tags:
      - Ana
      description: "gets a visibility summary from the perspective of the elasticsearch\n
        indices; internal use only"
      operationId: Ana_GetIndicesVisibility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetVisibilityReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.IndicesVisibility'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GetOrganizationNames:
    post:
      tags:
      - Ana
      description: gets a map of client sids to organization names
      operationId: Ana_GetOrganizationNames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetOrganizationNamesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetOrganizationNamesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GetSpecifiedAccount:
    post:
      tags:
      - Ana
      description: gets account details using the org_id provided
      operationId: Ana_GetSpecifiedAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSpecifiedAccountReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AnaAccount'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GetSpecifiedVisualizations:
    post:
      tags:
      - Ana
      description: gets all visualizations for a specific client
      operationId: Ana_GetSpecifiedVisualizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSpecifiedVisualizationsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Visualizations'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/GetTimeZone:
    post:
      tags:
      - Ana
      description: "gets the ana_account timezone for the client\n org.Permission_VIEW_REPORTS"
      operationId: Ana_GetTimeZone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetTimeZoneReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.TimeZone'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/MakeAdoptable:
    post:
      tags:
      - Ana
      description: "allow the client to be adopted by another account\n org.Permission_EDIT_CLIENT_PREFERENCES"
      operationId: Ana_MakeAdoptable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.MakeAdoptableReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.MakeAdoptableRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/MakeUnadoptable:
    post:
      tags:
      - Ana
      description: "disallow other accounts from adopting the client\n org.Permission_EDIT_CLIENT_PREFERENCES"
      operationId: Ana_MakeUnadoptable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.MakeAdoptableReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.MakeAdoptableRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/RegisterAccount:
    post:
      tags:
      - Ana
      description: "Registers a new AnaAccoun based on org_id\n The method will return
        the newly create AnaAccount\n on the response message AnaAccount.\n Required
        Permissions:\n  EDIT_ADMIN_CLIENT_PREFERENCES"
      operationId: Ana_RegisterAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RegisterAccountReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AnaAccount'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/SetDefaultDashboard:
    post:
      tags:
      - Ana
      description: "sets the dashboard that is shown by default for neo\n org.Permission_EDIT_CLIENT_PREFERENCES"
      operationId: Ana_SetDefaultDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SetDefaultDashboardReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SetDefaultDashboardRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/SetDefaultTimeFilter:
    post:
      tags:
      - Ana
      description: "set default time filter for given ana account\n org.Permission_EDIT_CLIENT_PREFERENCES"
      operationId: Ana_SetDefaultTimeFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SetDefaultTimeFilterReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SetDefaultTimeFilterRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/SetTimeZone:
    post:
      tags:
      - Ana
      description: "updates the timezone for the account\n org.Permission_VIEW_REPORTS"
      operationId: Ana_SetTimeZone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SetTimeZoneReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SetTimeZoneRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/admin/SetWeeks:
    post:
      tags:
      - Ana
      description: sets the length of analytics history the client can view
      operationId: Ana_SetWeeks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SetWeeksReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SetWeeksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/billing/GenerateMonthlyBilling:
    post:
      tags:
      - Ana
      description: "creates and returns a url to download billing for the month provided
        or the previous month if none is provided\n org.Permission_VIEW_BILLING"
      operationId: Ana_GenerateMonthlyBilling
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GenerateMonthlyBillingReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GenerateMonthlyBillingRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/billing/GetBillingSummary:
    post:
      tags:
      - Ana
      description: "returns a summary of all billing factors for the client, whether
        client is\n pro, and which of those features contribute to making the client
        pro"
      operationId: Ana_GetBillingSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetBillingSummaryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.BillingSummary'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/billing/GetSpecifiedBillingSummary:
    post:
      tags:
      - Ana
      description: returns a summary of all billing factors for the specified client,
        whether client is pro, and which of those features contribute to making the
        client pro
      operationId: Ana_GetSpecifiedBillingSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSpecifiedBillingSummaryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.BillingSummary'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/census/GetClientStatus:
    post:
      tags:
      - Ana
      description: "Gets client's data status\n Data status is the status of calls
        loaded in elasticsearch\n against all calls in the database that are within
        the clients weeks of data setting\n This method requires a client sid\n Required
        permissions:\n      CUSTOMER_SUPPORT"
      operationId: Ana_GetClientStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetClientStatusReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetClientStatusResp'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/census/ReloadClientData:
    post:
      tags:
      - Ana
      description: "Reloads client's data\n This loads calls from the database into
        elasticsearch\n This method requires a client sid\n Required permissions:\n
        \     WIP - DEV_OPS"
      operationId: Ana_ReloadClientData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ReloadClientDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ReloadClientDataResp'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/ana/visualization/ListLegacy:
    post:
      tags:
      - Ana
      description: list all clients visualizations id and title
      operationId: Ana_ListVisualizationsLegacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListVisualizationsLegacyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListVisualizationsLegacyRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/clearmanualdialqueue:
    post:
      tags:
      - CallQueue
      description: Clears the manual dial return queue of the requesting agent.
      operationId: CallQueue_ClearManualDialQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ClearManualDialQueueReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ClearManualDialQueueRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/clearpreviewrecordreturnqueue:
    post:
      tags:
      - CallQueue
      description: Clears the preview record return queue for the requesting agent.
      operationId: CallQueue_ClearPreviewRecordReturnQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ClearPreviewRecordReturnQueueReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ClearPreviewRecordReturnQueueRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/dequeuecallformanualapproval:
    post:
      tags:
      - CallQueue
      description: "Dequeues a call for manual approval from the requesting agent's
        hunt group queues or a client queue,\n it also returns a field for the queue
        name so call can be enqueued back to the same queue."
      operationId: CallQueue_DequeueCallForManualApproval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DequeueCallForManualApprovalReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DequeueCallForManualApprovalRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/dequeuepreviewrecordorcall:
    post:
      tags:
      - CallQueue
      description: "Returns either a preview record or preview call from one of multiple
        queues,\n it also returns a field for the queue name so record/call can be
        enqueued back to the same queue.\n It checks for a record first, if no record
        is dequeued, then the preview call queues will be checked."
      operationId: CallQueue_DequeuePreviewRecordOrCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DequeuePreviewRecordOrCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DequeuePreviewRecordOrCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/dequeuescrubbedcallforpreviewrecord:
    post:
      tags:
      - CallQueue
      description: Returns the scrubbed simple call data for the given preview record.
      operationId: CallQueue_DequeueScrubbedCallForPreviewRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DequeueScrubbedCallForPreviewRecordReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DequeueScrubbedCallForPreviewRecordRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/dequeuesmsmamformanualapproval:
    post:
      tags:
      - CallQueue
      description: "Dequeues a sms mam msg for manual approval from the requesting
        agent's hunt group queues or a client queue,\n it also returns a field for
        the queue name so sms mam msg can be enqueued back to the same queue."
      operationId: CallQueue_DequeueSmsMamForManualApproval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DequeueSmsMamForManualApprovalReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DequeueSmsMamForManualApprovalRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/enqueuemanuallyapprovedcall:
    post:
      tags:
      - CallQueue
      description: Enqueues a call in the MAC approval queue.
      operationId: CallQueue_EnqueueManuallyApprovedCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EnqueueManuallyApprovedCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.EnqueueManuallyApprovedCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/enqueuemanuallyapprovedsms:
    post:
      tags:
      - CallQueue
      description: Enqueues sms msg in the MAM approval queue.
      operationId: CallQueue_EnqueueManuallyApprovedSms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EnqueueManuallyApprovedSmsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.EnqueueManuallyApprovedSmsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/enqueuemanuallyrejectedcall:
    post:
      tags:
      - CallQueue
      description: Enqueues a call in the MAC rejection queue.
      operationId: CallQueue_EnqueueManuallyRejectedCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EnqueueManuallyRejectedCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.EnqueueManuallyRejectedCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/enqueuemanuallyrejectedsms:
    post:
      tags:
      - CallQueue
      description: Enqueues sms msg in the MAM rejection queue.
      operationId: CallQueue_EnqueueManuallyRejectedSms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EnqueueManuallyRejectedSmsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.EnqueueManuallyRejectedSmsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/enqueuepreviewdialcall:
    post:
      tags:
      - CallQueue
      description: Enqueues the given preview dial call into the specified queue.
      operationId: CallQueue_EnqueuePreviewDialCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EnqueuePreviewDialCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.EnqueuePreviewDialCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/enqueuepreviewrecord:
    post:
      tags:
      - CallQueue
      description: Enqueues the given preview record into the specified queue.
      operationId: CallQueue_EnqueuePreviewRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EnqueuePreviewRecordReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.EnqueuePreviewRecordRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/processmanualdialcall:
    post:
      tags:
      - CallQueue
      description: "Enqueues the call to the manual dial receive queue for scrubbing.\n
        The call will then be added to the manual dial return queue of the requesting
        agent.\n The scrubbed call is then dequeued from that agent's manual dial
        return queue and returned."
      operationId: CallQueue_ProcessManualDialCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ProcessManualDialCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ProcessManualDialCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/requeuemanuallyapprovedcall:
    post:
      tags:
      - CallQueue
      description: Requeues a call requiring manual approval to the specified queue.
      operationId: CallQueue_RequeueManuallyApprovedCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RequeueManuallyApprovedCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RequeueManuallyApprovedCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/callqueue/requeuemanuallyapprovedsms:
    post:
      tags:
      - CallQueue
      description: Requeues sms msg requiring manual approval to the specified queue.
      operationId: CallQueue_RequeueManuallyApprovedSms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RequeueManuallyApprovedSmsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RequeueManuallyApprovedSmsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/cbs/createcallbackwithdetails:
    post:
      tags:
      - CBS
      operationId: CBS_CreateCallbackWithDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateCallbackWithDetailsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateCallbackWithDetailsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/cbs/createserviceid:
    post:
      tags:
      - CBS
      operationId: CBS_CreateServiceId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateServiceIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateServiceIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/cbs/getnextscheduledcallbackwithdetails:
    post:
      tags:
      - CBS
      description: "Skills that are a matching subset of the ones provided in the
        request.\n If a callback is found the status of the callback is set to OPEN.\n
        Required permissions:\n   NONE\n Errors:\n   - grpc.Invalid: the service_id
        provided in the request is invalid.\n   - grpc.NotFound: no matching service_id
        is found.\n                    callback is not found after updating the status
        of it to OPEN (shouldn't happen)."
      operationId: CBS_GetNextScheduledCallbackWithDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetNextScheduledCallbackWithDetailsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetNextScheduledCallbackWithDetailsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/cbs/getscheduledcallbackwithdetails:
    post:
      tags:
      - CBS
      description: Gets a scheduled callback's info and it's details for the given
        scheduled_callback_id.
      operationId: CBS_GetScheduledCallbackWithDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetScheduledCallbackWithDetailsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetScheduledCallbackWithDetailsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/cbs/listscheduledcallbackswithdetails:
    post:
      tags:
      - CBS
      description: Lists callbacks by phone number, caller id, or time range
      operationId: CBS_ListScheduledCallbacksWithDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListScheduledCallbacksWithDetailsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListScheduledCallbacksWithDetailsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/cbs/listscheduledcallbackswithdetailsbyskillsreq:
    post:
      tags:
      - CBS
      description: List callbacks by skills
      operationId: CBS_ListScheduledCallbacksWithDetailsBySkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListScheduledCallbacksWithDetailsBySkillsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListScheduledCallbacksWithDetailsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/cbs/updatescheduledcallback:
    post:
      tags:
      - CBS
      description: Updates a callback with the provided info, and replaces the details
        with the ones provided.
      operationId: CBS_UpdateScheduledCallback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateScheduledCallbackReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateScheduledCallbackRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/cbs/updatescheduledcallbacktocanceled:
    post:
      tags:
      - CBS
      operationId: CBS_UpdateScheduledCallbackToCanceled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateScheduledCallbackToCanceledReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateScheduledCallbackToCanceledRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/cbs/updatescheduledcallbacktoclosed:
    post:
      tags:
      - CBS
      operationId: CBS_UpdateScheduledCallbackToClosed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateScheduledCallbackToClosedReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateScheduledCallbackToClosedRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/cbs/updatescheduledcallbacktoready:
    post:
      tags:
      - CBS
      operationId: CBS_UpdateScheduledCallbackToReady
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateScheduledCallbackToReadyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateScheduledCallbackToReadyRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/cfg/getwebagentconfig:
    post:
      tags:
      - Cfg
      operationId: Cfg_GetWebAgentConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.WebAgent'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/addscrublistentries:
    post:
      tags:
      - Compliance
      description: "Add entries to an existing scrub list defined by AddScrubListEntriesReq
        message.\n The method will return a ScrubListRes message that will\n contain
        the results.\n Required permissions:\n      PERMISSION_COMPLIANCE or PERMISSION_AGENT_COMPLIANCE_SCRUBLIST_OPTIONS"
      operationId: Compliance_AddScrubListEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AddScrubListEntriesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ScrubListRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/assignruleset:
    post:
      tags:
      - Compliance
      operationId: Compliance_AssignRuleSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AssignRuleSetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AssignRuleSetRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/assignscenario:
    post:
      tags:
      - Compliance
      description: Assign a scenario to a given ruleset
      operationId: Compliance_AssignScenario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AssignScenarioReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/checkruleset:
    post:
      tags:
      - Compliance
      operationId: Compliance_CheckRuleSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CheckRuleSetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CheckRuleSetRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/consentlistdownload:
    post:
      tags:
      - Compliance
      description: "Download a consent list defined by ConsentListDownloadRequest
        message\n The method will return a google.longrunning.Operation message\n
        Required permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_ConsentListDownload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ConsentListDownloadRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.longrunning.Operation'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/createconsent:
    post:
      tags:
      - Compliance
      description: "Create/Record a consent defined by CreateConsentReq message.\n
        The method will return a CreateConsentRes message that will\n contain the
        newly created consent_id.\n Required permissions:\n      none"
      operationId: Compliance_CreateConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateConsentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateConsentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/createconsentprofile:
    post:
      tags:
      - Compliance
      description: "Create/Record a consent profile defined by CreateConsentProfileReq\n
        message.  The method will return a CreateConsentProfileRes message\n that
        will contain the newly created consent_profile_id.\n Required permissions:\n
        \     PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_CreateConsentProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateConsentProfileReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateConsentProfileRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/createconsenttopic:
    post:
      tags:
      - Compliance
      description: "Create a consent topic defined by ConsentTopic\n message.  The
        method will return an Empty message.\n Required permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_CreateConsentTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ConsentTopic'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/createruleset:
    post:
      tags:
      - Compliance
      operationId: Compliance_CreateRuleSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateRuleSetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RuleSet'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/createscenario:
    post:
      tags:
      - Compliance
      description: Creates a new Scenario
      operationId: Compliance_CreateScenario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateScenarioReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateScenarioRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/createscrublist:
    post:
      tags:
      - Compliance
      operationId: Compliance_CreateScrubList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateScrubListReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ScrubListRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/deleteScrublist:
    post:
      tags:
      - Compliance
      operationId: Compliance_DeleteScrubList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteScrubListReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ScrubListRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/deleteconsent:
    post:
      tags:
      - Compliance
      description: "Delete a consent defined by DeleteConsentReq message\n The method
        will return a google.protobuf.Empty message\n Required permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_DeleteConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteConsentReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/deleteconsenttopic:
    post:
      tags:
      - Compliance
      description: "Delete a consent topic defined by ConsentTopic message.\n The
        method will return an Empty message.\n Required permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_DeleteConsentTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ConsentTopic'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/deletescenario:
    post:
      tags:
      - Compliance
      description: Deletes a Scenario
      operationId: Compliance_DeleteScenario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteScenarioReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteScenarioRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/deletescrublistentries:
    post:
      tags:
      - Compliance
      operationId: Compliance_DeleteScrubListEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteScrubListEntriesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ScrubListRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/disableconsentprofile:
    post:
      tags:
      - Compliance
      description: "Disable a consent profile defined by DisableConsentProfileReq
        message.\n Set the disabled field to true for the specified\n consent_profile_id
        field.\n The method will return a google.protobuf.Empty message.\n Required
        permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_DisableConsentProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DisableConsentProfileReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/disableruleset:
    post:
      tags:
      - Compliance
      operationId: Compliance_DisableRuleSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DisableRuleSetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DisableRuleSetRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/disablescenario:
    post:
      tags:
      - Compliance
      description: Disable an scenario
      operationId: Compliance_DisableScenario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DisableScenarioReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/enableconsentprofile:
    post:
      tags:
      - Compliance
      description: "Enable a consent profile defined by EnableConsentProfileReq message.\n
        Set the disabled field to false for the specified\n consent_profile_id field.\n
        The method will return a google.protobuf.Empty message.\n Required permissions:\n
        \     PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_EnableConsentProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EnableConsentProfileReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/enableruleset:
    post:
      tags:
      - Compliance
      operationId: Compliance_EnableRuleSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EnableRuleSetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.EnableRuleSetRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/enablescenario:
    post:
      tags:
      - Compliance
      description: Enable an scenario
      operationId: Compliance_EnableScenario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EnableScenarioReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/expireconsent:
    post:
      tags:
      - Compliance
      description: "Expire a consent defined by ExpireConsentReq message.\n Set the
        expiration date for the specified consent_id field.\n The method will return
        a google.protobuf.Empty message.\n Required permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_ExpireConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ExpireConsentReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/exportconsentlist:
    post:
      tags:
      - Compliance
      description: "Export consent list defined by ExportConsentListRequest message.\n
        The method will create a consent download file in CSV format and return a
        URL for download."
      operationId: Compliance_ExportConsentList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ExportConsentListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ExportConsentListResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/exportscrublist:
    post:
      tags:
      - Compliance
      operationId: Compliance_ExportScrubList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ExportScrubListReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ExportScrubListRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getScrublist:
    post:
      tags:
      - Compliance
      operationId: Compliance_GetScrubList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetScrubListReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ScrubListRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getconsent:
    post:
      tags:
      - Compliance
      description: "Gets a consent defined by GetConsentReq message\n for the specified
        consent_id and org_id.\n The method will return a Consent entity.\n Required
        permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_GetConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetConsentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Consent'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getconsentbycontent:
    post:
      tags:
      - Compliance
      description: "Gets a consent defined by GetConsentByContentReq message\n for
        the specified consent_profile_id and content and channel_type.\n The method
        will return a GetConsentByContentRes message/entity.\n Required permissions:\n
        \     PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_GetConsentByContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetConsentByContentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetConsentByContentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getconsentbyprofileandcontent:
    post:
      tags:
      - Compliance
      description: "Gets a consent defined by GetConsentByProfileAndContentReq message\n
        for the specified consent_profile_id and content.\n The method will return
        a GetConsentByProfileAndContentRes message/entity.\n Required permissions:\n
        \     PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_GetConsentByProfileAndContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetConsentByProfileAndContentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetConsentByProfileAndContentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getconsentprofile:
    post:
      tags:
      - Compliance
      description: "Gets a consent profile defined by GetConsentProfileReq message\n
        for the specified consent_profile_id and org_id.\n The method will return
        a ConsentProfile message/entity.\n Required permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_GetConsentProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetConsentProfileReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ConsentProfile'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getconsenttopic:
    post:
      tags:
      - Compliance
      description: "Gets a consent topic defined by GetConsentTopicReq message\n for
        the specified topic and org_id.\n The method will return a ConsentTopic message/entity.\n
        Required permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_GetConsentTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetConsentTopicReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ConsentTopic'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getconsentuploadurl:
    post:
      tags:
      - Compliance
      description: "Get consent upload url defined by GetConsentUploadUrlReq message.\n
        The method will return a GetConsentUploadUrlRes messages\n containing a url
        with which to upload an import file.\n Required permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_GetConsentUploadUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetConsentUploadUrlReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetConsentUploadUrlRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getdefaultrules:
    get:
      tags:
      - Compliance
      operationId: Compliance_GetDefaultRules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetDefaultRulesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getfieldnames:
    post:
      tags:
      - Compliance
      description: "Frequency data calls\n This will get all available Meta Fields"
      operationId: Compliance_GetFieldNames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetFieldNamesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.FieldNames'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getresultdescriptions:
    post:
      tags:
      - Compliance
      description: This will get all possible results (Answered, Answered Machine,
        Busy, etc.)
      operationId: Compliance_GetResultDescriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetResultDescriptionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.FieldNames'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getruleset:
    post:
      tags:
      - Compliance
      operationId: Compliance_GetRuleSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetRuleSetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RuleSet'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getrulesetbyname:
    post:
      tags:
      - Compliance
      operationId: Compliance_GetRuleSetByName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetRuleSetByNameReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RuleSet'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getscenario:
    get:
      tags:
      - Compliance
      description: Gets one Scenario
      operationId: Compliance_GetScenario
      parameters:
      - name: cplScenarioId
        in: query
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetScenarioRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getscrublists:
    post:
      tags:
      - Compliance
      operationId: Compliance_GetScrubLists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetScrubListsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ScrubListsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/getscrublistuploadurl:
    post:
      tags:
      - Compliance
      operationId: Compliance_GetScrubListUploadUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetScrubListUploadUrlReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetScrubListUploadUrlRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/listallscenarios:
    post:
      tags:
      - Compliance
      description: Lists all scenarios
      operationId: Compliance_ListAllScenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAllScenariosReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAllScenariosRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/listassignedrulesets:
    post:
      tags:
      - Compliance
      description: List rule sets currently assigned to a given scenario
      operationId: Compliance_ListAssignedRuleSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAssignedRuleSetsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAssignedRuleSetsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/listassignedscenarios:
    post:
      tags:
      - Compliance
      description: List scenarios currently assigned to a given ruleset
      operationId: Compliance_ListAssignedScenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAssignedScenariosReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAssignedScenariosRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/listconsentprofiles:
    post:
      tags:
      - Compliance
      description: "List consent profiles defined by ListConsentProfilesReq message.\n
        Gets all of the unique consent profiles.\n The method will return a ListConsentProfilesRes
        message\n containing consent_profile_id, profile_name, the number of consents\n
        belonging to the profile, and disabled.\n Required permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_ListConsentProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListConsentProfilesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListConsentProfilesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/listconsenttopics:
    post:
      tags:
      - Compliance
      description: "List consent topics defined by ListConsentTopicsReq message.\n
        Gets all of the unique consent topics.\n The method will return a ListConsentTopicsRes
        message\n containing topic, org_id, and deleted.\n Required permissions:\n
        \     PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_ListConsentTopics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListConsentTopicsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListConsentTopicsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/listrulesets:
    post:
      tags:
      - Compliance
      operationId: Compliance_ListRuleSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListRuleSetsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListRuleSetsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/listunassignedscenarios:
    post:
      tags:
      - Compliance
      description: List currently unassigned scenarios available to be assigned to
        a given ruleset
      operationId: Compliance_ListUnassignedScenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListUnassignedScenariosReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListUnassignedScenariosRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/processconsentlistdeleteupload:
    post:
      tags:
      - Compliance
      description: "Process a consent delete list defined by DeleteConsentReq message\n
        The method will return a google.protobuf.Empty message\n Required permissions:\n
        \     PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_ProcessConsentListDeleteUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ProcessConsentListDeleteUploadReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.longrunning.Operation'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/processconsentupload:
    post:
      tags:
      - Compliance
      description: "Process consent upload defined by ProcessConsentUploadReq message.\n
        The method will process an uploaded consent file.\n Required permissions:\n
        \     PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_ProcessConsentUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ProcessConsentUploadReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.longrunning.Operation'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/processoutboundcall:
    post:
      tags:
      - Compliance
      description: "Process and Outbound Phone Number against a rule set.\n The method
        will return a response indicating\n if the call would be permited or not and
        the list\n of rules checked against.\n Required permissions:\n      AGENT"
      operationId: Compliance_ProcessOutboundCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ProcessOutboundCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ProcessRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/processscrublistdeleteupload:
    post:
      tags:
      - Compliance
      operationId: Compliance_ProcessScrubListDeleteUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ProcessScrubListDeleteUploadReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.longrunning.Operation'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/processscrublistupload:
    post:
      tags:
      - Compliance
      operationId: Compliance_ProcessScrubListUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ProcessScrubListUploadReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.longrunning.Operation'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/purgescrublist:
    post:
      tags:
      - Compliance
      description: "Purge entries from a scrub list defined by PurgeScrubListReq message.\n
        Required permissions:\n      PERMISSION_COMPLIANCE"
      operationId: Compliance_PurgeScrubList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.PurgeScrubListReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PurgeScrubListRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/queryholidays:
    post:
      tags:
      - Compliance
      description: "Return the holidays that match the request.\n The method will
        return a stream of the matching holidays.\n Required permissions:\n      none"
      operationId: Compliance_QueryHolidays
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.QueryHolidaysRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.QueryHolidaysResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/renameruleset:
    post:
      tags:
      - Compliance
      operationId: Compliance_RenameRuleSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RenameRuleSetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RenameRuleSetRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/revokeconsent:
    post:
      tags:
      - Compliance
      description: "Revoke a consent defined by RevokeConsentReq message.\n Set the
        revoked date for the specified consent_id and\n consent_profile_id fields.\n
        The method will return a google.protobuf.Empty message.\n Required permissions:\n
        \     none"
      operationId: Compliance_RevokeConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RevokeConsentReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/ruleautocomplete:
    post:
      tags:
      - Compliance
      operationId: Compliance_RuleAutoComplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RuleAutoCompleteReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RuleAutoCompleteRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/runassignedscenarios:
    post:
      tags:
      - Compliance
      description: Run scenarios against ruleset
      operationId: Compliance_RunAssignedScenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RunAssignedScenariosReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RunAssignedScenariosRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/scrublistdownload:
    post:
      tags:
      - Compliance
      description: "Download a scrub list defined by ScrubListDownloadRequest message.\n
        Required permissions:\n      PERMISSION_COMPLIANCE"
      operationId: Compliance_ScrubListDownload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ScrubListDownloadRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.longrunning.Operation'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/searchconsentbycontent:
    post:
      tags:
      - Compliance
      description: "Searches for a consent defined by SearchConsentByContentReq message\n
        for the specified content.\n The method will return a SearchConsentByContentRes
        message/entity.\n Required permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_SearchConsentByContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SearchConsentByContentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SearchConsentByContentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/searchscrublist:
    post:
      tags:
      - Compliance
      operationId: Compliance_SearchScrubList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SearchScrubListReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ScrubList'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/unassignscenario:
    post:
      tags:
      - Compliance
      description: Unassign a scenario from a given ruleset
      operationId: Compliance_UnassignScenario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UnassignScenarioReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/updateconsent:
    post:
      tags:
      - Compliance
      description: "Update a consent defined by UpdateConsentReq message for\n the
        specified consent_id, and will update the following\n consent fields:\n    Content\n
        \   Recorded\n    Revoked\n    Expire\n    ReferringUrl\n The method will
        return a google.protobuf.Empty message.\n Required permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_UpdateConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateConsentReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/updateconsenttopic:
    post:
      tags:
      - Compliance
      description: "Update a consent topic defined by UpdateConsentTopicReq message.\n
        The method will return an Empty message.\n Required permissions:\n      PERMISSION_COMPLIANCE_CONSENT"
      operationId: Compliance_UpdateConsentTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateConsentTopicReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/updatescenario:
    post:
      tags:
      - Compliance
      description: Updates a Scenario
      operationId: Compliance_UpdateScenario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateScenarioReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateScenarioRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/compliance/updatescrubentry:
    post:
      tags:
      - Compliance
      description: "Update scrub list entry defined by UpdateScrubEntryReq message.\n
        The method will update a scrub list entry with the specified fields\n Required
        permissions:\n      PERMISSION_COMPLIANCE"
      operationId: Compliance_UpdateScrubEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateScrubEntryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateScrubEntryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/CreateApplicationDashboard:
    post:
      tags:
      - Dashboards
      description: CreateApplicationDashboard assigns a dashboard to an application
      operationId: Dashboards_CreateApplicationDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateApplicationDashboardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateApplicationDashboardResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/CreateDashboard:
    post:
      tags:
      - Dashboards
      description: CreateDashboard creates a dashboard and associated panels
      operationId: Dashboards_CreateDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateDashboardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateDashboardResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/DeleteApplicationDashboard:
    post:
      tags:
      - Dashboards
      description: DeleteApplicationDashboard removes a dashboard from an application
      operationId: Dashboards_DeleteApplicationDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteApplicationDashboardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteApplicationDashboardResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/DeleteDashboard:
    post:
      tags:
      - Dashboards
      description: Deletes a given dashboard
      operationId: Dashboards_DeleteDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteDashboardRequest'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/GetDashboard:
    post:
      tags:
      - Dashboards
      description: GetDashboard retrieves a dashboard by the given ID and orgID and
        fetches its associated panels
      operationId: Dashboards_GetDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetDashboardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Dashboard'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/GetDefaultDashboard:
    post:
      tags:
      - Dashboards
      operationId: Dashboards_GetDefaultDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetDefaultDashboardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Dashboard'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/ListApplicationsDashboards:
    post:
      tags:
      - Dashboards
      description: ListApplicationDashboards lists applications and their assigned
        dashboards
      operationId: Dashboards_ListApplicationsDashboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListApplicationsDashboardsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListApplicationsDashboardsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/ListDashboards:
    post:
      tags:
      - Dashboards
      description: ListDashboards retrieves all dashboard summaries for the given
        organization
      operationId: Dashboards_ListDashboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListDashboardsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListDashboardsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/ListProductTypes:
    post:
      tags:
      - Dashboards
      operationId: Dashboards_ListProductTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListProductTypesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListProductTypesResult'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/PublishDashboard:
    post:
      tags:
      - Dashboards
      description: PublishDashboard publishes a dashboard
      operationId: Dashboards_PublishDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.PublishDashboardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PublishDashboardResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/SetDefaultDashboard:
    post:
      tags:
      - Dashboards
      description: Sets a dashboard as the user's default
      operationId: Dashboards_SetDefaultDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SetDefaultDashboardRequest'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/UpdateDashboard:
    post:
      tags:
      - Dashboards
      description: UpdateDashboard updates a dashboard
      operationId: Dashboards_UpdateDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateDashboardRequest'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/UpdateDashboardLayout:
    post:
      tags:
      - Dashboards
      description: UpdateDashboardLayout replaces a dashboards layout with a given
        layout
      operationId: Dashboards_UpdateDashboardLayout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateDashboardLayoutRequest'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/UpdateDashboardTitleAndDescription:
    post:
      tags:
      - Dashboards
      description: UpdateDashboardTitleAndDescription updates a dashboards title and
        description
      operationId: Dashboards_UpdateDashboardTitleAndDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateDashboardTitleAndDescriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/dashboards/UpdateDashboardView:
    post:
      tags:
      - Dashboards
      description: UpdateDashboardView updates a dashboards view with the given view
      operationId: Dashboards_UpdateDashboardView
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateDashboardViewRequest'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/fts/upload_url:
    post:
      tags:
      - FTS
      operationId: FTS_GetUploadFileUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetUploadFileUrlReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetUploadFileUrlRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/content:
    post:
      tags:
      - Learn
      description: retreive content from learning pages
      operationId: Learn_Content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ContentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ContentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/contentbyversion:
    post:
      tags:
      - Learn
      description: retrieve content from learning pages based on version
      operationId: Learn_ContentByVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ContentByVersionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ContentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/contenteditordata:
    post:
      tags:
      - Learn
      description: retrieve user who edited the content last
      operationId: Learn_ContentEditorData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ContentEditorDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ContentEditorDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/createeditversion:
    post:
      tags:
      - Learn
      description: create edit version
      operationId: Learn_CreateEditVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateEditVersionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateEditVersionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/deletelearnpages:
    post:
      tags:
      - Learn
      description: delete learning pages
      operationId: Learn_DeleteLearnPages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteLearnPagesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteLearnPagesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/deletestandalone:
    post:
      tags:
      - Learn
      description: delete standalone articles from learning pages
      operationId: Learn_DeleteStandalone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteStandaloneReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteStandaloneRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/deleteversion:
    post:
      tags:
      - Learn
      description: delete version from learn
      operationId: Learn_DeleteVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteVersionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteVersionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/exist:
    post:
      tags:
      - Learn
      description: check if learning page already exists
      operationId: Learn_Exist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ExistReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ExistRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/exportmany:
    post:
      tags:
      - Learn
      description: exports multiple pages of the learning center markdown as PDF
      operationId: Learn_ExportMany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ExportManyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ExportRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/exportmanystream:
    post:
      tags:
      - Learn
      description: exports multiple pages of the learning center markdown as PDF file
        stream
      operationId: Learn_ExportManyStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ExportManyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ExportRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/listsearchresults:
    post:
      tags:
      - Learn
      description: "stream search content results in learning pages\n we allow all
        the logged in agents/admins to view search content"
      operationId: Learn_ListSearchResults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SearchContentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SearchRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/listsearchresultsbyversion:
    post:
      tags:
      - Learn
      description: "stream search content results in learning pages by version\n we
        allow all the logged in agents/admins to view search content"
      operationId: Learn_ListSearchResultsByVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SearchContentByVersionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SearchRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/listversions:
    post:
      tags:
      - Learn
      description: list all the different versions
      operationId: Learn_ListVersions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListVersionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListVersionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/publishversion:
    post:
      tags:
      - Learn
      description: publish version
      operationId: Learn_PublishVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.PublishVersionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PublishVersionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/reviewfileversions:
    post:
      tags:
      - Learn
      description: return diff by comparing file contens from any version
      operationId: Learn_ReviewFileVersions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ReviewFileVersionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ReviewFileVersionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/reviewversion:
    post:
      tags:
      - Learn
      description: returns list of file details after comparing different versions
      operationId: Learn_ReviewVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ReviewVersionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ReviewVersionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/reviewversionstream:
    post:
      tags:
      - Learn
      description: returns urls as a stream after comparing version contents between
        both versions
      operationId: Learn_ReviewVersionStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ReviewVersionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ReviewVersionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/searchcontent:
    post:
      tags:
      - Learn
      description: "search content in learning pages\n we allow all the logged in
        agents/admins to view search content"
      operationId: Learn_SearchContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SearchContentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SearchRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/snippet:
    post:
      tags:
      - Learn
      description: "get snippet content from learning pages\n we allow all the logged
        in agents/admins to view snippet content"
      operationId: Learn_Snippet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SnippetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SnippetRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/standalone:
    post:
      tags:
      - Learn
      description: "get standalone articles from learning pages\n we allow all the
        logged in agents/admins to view standalone articles"
      operationId: Learn_Standalone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.StandaloneReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.StandaloneRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/storestaticimage:
    post:
      tags:
      - Learn
      description: upload url for static images
      operationId: Learn_StoreStaticImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.StoreStaticImageReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.StoreStaticImageRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/update:
    post:
      tags:
      - Learn
      description: update contents for learning pages
      operationId: Learn_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/updatebyversion:
    post:
      tags:
      - Learn
      description: update contents for learning pages by version
      operationId: Learn_UpdateByVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateByVersionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/uploaddynamic:
    post:
      tags:
      - Learn
      description: upload dynamic learning image screenshot
      operationId: Learn_UploadDynamicScreenshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UploadDynamicScreenshotReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UploadDynamicScreenshotRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/learn/uploadstaticimage:
    post:
      tags:
      - Learn
      description: upload image for learning articles
      operationId: Learn_UploadStaticImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UploadStaticImageReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UploadStaticImageRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/autocomplete:
    post:
      tags:
      - LMS
      operationId: LMS_Autocomplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ParseReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ParseRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/autocompletefields:
    post:
      tags:
      - LMS
      operationId: LMS_ListAutocompleteFields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAutocompleteFieldsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAutocompleteFieldsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/available-ehr-fields:
    post:
      tags:
      - LMS
      description: returns all fields possible that an ehr entity type could return
        (that we know of)
      operationId: LMS_GetAvailableEHRFields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EHREntityType'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Fields'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/available-fields:
    post:
      tags:
      - LMS
      operationId: LMS_GetAvailableFields
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ProcessFields'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/campaignlink/list:
    post:
      tags:
      - LMS
      description: list campaign links and descriptions
      operationId: LMS_ListCampaignLinks
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCampaignLinksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections:
    post:
      tags:
      - LMS
      operationId: LMS_ListCollections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCollectionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCollectionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/add-entry:
    post:
      tags:
      - LMS
      operationId: LMS_AddCollectionEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CollectionEntry'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CollectionEntry'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/create:
    post:
      tags:
      - LMS
      description: CJS calls
      operationId: LMS_CreateCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CollectionMetadata'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CollectionMetadata'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/createsearchdefinition:
    post:
      tags:
      - LMS
      description: CreateCjsSearchDefinition creates a search definition
      operationId: LMS_CreateCjsSearchDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CjsSearchDefinition'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CjsSearchDefinition'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/createsecuresearchdcriteria:
    post:
      tags:
      - LMS
      description: CreateCjsSecureSearchCriteria creates a secure search criteria
      operationId: LMS_CreateCjsSecureSearchCriteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CjsSecureSearchCriteria'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CjsSecureSearchCriteria'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/delete:
    post:
      tags:
      - LMS
      operationId: LMS_DeleteCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteCollectionReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/delete-entry:
    post:
      tags:
      - LMS
      operationId: LMS_DeleteCollectionEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteCollectionEntryReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/deletesearchdefinition:
    post:
      tags:
      - LMS
      description: DeleteCjsSearchDefinition deletes the search definition specified
        by search_definition_id
      operationId: LMS_DeleteCjsSearchDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteCjsSearchDefinitionReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/executesearchdefinition:
    post:
      tags:
      - LMS
      description: ExecuteCjsSearchDefinition executes the search definition specified
        by search_definition_id
      operationId: LMS_ExecuteCjsSearchDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ExecuteCjsSearchDefinitionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ExecuteCjsSearchDefinitionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/get:
    post:
      tags:
      - LMS
      operationId: LMS_GetCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCollectionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CollectionMetadata'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/getcollectionentries:
    post:
      tags:
      - LMS
      description: "GetCollectionEntries fetches a page (size specified by the page_size
        param) of entries for\n the specified collection_id, org_id, region_id starting
        at location specified by from"
      operationId: LMS_GetCollectionEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCollectionEntriesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetCollectionEntriesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/getqueuedeventsstatusbyelementid:
    post:
      tags:
      - LMS
      operationId: LMS_GetQueuedEventsStatusByElementId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ElementPK'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Events'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/getsearchdefinition:
    post:
      tags:
      - LMS
      description: GetCjsSearchDefinition gets the search definition specified by
        search_definition_id
      operationId: LMS_GetCjsSearchDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCjsSearchDefinitionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CjsSearchDefinition'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/getsecuresearchdcriteria:
    post:
      tags:
      - LMS
      description: GetCjsSecureSearchCriteria gets the secure search criteria
      operationId: LMS_GetCjsSecureSearchCriteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCjsSecureSearchCriteriaReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CjsSecureSearchCriteria'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/listsearchdefinitions:
    post:
      tags:
      - LMS
      description: ListCjsSearchDefinitions lists the search definitions
      operationId: LMS_ListCjsSearchDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCjsSearchDefinitionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCjsSearchDefinitionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/reset:
    post:
      tags:
      - LMS
      operationId: LMS_ResetCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ResetCollectionReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/searchcollections:
    post:
      tags:
      - LMS
      description: "SearchCollectionsWithQueryPaginated needs to be used in conjunction
        with GetCollection\n to have the metadata associated with it"
      operationId: LMS_SearchCollectionsPaginated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SearchCollectionsPaginatedReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PaginatedSearchRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/stream:
    post:
      tags:
      - LMS
      description: "StreamCollection needs to be used in conjunction with GetCollection\n
        to have the metadata associated with it"
      operationId: LMS_StreamCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.StreamCollectionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CollectionEntry'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/update:
    post:
      tags:
      - LMS
      operationId: LMS_UpdateCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CollectionMetadata'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/update-entry:
    post:
      tags:
      - LMS
      operationId: LMS_UpdateCollectionEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CollectionEntry'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CollectionEntry'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/updatesearchdefinition:
    post:
      tags:
      - LMS
      description: UpdateCjsSearchDefinition updates the search definition specified
        by search_definition_id
      operationId: LMS_UpdateCjsSearchDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CjsSearchDefinition'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/collections/updatesecuresearchdcriteria:
    post:
      tags:
      - LMS
      description: UpdateCjsSecureSearchCriteria updates the secure search criteria
      operationId: LMS_UpdateCjsSecureSearchCriteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CjsSecureSearchCriteria'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/compliancescrublists:
    post:
      tags:
      - LMS
      operationId: LMS_GetComplianceScrubLists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetComplianceScrubListsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetComplianceScrubListsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/fields:
    post:
      tags:
      - LMS
      operationId: LMS_ListFields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListFieldsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Fields'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/fields/create:
    post:
      tags:
      - LMS
      operationId: LMS_CreateField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.Field'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Field'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/fields/delete:
    delete:
      tags:
      - LMS
      operationId: LMS_DeleteField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.Field'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Field'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/fields/get:
    post:
      tags:
      - LMS
      operationId: LMS_GetField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.Field'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Field'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/fields/update:
    post:
      tags:
      - LMS
      operationId: LMS_UpdateField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateFieldReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Field'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/fieldsbyelement:
    post:
      tags:
      - LMS
      operationId: LMS_ListAvailableFieldsByElementId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAvailableFieldsByElementIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ProcessFields'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/fieldsforelement:
    post:
      tags:
      - LMS
      operationId: LMS_ListFieldsForElement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListFieldsForElementReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListFieldsForElementRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/file_templates:
    post:
      tags:
      - LMS
      operationId: LMS_ListFileTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetFileTemplatesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.FileTemplate'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/file_templates/create:
    post:
      tags:
      - LMS
      operationId: LMS_CreateFileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.FileTemplate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.FileTemplate'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/file_templates/delete:
    post:
      tags:
      - LMS
      operationId: LMS_DeleteFileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.FileTemplate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.FileTemplate'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/file_templates/get:
    post:
      tags:
      - LMS
      operationId: LMS_GetFileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.FileTemplate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.FileTemplate'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/file_templates/update:
    post:
      tags:
      - LMS
      operationId: LMS_UpdateFileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.FileTemplate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.FileTemplate'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/find-field-usages:
    post:
      tags:
      - LMS
      operationId: LMS_FindFieldUsages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.FindFieldUsagesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.FindFieldUsagesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/find-invalid-elements:
    post:
      tags:
      - LMS
      operationId: LMS_FindInvalidElements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.FindInvalidElementsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.FindInvalidElementsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/get-new-events:
    post:
      tags:
      - LMS
      description: returns queue events for the last 30 minutes
      operationId: LMS_ListNewEvents
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Events'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/lists/history:
    post:
      tags:
      - LMS
      operationId: LMS_GetHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetHistoryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetHistoryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/lists/preview:
    post:
      tags:
      - LMS
      operationId: LMS_PeekList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.PeekListReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PeekListRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/pgpkey/get:
    post:
      tags:
      - LMS
      operationId: LMS_GetPublicKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetPublicKeyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PublicKey'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/pipelines:
    post:
      tags:
      - LMS
      operationId: LMS_ListElements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListElementsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Element'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/pipelines/copydownstream:
    post:
      tags:
      - LMS
      description: CopyPipelineDownstream copies an Element and all of its' children
      operationId: LMS_CopyPipelineDownstream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.Element'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Element'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/pipelines/copyupstream:
    post:
      tags:
      - LMS
      description: CopyPipelineUpstream copies an Element and all of its' parents
      operationId: LMS_CopyPipelineUpstream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.Element'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Element'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/pipelines/create:
    post:
      tags:
      - LMS
      operationId: LMS_CreateElement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.Element'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Element'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/pipelines/delete:
    delete:
      tags:
      - LMS
      operationId: LMS_DeleteElement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.Element'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Element'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/pipelines/get:
    post:
      tags:
      - LMS
      operationId: LMS_GetElement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ElementPK'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Element'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/pipelines/process:
    post:
      tags:
      - LMS
      operationId: LMS_ProcessElement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ProcessElementReq'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/pipelines/processlist/{elementId}:
    post:
      tags:
      - LMS
      operationId: LMS_ProcessList
      parameters:
      - name: elementId
        in: path
        description: "the element/node we want to upload the list to.\n must be an
          api_entrypoint type element."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ProcessListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ProcessListResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/pipelines/streamlist/{elementId}:
    post:
      tags:
      - LMS
      operationId: LMS_StreamList
      parameters:
      - name: elementId
        in: path
        description: "the element/node we want to upload the list to.\n must be an
          api_entrypoint type element.\n all chunks will be concat together in order
          for each element streamed.\n if this field is ever empty the whole call
          will error."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.StreamListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.StreamListResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/pipelines/update:
    post:
      tags:
      - LMS
      operationId: LMS_UpdateElement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.Element'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Element'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/pools:
    post:
      tags:
      - LMS
      description: List pools is a unary call to show finvi pools through exile
      operationId: LMS_ListPools
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListPoolsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListPoolsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/sample:
    post:
      tags:
      - LMS
      description: SampleEndpoint is to test that values come through to the api appropriately
      operationId: LMS_SampleEndpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SampleRequest'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/lms/view-queue:
    post:
      tags:
      - LMS
      operationId: LMS_ViewQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ViewQueueReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Events'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/approvetask:
    post:
      tags:
      - OmniApi
      description: ApproveTask approves a task.
      operationId: OmniApi_ApproveTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ApproveTaskRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ApproveTaskResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/archivecampaign:
    post:
      tags:
      - OmniApi
      description: archive a campaign
      operationId: OmniApi_ArchiveCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ArchiveCampaignReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ArchiveCampaignRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/closeprojectbyid:
    post:
      tags:
      - OmniApi
      description: "Closes project defined by CloseProjectByIdReq message for a specified\n
        project id.\n The method will stop all child campaigns and return a an empty
        response\n if successful\n Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_CloseProjectById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CloseProjectByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CloseProjectByIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/createcampaign:
    post:
      tags:
      - OmniApi
      description: "Create Omni Campaign defined by CreateOmniCampaign message\n for
        the name, skill, Hours of operations, and description.\n the method will return
        newly created OmniCampaign for this client\n Required Permission:\n      OMNI_BOSS"
      operationId: OmniApi_CreateCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateCampaignReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.OmniCampaign'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/createcannedmessage:
    post:
      tags:
      - OmniApi
      description: "Create/Record canned message defined by CreateCannedMessageReq
        message for a specified\n name, description and message_body.\n The method
        will return a CannedMessage message/entity that will\n contain the newly created
        canned message details for this client\n Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_CreateCannedMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateCannedMessageReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CannedMessage'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/createcannedmessagegroup:
    post:
      tags:
      - OmniApi
      description: "Create/Record canned message group defined by CreateCannedMessageGroup
        Req message for a specified\n name and description.\n The method will return
        a CannedMessageGroup message/entity that will\n contain the newly created
        canned message group details for this client\n Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_CreateCannedMessageGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateCannedMessageGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CannedMessageGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/createconnectedinbox:
    post:
      tags:
      - OmniApi
      description: "CreateConnectedInbox - create a new connected inbox\n Required
        permissions:\n    OMNI_BOSS"
      operationId: OmniApi_CreateConnectedInbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.commons.ConnectedInbox'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateConnectedInboxRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/createcustomunsubscribelink:
    post:
      tags:
      - OmniApi
      description: CreateUnsubscribeLink - creates a new unsubscribe link
      operationId: OmniApi_CreateCustomUnsubscribeLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.commons.OmniCustomUnsubscribeLink'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateCustomUnsubscribeLinkRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/createdisposition:
    post:
      tags:
      - OmniApi
      description: Create a disposition
      operationId: OmniApi_CreateDisposition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateDispositionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateDispositionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/createmanualtask:
    post:
      tags:
      - OmniApi
      description: "CreateManualTask - Creates a manual task.\n Required permissions:\n
        AGENT"
      operationId: OmniApi_CreateManualTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateManualTaskReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateManualTaskRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/createproject:
    post:
      tags:
      - OmniApi
      description: "Create/Record project defined by CreateProjectReq message for
        a specified\n name, description and status.\n The method will return a Project
        message/entity that will\n contain the newly created project_id value for
        this client\n Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_CreateProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateProjectReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateProjectRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/createsignature:
    post:
      tags:
      - OmniApi
      description: "CreateSignature - creates a new message signature\n Required permissions:\n
        \   OMNI_BOSS"
      operationId: OmniApi_CreateSignature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateSignatureReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateSignatureRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/createtasks:
    post:
      tags:
      - OmniApi
      description: Create a task with a given contat list .
      operationId: OmniApi_CreateTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateTasksReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateTasksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/createverifiedemail:
    post:
      tags:
      - OmniApi
      description: "CreateVerifiedEmail.  this will create a new verified email\n
        Required permissions\n      OMNI_BOSS"
      operationId: OmniApi_CreateVerifiedEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.commons.VerifiedEmail'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateVerifiedEmailRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/createwhatsappnumber:
    post:
      tags:
      - OmniApi
      description: Create whatsapp number for the client
      operationId: OmniApi_CreateWhatsAppNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateWhatsAppNumberRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateWhatsAppNumberResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/deletecannedmessagebyid:
    post:
      tags:
      - OmniApi
      description: "Delete canned message details for the canned_message_id\n The
        method will delete an canned message/entity\n Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_DeleteCannedMessageById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteCannedMessageByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteCannedMessageByIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/deletecannedmessagegroup:
    post:
      tags:
      - OmniApi
      description: "Delete canned message group and all the related messages for the
        canned_message_group_id\n The method will delete an canned message group/entity\n
        Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_DeleteCannedMessageGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteCannedMessageGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteCannedMessageGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/deleteconnectedinboxbysid:
    post:
      tags:
      - OmniApi
      description: "DeleteConnectedInboxBySid - deletes a connected inbox given it's
        identifier\n Required permissions:\n    OMNI_BOSS"
      operationId: OmniApi_DeleteConnectedInboxBySid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteConnectedInboxBySidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/deletecustomunsubscribelink:
    post:
      tags:
      - OmniApi
      description: DeleteCustomUnsubscribeLink - deletes custom unsubscribe link details
      operationId: OmniApi_DeleteCustomUnsubscribeLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteCustomUnsubscribeLinkReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/deletedisposition:
    post:
      tags:
      - OmniApi
      description: DeleteDisposition - delete an existing disposition
      operationId: OmniApi_DeleteDisposition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteDispositionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/deletesignature:
    post:
      tags:
      - OmniApi
      description: "DeleteSignature - deletes a message signature\n Required permissions:\n
        \   OMNI_BOSS"
      operationId: OmniApi_DeleteSignature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteSignatureReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteSignatureRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/deleteverifiedemail:
    post:
      tags:
      - OmniApi
      description: "Delete verify email record based on verified email id defined
        by\n DeleteVerifiedEmailReq for the specified client.\n This method will return
        a DeleteVerifiedEmailRes message/entity.\n DeleteVerifiedEmail - deletes a
        verified email record using the given identifier\n Required permissions\n
        \     OMNI_BOSS"
      operationId: OmniApi_DeleteVerifiedEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteVerifiedEmailReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/editprojectbyid:
    post:
      tags:
      - OmniApi
      description: "Update project defined by EditProjectByIdReq message for a specified\n
        project id.\n The method will return a Project message/entity that will\n
        contain the updated details for the project_id\n Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_EditProjectById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EditProjectByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.EditProjectByIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/emailapi/sendemailnotification:
    post:
      tags:
      - OmniApi
      description: "Send email notification defined by SendEmailNotificationReq message
        for the specified\n subject, message and array of to email addresses.\n The
        method will return a stream of SendEmailNotificationRes messages\n containing
        result true/false after notified by email for the client_sid.\n Required permissions:\n
        \     OMNI_BOSS"
      operationId: OmniApi_SendEmailNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SendEmailNotificationReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SendEmailNotificationRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/getavailableheaders:
    post:
      tags:
      - OmniApi
      description: "GetAvailableHeaders - retrieves all the available headers that
        could be present on a contact list\n Required permissions:\n    OMNI_BOSS"
      operationId: OmniApi_GetAvailableHeaders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAvailableHeadersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAvailableHeadersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/getcampaignbyid:
    post:
      tags:
      - OmniApi
      description: Get campaign defined by GetChatCampaignById.
      operationId: OmniApi_GetCampaignById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCampaignByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.OmniCampaign'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/getcannedmessagebyid:
    post:
      tags:
      - OmniApi
      description: "Get canned message details for the canned_message_id\n The method
        will return an canned message/entity\n Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_GetCannedMessageById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCannedMessageByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CannedMessageWithGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/getcannedmessagegroupbyid:
    post:
      tags:
      - OmniApi
      description: "Get canned message group details for the canned_message_group_id\n
        The method will return an canned message group/entity\n Required permissions:\n
        \     OMNI_BOSS"
      operationId: OmniApi_GetCannedMessageGroupById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCannedMessageGroupByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CannedMessageGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/getconnectedinboxbysid:
    post:
      tags:
      - OmniApi
      description: "GetConnectedInboxBySid - retrieves a connected inbox given it's
        identifier\n Required permissions:\n    OMNI_BOSS"
      operationId: OmniApi_GetConnectedInboxBySid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetConnectedInboxBySidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.ConnectedInbox'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/getfieldsforelement:
    post:
      tags:
      - OmniApi
      description: GetFieldsForElement - takes an omni exchange element and returns
        fields for it
      operationId: OmniApi_GetFieldsForElement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetFieldsForElementRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetFieldsForElementResult'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/getnextqueuedtask:
    post:
      tags:
      - OmniApi
      description: GetNextQueuedTask retrieves the next queued task for the agent.
      operationId: OmniApi_GetNextQueuedTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetNextQueuedTaskRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetNextQueuedTaskResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/getomniattachment:
    post:
      tags:
      - OmniApi
      description: "GetOmniAttachment - retrieves the omni attachment details based
        on the request\n Required permissions:\n    OMNI_BOSS"
      operationId: OmniApi_GetOmniAttachment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetOmniAttachmentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.OmniAttachment'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/getomniexchangeelements:
    post:
      tags:
      - OmniApi
      description: GetOmniExchangeElements - retrieves all omni exchange elements
        from lms service
      operationId: OmniApi_GetOmniExchangeElements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetOmniExchangeElementsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetOmniExchangeElementsResult'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/getpendinggooglexoauth2data:
    post:
      tags:
      - OmniApi
      description: "GetPendingGoogleXOAuth2Data - retrieves the pending oauth data
        required to finish creating a connected inbox\n Required permissions:\n    OMNI_BOSS"
      operationId: OmniApi_GetPendingGoogleXOAuth2Data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetPendingGoogleXOAuth2DataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetPendingGoogleXOAuth2DataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/getprojectbyid:
    post:
      tags:
      - OmniApi
      description: "Get project details defined by GetProjectByIdReq message for a
        specified\n project id.\n The method will return a GetProjectByIdRes message/entity
        that will\n contain all the project details for the project_id\n Required
        permissions:\n      OMNI_BOSS"
      operationId: OmniApi_GetProjectById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetProjectByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/gettask:
    post:
      tags:
      - OmniApi
      description: "GetTask - retrieves a task using the provided criteria\n Required
        permissions:\n    OMNI_AGENT"
      operationId: OmniApi_GetTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetTaskReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.OmniTask'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/getverifiedemailbyid:
    post:
      tags:
      - OmniApi
      description: "Get the verified email details based on verified email id defined
        by\n GetVerifiedEmailByIdReq for the specified client.\n This method will
        return an OmniVerifiedEmail message/entity.\n Required permissions\n      OMNI_BOSS"
      operationId: OmniApi_GetVerifiedEmailBySid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetVerifiedEmailBySidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.VerifiedEmail'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listcampaigns:
    post:
      tags:
      - OmniApi
      description: "List campaigns defined by ListCampaignsReq.\n The method will
        return a ListCampaignsReq entity that will contain\n all the campaigns within
        the specified filter."
      operationId: OmniApi_ListCampaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCampaignsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCampaignsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listcannedmessagegroups:
    post:
      tags:
      - OmniApi
      description: "list canned message groups for the current org\n The method will
        return a list of canned message groups/entities\n Required permissions:\n
        \     OMNI_BOSS"
      operationId: OmniApi_ListCannedMessageGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCannedMessageGroupsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCannedMessageGroupsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listcannedmessages:
    post:
      tags:
      - OmniApi
      description: "list canned messages for the current org\n The method will return
        a list of canned messages/entities\n Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_ListCannedMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCannedMessagesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCannedMessagesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listcannedmessagesbygroupid:
    post:
      tags:
      - OmniApi
      description: "list canned messages for the group\n The method will return a
        list of canned messages/entities\n Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_ListCannedMessagesByGroupId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCannedMessagesByGroupIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCannedMessagesByGroupIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listconnectedinboxes:
    post:
      tags:
      - OmniApi
      description: "ListConnectedInboxes - retrieves all the connected inboxes for
        the organization\n Required permissions:\n    OMNI_BOSS"
      operationId: OmniApi_ListConnectedInboxes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListConnectedInboxesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListConnectedInboxesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listcontactlists:
    post:
      tags:
      - OmniApi
      description: ListContactLists - retrieves all the contact lists
      operationId: OmniApi_ListContactLists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListContactListsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListContactListsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listcustomunsubscribelinks:
    post:
      tags:
      - OmniApi
      description: ListCustomUnsubscribeLinks - retrieves all the custom unsubscribe
        links
      operationId: OmniApi_ListCustomUnsubscribeLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.commons.Empty'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCustomUnsubscribeLinksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listdispositions:
    post:
      tags:
      - OmniApi
      description: ListDispositions - lists all dispositions
      operationId: OmniApi_ListDispositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListDispositionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListDispositionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listmessages:
    post:
      tags:
      - OmniApi
      description: "Get a stream of conversation message for a given conversation.
        Used\n only for agents/users. It is not for customers."
      operationId: OmniApi_ListMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListMessagesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.OmniMessage'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listprojects:
    post:
      tags:
      - OmniApi
      description: "list projects for the current org\n The method will return a list
        of Project messages/entities\n Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_ListProjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListProjectsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListProjectsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listsignatures:
    post:
      tags:
      - OmniApi
      description: "ListSignatures - retrieves the signatures created by the organization\n
        Required permissions:\n    OMNI_BOSS"
      operationId: OmniApi_ListSignatures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSignaturesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSignaturesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listtasks:
    post:
      tags:
      - OmniApi
      description: "ListTasks - retrieves tasks using the provided criteria\n Required
        permissions:\n    OMNI_BOSS"
      operationId: OmniApi_ListTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListTasksReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListTasksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listuserskills:
    post:
      tags:
      - OmniApi
      description: "Returns a list of skills filtered by types given on\n the request
        message field type_filter. Leaving the type_filter\n field empty will return
        all types of skills."
      operationId: OmniApi_ListUserSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListUserSkillsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListUserSkillsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listverifiedemails:
    post:
      tags:
      - OmniApi
      description: "List all the verified emails and their details defined by\n ListVerifiedEmailsReq
        for the specified client.\n This method will return a ListVerifiedEmailsRes
        message/entity.\n Required permissions\n      OMNI_BOSS"
      operationId: OmniApi_ListVerifiedEmails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListVerifiedEmailsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListVerifiedEmailsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/listwhatsappnumbers:
    post:
      tags:
      - OmniApi
      description: List whatsapp numbers for the client
      operationId: OmniApi_ListWhatsAppNumbers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListWhatsAppNumbersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListWhatsAppNumbersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/managerlistconversations:
    post:
      tags:
      - OmniApi
      description: "lists all conversation and assigned users for a given date range.\n
        Required permissions:\n    OMNI_BOSS"
      operationId: OmniApi_ManagerListConversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListConversationsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListConversationsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/managerlistmessages:
    post:
      tags:
      - OmniApi
      description: "Get a stream of new conversation message for a given conversation.
        Used\n only for managers. It is not for customers."
      operationId: OmniApi_ManagerListMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ManagerListMessagesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.OmniMessage'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/managersendomnimessage:
    post:
      tags:
      - OmniApi
      description: Send a chat message
      operationId: OmniApi_ManagerSendOmniMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SendOmniMessageReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/pausecampaign:
    post:
      tags:
      - OmniApi
      description: pause a campaign
      operationId: OmniApi_PauseCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.PauseCampaignReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PauseCampaignRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/performsendgridaccountchecks:
    post:
      tags:
      - OmniApi
      description: "Perform sendgrid account check to make sure all the account settings
        are valid defined by SendgridAccountByClientReq message.\n The method will
        return a SendgridAccountByClientRes message/entity that will\n contain the
        result true/false verifying account settings with sendgrid for this client\n
        Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_PerformSendgridAccountChecks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SendgridAccountByClientReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SendgridAccountByClientRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/rejecttask:
    post:
      tags:
      - OmniApi
      description: RejectTask rejects a task.
      operationId: OmniApi_RejectTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RejectTaskRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RejectTaskResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/requeuetask:
    post:
      tags:
      - OmniApi
      description: RequeueTask requeues a task.
      operationId: OmniApi_RequeueTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RequeueTaskRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RequeueTaskResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/resendverifiedemail:
    post:
      tags:
      - OmniApi
      description: "Resend verify email record based on verified email id defined
        by\n ResendVerifiedEmailReq for the specified client.\n This method will return
        a ResendVerifiedEmailRes message/entity.\n Required permissions\n      OMNI_BOSS"
      operationId: OmniApi_ResendVerifiedEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ResendVerifiedEmailReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ResendVerifiedEmailRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/resumecampaign:
    post:
      tags:
      - OmniApi
      description: resume a campaign
      operationId: OmniApi_ResumeCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ResumeCampaignReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ResumeCampaignRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/sendfeedbackemail:
    post:
      tags:
      - OmniApi
      description: Send an email to our feedback system. The users email will be populated
        as the from address to open an email thread with our support.
      operationId: OmniApi_SendFeedbackEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SendFeedbackEmailReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SendFeedbackEmailRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/sendomnimessage:
    post:
      tags:
      - OmniApi
      description: Send a chat message
      operationId: OmniApi_SendOmniMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SendOmniMessageReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/suggestresponse:
    post:
      tags:
      - OmniApi
      description: SuggestResponse
      operationId: OmniApi_SuggestResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SuggestResponseReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SuggestResponseRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/testconnectedinbox:
    post:
      tags:
      - OmniApi
      description: "TestConnectedInbox - check if connected inbox login works for
        a specified email_address,\n username, password, server_name, and server_port
        (other fields from ConnectedInbox are ignored).\n Required permissions:\n
        \   OMNI_BOSS"
      operationId: OmniApi_TestConnectedInbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.commons.ConnectedInbox'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.TestConnectedInboxRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/updatecampaign:
    post:
      tags:
      - OmniApi
      description: "Updates a campaign\n Required permissions:\n    OMNI_BOSS"
      operationId: OmniApi_UpdateCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateCampaignReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateCampaignRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/updatecampaignpacingspeed:
    post:
      tags:
      - OmniApi
      description: update campaign pacing - speed up/slow down a campaign
      operationId: OmniApi_UpdateCampaignPacingSpeed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateCampaignPacingSpeedReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateCampaignPacingSpeedRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/updatecannedmessage:
    post:
      tags:
      - OmniApi
      description: "Update canned message defined by UpdateCannedMessageReq message
        for a specified\n name, description and message_body.\n The method will return
        a CannedMessage message/entity that will\n contain the updated canned message
        details for this client\n Required permissions:\n      OMNI_BOSS"
      operationId: OmniApi_UpdateCannedMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateCannedMessageReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CannedMessage'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/updatecannedmessagegroup:
    post:
      tags:
      - OmniApi
      description: "Update canned message group defined by UpdateCannedMessageGroupReq
        message for a specified\n name and description.\n Required permissions:\n
        \     OMNI_BOSS"
      operationId: OmniApi_UpdateCannedMessageGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateCannedMessageGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateCannedMessageGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/updateconnectedinbox:
    post:
      tags:
      - OmniApi
      description: "UpdateConnectedInbox - update a connected inbox\n Required permissions:\n
        \   OMNI_BOSS"
      operationId: OmniApi_UpdateConnectedInbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateConnectedInboxReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/updatecustomunsubscribelink:
    post:
      tags:
      - OmniApi
      description: UpdateCustomUnsubscribeLink - update custom unsubscribe link details
      operationId: OmniApi_UpdateCustomUnsubscribeLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateCustomUnsubscribeLinkReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateCustomUnsubscribeLinkRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/updatedisposition:
    post:
      tags:
      - OmniApi
      description: UpdateDisposition - update an existing disposition
      operationId: OmniApi_UpdateDisposition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateDispositionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/updatesignature:
    post:
      tags:
      - OmniApi
      description: "UpdateSignature - updates a message signature\n Required permissions:\n
        \   OMNI_BOSS"
      operationId: OmniApi_UpdateSignature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateSignatureReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateSignatureRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/updateverifiedemail:
    post:
      tags:
      - OmniApi
      description: Updates verified email description
      operationId: OmniApi_UpdateVerifiedEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateVerifiedEmailReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/omniapi/updatewhatsappnumber:
    post:
      tags:
      - OmniApi
      description: Update whatsapp number for the client
      operationId: OmniApi_UpdateWhatsAppNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateWhatsAppNumberRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateWhatsAppNumberResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/Loginstriks/remove:
    post:
      tags:
      - Org
      description: "Removed login strike from list of given login_log_sids\n Required
        Permissions:\n  CUSTOMER_SUPPORT"
      operationId: Org_RemoveLoginStrikes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RemoveLoginStrikesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RemoveLoginStrikesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/OwnedOrgs/list:
    post:
      tags:
      - Org
      description: Gets all orgs under the p3 hierarchy
      operationId: Org_ListOwnedOrgs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListOwnedOrgsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListOwnedOrgsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/OwnedOrgs/listbyorgid:
    post:
      tags:
      - Org
      description: Gets all orgs under the p3 hierarchy
      operationId: Org_ListOwnedOrgsByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListOwnedOrgsByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListOwnedOrgsByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/addmyusersubscription:
    post:
      tags:
      - Org
      description: Adds a user subscription to user's list of subscriptions
      operationId: Org_AddMyUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AddMyUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AddMyUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/addusersubscription:
    post:
      tags:
      - Org
      description: Adds a user subscription to user's list of subscriptions
      operationId: Org_AddUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AddUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AddUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/admin/client/preferences/get:
    post:
      tags:
      - Org
      operationId: Org_GetAdminClientPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAdminClientPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAdminClientPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/admin/client/preferences/update:
    post:
      tags:
      - Org
      operationId: Org_UpdateAdminClientPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAdminClientPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAdminClientPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/admin/user/details:
    post:
      tags:
      - Org
      operationId: Org_AdminGetUserDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AdminGetUserDetailsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UserDetails'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agentprofilegroup/assign:
    post:
      tags:
      - Org
      description: "AssignAgentProfileGroups bulk assigns a list of users to a given
        AgentProfileGroup\n Required Permissions:\n ORG_EDIT"
      operationId: Org_AssignAgentProfileGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AssignAgentProfileGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AssignAgentProfileGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agentprofilegroup/create:
    post:
      tags:
      - Org
      description: "CreateAgentProfileGroup creates an AgentProfileGroup. Can only
        create if user is in same org as AgentProfileGroup\n Required Permissions:\n
        ORG_EDIT"
      operationId: Org_CreateAgentProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agentprofilegroup/delete:
    post:
      tags:
      - Org
      description: "DeleteAgentProfileGroup deletes a single AgentProfileGroup by
        given ID. Can only delete if user is in same org as AgentProfileGroup\n Required
        Permissions:\n ORG_EDIT"
      operationId: Org_DeleteAgentProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agentprofilegroup/get:
    post:
      tags:
      - Org
      description: "GetAgentProfileGroup gets a single AgentProfileGroup by given
        ID\n Required Permissions:\n ORG_VIEW"
      operationId: Org_GetAgentProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agentprofilegroup/list:
    post:
      tags:
      - Org
      description: "ListAgentProfileGroups lists all AgentProfileGroups for a given
        org\n Required Permissions:\n ORG_VIEW"
      operationId: Org_ListAgentProfileGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentProfileGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentProfileGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agentprofilegroup/update:
    post:
      tags:
      - Org
      description: "UpdateAgentProfileGroup updates an AgentProfileGroup. Can only
        update if user is in same org as AgentProfileGroup\n Required Permissions:\n
        ORG_EDIT"
      operationId: Org_UpdateAgentProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agentsettings/get:
    post:
      tags:
      - Org
      description: "This is transitionary api. It will be removed when user api is
        available.\n GetAgentSettings gets some agent settings as defined by the GetAgentSettingsRequest.\n
        Required Permissions:\n AGENT"
      operationId: Org_GetAgentSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentSettingsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAgentSettingsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agentstatisticstemplate/create:
    post:
      tags:
      - Org
      description: "Creates a new agent statistics template for the given client_sid.\n
        Required Permissions:\n    ORG_EDIT\n Errors:\n    - grpc.NotFound: The client_sid
        is not found."
      operationId: Org_CreateAgentStatisticsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateAgentStatisticsTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateAgentStatisticsTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agentstatisticstemplate/delete:
    post:
      tags:
      - Org
      description: "Deletes an existing agent statistics template for the given client_sid.\n
        Required Permissions:\n    ORG_EDIT\n Errors:\n    - grpc.NotFound: The client_sid
        or agent statistics template is not found."
      operationId: Org_DeleteAgentStatisticsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteAgentStatisticsTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteAgentStatisticsTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agentstatisticstemplate/list:
    post:
      tags:
      - Org
      description: "Returns a list of agent statistics templates belonging to client_sid.\n
        Required Permissions:\n    ORG_VIEW\n Errors:\n    - grpc.NotFound: There
        is no entry matching the requested client_sid."
      operationId: Org_ListAgentStatisticsTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentStatisticsTemplatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentStatisticsTemplatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agentstatisticstemplate/update:
    post:
      tags:
      - Org
      description: "Updates an existing agent statistics template for the given client_sid.\n
        Required Permissions:\n    ORG_EDIT\n Errors:\n    - grpc.NotFound: The client_sid
        is not found."
      operationId: Org_UpdateAgentStatisticsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentStatisticsTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentStatisticsTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agenttriggertemplate/create:
    post:
      tags:
      - Org
      description: "Creates a new AgentTriggerTemplate as defined by request message
        CreateAgentTriggerTemplateRequest.\n The id field on the request message will
        be generated as part of\n this method. If the id field is set it WILL be overwritten.\n
        Required Permissions:\n  ORG_EDIT"
      operationId: Org_CreateAgentTriggerTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateAgentTriggerTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateAgentTriggerTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agenttriggertemplate/delete:
    post:
      tags:
      - Org
      description: "Deletes the AgentTriggerTemplate with the id given on the request
        message.\n Required Permissions:\n  ORG_EDIT"
      operationId: Org_DeleteAgentTriggerTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteAgentTriggerTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteAgentTriggerTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agenttriggertemplate/get:
    post:
      tags:
      - Org
      description: "Returns one AgentTriggerTemplate with the id given on the request
        message.\n Required Permissions:\n  ORG_VIEW"
      operationId: Org_GetAgentTriggerTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentTriggerTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAgentTriggerTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agenttriggertemplate/list:
    post:
      tags:
      - Org
      description: "Returns a list of every AgentTriggerTemplate for the given\n hunt_group_sid
        on the request.\n Requiree Permissions:\n  ORG_VIEW"
      operationId: Org_ListAgentTriggerTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentTriggerTemplatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentTriggerTemplatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/agenttriggertemplate/update:
    post:
      tags:
      - Org
      description: "Updates the AgentTriggerTemplate with the id given on the request
        message.\n Required Permissions:\n  ORG_EDIT"
      operationId: Org_UpdateAgentTriggerTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentTriggerTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentTriggerTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/all/user/descriptions/adminlist:
    post:
      tags:
      - Org
      operationId: Org_AdminListUserDescriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AdminListUserDescriptionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AdminListUserDescriptionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/all/user/descriptions/list:
    post:
      tags:
      - Org
      operationId: Org_ListUserDescriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListUserDescriptionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListUserDescriptionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/billing/addorgbillingoverride:
    post:
      tags:
      - Org
      description: "Adds a single billing region override for the given orgs billing
        settings.\n If an override already exists for the given region it will be
        updated.\n Required Permissions:\n    CUSTOMER_SUPPORT\n Errors:\n    - grpc.InvalidArgument:
        A field on the request was invalid.\n    - grpc.NotFound: The given org_id
        did not exist.\n    - grpc.Internal: An unexpected error occurred while adding
        the override."
      operationId: Org_AddOrgBillingOverride
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AddOrgBillingOverrideRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AddOrgBillingOverrideResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/billing/getorgbillingsettings:
    post:
      tags:
      - Org
      description: "Returns the billing data for the current org. Billing data\n will
        only be included for countries present on the org's\n allowed countries preference.\n
        Errors:\n    - grpc.InvalidArgument: The org_id on the request was invalid.\n
        \   - grpc.NotFound: The given org_id did not exist.\n    - grpc.Internal:
        An unexpected error occurred while getting the orgs billing settings."
      operationId: Org_GetOrgBillingSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetOrgBillingSettingsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetOrgBillingSettingsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/billing/getorgbillingsettingsbyorgid:
    post:
      tags:
      - Org
      description: "Returns the billing data for the given org. Billing data\n will
        only be included for countries present on the org's\n allowed countries preference.\n
        Errors:\n    - grpc.InvalidArgument: The org_id on the request was invalid.\n
        \   - grpc.NotFound: The given org_id did not exist.\n    - grpc.Internal:
        An unexpected error occurred while getting the orgs billing settings."
      operationId: Org_GetOrgBillingSettingsByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetOrgBillingSettingsByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetOrgBillingSettingsByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/billing/getsystemdefaultbillingrates:
    post:
      tags:
      - Org
      description: "Returns the system default billing rates.\n Required Permissions:\n
        \   CUSTOMER_SUPPORT"
      operationId: Org_GetSystemDefaultBillingRates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSystemDefaultBillingRatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetSystemDefaultBillingRatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/billing/removeorgbillingoverride:
    post:
      tags:
      - Org
      description: "Removes a single billing region override for the given orgs billing
        settings.\n If the region override doesn't exist the rpcs will just do nothing.\n
        Required Permissions:\n    CUSTOMER_SUPPORT\n Errors:\n    - grpc.InvalidArgument:
        The given org_id was invalid.\n    - grpc.NotFound: The given org_id did not
        exist.\n    - grpc.Internal: An unexpected error occurred while removing the
        override."
      operationId: Org_RemoveOrgBillingOverride
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RemoveOrgBillingOverrideRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RemoveOrgBillingOverrideResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/billing/setorgbillingsettings:
    post:
      tags:
      - Org
      description: "Updates the given orgs billing settings as defined by the info\n
        given on the request message. Only fields that are given on the\n field mask
        will be updated.\n Required Permissions:\n    CUSTOMER_SUPPORT\n Errors:\n
        \   - grpc.InvalidArgument: A field on the request was invalid.\n    - grpc.NotFound:
        The given org_id did not exist.\n    - grpc.Internal: An unexpected error
        occurred while updating the orgs billing settings."
      operationId: Org_SetOrgBillingSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SetOrgBillingSettingsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SetOrgBillingSettingsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/clientinfodisplaytemplate/create:
    post:
      tags:
      - Org
      description: "Creates a new ClientInfoDisplayTemplate as defined by request\n
        message CreateClientInfoDisplayRequest.\n Required Permissions:\n  ORG_EDIT"
      operationId: Org_CreateClientInfoDisplayTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateClientInfoDisplayTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateClientInfoDisplayTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/clientinfodisplaytemplate/delete:
    post:
      tags:
      - Org
      description: "Deletes the ClientInfoDisplayTemplate with the id given on the
        request\n message.\n Required Permissions:\n  ORG_EDIT"
      operationId: Org_DeleteClientInfoDisplayTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteClientInfoDisplayTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteClientInfoDisplayTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/clientinfodisplaytemplate/get:
    post:
      tags:
      - Org
      description: "Returns one ClientInfoDisplayTemplate with the id given on the\n
        request message.\n  Required Permissions:\n    ORG_VIEW"
      operationId: Org_GetClientInfoDisplayTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetClientInfoDisplayTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetClientInfoDisplayTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/clientinfodisplaytemplate/list:
    post:
      tags:
      - Org
      description: "Returns a list of every ClientInfoDisplayTemplate.\n Required
        Permissions:\n  ORG_EDIT"
      operationId: Org_ListClientInfoDisplayTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListClientInfoDisplayTemplatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListClientInfoDisplayTemplatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/clientinfodisplaytemplate/update:
    post:
      tags:
      - Org
      description: "Updates the ClientInfoDisplayTemplate as defined by request\n
        message UpdateClientIntoDisplayTemplateRequest.\n Required Permissions:\n
        \ ORG_VIEW"
      operationId: Org_UpdateClientInfoDisplayTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateClientInfoDisplayTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateClientInfoDisplayTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/compliance/list:
    post:
      tags:
      - P3Api
      description: List Schedule Rules
      operationId: P3Api_ListScheduleRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListScheduleRulesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListScheduleRulesResult'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/connection/create:
    post:
      tags:
      - Org
      description: CreateAuthConnection creates a new auth0 connection.
      operationId: Org_CreateAuthConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateAuthConnectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateAuthConnectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/connection/delete:
    post:
      tags:
      - Org
      description: DeleteAuthConnection removes the current orgs auth settings.
      operationId: Org_DeleteAuthConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteAuthConnectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteAuthConnectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/connection/get:
    post:
      tags:
      - Org
      description: GetAuthConnectionSettings gets auth0 connection settings.
      operationId: Org_GetAuthConnectionSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAuthConnectionSettingsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAuthConnectionSettingsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/connection/update:
    post:
      tags:
      - Org
      description: UpdateAuthConnectionSettings updates an existing auth0 connection
        settings.
      operationId: Org_UpdateAuthConnectionSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAuthConnectionSettingsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAuthConnectionSettingsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/countries/list/get:
    post:
      tags:
      - Org
      operationId: Org_GetCountriesList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCountriesListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetCountriesListResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/customreportfilter/agentresponses:
    post:
      tags:
      - Org
      description: "Returns a slice of hunt group scripts belonging to the client_sid.\n
        Required Permissions:\n    ORG_VIEW\n Errors:\n    - grpc.NotFound: There
        is no entry matching the requested client_sid."
      operationId: Org_ListAgentResponseGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentResponseGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentResponseGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/customreportfilter/create:
    post:
      tags:
      - Org
      description: "Creates a new custom report filter as defined by the request message.\n
        Required Permissions:\n    ORG_EDIT\n Errors:\n    - grpc.InvalidArgument:
        The custom report filter has an empty name or no filtering parameters.\n    -
        grpc.Internal: An error occurred marshalling the custom report filter into
        an xml string."
      operationId: Org_CreateCustomReportFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateCustomReportFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateCustomReportFilterResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/customreportfilter/delete:
    post:
      tags:
      - Org
      description: "Deletes a custom report filter with the sid given on the request
        message.\n Required Permissions:\n    ORG_EDIT\n Errors:\n    - grpc.InvalidArgument:
        The xml_client_property_sid field is invalid."
      operationId: Org_DeleteCustomReportFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteCustomReportFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteCustomReportFilterResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/customreportfilter/list:
    post:
      tags:
      - Org
      description: "Returns a slice of custom report filters belonging to client_sid.\n
        Required Permissions:\n    ORG_VIEW\n Errors:\n    - grpc.NotFound: There
        is no entry matching the requested client_sid."
      operationId: Org_ListCustomReportFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCustomReportFiltersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCustomReportFiltersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/customreportfilter/templateelements:
    post:
      tags:
      - Org
      description: "Returns a slice of last template element scripts belonging to
        the client_sid.\n Required Permissions:\n    ORG_VIEW\n Errors:\n    - grpc.NotFound:
        There is no entry matching the requested client_sid."
      operationId: Org_ListLastTemplateElements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListLastTemplateElementsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListLastTemplateElementsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/customreportfilter/update:
    post:
      tags:
      - Org
      description: "Updates a custom report filter with the requested xml_client_property_sid\n
        with the report filter in the request message.\n Required Permissions:\n    ORG_EDIT\n
        Errors:\n    - grpc.InvalidArgument: The pause_code field was not set or the
        pause_code.codes field was an empty list.\n    - grpc.Internal: an error occurred
        while marshalling the pause_code into an xml string."
      operationId: Org_UpdateCustomReportFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateCustomReportFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateCustomReportFilterResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/delegateduser/create:
    post:
      tags:
      - Org
      description: Creates a delegated user. This should only be called by an auth0
        action.
      operationId: Org_CreateDelegatedUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateDelegatedUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateDelegatedUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/emailsmsacknowledgement/clear:
    post:
      tags:
      - Org
      description: "ClearEmailUnsubscribeAcknowledgement inserts an activity log when
        the client clears acknowledgement for\n their own email unsubscribe links."
      operationId: Org_ClearEmailUnsubscribeAcknowledgement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ClearEmailUnsubscribeAcknowledgementRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ClearEmailUnsubscribeAcknowledgementResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/emailsmsacknowledgement/record:
    post:
      tags:
      - Org
      description: "RecordEmailUnsubscribeAcknowledgement inserts an activity log
        when the client acknowledges responsibility\n for their own email unsubscribe
        links."
      operationId: Org_RecordEmailUnsubscribeAcknowledgement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RecordEmailUnsubscribeAcknowledgementRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RecordEmailUnsubscribeAcknowledgementResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/getmyusersubscription:
    post:
      tags:
      - Org
      description: Gets a user subscription by id
      operationId: Org_GetMyUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetMyUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetMyUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/getp3owningorg:
    post:
      tags:
      - Org
      description: "gets the owning organiztion for the given org\n Required Permissions:\n
        \   CUSTOMER_SUPPORT"
      operationId: Org_GetP3OwningOrg
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetP3OwningOrgRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetP3OwningOrgResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/getsystemenvironmentdetails:
    post:
      tags:
      - Org
      description: "Returns the systems current environment details\n Required Permissions:\n
        \   N/A"
      operationId: Org_GetSystemEnvironmentDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSystemEnvironmentDetailsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetSystemEnvironmentDetailsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/getusersubscription:
    post:
      tags:
      - Org
      description: Gets a user subscription by id
      operationId: Org_GetUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/linkback/acceptterms:
    post:
      tags:
      - Org
      description: AcceptLinkbackRecordingTerms controls acknowledgement for linkback
        recording terms and conditions
      operationId: Org_AcceptLinkbackRecordingTerms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AcceptLinkbackRecordingTermsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AcceptLinkbackRecordingTermsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/linkback/updatetemplates:
    post:
      tags:
      - Org
      description: LinkbackUpdateBroadcastTemplates updates broadcast template action
        parameters pertaining to linkback recording
      operationId: Org_LinkbackUpdateBroadcastTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.LinkbackUpdateBroadcastTemplatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.LinkbackUpdateBroadcastTemplatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/listmyusersubscriptions:
    post:
      tags:
      - Org
      description: Lists all of a users subscriptions
      operationId: Org_ListMyUserSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListMyUserSubscriptionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListMyUserSubscriptionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/listorgsubscriptions:
    post:
      tags:
      - Org
      description: "Lists multiple users subscriptions by org. Optionally filters
        by event type.\n Required Permissions:\n    ORG_VIEW"
      operationId: Org_ListOrgSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListOrgSubscriptionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListOrgSubscriptionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/listusersubscriptions:
    post:
      tags:
      - Org
      description: Lists all of a users subscriptions
      operationId: Org_ListUserSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListUserSubscriptionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListUserSubscriptionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/loginhistory/list:
    post:
      tags:
      - Org
      description: "Lists user login history by ip or user_id\n Required Permissions:\n
        \ CUSTOMER_SUPPORT"
      operationId: Org_ListLoginHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListLoginHistoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListLoginHistoryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/myuser/update:
    post:
      tags:
      - Org
      description: "UpdateMyUser updates the currently logged in user as defined by
        the UpdateMyUserRequest.\n Required Permissions: USER_EDIT_OPTIONS\n Only
        some of the fields on the request message can be updated\n for the currently
        logged in user: time_zone, linkback_numbers,\n caller_ids, and default_app."
      operationId: Org_UpdateMyUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateMyUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateMyUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/organization/archive:
    post:
      tags:
      - Org
      description: Archives an organization. An archived organization effectively
        disappears, but isn't deleted.
      operationId: Org_ArchiveOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ArchiveOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ArchiveOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/organization/archived/list:
    post:
      tags:
      - Org
      description: Returns the list of organizations that have been archived.
      operationId: Org_ListArchivedOrganizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListArchivedOrganizationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListArchivedOrganizationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/organization/converttomanual:
    post:
      tags:
      - Org
      description: "Converts a standard organiztion to a manual one.\n WARNING: this
        process cannot be reversed."
      operationId: Org_ConvertOrgToManual
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ConvertOrgToManualRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ConvertOrgToManualResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/organization/description/list:
    post:
      tags:
      - Org
      operationId: Org_ListOrganizationDescriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListOrganizationDescriptionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListOrganizationDescriptionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/organization/description/regional/list:
    post:
      tags:
      - Org
      operationId: Org_ListRegionalOrganizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListRegionalOrganizationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListRegionalOrganizationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/organization/profile/byid/get:
    post:
      tags:
      - Org
      operationId: Org_GetOrganizationProfileById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetOrganizationProfileByIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetOrganizationProfileResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/organization/profile/get:
    post:
      tags:
      - Org
      operationId: Org_GetOrganizationProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetOrganizationProfileRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetOrganizationProfileResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/organization/register:
    post:
      tags:
      - Org
      description: Registers a new organization
      operationId: Org_RegisterOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RegisterOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RegisterOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/organization/unarchive:
    post:
      tags:
      - Org
      description: Restores an archived organization.
      operationId: Org_UnArchiveOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UnArchiveOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UnArchiveOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/organization/update:
    post:
      tags:
      - Org
      description: Updates an organization
      operationId: Org_UpdateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/ownedusers/list:
    post:
      tags:
      - Org
      description: "Gets all users under the p3 hierarchy\n Required Permissions:\n
        \ OWNING_ORG_IMITATION"
      operationId: Org_ListOwnedUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListOwnedUsersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListOwnedUsersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/p3/user/List:
    post:
      tags:
      - Org
      description: "List all users who only exist in skunk and have not yet been migrated\n
        Required Permissions:\n  CUSTOMER_SUPPORT"
      operationId: Org_ListP3UnMigratedUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListP3UnMigratedUsersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListP3UnMigratedUsersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/p3/user/migrate:
    post:
      tags:
      - Org
      description: "Migrates a login or agent from backoffice to firestore\n Required
        Permissions:\n  CUSTOMER_SUPPORT"
      operationId: Org_MigrateP3User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.MigrateP3UserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.MigrateP3UserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/p3/username/update:
    post:
      tags:
      - Org
      description: "Updates the username in skunk only for a agent or login\n Required
        Permissions:\n  CUSTOMER_SUPPORT"
      operationId: Org_UpdateP3UserName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateP3UserNameRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateP3UserNameResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissiongroup/admin/assignaccountowner:
    post:
      tags:
      - Org
      description: Assigns a user to a acount owner permission group.
      operationId: Org_AssignUserToAccountOwnerPermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AssignUserToAccountOwnerPermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AssignUserToAccountOwnerPermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissiongroup/assign:
    post:
      tags:
      - Org
      description: "Assigns a permission group to another user.\n Requires that all
        three of permission group, calling user, and user being assigned to be of
        the same organization.\n Calling user must have PERMISSION_PERMISSION_GROUP_ASSIGN."
      operationId: Org_AssignUserPermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AssignUserPermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AssignUserPermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissiongroup/assignusers:
    post:
      tags:
      - Org
      description: "Assigns a permission group to multiple users.\n Requires that
        all three of permission group, calling user, and user being assigned to be
        of the same organization.\n Calling user must have PERMISSION_PERMISSION_GROUP_ASSIGN."
      operationId: Org_AssignUsersPermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AssignUsersPermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AssignUsersPermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissiongroup/create:
    post:
      tags:
      - Org
      description: CreatePermissionGroup creates a new permission group for the caller's
        organization.
      operationId: Org_CreatePermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreatePermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreatePermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissiongroup/delete:
    post:
      tags:
      - Org
      description: DeletePermissionGroup deletes a permission group by id for the
        caller's organization.
      operationId: Org_DeletePermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeletePermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeletePermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissiongroup/initialize:
    post:
      tags:
      - Org
      description: "InitDefaultPermissionGroups initializes the default read only
        permission groups for the callers organization.\n Idempotent call. Returns
        the default permission groups for the organization."
      operationId: Org_InitDefaultPermissionGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.InitDefaultPermissionGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.InitDefaultPermissionGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissiongroup/list:
    post:
      tags:
      - Org
      description: ListPermissionGroups returns the list of an org's permission groups.
      operationId: Org_ListPermissionGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListPermissionGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListPermissionGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissiongroup/listbyorgid:
    post:
      tags:
      - Org
      description: ListPermissionGroupsByOrgId returns the list of an org's permission
        groups.
      operationId: Org_ListPermissionGroupsByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListPermissionGroupsByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListPermissionGroupsByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissiongroup/revoke:
    post:
      tags:
      - Org
      description: "Revokes a permission group from another user.\n Requires that
        all three of permission group, calling user, and user being revoked to be
        of the same organization.\n Calling user must have PERMISSION_PERMISSION_GROUP_ASSIGN."
      operationId: Org_RevokeUserPermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RevokeUserPermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RevokeUserPermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissiongroup/revokeusers:
    post:
      tags:
      - Org
      description: "Revokes a permission group to multiple users.\n Requires that
        all three of permission group, calling user, and user being revoked to be
        of the same organization.\n Calling user must have PERMISSION_PERMISSION_GROUP_ASSIGN."
      operationId: Org_RevokeUsersPermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RevokeUsersPermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RevokeUsersPermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissiongroup/update:
    post:
      tags:
      - Org
      description: UpdatePermissionGroup updates a permission group by id for the
        caller's organization.
      operationId: Org_UpdatePermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdatePermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdatePermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissiongroup/user/update:
    post:
      tags:
      - Org
      description: "Assigns permission group(s) to another user.\n Requires that all
        three of permission group, calling user, and user being assigned to be of
        the same organization.\n Calling user must have PERMISSION_PERMISSION_GROUP_ASSIGN."
      operationId: Org_UpdateUserNeoPermissionGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateUserNeoPermissionGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateUserNeoPermissionGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissions/p3/create:
    post:
      tags:
      - Org
      description: Creates new p3 permission group
      operationId: Org_CreateP3PermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateP3PermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateP3PermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissions/p3/create/login:
    post:
      tags:
      - Org
      description: AddLoginToUser Creates new login for a given user
      operationId: Org_AddLoginToUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AddLoginToUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AddLoginToUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissions/p3/delete:
    post:
      tags:
      - Org
      description: Delete new p3 permission group
      operationId: Org_DeleteP3PermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteP3PermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteP3PermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissions/p3/group/assign:
    post:
      tags:
      - Org
      description: Assign one or many users a p3 permission group
      operationId: Org_AssignUsersP3PermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AssignUsersP3PermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AssignUsersP3PermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissions/p3/group/revoke:
    post:
      tags:
      - Org
      description: "Revoke a p3 permission group to another user(s).\n Requires that
        permission group and user(s) being assigned to be of the same organization.\n
        Calling user must have PERMISSION_PERMISSION_GROUP_ASSIGN."
      operationId: Org_RevokeUsersP3PermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RevokeUsersP3PermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RevokeUsersP3PermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissions/p3/groups/list:
    post:
      tags:
      - Org
      description: ListP3PermissionGroups returns the list of an org's P3 permission
        groups.
      operationId: Org_ListP3PermissionGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListP3PermissionGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListP3PermissionGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissions/p3/groups/listbyorgid:
    post:
      tags:
      - Org
      description: ListP3PermissionGroupsByOrgId returns the list of an org's P3 permission
        groups.
      operationId: Org_ListP3PermissionGroupsByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListP3PermissionGroupsByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListP3PermissionGroupsByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissions/p3/update:
    post:
      tags:
      - Org
      description: Update p3 permission group
      operationId: Org_UpdateP3PermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateP3PermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateP3PermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/permissions/p3/updatebyorgid:
    post:
      tags:
      - Org
      description: Update p3 permission group
      operationId: Org_UpdateP3PermissionGroupByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateP3PermissionGroupByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateP3PermissionGroupByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/email/get:
    post:
      tags:
      - Org
      description: GetEmailSmsPreferences returns the all preferences for email and
        sms
      operationId: Org_GetEmailSmsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetEmailSmsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetEmailSmsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/email/update:
    post:
      tags:
      - Org
      description: GetEmailSmsPreferences updates the all preferences for email and
        sms
      operationId: Org_UpdateEmailSmsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateEmailSmsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateEmailSmsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/manager/dashboardqueue/get:
    post:
      tags:
      - Org
      description: GetDashboardQueuePreferences returns the Dashboard Queue table
        preferences.
      operationId: Org_GetDashboardQueuePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetDashboardQueuePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetDashboardQueuePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/manager/dashboardqueue/update:
    post:
      tags:
      - Org
      description: UpdateDashboardQueuePreferences updates the Dashboard Queue table
        preferences.
      operationId: Org_UpdateDashboardQueuePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateDashboardQueuePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateDashboardQueuePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/agent/get:
    post:
      tags:
      - Org
      description: GetAgentPreferences returns all client agent preferences
      operationId: Org_GetAgentPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAgentPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/agent/update:
    post:
      tags:
      - Org
      description: UpdateAgentPreferences updates client agent preferences
      operationId: Org_UpdateAgentPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/agentquickview/edit:
    post:
      tags:
      - Org
      description: EditAgentQuickViewPreferences return nil,error
      operationId: Org_EditAgentQuickViewPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EditAgentQuickViewPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.EditAgentQuickViewPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/agentquickview/get:
    post:
      tags:
      - Org
      description: GetAgentQuickViewPreferences returns the diplay templates for the
        client
      operationId: Org_GetAgentQuickViewPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentQuickViewPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAgentQuickViewPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/authentication/get:
    post:
      tags:
      - Org
      description: GetAuthenticationPreferences returns all authentication options
        for an org.
      operationId: Org_GetAuthenticationPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAuthenticationPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAuthenticationPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/authentication/update:
    post:
      tags:
      - Org
      description: UpdateAuthenticationPreferences updates authentication preferences
        for an org.
      operationId: Org_UpdateAuthenticationPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAuthenticationPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAuthenticationPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/backofficetheme/edit:
    post:
      tags:
      - Org
      description: "EditBackofficeThemePreference returns nil, error\n changes the
        Client Skin client property"
      operationId: Org_EditBackofficeThemePreference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.EditBackofficeThemePreferenceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.EditBackofficeThemePreferenceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/backofficetheme/get:
    post:
      tags:
      - Org
      operationId: Org_GetBackofficeThemePreference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetBackofficeThemePreferenceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetBackofficeThemePreferenceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/bi/get:
    post:
      tags:
      - Org
      description: GetBusinessPreferences returns all business intelligence and associated
        analytic preferences
      operationId: Org_GetBusinessPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetBusinessPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetBusinessPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/bi/update:
    post:
      tags:
      - Org
      description: UpdateBusinessPreferences updates all business intelligence and
        associated analytic preferences
      operationId: Org_UpdateBusinessPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateBusinessPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateBusinessPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/broadcast/get:
    post:
      tags:
      - Org
      description: GetBroadcastPreferences returns all broadcast options for campaign
        preferences for an org.
      operationId: Org_GetBroadcastPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetBroadcastPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetBroadcastPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/broadcast/update:
    post:
      tags:
      - Org
      description: UpdateBroadcastPreferences updates broadcast options for campaign
        preferences for an org.
      operationId: Org_UpdateBroadcastPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateBroadcastPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateBroadcastPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/compliance/get:
    post:
      tags:
      - Org
      description: Returns all client compliance preferences
      operationId: Org_GetCompliancePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCompliancePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetCompliancePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/compliance/update:
    post:
      tags:
      - Org
      description: Updates all client Compliance preferences
      operationId: Org_UpdateCompliancePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateCompliancePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateCompliancePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/contact/get:
    post:
      tags:
      - Org
      description: 'GetContactPreferences returns all contact preferences for client
        TODO: will replace ContactList above'
      operationId: Org_GetContactPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetContactPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetContactPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/contact/update:
    post:
      tags:
      - Org
      description: UpdateContactPreferences update fields for all contact preferences
        for client
      operationId: Org_UpdateContactPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateContactPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateContactPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/dashboard/get:
    post:
      tags:
      - Org
      description: GetDashboardGeneralPreferences returns all dashboard general preferences
        for an org.
      operationId: Org_GetDashboardGeneralPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetDashboardGeneralPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetDashboardGeneralPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/dashboard/update:
    post:
      tags:
      - Org
      description: UpdateDashboardGeneralPreferences updates dashboard General preferences
        for an org.
      operationId: Org_UpdateDashboardGeneralPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateDashboardGeneralPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateDashboardGeneralPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/eod/get:
    post:
      tags:
      - Org
      description: GetEndOfDayPreferences returns a time (hour 1-24) for each day
        of the week.
      operationId: Org_GetEndOfDayPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetEndOfDayPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetEndOfDayPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/eod/update:
    post:
      tags:
      - Org
      description: UpdateEndOfDayPreferences update fields for a time (hour 1-24)
        for each day of the week.
      operationId: Org_UpdateEndOfDayPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateEndOfDayPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateEndOfDayPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/filters/get:
    post:
      tags:
      - Org
      description: GetReportFilterPreferences returns preferences for the organization
        tab
      operationId: Org_GetReportFilterPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetFilterPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetFilterPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/filters/update:
    post:
      tags:
      - Org
      description: UpdateReportFilterPreferences updates preferences for the filter
        tab
      operationId: Org_UpdateReportFilterPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateFilterPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateFilterPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/organization/get:
    post:
      tags:
      - Org
      description: GetOrganizationPreferences returns preferences for the organization
        tab
      operationId: Org_GetOrganizationPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetOrganizationPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetOrganizationPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/organization/update:
    post:
      tags:
      - Org
      description: UpdateOrganizationPreferences updates preferences for the organization
        tab
      operationId: Org_UpdateOrganizationPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateOrganizationPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateOrganizationPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/phone/get:
    post:
      tags:
      - Org
      description: GetPhonePreferences returns all phone and recording preferences
        for an org.
      operationId: Org_GetPhonePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetPhonePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetPhonePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/phone/update:
    post:
      tags:
      - Org
      description: UpdatePhonePreferences updates phone and recording preferences
        for an org.
      operationId: Org_UpdatePhonePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdatePhonePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdatePhonePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/recording/get:
    post:
      tags:
      - Org
      description: GetRecordingPreferences returns all recording options for an org.
      operationId: Org_GetRecordingPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetRecordingPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetRecordingPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/recording/update:
    post:
      tags:
      - Org
      description: UpdateRecordingPreferences updates Recording preferences for an
        org.
      operationId: Org_UpdateRecordingPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateRecordingPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateRecordingPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/schedule/get:
    post:
      tags:
      - Org
      description: GetSchedulePreferences returns all schedule preferences for an
        org.
      operationId: Org_GetSchedulePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSchedulePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetSchedulePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/schedule/update:
    post:
      tags:
      - Org
      description: UpdateSchedulePreferences returns all schedule preferences for
        an org.
      operationId: Org_UpdateSchedulePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateSchedulePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateSchedulePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/webhook/get:
    post:
      tags:
      - Org
      description: GetWebhookPreferences returns all webhook preferences for an org.
      operationId: Org_GetWebhookPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetWebhookPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetWebhookPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/reports/webhook/update:
    post:
      tags:
      - Org
      description: UpdateWebhookPreferences updates webhook preferences for an org.
      operationId: Org_UpdateWebhookPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateWebhookPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateWebhookPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/scorecards/get:
    post:
      tags:
      - Org
      description: GetScorecardsPreferences returns the all preferences for scorecards
      operationId: Org_GetScorecardsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetScorecardsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetScorecardsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/scorecards/update:
    post:
      tags:
      - Org
      description: GetScorecardsPreferences updates the all preferences for scorecards
      operationId: Org_UpdateScorecardsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateScorecardsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateScorecardsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/vanalytics/get:
    post:
      tags:
      - Org
      description: GetVoiceAnalyticsPreferences returns the all preferences for voice
        analytics
      operationId: Org_GetVoiceAnalyticsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetVoiceAnalyticsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetVoiceAnalyticsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/vanalytics/update:
    post:
      tags:
      - Org
      description: UpdateVoiceAnalyticsPreferences updates the all preferences except
        for enabled for voice analytics
      operationId: Org_UpdateVoiceAnalyticsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateVoiceAnalyticsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateVoiceAnalyticsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/preferences/vanalytics/updateenabled:
    post:
      tags:
      - Org
      description: UpdateVoiceAnalyticsPreferencesEnabled updates the enabled preferences
        for voice analytics
      operationId: Org_UpdateVoiceAnalyticsPreferencesEnabled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateVoiceAnalyticsPreferencesEnabledRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateVoiceAnalyticsPreferencesEnabledResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/queueconfigs/copy:
    post:
      tags:
      - Org
      description: "Copies a queue config belonging to one organization to another.\n
        The queue config with the @from_name will be copied from the\n organization
        with the @from_org_id to the organization with the\n @to_org_id under the
        new @to_name.\n Required Permissions:\n    CUSTOMER_SUPPORT\n Errors:\n    -
        grpc.Internal: An unexpected error occurred while copying the config.\n    -
        grpc.InvalidArgument: A field on the request message was invalid.\n    - grpc.NotFound:
        The @to_org_id, @from_org_id, or @from_name was not found.\n    - grpc.AlreadyExists:
        The @to_name already exists for the @to_org_id."
      operationId: Org_CopyQueueConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CopyQueueConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CopyQueueConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/queueconfigs/create:
    post:
      tags:
      - Org
      description: "Creates a queue config as defined by the @config given\n on the
        request message.\n Required Permissions:\n    ORG_EDIT\n Errors:\n    - grpc.Internal:
        An unexpected error occurred while saving the config.\n    - grpc.InvalidArgument:
        the given config was invalid."
      operationId: Org_CreateQueueConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateQueueConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateQueueConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/queueconfigs/delete:
    post:
      tags:
      - Org
      description: "Deletes a queue config with the given @client_sid and @config_name.\n
        Required Permissions:\n    ORG_EDIT\n Errors:\n    - grpc.Internal: An unexpected
        error occurred while removing the config.\n    - grpc.InvalidArgument: the
        config_name was invalid."
      operationId: Org_DeleteQueueConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteQueueConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteQueueConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/queueconfigs/get:
    post:
      tags:
      - Org
      description: "Gets the details for the queue config for the given @client_sid
        with\n the given @name. If @merge is true, the config data will be merged\n
        with the default config data.\n Required Permissions:\n    ORG_VIEW\n Errors:\n
        \  - grpc.Internal: An unexpected error occurred getting the config data.\n
        \  - grpc.InvalidArgument: the given config name was invalid."
      operationId: Org_GetQueueConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetQueueConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetQueueConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/queueconfigs/list:
    post:
      tags:
      - Org
      description: "Lists the names of the custom queue configs.\n Errors:\n   - grpc.Internal:
        An error occurred while getting the config names.\n   - grpc.NotFound: The
        given @org_id was not found (if @org_id is NOT empty)."
      operationId: Org_ListQueueConfigsByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListQueueConfigsByOrgIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListQueueConfigsByOrgIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/queueconfigs/sounds/get:
    post:
      tags:
      - Org
      description: "Returns the url of a downladable wav file for the given config's\n
        sound matching the given sound enum. Leaving the config field empty\n will
        look up the sound for the account default config.\n Required Permissions:\n
        \ ORG_VIEW\n Errors:\n  - grpc.Internal: An unexpected error occurrec while
        getting the\n    downloadable file url.\n  - grpc.NotFound: The given queue
        config was not found or the sound\n    was not found for the config."
      operationId: Org_GetQueueConfigSound
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetQueueConfigSoundReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetQueueConfigSoundRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/queueconfigs/sounds/getall:
    post:
      tags:
      - Org
      description: "Returns the url of a downloadable zip file containing every\n
        sound for the given queue config.\n Required Permissions:\n    ORG_VIEW\n
        Errors:\n    - grpc.Internal: An unexpected error occurred while zipping the
        files.\n    - grpc.NotFound: The given queue config was not found."
      operationId: Org_GetAllQueueConfigSounds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAllQueueConfigSoundsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAllQueueConfigSoundsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/queueconfigs/sounds/set:
    post:
      tags:
      - Org
      description: "Sets the given sound for the config to one of the uploaded\n sound
        files in the clients upload folder matching the\n given file_name on the request.
        Leaving the config field empty\n will set the sound for the account default
        config.\n Required Permissions:\n    ORG_EDIT\n Errors:\n    - grpc.Internal:
        An unexpected error occurred while updating\n      the configs sound.\n    -
        gprc.NotFound: The given queue config was not found or the\n      sound file
        was not found for the client.\n    - grpc.InvalidArgument: The file_name on
        the request was invalid."
      operationId: Org_SetQueueConfigSound
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SetQueueConfigSoundReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SetQueueConfigSoundRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/queueconfigs/sounds/setallfromsource:
    post:
      tags:
      - Org
      description: "Sets every sound for a given config by copying them from\n another
        config OR by copying them from a default sound set\n identified by language
        and gender. Empty config names will be\n treated as the account default config.\n
        Required Permissions:\n    ORG_EDIT\n Errors\n    - grpc.Internal: An unexpected
        error occurred while updating\n      all sounds for the given to_config.\n
        \   - grpc.NotFound: The given to_config or from.config (if used)\n      could
        not be found or the default sound set for the given\n      gender/language
        identifier could not be found.\n    - grpc.InvalidArgument: The to_config
        and from.config contained\n      the same value. (If from.config was used)"
      operationId: Org_SetAllQueueConfigSoundsFromSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SetAllQueueConfigSoundsFromSourceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SetAllQueueConfigSoundsFromSourceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/queueconfigs/update:
    post:
      tags:
      - Org
      description: "Updates a new queue config as defined by the @config given\n on
        the request message.\n Required Permissions:\n    ORG_EDIT\n Errors:\n    -
        grpc.NotFound: The name of the given config could not be found.\n    - grpc.Internal:
        An unexpected error occurred while saving the config.\n    - grpc.InvalidArgument:
        the given config was invalid."
      operationId: Org_UpdateQueueConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateQueueConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateQueueConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/region/list:
    post:
      tags:
      - Org
      description: GetRegions takes nothing in the request and returns a list of all
        region names
      operationId: Org_GetRegions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetRegionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetRegionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/removemyusersubscription:
    post:
      tags:
      - Org
      description: Removes a user subscription from a user's list of subscriptions
      operationId: Org_RemoveMyUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RemoveMyUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RemoveMyUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/removeusersubscription:
    post:
      tags:
      - Org
      description: Removes a user subscription from a specified user's list of subscriptions
      operationId: Org_RemoveUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RemoveUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RemoveUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/updatemyusersubscription:
    post:
      tags:
      - Org
      description: Updates a user subscription
      operationId: Org_UpdateMyUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateMyUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateMyUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/updatep3owningorg:
    post:
      tags:
      - Org
      description: "update an organizations owning organization.\n Required Permissions:\n
        \   CUSTOMER_SUPPORT"
      operationId: Org_UpdateP3OwningOrg
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateP3OwningOrgRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateP3OwningOrgResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/updatep3usersids:
    post:
      tags:
      - Org
      description: "Updates a users agentsid and loginsid\n Required Permissions:\n
        \ TCN_ADMIN_SETTINGS"
      operationId: Org_UpdateP3UserSids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateP3UserSidsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateP3UserSidsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/updateusersubscription:
    post:
      tags:
      - Org
      description: Updates a user subscription
      operationId: Org_UpdateUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/Loginstrikes/remove:
    post:
      tags:
      - Org
      description: "Removed login strikes by user_id\n Required Permissions:\n  CUSTOMER_SUPPORT"
      operationId: Org_RemoveUserLoginStrikes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RemoveUserLoginStrikesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RemoveUserLoginStrikesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/addregion/update:
    post:
      tags:
      - Org
      description: AddUserRegion to a Users Accessible Regions
      operationId: Org_AddUserRegion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.AddUserRegionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AddUserRegionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/admin/create:
    post:
      tags:
      - Org
      description: "CreateUserByOrgId creates a new user as defined by the CreateUserByOrgIdRequest\n
        request message to a specific org.\n Required Permissions: CUSTOMER_SUPPORT"
      operationId: Org_CreateUserByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateUserByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateUserByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/admin/update/userdisabled:
    post:
      tags:
      - Org
      description: UpdateUserDisabledByOrgId updates a specified user in a specific
        organization to disabled or enabled.
      operationId: Org_UpdateUserDisabledByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateUserDisabledByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateUserDisabledByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/agent/update:
    post:
      tags:
      - Org
      description: "UpdateUser updates a user as defined by the UpdateUserRequest.\n
        Required Permissions: USER_EDIT (default)"
      operationId: Org_UpdateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/agents/get:
    post:
      tags:
      - Org
      operationId: Org_GetAgentUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentUsersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAgentUsersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/blocked:
    post:
      tags:
      - Org
      description: "Checks a user's blocked status.\n Required Permissions:\n    CUSTOMER_SUPPORT\n
        Errors:\n    - grpc.Internal: An unexpected error occurred while getting the
        user.\n    - grpc.InvalidArgument: The user_id on the request was invalid."
      operationId: Org_GetUserBlocked
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetUserBlockedRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetUserBlockedResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/create:
    post:
      tags:
      - Org
      description: "CreateUser creates a new user as defined by the CreateUserRequest\n
        request message.\n Required Permissions: USER_CREATE"
      operationId: Org_CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/descriptions/list:
    post:
      tags:
      - Org
      operationId: Org_ListOrganizationUserDescriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListOrganizationUserDescriptionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListOrganizationUserDescriptionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/details:
    post:
      tags:
      - Org
      operationId: Org_GetUserDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetUserDetailsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UserDetails'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/directory/get:
    post:
      tags:
      - Org
      operationId: Org_GetUserDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetUserDirectoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetUserDirectoryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/emailverified:
    post:
      tags:
      - Org
      description: "Returns whether or not the given user's email is verified.\n Required
        Permissions: USER_EDIT"
      operationId: Org_GetUserEmailVerified
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetUserEmailVerifiedRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetUserEmailVerifiedResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/emailverified/byorgid:
    post:
      tags:
      - Org
      description: "GetUserEmailVerifiedByOrgId returns whether or not the given user's
        email\n from a specific org is verified.\n Required Permissions: CUSTOMER_SUPPORT"
      operationId: Org_GetUserEmailVerifiedByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetUserEmailVerifiedByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetUserEmailVerifiedByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/manualuseremailverification:
    post:
      tags:
      - Org
      description: Sets the given user's to verified without needing to send a verification
        email.
      operationId: Org_ManualUserEmailVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ManualUserEmailVerificationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ManualUserEmailVerificationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/manualuseremailverificationbyorgid:
    post:
      tags:
      - Org
      description: Sets the given user's to verified without needing to send a verification
        email.
      operationId: Org_ManualUserEmailVerificationByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ManualUserEmailVerificationByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ManualUserEmailVerificationByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/mydetails:
    post:
      tags:
      - Org
      operationId: Org_GetMyUserDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetMyUserDetailsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UserDetails'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/mypassword/resetlink:
    post:
      tags:
      - Org
      description: "GetMyUserPasswordResetLink generate a password reset link for
        the current user.\n Required Permissions: USER_EDIT_PASSWORD"
      operationId: Org_GetMyUserPasswordResetLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetMyUserPasswordResetLinkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetMyUserPasswordResetLinkResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/password/resetlink:
    post:
      tags:
      - Org
      description: "GetUserPasswordResetLink generates a password reset link for a
        user\n in the same org as the current user.\n Required Permissions: USER_EDIT\n
        \ USER_EDIT if user_id given on the request."
      operationId: Org_GetUserPasswordResetLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetUserPasswordResetLinkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetUserPasswordResetLinkResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/password/resetlink/byorgid:
    post:
      tags:
      - Org
      description: "GetUserPasswordResetLinkByOrgId generates a password reset link\n
        for a specific user in a specific org.\n Required Permissions: CUSTOMER_SUPPORT"
      operationId: Org_GetUserPasswordResetLinkByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetUserPasswordResetLinkByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetUserPasswordResetLinkByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/password/update:
    post:
      tags:
      - Org
      description: "UpdateUserPassword updates a user's password (in the same org
        as the current user)\n to the password given on the request message.\n Required
        Permissions: USER_EDIT (Update another user's password in the same org)"
      operationId: Org_UpdateUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateUserPasswordRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateUserPasswordResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/permissions/get:
    post:
      tags:
      - Org
      operationId: Org_GetPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetPermissionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetPermissionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/permissions/revoke:
    post:
      tags:
      - Org
      description: "RevokeAccountOwnerPermissionFromUser revokes the\n account owner
        permission for the given user"
      operationId: Org_RevokeAccountOwnerPermissionFromUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RevokeAccountOwnerPermissionFromUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RevokeAccountOwnerPermissionFromUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/permissions/userdisabled/update:
    post:
      tags:
      - Org
      description: UpdateUserDisabled updates a specified user to disabled or enabled.
        A disabled user cannot log in.
      operationId: Org_UpdateUserDisabled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateUserDisabledRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateUserDisabledResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/permissions/userdisabled/updatebulk:
    post:
      tags:
      - Org
      description: "UpdateBulkUsersDisabled updates every given user_id to be disabled
        or enabled. The returned list of updated_ids contains every id that was successfully
        updated.\n Required Permissions:\n\t\t- USER_EDIT"
      operationId: Org_UpdateBulkUsersDisabled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateBulkUsersDisabledRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateBulkUsersDisabledResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/removeregion/update:
    post:
      tags:
      - Org
      description: RemoveUserRegion from a Users Accessible Regions
      operationId: Org_RemoveUserRegion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RemoveUserRegionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RemoveUserRegionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/resetpasswordrequired:
    post:
      tags:
      - Org
      description: "updates the users PasswordResetRequired field to false.\n this
        should only be called by an auth0 action."
      operationId: Org_ResetUserRequirePasswordReset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ResetUserRequirePasswordResetRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ResetUserRequirePasswordResetResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/sendverificationemail:
    post:
      tags:
      - Org
      description: Sends a verfication email to the given users email.
      operationId: Org_SendUserVerificationEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SendUserVerificationEmailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SendUserVerificationEmailResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/sendverificationemailbyorgid:
    post:
      tags:
      - Org
      description: Sends a verfication email to the given users email.
      operationId: Org_SendUserVerificationEmailByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SendUserVerificationEmailByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SendUserVerificationEmailByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/token:
    post:
      tags:
      - Org
      description: "GetTempUserToken authenticates impersonation and generates token\n
        to be used for the current user.\n Required Permissions: None, anyone authorized
        can use this"
      operationId: Org_GetTempUserToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetTempUserTokenReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetTempUserTokenRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/token/byuserid:
    post:
      tags:
      - Org
      description: "GetTempUserTokenByUserId authenticates impersonation and generates
        token\n to be used for the user with the given user_id.\n Required Permissions:
        CUSTOMER_SUPPORT"
      operationId: Org_GetTempUserTokenByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetTempUserTokenByUserIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetTempUserTokenByUserIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/unblock:
    post:
      tags:
      - Org
      description: "Unblocks the given user.\n Required Permissions:\n    CUSTOMER_SUPPORT\n
        Errors:\n    - grpc.Internal: An unexpected error occurred while unblocking
        the user.\n    - grpc.InvalidArgument: The user_id on the request was invalid."
      operationId: Org_UnblockUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UnblockUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UnblockUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/update/callerid:
    post:
      tags:
      - Org
      description: "UpdateUserCallerId updates a user's caller id as defined by the
        UpdateUserCallerIdRequest.\n Required Permissions: USER_EDIT_AGENT_CALLER_ID"
      operationId: Org_UpdateUserCallerId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateUserCallerIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateUserCallerIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/update/mypassword:
    post:
      tags:
      - Org
      description: "UpdateMyUserPassword updates the current user's password to the\n
        password given on the request message.\n Required Permissions: USER_EDIT_PASSWORD
        (Update your own password)"
      operationId: Org_UpdateMyUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateMyUserPasswordRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateMyUserPasswordResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/user/update/password/byorgid:
    post:
      tags:
      - Org
      description: "UpdateUserPasswordByOrgId updates a specific user's password\n
        from a specific org to the password given on the request message.\n Required
        Permissions: CUSTOMER_SUPPORT (Update a user's password from an org)"
      operationId: Org_UpdateUserPasswordByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateUserPasswordByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateUserPasswordByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/weblinktemplate/create:
    post:
      tags:
      - Org
      description: "Creates a new WebLinkTemplate as defined by request message CreateWebLinkTemplateRequest.\n
        Required Permissions:\n  ORG_EDIT"
      operationId: Org_CreateWebLinkTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateWebLinkTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateWebLinkTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/weblinktemplate/delete:
    post:
      tags:
      - Org
      description: "Deletes the WebLinkTemplate with the given web_link_template_id.\n
        Required Permissions:\n  ORG_EDIT"
      operationId: Org_DeleteWebLinkTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteWebLinkTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteWebLinkTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/weblinktemplate/get:
    post:
      tags:
      - Org
      description: "Get one WebLinkTemplate with the given web_link_template_id.\n
        Required Permissions:\n  ORG_VIEW"
      operationId: Org_GetWebLinkTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetWebLinkTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetWebLinkTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/weblinktemplate/list:
    post:
      tags:
      - Org
      description: "List every WebLinkTemplate.\n Required Permissions:\n  ORG_VIEW"
      operationId: Org_ListWebLinkTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListWebLinkTemplatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListWebLinkTemplatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/org/weblinktemplate/update:
    post:
      tags:
      - Org
      description: "Updates the WebLinkTemplate with the given web_link_template_id.\n
        Required Permissions:\n  ORG_EDIT"
      operationId: Org_UpdateWebLinkTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateWebLinkTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateWebLinkTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/cancelpreviewdialcall:
    post:
      tags:
      - P3Api
      operationId: P3Api_CancelPreviewDialCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CancelPreviewDialCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CancelPreviewDialCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/createagentpausecode:
    post:
      tags:
      - Org
      description: "Creates a new Agent Pause Code as defined by the request message.\n
        Errors:\n    - grpc.InvalidArgument: The pause_code field was not set, or
        the the pause_code.codes field is an empty list.\n    - grpc.Internal: an
        error occurred while marshalling the pause_code into an xml string."
      operationId: Org_CreateAgentPauseCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateAgentPauseCodeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateAgentPauseCodeResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/createagentskill:
    post:
      tags:
      - P3Api
      description: "Creates a new agent skill as defined by the request message.\n
        Errors:\n    - grpc.InvalidArgument: the client_sid or name in the request
        is invalid."
      operationId: P3Api_CreateAgentSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateAgentSkillReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateAgentSkillRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/createcontactfielddescription:
    post:
      tags:
      - P3Api
      description: Create contact field description details
      operationId: P3Api_CreateContactFieldDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateContactFieldDescriptionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateContactFieldDescriptionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/createcustomdatakey:
    post:
      tags:
      - P3Api
      description: "Creates a new Data Key as defined by the request message\n the
        client_properties_sid should not be set, this is assigned on the backend\n
        Required Permission:\n   ORG_EDIT\n Errors:\n    - grpc.InvalidArgument: The
        custom_data_key field was not set\n    - grpc.Internal: error creating custom
        data key"
      operationId: P3Api_CreateCustomDataKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateCustomDataKeyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateCustomDataKeyRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/creatednclnumbers:
    post:
      tags:
      - P3Api
      operationId: P3Api_CreateDNCLNumbers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateDNCLNumbersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateDNCLNumbersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/createextension:
    post:
      tags:
      - P3Api
      description: "Creates a new extension as defined by the request message\n Required
        Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.InvalidArgument: The
        request has missing or invalid fields.\n    - grpc.Internal: An unexpected
        error occurred while saving the extension."
      operationId: P3Api_CreateExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateExtensionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateExtensionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/createphonebookentry:
    post:
      tags:
      - P3Api
      description: "Creates a new phone_book as defined by the request message.\n
        Required Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.InvalidArgument:
        the fields on the request are missing or invalid.\n    - grpc.Internal: unexpected
        error occurred when saving the phone book."
      operationId: P3Api_CreatePhoneBookEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreatePhoneBookEntryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreatePhoneBookEntryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/createttsvoice:
    post:
      tags:
      - P3Api
      description: "Create a new tts voice\n Required Permissions:\n    TCN_ADMIN_SETTINGS\n
        Errors:\n    - grpc.InvalidArgument: the actual_name or port field on the
        request is invalid.\n    - grpc.Internal: an error was returned while trying
        to insert the new tts voice."
      operationId: P3Api_CreateTtsVoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateTtsVoiceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateTtsVoiceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/deleteagentpausecode:
    post:
      tags:
      - Org
      description: "Deletes an Agent Pause Code with the sid given on the request
        message.\n Errors:\n    - grpc.InvalidArgument: The xml_client_property_sid
        field is invalid."
      operationId: Org_DeleteAgentPauseCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteAgentPauseCodeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteAgentPauseCodeResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/deleteagentskill:
    post:
      tags:
      - P3Api
      description: "Deletes the agent skill with the agent_skill_sid given on the
        request.\n Errors:\n    - grpc.InvalidArgument: the agent_skill_sid in the
        request is invalid."
      operationId: P3Api_DeleteAgentSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteAgentSkillReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteAgentSkillRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/deletecontactfielddescription:
    post:
      tags:
      - P3Api
      description: Delete contact field description details
      operationId: P3Api_DeleteContactFieldDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteContactFieldDescriptionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteContactFieldDescriptionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/deletecustomdatakey:
    post:
      tags:
      - P3Api
      description: "Deletes a Custom Data Key with the sid given on the request message.\n
        Required Permission:\n   ORG_EDIT\n Errors:\n    - grpc.InvalidArgument: The
        client_properties_sid field is invalid.\n    - grpc.NotFound: no custom data
        key was deleted for the client_properties_sid.\n    - grpc.Internal: an error
        occurred while trying to remove the custom data key."
      operationId: P3Api_DeleteCustomDataKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteCustomDataKeyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteCustomDataKeyRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/deleteextension:
    post:
      tags:
      - P3Api
      description: "Deletes a pbx_extension with the given pbx_extension_sid.\n Required
        Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.InvalidArgument: The
        request had invalid or missing fields."
      operationId: P3Api_DeleteExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteExtensionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteExtensionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/deletephonebookentry:
    post:
      tags:
      - P3Api
      description: "Deletes the phone_book with the phone_book_sid given on the reques
        message.\n Required Permissions:\n    AGENT_MANAGER"
      operationId: P3Api_DeletePhoneBookEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeletePhoneBookEntryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeletePhoneBookEntryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/deletettsvoice:
    post:
      tags:
      - P3Api
      description: "Delete a tts voice with the given tts_voice_sid.\n Required Permissions:\n
        \   TCN_ADMIN_SETTINGS\n Errors:\n    - grpc.InvalidArgument: the tts_voice_sid
        field on the request is invalid.\n    - grpc.Internal: an error was returned
        while trying to remove the tts voice."
      operationId: P3Api_DeleteTtsVoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteTtsVoiceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteTtsVoiceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/downloadcallrecording:
    post:
      tags:
      - P3Api
      operationId: P3Api_DownloadCallRecording
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DownloadCallRecordingReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DownloadRecordingRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/downloadcallrecordings:
    post:
      tags:
      - P3Api
      operationId: P3Api_DownloadCallRecordings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DownloadCallRecordingsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DownloadRecordingRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getactivityloghistory:
    post:
      tags:
      - P3Api
      description: "Get Activity logs for given users and by specified time range\n
        Required Permissions;\n   CUSTOMER_SUPPORT"
      operationId: P3Api_GetActivityLogHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetActivityLogHistoryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetActivityLogHistoryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getagenthuntgroup:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetAgentHuntGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentHuntGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.HuntGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getagentprofile:
    post:
      tags:
      - P3Api
      description: GetAgentProfile returns an agent profile.
      operationId: P3Api_GetAgentProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentProfileReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentProfile'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getagentsession:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetAgentSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentSessionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentSession'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getagentskills:
    post:
      tags:
      - P3Api
      description: "Gets the skills of the requesting agent. This includes agent skills,
        hunt group skills, and extension skills(PBX).\n Skills will be returned as
        a value pair (name, level).\n For agent skills, the name of each skill will
        be the agent_skill_sid.\n All other skills' names (hunt group and PBX) will
        be given special formats.\n The requesting agent and hunt_group_sid skills
        will be defaulted to the max level (1000 and 100 respectively).\n\n Required
        permissions:\n   NONE\n Errors:\n   - grpc.Invalid: the hunt_group_sid in
        the request in invalid."
      operationId: P3Api_GetAgentSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentSkillsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAgentSkillsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getcalldata:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetCallData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCallDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetCallDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getcampaigncompletionstatus:
    post:
      tags:
      - P3Api
      description: "Gets all running broadcasts (task groups) for the requesting agent
        and hunt_group_sid in the request.\n Calculates the percentage of completed
        tasks for each of those task groups.\n Calculates the overall task completion
        percentage of all matching task groups.\n Required permissions:\n   NONE\n
        Errors:\n   - grpc.Invalid: the hunt_group_sid in the request is invalid."
      operationId: P3Api_GetCampaignCompletionStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCampaignCompletionStatusReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetCampaignCompletionStatusRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getclientinfodata:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetClientInfoData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetClientInfoDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetClientInfoDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getclientinfodisplaytemplate:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetClientInfoDisplayTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetClientInfoDisplayTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetClientInfoDisplayTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getconditionaldnclrules:
    post:
      tags:
      - P3Api
      description: "Get the rules for conditionally adding a number to the DNCL depending
        on\n responses or scripts"
      operationId: P3Api_GetConditionalDNCLRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetConditionalDNCLRulesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetConditionalDNCLRulesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getcontactgroupdetails:
    post:
      tags:
      - P3Api
      description: "Get contact group details based on contact group sid from contact_group\n
        table"
      operationId: P3Api_GetContactGroupDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetContactGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ContactGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getcontactgroupsize:
    post:
      tags:
      - P3Api
      description: Get contact group size based on contacts size
      operationId: P3Api_GetContactGroupSize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetContactGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetContactGroupSizeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getcontactschemabycontactgroup:
    post:
      tags:
      - P3Api
      description: Get contact schema details based on contact group sid
      operationId: P3Api_GetContactSchemaByContactGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetContactSchemaByContactGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ContactSchema'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getcurrentagent:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetCurrentAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCurrentAgentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Agent'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getdispositionkeys:
    post:
      tags:
      - P3Api
      description: "Gets all the available Disposition Keys\n\n Required permissions:\n
        \  NONE"
      operationId: P3Api_GetDispositionKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetDispositionKeysReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetDispositionKeysRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/gethuntgroupagentsettings:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetHuntGroupAgentSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetHuntGroupAgentSettingsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.HuntGroupAgentSettings'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/gethuntgrouppausecodes:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetHuntGroupPauseCodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetHuntGroupPauseCodesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetHuntGroupPauseCodesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getintercompeerinfo:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetIntercomPeerInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetIntercomPeerInfoReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetIntercomPeerInfoRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getlostpeerinfo:
    post:
      tags:
      - P3Api
      description: "Uses lost peer call sid and call type from the request to get
        information about lost call\n gets the name and hunt group of the agent that
        was connected to that call and all types of skills the call has.\n\n Required
        permissions:\n   NONE\n Errors:\n   - grpc.Invalid: the call_sid in the request
        in invalid.\n   - grpc.NotFound: the call sid provided wasn't previously connected
        to any agent."
      operationId: P3Api_GetLostPeerInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetLostPeerInfoReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetLostPeerInfoRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getmailmerge:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetMailMerge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetMailMergeReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetMailMergeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getorgagentsettings:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetOrgAgentSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetOrgAgentSettingsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetOrgAgentSettingsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getqueueconfigurationoptionsarray:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetQueueConfigurationOptionsArray
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetQueueConfigurationOptionsArrayReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetQueueConfigurationOptionsArrayRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getreadyagents:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetReadyAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetReadyAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetReadyAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/getscriptorresponses:
    post:
      tags:
      - P3Api
      description: "Gets the campaign or huntgroup script for the given agent's current
        hunt\n group. If no script is found, it gets the hunt group responses for
        the\n agent's current hunt group. It also does a mail merge with the found
        script\n or responses (if able)."
      operationId: P3Api_GetScriptOrResponses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetScriptOrResponsesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetScriptOrResponsesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/handlerecordingdelay:
    post:
      tags:
      - P3Api
      operationId: P3Api_HandleRecordingDelay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.HandleRecordingDelayReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.HandleRecordingDelayRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listHuntGroups:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListHuntGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListHuntGroupsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListHuntGroupsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listagentcallhistory:
    post:
      tags:
      - P3Api
      description: "Lists the call history of the requested agent for the past day
        or\n session_sid, depending on the filter parameter."
      operationId: P3Api_ListAgentCallHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentCallHistoryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentCallHistoryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listagentcalllogsbycallsidandtype:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListAgentCallLogsByCallSidAndType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentCallLogsByCallSidAndTypeReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentCallLogsByCallSidAndTypeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listagentcallresponsevalues:
    post:
      tags:
      - P3Api
      description: "Lists the keys and values of the latest responses for the given
        call_sid,\n call_type and agent_sid"
      operationId: P3Api_ListAgentCallResponseValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentCallResponseValuesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentCallResponseValuesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listagentextensions:
    post:
      tags:
      - P3Api
      description: "Lists every agent extension for the current client\n Required
        Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.Internal: unexpected
        error getting pbx_extensions"
      operationId: P3Api_ListAgentExtensions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentExtensionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentExtensionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listagentpausecodes:
    post:
      tags:
      - Org
      description: Returns a slice of agent pause codes.
      operationId: Org_ListAgentPauseCodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentPauseCodesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentPauseCodesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listagentqueueandonholdcalldata:
    post:
      tags:
      - P3Api
      description: "Returns lists with call data of calls that were:\n Placed on multihold
        by the requesting agent.\n Queued, are ready to be handled and require a subset
        of the agent_skills provided.\n Placed in the Hold Queue Monitor, haven't
        been picked up yet and require a subset of the agent_skills provided.\n Required
        permissions:\n   NONE\n Errors:\n   - grpc.Invalid: the agent_session_sid
        provided in the request is invalid."
      operationId: P3Api_ListAgentQueueAndOnHoldCallData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentQueueAndOnHoldCallDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentQueueAndOnHoldCallDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listagentskills:
    post:
      tags:
      - P3Api
      description: "Returns a list of agent skills for the given client sid.\n DEPRECATED.
        Use ListSkills"
      operationId: P3Api_ListAgentSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentSkillsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentSkillsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listagentskillsfilters:
    post:
      tags:
      - P3Api
      description: List agent skills filters by client sid
      operationId: P3Api_ListAgentSkillsFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentSkillsFiltersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentSkillsFiltersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listagentstatisticsdata:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListAgentStatisticsData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentStatisticsDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentStatisticsDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listagenttransferoptions:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListAgentTransferOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentTransferOptionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentTransferOptionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listagenttriggers:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListAgentTriggers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentTriggersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentTriggersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listcallbackroutingagents:
    post:
      tags:
      - P3Api
      description: ListCallbackRoutingAgents returns a list of agents that are allowed
        to make a callback.
      operationId: P3Api_ListCallbackRoutingAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCallbackRoutingAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCallbackRoutingAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listcallbackroutingskills:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListCallbackRoutingSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCallbackRoutingSkillsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCallbackRoutingSkillsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listcalleridsfrombucket:
    post:
      tags:
      - P3Api
      description: "Lists caller id numbers with their associated region codes for
        the given\n bucket"
      operationId: P3Api_ListCallerIdsFromBucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCallerIdsFromBucketReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCallerIdsFromBucketRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listclientphonebookentries:
    post:
      tags:
      - P3Api
      description: "Lists all client phone book entries.\n Required Permissions:\n
        \ AGENT_MANAGER"
      operationId: P3Api_ListClientPhoneBookEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListClientPhoneBookEntriesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListClientPhoneBookEntriesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listcontactfielddescriptions:
    post:
      tags:
      - P3Api
      description: List contact field desc details from contact_field_description
        table
      operationId: P3Api_ListContactFieldDescriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListContactFieldDescriptionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListContactFieldDescriptionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listcontactfielddescriptionsbycgsid:
    post:
      tags:
      - P3Api
      description: List contact field description details based on contact group sid
      operationId: P3Api_ListContactFieldDescriptionsByCGSid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListContactFieldDescriptionsByCGSidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListContactFieldDescriptionsByCGSidRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listcontactgroupdetailsbyclientsid:
    post:
      tags:
      - P3Api
      description: List contact group details based on client sid from contact_group
        table
      operationId: P3Api_ListContactGroupDetailsByClientSid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListContactGroupDetailsByClientSidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListContactGroupDetailsByClientSidRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listcontactimporttemplates:
    post:
      tags:
      - P3Api
      description: "List contactImportTemplates based on client_sid from\n contact_import_template
        table"
      operationId: P3Api_ListContactImportTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListContactImportTemplatesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListContactImportTemplatesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listcustomdatakeys:
    post:
      tags:
      - P3Api
      description: "List of account custom data keys based on client sid\n Required
        Permissions:\n   ORG_VIEW\n Errors:\n    - grpc.Internal: an error was returned
        while trying to retrieve the entity"
      operationId: P3Api_ListCustomDataKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCustomDataKeysReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCustomDataKeysRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listcustomreportfilters:
    post:
      tags:
      - P3Api
      description: List custom report filters by client sid
      operationId: P3Api_ListCustomReportFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCustomReportFiltersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCustomReportFiltersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listextendedcallhistory:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListExtendedCallHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListExtendedCallHistoryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListExtendedCallHistoryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listhuntgroupextensions:
    post:
      tags:
      - P3Api
      description: "Lists every hunt group extension for the current client\n Required
        Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.Internal: unexpected
        error getting pbx_extensions"
      operationId: P3Api_ListHuntGroupExtensions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListHuntGroupExtensionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListHuntGroupExtensionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listhuntgroupphonebookentries:
    post:
      tags:
      - P3Api
      description: "Lists all hunt group phone book entries.\n Required Permissions:\n
        \ AGENT_MANAGER"
      operationId: P3Api_ListHuntGroupPhoneBookEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListHuntGroupPhoneBookEntriesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListHuntGroupPhoneBookEntriesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listhuntgroupweblinks:
    post:
      tags:
      - P3Api
      description: "Returns a list of weblinks for the hunt group in the request.\n
        It replaces any parameters of a given weblink with the call data of the call
        sid and type from the request message or with the callback details (if a scheduled_callback_id
        is given)."
      operationId: P3Api_ListHuntGroupWebLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListHuntGroupWebLinksReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListHuntGroupWebLinksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listmamagenthuntgroupsbyclientsid:
    post:
      tags:
      - P3Api
      description: "List of agent hunt groups based on client sid\n that have manually
        approved messages enabled"
      operationId: P3Api_ListMAMAgentHuntGroupsByClientSid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListMAMAgentHuntGroupsByClientSidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListMAMAgentHuntGroupsByClientSidRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listorgresponseevaluators:
    post:
      tags:
      - P3Api
      description: Lists the requesting user's org response evaluators.
      operationId: P3Api_ListOrgResponseEvaluators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListOrgResponseEvaluatorsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListOrgResponseEvaluatorsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listoutboundbroadcasttemplatedata:
    post:
      tags:
      - P3Api
      description: "Gets information of the requesting client's broadcast templates
        (template_number, name, type, modify_date)\n It reports if each found template
        is either STANDARD or LAYERED.\n Required permissions:\n   NONE\n Errors:\n
        \  NONE"
      operationId: P3Api_ListOutboundBroadcastTemplateData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListOutboundBroadcastTemplateDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListOutboundBroadcastTemplateDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listpbxextensions:
    post:
      tags:
      - P3Api
      description: Lists all agent and hunt group PBX extensions that the requested
        agent has.
      operationId: P3Api_ListPBXExtensions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListPBXExtensionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListPBXExtensionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listphonebooks:
    post:
      tags:
      - P3Api
      description: "Lists caller_id, outbound and transfer phone books for the requesting
        client and given hunt group sid.\n Entries will be ordered by entry_name and
        phone_number.\n\n Required permissions:\n   NONE\n Errors:\n   - grpc.Invalid:
        the client_sid or hunt_group_sid in the request are invalid.\n   - grpc.Internal:
        unexpected error occurred when retrieving the phone books."
      operationId: P3Api_ListPhoneBooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListPhoneBooksReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListPhoneBooksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listreassignmenthuntgroups:
    post:
      tags:
      - P3Api
      description: "List the hunt groups an agent within a given hunt group can reassign\n
        themselves to. The reassignment hunt groups can optionally be limited by a\n
        hunt group setting. If a hunt group does not allow reassignment, the\n returned
        list will be empty."
      operationId: P3Api_ListReassignmentHuntGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListReassignmentHuntGroupsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListReassignmentHuntGroupsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listskills:
    post:
      tags:
      - P3Api
      description: "Returns a list of skills filtered by types given on\n the request
        message field type_filter. Leaving the type_filter\n field empty will return
        all types of skills."
      operationId: P3Api_ListSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSkillsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSkillsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listskillsforcurrentagent:
    post:
      tags:
      - P3Api
      description: Returns a list of skills for the current agent.
      operationId: P3Api_ListSkillsForCurrentAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSkillsForCurrentAgentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSkillsForCurrentAgentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listsmsnumbers:
    post:
      tags:
      - P3Api
      description: List sms numbers by client sid
      operationId: P3Api_ListSmsNumbers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsNumbersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsNumbersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listtabletemplateproperties:
    post:
      tags:
      - P3Api
      description: List agent and queue table template properties by client sid
      operationId: P3Api_ListTableTemplateProperties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListTableTemplatePropertiesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListTableTemplatePropertiesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listttsvoices:
    post:
      tags:
      - P3Api
      description: "List every tts voice\n Required Permissions:\n    TCN_ADMIN_SETTINGS\n
        Errors:\n    - grpc.Internal: an error was returned while trying to retrieve
        the entity"
      operationId: P3Api_ListTtsVoices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListTtsVoicesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListTtsVoicesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/listwhitelistphonebooks:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListWhiteListPhoneBooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListWhiteListPhoneBooksReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListWhiteListPhoneBooksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/manualdialstart:
    post:
      tags:
      - P3Api
      operationId: P3Api_ManualDialStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ManualDialStartReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ManualDialStartRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/multiagenthuntgroupassignment:
    post:
      tags:
      - P3Api
      description: "Updates every given user's hunt_group_sid.\n Required Permissions:\n
        \   AGENT_MANAGEMENT\n Errors:\n    - grpc.Internal: an error occurred while
        interacting with the database.\n    - grpc.InvalidArgument: the hunt_group_sid
        or the user id list is empty or contains an invalid value."
      operationId: P3Api_MultiAgentHuntGroupAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.MultiAgentHuntGroupAssignmentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.MultiAgentHuntGroupAssignmentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/multiagentskillassignment:
    post:
      tags:
      - P3Api
      description: "Assign every skill to every agent with the given aptitude.\n Errors:\n
        \   - grpc.Invalid: the aptitude field is invalid."
      operationId: P3Api_MultiAgentSkillAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.MultiAgentSkillAssignmentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.MultiAgentSkillAssignmentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/multiagentskillunassignment:
    post:
      tags:
      - P3Api
      description: "Unassigns every given skill from every given user.\n Errors:\n
        \   - grpc.InvalidArgument:\n        - the user_ids list is empty or contains
        an empty string.\n        - one or more of the user_ids does not belong to
        the client.\n    - grpc.Internal: an error occurred while deleting the skill
        assignments."
      operationId: P3Api_MultiAgentSkillUnassignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.MultiAgentSkillUnassignmentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.MultiAgentSkillUnassignmentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/placepreviewdialcall:
    post:
      tags:
      - P3Api
      operationId: P3Api_PlacePreviewDialCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.PlacePreviewDialCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PlacePreviewDialCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/recalculatebilling:
    post:
      tags:
      - P3Api
      description: "RecalculateBilling updates statuses for every billing type given
        on the\n request message for either the current or previous month.\n Only
        data that has already been summed for billing will have it's\n status updated.\n
        Required Permissions:\n  EDIT_BILLING"
      operationId: P3Api_RecalculateBilling
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RecalculateBillingReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RecalculateBillingRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/saveagentcallresponses:
    post:
      tags:
      - P3Api
      operationId: P3Api_SaveAgentCallResponses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SaveAgentCallResponsesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SaveAgentCallResponsesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/savelastcallresponse:
    post:
      tags:
      - P3Api
      operationId: P3Api_SaveLastCallResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SaveLastCallResponseReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SaveLastCallResponseRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updateagentassignedhuntgroup:
    post:
      tags:
      - P3Api
      operationId: P3Api_UpdateAgentAssignedHuntGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentAssignedHuntGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentAssignedHuntGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updateagentcallresponsevalue:
    post:
      tags:
      - P3Api
      operationId: P3Api_UpdateAgentCallResponseValue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentCallResponseValueReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentCallResponseValueRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updateagenthuntgroup:
    post:
      tags:
      - P3Api
      description: Updates the requesting agent's hunt_group_sid.
      operationId: P3Api_UpdateAgentHuntGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentHuntGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentHuntGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updateagentpausecode:
    post:
      tags:
      - Org
      description: "Updates an Agent Pause Code with the xml_client_property_sid given
        on\n the pause_code in the request message as defined by the other fields\n
        on the pause_code message.\n Required Permissions:\n    AGENT_MANAGEMENT\n
        \   Actual permission checked is ORG_EDIT??\n Errors:\n    - grpc.InvalidArgument:
        The pause_code field was not set or the pause_code.codes field was an empty
        list.\n    - grpc.Internal: an error occurred while marshalling the pause_code
        into an xml string."
      operationId: Org_UpdateAgentPauseCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentPauseCodeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentPauseCodeResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updateagentskill:
    post:
      tags:
      - P3Api
      description: "Updates an agent skill as defined by the request message.\n Errors:\n
        \   - grpc.InvalidArgument: the agent_skill_sid or name in the request is
        invalid."
      operationId: P3Api_UpdateAgentSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentSkillReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentSkillRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updateagentskills:
    post:
      tags:
      - P3Api
      description: "Updates an agents assigned skills as defined by the skills list
        on\n the request message.\n Errors:\n    - grpc.InvalidArgument: the user_id
        on the request is invalid."
      operationId: P3Api_UpdateAgentSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentSkillsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentSkillsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updatecontactfielddescription:
    post:
      tags:
      - P3Api
      description: Update contact field description details
      operationId: P3Api_UpdateContactFieldDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateContactFieldDescriptionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateContactFieldDescriptionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updatecustomdatakey:
    post:
      tags:
      - P3Api
      description: "Updates a custom data key with the client_properties_sid and data
        key\n given on the request\n Required Permissions;\n   ORG_EDIT\n Errors:\n
        \   - grpc.InvalidArgument: The client_properties_sid was empty or the data
        key was not set\n    - grpc.Internal: error updating custom data key, more
        than 1 custom data key records affected\n    - grpc.NotFound: no matching
        custom data key found"
      operationId: P3Api_UpdateCustomDataKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateCustomDataKeyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateCustomDataKeyRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updateextension:
    post:
      tags:
      - P3Api
      description: "Updates an extension as defined by the request message.\n Required
        Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.InvalidArgument: The
        request had invalid or missing fields.\n    - grpc.Internal: An unexpected
        error occured updating the extension."
      operationId: P3Api_UpdateExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateExtensionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateExtensionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updatepbxextension:
    post:
      tags:
      - P3Api
      operationId: P3Api_UpdatePBXExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdatePBXExtensionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdatePBXExtensionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updatephonebookentry:
    post:
      tags:
      - P3Api
      description: "Updates an existing phone_book as defined by the request message.\n
        Required Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.InvalidArgument:
        the fields on the request are missing or invalid.\n    - grpc.Internal: unexpected
        error occurred when saving the phone book."
      operationId: P3Api_UpdatePhoneBookEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdatePhoneBookEntryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdatePhoneBookEntryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updatepreviewrecordtofinished:
    post:
      tags:
      - P3Api
      description: "Updates task data for a preview record to finished and logs an
        agent\n session event"
      operationId: P3Api_UpdatePreviewRecordToFinished
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdatePreviewRecordToFinishedReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdatePreviewRecordToFinishedRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/p3api/updatetaskstatus:
    post:
      tags:
      - P3Api
      operationId: P3Api_UpdateTaskStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateTaskStatusReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Nil'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/sds/getagentresponsedata:
    post:
      tags:
      - Sds
      description: Gets the agent_response_data field for a document in the mongodb
        calls collection.
      operationId: Sds_GetAgentResponseData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentResponseDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAgentResponseDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/sds/getcall:
    post:
      tags:
      - Sds
      description: Gets a document from the mongodb calls collection.
      operationId: Sds_GetCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CallObject'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/sds/updateagentresponsedata:
    post:
      tags:
      - Sds
      description: Updates the agent_response_data field for a document in the mongodb
        calls collection.
      operationId: Sds_UpdateAgentResponseData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentResponseDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentResponseDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/sds/updatevoicemailbox:
    post:
      tags:
      - Sds
      description: Updates the voicemail_box field for a document in the mongodb calls
        collection.
      operationId: Sds_UpdateVoicemailBox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateVoicemailBoxReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateVoicemailBoxRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/sentinel/sendevents:
    post:
      tags:
      - Sentinel
      description: Send a json blob of ui events and logs.
      operationId: Sentinel_SendEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SendEventsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SendEventsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/createinboundsmsgroup:
    post:
      tags:
      - SmsApi
      description: "Create/Record a InboundSmsGroup defined by CreateInboundSmsGroupReq
        message.\n The method will return a CreateInboundSmsGroupRes message that
        will\n contain the newly created values of the inbound_sms_group_id\n Required
        permissions: VIEW_SMS"
      operationId: SmsApi_CreateInboundSmsGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateInboundSmsGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateInboundSmsGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/createinboundsmstemplate:
    post:
      tags:
      - SmsApi
      description: "Create/Record a InboundSmsTemplate defined by CreateInboundSmsTemplateReq
        message.\n The method will return a CreateInboundSmsTemplateRes message that
        will\n contain the newly created values of the inbound_sms_template_id\n Required
        permissions: VIEW_SMS"
      operationId: SmsApi_CreateInboundSmsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateInboundSmsTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateInboundSmsTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/createsmsconversation:
    post:
      tags:
      - SmsApi
      description: "Create/Record a SmsConversation defined by CreateSmsConversationReq
        message.\n The method will return a CreateSmsConversationRes message that
        will\n contain the newly created values of the sms_conversation_id\n Required
        permissions: VIEW_SMS"
      operationId: SmsApi_CreateSmsConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateSmsConversationReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateSmsConversationRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/createsmsconversationassignedagent:
    post:
      tags:
      - SmsApi
      description: "Create/Record a SmsConversationAssignedAgent defined by SmsConversationAssignedAgent
        message.\n The method will return a CreateSmsConversationAssignedAgentRes
        message with true or false\n Required permissions: VIEW_SMS"
      operationId: SmsApi_CreateSmsConversationAssignedAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SmsConversationAssignedAgent'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateSmsConversationAssignedAgentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/createsmsconversationaudit:
    post:
      tags:
      - SmsApi
      description: "Create/Record a SmsConversationAudit defined by SmsConversationAudit
        message.\n The method will return a CreateSmsConversationAuditRes message
        that will\n contain the newly created values of the sms_conversation_audit_id\n
        Required permissions: VIEW_SMS"
      operationId: SmsApi_CreateSmsConversationAudit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SmsConversationAudit'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateSmsConversationAuditRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/createsmsintenttemplate:
    post:
      tags:
      - SmsApi
      description: "Create/Record a SmsIntentTemplate defined by SmsIntentTemplate
        message.\n The method will return a CreateSmsIntentTemplateRes message that
        will\n contain the newly created values of the sms_intent_template_sid\n Required
        permissions: VIEW_SMS"
      operationId: SmsApi_CreateSmsIntentTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SmsIntentTemplate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateSmsIntentTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/createsmssourcenumber:
    post:
      tags:
      - SmsApi
      description: "Create/Record a SmsSourceNumber defined by CreateSmsSourceNumberReq
        message.\n The method will return a CreateSmsSourceNumberRes message that
        will\n contain the newly created values of the sms_number_id\n Required permissions:
        VIEW_SMS"
      operationId: SmsApi_CreateSmsSourceNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateSmsSourceNumberReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateSmsSourceNumberRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/createsmstemplate:
    post:
      tags:
      - SmsApi
      description: "Create/Record a SmsTemplate defined by CreateSmsTemplateReq message.\n
        The method will return a CreateSmsTemplateRes message that will\n contain
        the newly created values of the sms_template_id\n Required permissions: VIEW_SMS"
      operationId: SmsApi_CreateSmsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateSmsTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateSmsTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/deleteinboundsmsgroup:
    post:
      tags:
      - SmsApi
      description: "Delete a InboundSmsGroup defined by DeleteInboundSmsGroupReq message
        for\n the specified inbound_sms_group_id, region_id and org_id\n The method
        will return a DeleteInboundSmsGroupRes message with true or false .\n Required
        permissions: VIEW_SMS"
      operationId: SmsApi_DeleteInboundSmsGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteInboundSmsGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteInboundSmsGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/deleteinboundsmstemplate:
    post:
      tags:
      - SmsApi
      description: "Delete a InboundSmsTemplate defined by DeleteInboundSmsTemplateReq
        message for\n the specified inbound_sms_template_id, region_id and org_id\n
        The method will return a DeleteInboundSmsTemplateRes message with true or
        false .\n Required permissions: VIEW_SMS"
      operationId: SmsApi_DeleteInboundSmsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteInboundSmsTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteInboundSmsTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/deletesmsconversation:
    post:
      tags:
      - SmsApi
      description: "Delete a SmsConversation defined by DeleteSmsConversationReq message
        for\n the specified sms_conversation_id, region_id and org_id\n The method
        will return a DeleteSmsConversationRes message with true or false .\n Required
        permissions: VIEW_SMS"
      operationId: SmsApi_DeleteSmsConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteSmsConversationReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteSmsConversationRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/deletesmsintenttemplate:
    post:
      tags:
      - SmsApi
      description: "Delete a SmsIntentTemplate defined by DeleteSmsIntentTemplateReq
        message for\n the specified sms_intent_template_id\n The method will return
        a DeleteSmsIntentTemplateRes message with true or false .\n Required permissions:
        VIEW_SMS"
      operationId: SmsApi_DeleteSmsIntentTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteSmsIntentTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteSmsIntentTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/deletesmssourcenumber:
    post:
      tags:
      - SmsApi
      description: "Delete a SmsSourceNumber defined by DeleteSmsSourceNumberReq message
        for\n the specified sms_number_id\n The method will return a DeleteSmsSourceNumberRes
        message with true or false .\n Required permissions: VIEW_SMS"
      operationId: SmsApi_DeleteSmsSourceNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteSmsSourceNumberReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteSmsSourceNumberRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/deletesmstemplate:
    post:
      tags:
      - SmsApi
      description: "Delete a SmsTemplate defined by DeleteSmsTemplateReq message for\n
        the specified sms_template_id\n The method will return a DeleteSmsTemplateRes
        message with true or false .\n Required permissions: VIEW_SMS"
      operationId: SmsApi_DeleteSmsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteSmsTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteSmsTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/getinboundsmsgroupbyid:
    post:
      tags:
      - SmsApi
      description: "Gets an InboundSms group defined by GetInboundSmsGroupByIdReq
        message for the specified\n inbound_sms_group_id, region_id and org_id.\n
        The method will return a InboundSms group.\n Required permissions: VIEW_SMS"
      operationId: SmsApi_GetInboundSmsGroupById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetInboundSmsGroupByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetInboundSmsGroupByIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/getinboundsmstemplatebyid:
    post:
      tags:
      - SmsApi
      description: "Gets an InboundSmsTemplate group defined by GetInboundSmsTemplateByIdReq
        message for the specified\n inbound_sms_template_id, region_id and org_id.\n
        The method will return a InboundTemplate group.\n Required permissions: VIEW_SMS"
      operationId: SmsApi_GetInboundSmsTemplateById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetInboundSmsTemplateByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetInboundSmsTemplateByIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/getsmsconversationassignedagentbyid:
    post:
      tags:
      - SmsApi
      description: "Gets a SmsConversationAssignedAgent defined by GetSmsConversationAssignedAgentByIdReq
        message for the specified\n conversation_id & assigned_agent_id\n The method
        will return a SmsConversationAssignedAgent.\n Required permissions: VIEW_SMS"
      operationId: SmsApi_GetSmsConversationAssignedAgentById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSmsConversationAssignedAgentByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetSmsConversationAssignedAgentByIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/getsmsconversationauditbyid:
    post:
      tags:
      - SmsApi
      description: "Gets a SmsConversationAudit defined by GetSmsConversationAuditByIdReq
        message for the specified\n sms_conversation_audit_id.\n The method will return
        a SmsConversationAudit.\n Required permissions: VIEW_SMS"
      operationId: SmsApi_GetSmsConversationAuditById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSmsConversationAuditByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetSmsConversationAuditByIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/getsmsconversationbyid:
    post:
      tags:
      - SmsApi
      description: "Gets a SmsConversation defined by GetSmsConversationByIdReq message
        for the specified\n sms_conversation_id, region_id and org_id.\n The method
        will return a SmsConversation.\n Required permissions: VIEW_SMS"
      operationId: SmsApi_GetSmsConversationById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSmsConversationByIdReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetSmsConversationByIdRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/getsmsintenttemplatebysid:
    post:
      tags:
      - SmsApi
      description: "Gets an SmsIntentTemplate group defined by GetSmsIntentTemplateBySidReq
        message for the specified\n sms_intent_template_sid.\n The method will return
        a SmsIntentTemplate group.\n Required permissions: VIEW_SMS"
      operationId: SmsApi_GetSmsIntentTemplateBySid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSmsIntentTemplateBySidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SmsIntentTemplate'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/getsmsmessage:
    post:
      tags:
      - SmsApi
      description: "Gets SmsMessage defined by GetSmsMessageReq message for the specified\n
        sms_message_sid.\n The method will return a SmsMessage.\n Required permissions:
        VIEW_SMS"
      operationId: SmsApi_GetSmsMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSmsMessageReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetSmsMessageRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/getsmssourcenumberbysid:
    post:
      tags:
      - SmsApi
      description: "get sms source number for the particular sid\n Gets an SmsSource
        Number defined by GetSmsSourceNumberBySidReq message for the specified\n sms_number_sid.\n
        The method will return a SmsNumbers group.\n Required permissions: VIEW_SMS"
      operationId: SmsApi_GetSmsSourceNumberBySid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSmsSourceNumberBySidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SmsNumbers'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/getsmstemplatebysid:
    post:
      tags:
      - SmsApi
      description: "Gets an SmsTemplate defined by GetSmsTemplateBySidReq message
        for the specified\n sms_template_sid.\n The method will return a SmsTemplate
        group.\n Required permissions: VIEW_SMS"
      operationId: SmsApi_GetSmsTemplateBySid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetSmsTemplateBySidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetSmsTemplateBySidRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listactiveinboundsmsgroups:
    post:
      tags:
      - SmsApi
      description: "List Active InboundSmsGroup  defined by ListActiveInboundSmsGroupsReq
        message.\n Gets active Inbound sms group specified according to the filters.\n
        The method will return a stream of ListActiveInboundSmsGroupsRes messages\n
        containing InboundSmsGroup, and SMSIntent\n belonging to the inbound smsgroup.\n
        Required permissions: VIEW_SMS"
      operationId: SmsApi_ListActiveInboundSmsGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListActiveInboundSmsGroupsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListActiveInboundSmsGroupsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listinboundsmsgroupbyfilters:
    post:
      tags:
      - SmsApi
      description: "List InboundSmsGroup  defined by InboundSmsGroupByFiltersReq message.\n
        Gets all of the Inbound sms group specified according to the filters.\n The
        method will return a stream of InboundSmsGroupByFiltersRes messages\n containing
        InboundSmsGroup, and SMSIntent\n belonging to the inbound smsgroup.\n Required
        permissions: VIEW_SMS"
      operationId: SmsApi_ListInboundSmsGroupByFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListInboundSmsGroupByFiltersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListInboundSmsGroupByFiltersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listinboundsmsgroupbygroupids:
    post:
      tags:
      - SmsApi
      description: "List InboundSmsGroup  defined by ListInboundSmsGroupsByGroupIdsReq
        message.\n Gets all of the Inbound sms group specified for the groupids array.\n
        The method will return a stream of ListInboundSmsGroupsByGroupIdsRes messages\n
        containing InboundSmsGroup, and SMSIntent\n belonging to the inbound smsgroup.\n
        Required permissions: VIEW_SMS"
      operationId: SmsApi_ListInboundSmsGroupsByGroupIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListInboundSmsGroupsByGroupIdsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListInboundSmsGroupsByGroupIdsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listinboundsmsgroups:
    post:
      tags:
      - SmsApi
      description: "List InboundSmsGroup  defined by ListInboundSmsGroupsReq message.\n
        Gets all of the Inbound sms group specified according to the filters.\n The
        method will return a stream of ListInboundSmsGroupsRes messages\n containing
        InboundSmsGroup, and SMSIntent\n belonging to the inbound smsgroup.\n Required
        permissions: VIEW_SMS"
      operationId: SmsApi_ListInboundSmsGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListInboundSmsGroupsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListInboundSmsGroupsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listinboundsmstasksbygroupids:
    post:
      tags:
      - SmsApi
      description: "List InboundSmsTasks defined by ListInboundSmsTasksByGroupIdsReq
        message.\n Gets all of the Inbound sms tasks for the groupids.\n The method
        will return a stream of ListInboundSmsTasksByGroupIdsRes messages\n containing
        InboundSmsTask\n belonging to the inbound smsgroup.\n Required permissions:
        VIEW_SMS"
      operationId: SmsApi_ListInboundSmsTasksByGroupIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListInboundSmsTasksByGroupIdsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListInboundSmsTasksByGroupIdsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listinboundsmstemplates:
    post:
      tags:
      - SmsApi
      description: "List InboundSmsTemplate  defined by ListInboundSmsTemplatesReq
        message.\n Gets all of the Inbound sms template specified according to the
        filters.\n The method will return a stream of ListInboundSmsTemplatesRes messages\n
        containing InboundSmsTemplate, and SMSIntent\n belonging to the inbound smstemplate.\n
        Required permissions: VIEW_SMS"
      operationId: SmsApi_ListInboundSmsTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListInboundSmsTemplatesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListInboundSmsTemplatesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmsconversationassignedagents:
    post:
      tags:
      - SmsApi
      description: "List SmsConversationAssignedAgent profiles defined by ListSmsConversationAssignedAgentsReq
        message.\n Gets all of the values for sms conversations id.\n The method will
        return a stream of ListSmsConversationAssignedAgentsRes messages\n containing
        Assigned AgentId, Primary Agent, and Notiify\n belonging to the smsconversationassignedagent.\n
        Required permissions: VIEW_SMS"
      operationId: SmsApi_ListSmsConversationAssignedAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsConversationAssignedAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsConversationAssignedAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmsconversations:
    post:
      tags:
      - SmsApi
      description: "List SmsConversation profiles defined by ListSmsConversationsReq
        message.\n Gets all of the unique sms conversations.\n The method will return
        a stream of ListSmsConversationsRes messages\n containing InboundSmsGroupId,
        and SmsTaskParent\n belonging to the smsconversations.\n Required permissions:
        VIEW_SMS"
      operationId: SmsApi_ListSmsConversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsConversationsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsConversationsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmsconversationsaudit:
    post:
      tags:
      - SmsApi
      description: "List SmsConversationAudit profiles defined by ListSmsConversationAuditsReq
        message.\n Gets all of the values for sms conversations id.\n The method will
        return a stream of ListSmsConversationAuditsRes messages\n containing SmsTaskSid,
        SmsReceivedReplySid and AgentId\n belonging to the smsconversationsaudit.\n
        Required permissions: VIEW_SMS"
      operationId: SmsApi_ListSmsConversationAudits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsConversationAuditsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsConversationAuditsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmsgroupbyfilters:
    post:
      tags:
      - SmsApi
      description: "List Sms Group defined by ListSmsGroupByFiltersReq message.\n
        Gets all details belong to the clientsid  with filters\n The method will return
        a stream of ListSmsGroupByFiltersRes messages\n containing SmsGroup Info and
        SMSIntent\n Required permissions: VIEW_SMS"
      operationId: SmsApi_ListSmsGroupByFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsGroupByFiltersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsGroupByFiltersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmsgroupbyfiltersforaudit:
    post:
      tags:
      - SmsApi
      description: "List Sms Group defined by ListSmsGroupByFiltersReq message.\n
        Gets all details belong to the owner path with filters for audit\n The method
        will return a stream of ListSmsGroupByFiltersRes messages\n containing SmsGroup
        Info and SMSIntent\n Required permissions: VIEW_SMS"
      operationId: SmsApi_ListSmsGroupByFiltersForAudit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsGroupByFiltersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsGroupByFiltersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmsgroupsbygroupsids:
    post:
      tags:
      - SmsApi
      description: "List Sms Group defined by ListSmsGroupsByGroupSidsReq message.\n
        Gets all details for the array of group sids\n The method will return a stream
        of ListSmsGroupsByGroupSidsRes messages\n containing SmsGroup Info and SMSIntent\n
        Required permissions: VIEW_SMS"
      operationId: SmsApi_ListSmsGroupsByGroupSids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsGroupsByGroupSidsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsGroupsByGroupSidsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmsgroupsbygroupsidsforaudit:
    post:
      tags:
      - SmsApi
      description: "List Sms Group defined by ListSmsGroupsByGroupSidsReq message.\n
        Gets all details for the array of group sids for audit\n The method will return
        a stream of ListSmsGroupsByGroupSidsRes messages\n containing SmsGroup Info
        and SMSIntent\n Required permissions: VIEW_SMS"
      operationId: SmsApi_ListSmsGroupsByGroupSidsForAudit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsGroupsByGroupSidsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsGroupsByGroupSidsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmsintenttemplates:
    post:
      tags:
      - SmsApi
      description: "List Sms IntentTemplates  defined by ListSmsIntentTemplatesReq
        message.\n Gets all details belong to the clientsid\n The method will return
        a stream of ListSmsIntentTemplatesRes messages\n containing ActionKey, ActionDetails,
        ActionTriggers, ActionPriority\n Required permissions: VIEW_SMS"
      operationId: SmsApi_ListSmsIntentTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsIntentTemplatesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsIntentTemplatesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmssourcenumbers:
    post:
      tags:
      - SmsApi
      description: "List Sms SourceNumbers  defined by ListSmsSourceNumbersReq message.\n
        Gets all source numbers belong to the clientsid\n The method will return a
        stream of ListSmsSourceNumbersRes messages\n containing providername, providertype\n
        Required permissions: VIEW_SMS"
      operationId: SmsApi_ListSmsSourceNumbers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsSourceNumbersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsSourceNumbersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmstasksbygroupsids:
    post:
      tags:
      - SmsApi
      description: "List Sms Task  defined by ListSmsTasksByGroupSidsReq message.\n
        Gets all details for the array of group sids\n The method will return a stream
        of ListSmsTasksByGroupSidsRes messages\n containing delivery status, msg_time,
        cost\n belonging to the smsgroup.\n Required permissions: VIEW_SMS"
      operationId: SmsApi_ListSmsTasksByGroupSids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsTasksByGroupSidsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsTasksByGroupSidsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmstasksbygroupsidsforaudit:
    post:
      tags:
      - SmsApi
      description: "List Sms Task  defined by ListSmsTasksByGroupSidsReq message.\n
        Gets all details for the array of group sids for audit\n The method will return
        a stream of ListSmsTasksByGroupSidsRes messages\n containing delivery status,
        msg_time, cost\n belonging to the smsgroup.\n Required permissions: VIEW_SMS"
      operationId: SmsApi_ListSmsTasksByGroupSidsForAudit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsTasksByGroupSidsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsTasksByGroupSidsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmstaskswithdetailedstatus:
    post:
      tags:
      - SmsApi
      description: "List Sms Task  defined by ListSmsTasksWithDetailedStatusReq message.\n
        Gets all details for the specified sms group sid.\n The method will return
        a stream of ListSmsTasksWithDetailedStatusRes messages\n containing delivery
        status, msg_time, cost\n belonging to the smsgroup.\n Required permissions:
        VIEW_SMS"
      operationId: SmsApi_ListSmsTasksWithDetailedStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsTasksWithDetailedStatusReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsTasksWithDetailedStatusRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/listsmstemplates:
    post:
      tags:
      - SmsApi
      description: "List Sms Templates  defined by ListSmsTemplatesReq message.\n
        Gets all details belong to the clientsid\n The method will return a stream
        of ListSmsTemplatesRes messages\n containing SmsTemplates with SmsIntents\n
        Required permissions: VIEW_SMS"
      operationId: SmsApi_ListSmsTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsTemplatesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsTemplatesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/resendunconnectedsms:
    post:
      tags:
      - SmsApi
      description: "Re-Schedule Sms group defined by ResendUnconnectedSmsReq message
        for the specified\n sms_group_id and start/stop time.\n The method will return
        a Sms group.\n Required permissions: EXECUTE_SEND_BROADCAST"
      operationId: SmsApi_ResendUnconnectedSms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ResendUnconnectedSmsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ResendUnconnectedSmsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/scheduleinboundsms:
    post:
      tags:
      - SmsApi
      description: "Schedule InboundSms group defined by ScheduleInboundSmsReq message
        for the specified\n inbound_sms_template_id and sms_number_sid.\n The method
        will return a InboundSms group.\n Required permissions: EXECUTE_SEND_BROADCAST"
      operationId: SmsApi_ScheduleInboundSms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ScheduleInboundSmsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ScheduleInboundSmsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/schedulesms:
    post:
      tags:
      - SmsApi
      description: "Schedule Sms group defined by ScheduleSmsReq message for the specified\n
        sms_template_id with initialpace, sourcenumber, contactgroupsid\n The method
        will return a Sms group.\n Required permissions: EXECUTE_SEND_BROADCAST"
      operationId: SmsApi_ScheduleSms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ScheduleSmsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ScheduleSmsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/sendsmsnotification:
    post:
      tags:
      - SmsApi
      description: "Send sms notification defined by SendSmsNotificationReq message
        for the specified\n message and array of phone num.\n The method will return
        a stream of SendSmsNotificationRes messages\n containing result true/false
        after notified by sms for the client.\n Required permissions:\n      VIEW_SMS"
      operationId: SmsApi_SendSmsNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SendSmsNotificationReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SendSmsNotificationRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/smsactivitysearch:
    post:
      tags:
      - SmsApi
      description: "Search SMS activity defined by SmsActivitySearchReq message for\n
        any of the following filters:\n ClientSid, ToNumber and FromNumber, FromDate,
        ToDate, SentOnly\n The method will return the Sms Group with Sms Task & Sms
        Intent Info\n Required permissions: VIEW_SMS"
      operationId: SmsApi_SmsActivitySearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SmsActivitySearchReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SmsActivitySearchRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/stopallinboundsmsgroups:
    post:
      tags:
      - SmsApi
      description: "Stop all InboundSms groups defined by StopAllInboundSmsGroupsReq
        message for the specified\n array of inbound groups, region_id and org_id.\n
        The method will mark the InboundSms groups as completed.\n Required permissions:
        VIEW_SMS"
      operationId: SmsApi_StopAllInboundSmsGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.StopAllInboundSmsGroupsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.StopAllInboundSmsGroupsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/stopalloutboundsmsgroups:
    post:
      tags:
      - SmsApi
      description: "Stop all OutboundSms groups defined by StopAllOutboundSmsGroupsReq
        message for the specified\n array of outbound groups and client_sid.\n The
        method will mark the OutboundSms groups as completed.\n Required permissions:
        VIEW_SMS"
      operationId: SmsApi_StopAllOutboundSmsGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.StopAllOutboundSmsGroupsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.StopAllOutboundSmsGroupsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/stopinboundsmsgroup:
    post:
      tags:
      - SmsApi
      description: "Stop an InboundSms group defined by StopInboundSmsGroupReq message
        for the specified\n inbound_sms_group_id, region_id and org_id.\n The method
        will mark the InboundSms group completed.\n Required permissions: VIEW_SMS"
      operationId: SmsApi_StopInboundSmsGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.StopInboundSmsGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.StopInboundSmsGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/updateinboundsmsgroup:
    post:
      tags:
      - SmsApi
      description: "Update a InboundSmsGroup defined by UpdateInboundSmsGroupReq message
        for\n the specified sms_group_id, region_id and org_id\n will update the following\n
        inbound sms group fields:\n    TemplateId\n    SmsNumber\n The method will
        return a UpdateInboundSmsGroupRes message with true or false .\n Required
        permissions: VIEW_SMS"
      operationId: SmsApi_UpdateInboundSmsGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateInboundSmsGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateInboundSmsGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/updateinboundsmstemplate:
    post:
      tags:
      - SmsApi
      description: "Update a InboundSmsTemplate defined by UpdateInboundSmsTemplateReq
        message for\n the specified sms_template_id, region_id and org_id\n will update
        the following\n inbound sms template fields:\n    TemplateId\n    SmsTemplateIntentId\n
        The method will return a UpdateInboundSmsTemplateRes message with true or
        false .\n Required permissions: VIEW_SMS"
      operationId: SmsApi_UpdateInboundSmsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateInboundSmsTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateInboundSmsTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/updatesmsconversation:
    post:
      tags:
      - SmsApi
      description: "Update a SmsConversation defined by UpdateSmsConversationReq message
        for\n the specified sms_conversation_id, region_id and org_id\n will update
        the following\n conversation fields:\n    InboundSmsGroupId\n    SmsTaskParent\n
        The method will return a UpdateSmsConversationRes message with true or false
        .\n Required permissions: VIEW_SMS"
      operationId: SmsApi_UpdateSmsConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateSmsConversationReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateSmsConversationRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/updatesmsgroupscheduletimes:
    post:
      tags:
      - SmsApi
      description: "Update the Scheduled Sms group defined by SmsGroupInfo message
        for the specified\n schedule_time\n The method will return a UpdateSmsGroupRes
        message with true or false .\n Required permissions: EXECUTE_SEND_BROADCAST"
      operationId: SmsApi_UpdateSmsGroupScheduleTimes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SmsGroupInfo'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateSmsGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/updatesmsgroupsendsperminute:
    post:
      tags:
      - SmsApi
      description: "Update the Scheduled Sms group defined by SmsGroupInfo message
        for the specified\n pacing\n The method will return a UpdateSmsGroupRes message
        with true or false .\n Required permissions: EXECUTE_SEND_BROADCAST"
      operationId: SmsApi_UpdateSmsGroupSendsPerMinute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SmsGroupInfo'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateSmsGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/updatesmsgroupstatus:
    post:
      tags:
      - SmsApi
      description: "Update the Scheduled Sms group defined by SmsGroupInfo message
        for the specified\n paused/unpaused/cancel status\n The method will return
        a UpdateSmsGroupRes message with true or false .\n Required permissions: EXECUTE_SEND_BROADCAST"
      operationId: SmsApi_UpdateSmsGroupStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SmsGroupInfo'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateSmsGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/updatesmsintenttemplate:
    post:
      tags:
      - SmsApi
      description: "Update a SmsIntentTemplate defined by SmsIntentTemplate message
        for\n the specified sms_intent_template_sid\n will update the following\n
        sms intent template fields:\n    ActionKey\n    ActionDetails\n    ActionTrigger\n
        The method will return a UpdateSmsIntentTemplateRes message with true or false
        .\n Required permissions: VIEW_SMS"
      operationId: SmsApi_UpdateSmsIntentTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SmsIntentTemplate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateSmsIntentTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/updatesmssourcenumber:
    post:
      tags:
      - SmsApi
      description: "Update a SmsSourceNumber defined by UpdateSmsSourceNumberReq message
        for\n the specified sms_number_sid\n will update the following\n sms number
        fields:\n    CountrySid\n    ProviderName\n    NumberType\n The method will
        return a UpdateSmsSourceNumberRes message with true or false .\n Required
        permissions: VIEW_SMS"
      operationId: SmsApi_UpdateSmsSourceNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateSmsSourceNumberReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateSmsSourceNumberRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/smsapi/updatesmstemplate:
    post:
      tags:
      - SmsApi
      description: "Update a SmsTemplate defined by UpdateSmsTemplateReq message for\n
        the specified sms_template_sid\n will update the following\n sms template
        fields:\n    MessageSid\n    SmsTemplateIntentSid\n The method will return
        a UpdateSmsTemplateRes message with true or false .\n Required permissions:
        VIEW_SMS"
      operationId: SmsApi_UpdateSmsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateSmsTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateSmsTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/deletegreeting:
    post:
      tags:
      - Vmds
      operationId: Vmds_DeleteGreeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteGreetingReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteGreetingRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/deletevoicemail:
    post:
      tags:
      - Vmds
      operationId: Vmds_DeleteVoicemail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteVoicemailReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteVoicemailRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/downloadgreeting:
    post:
      tags:
      - Vmds
      operationId: Vmds_DownloadGreeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DownloadGreetingReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DownloadGreetingRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/downloadgreetingforextension:
    post:
      tags:
      - Vmds
      operationId: Vmds_DownloadGreetingForExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DownloadGreetingForExtensionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DownloadGreetingForExtensionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/downloadmessage:
    post:
      tags:
      - Vmds
      operationId: Vmds_DownloadMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DownloadMessageReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DownloadMessageRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/downloadmessages:
    post:
      tags:
      - Vmds
      operationId: Vmds_DownloadMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DownloadMessagesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DownloadMessagesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/getuploadgreetingurl:
    post:
      tags:
      - Vmds
      operationId: Vmds_GetUploadGreetingUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetUploadGreetingUrlReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetUploadGreetingUrlRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/getvoicemailmessagecount:
    post:
      tags:
      - Vmds
      operationId: Vmds_GetVoicemailMessageCount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetVoicemailCountReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetVoicemailCountRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/getvoicemailmetadata:
    post:
      tags:
      - Vmds
      operationId: Vmds_GetVoicemailMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetVoicemailMetadataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetVoicemailMetadataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/listavailablegreetings:
    post:
      tags:
      - Vmds
      operationId: Vmds_ListAvailableGreetings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAvailableGreetingsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAvailableGreetingsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/processgreetingupload:
    post:
      tags:
      - Vmds
      operationId: Vmds_ProcessGreetingUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ProcessGreetingUploadReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ProcessGreetingUploadRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/updategreetingforextension:
    post:
      tags:
      - Vmds
      operationId: Vmds_UpdateGreetingForExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateGreetingForExtensionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateGreetingForExtensionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/updateuploadname:
    post:
      tags:
      - Vmds
      operationId: Vmds_UpdateUploadName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateUploadNameReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateUploadNameRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v0alpha/vmds/updatevoicemailflagread:
    post:
      tags:
      - Vmds
      operationId: Vmds_UpdateVoicemailFlagRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateVoicemailFlagReadReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateVoicemailFlagReadRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha/org/user/create:
    post:
      tags:
      - Org
      description: CreateUser creates a new user and enables it for the region it
        is getting created in.
      operationId: Org_CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha/wfm/listprogramnodesbysid:
    post:
      tags:
      - WFM
      description: "Lists the program nodes with the given @program_node_sids for
        the org sending the request.\n Errors:\n   - grpc.Invalid: the given @program_node_sids
        are invalid.\n   - grpc.Internal: error occurs when listing the program nodes."
      operationId: WFM_ListProgramNodesBySid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListProgramNodesBySidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListProgramNodesBySidRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha/wfm/updateplacementrule:
    post:
      tags:
      - WFM
      description: "Updates a placement rule corresponding with the given @placement_rule_sid
        for the org sending the request with the provided parameters.\n All of the
        entity's parameters that are not desired to be updated must be filled with
        their current values.\n The @schedule_scenario_sid must be the original for
        this placement rule since it cannot be changed.\n The @member fields will
        be ignored since those cannot be updated by this method and must be updated
        by their respective update methods.\n Errors:\n   - grpc.Invalid: the one
        or more of the fields in the @placement_rule are invalid.\n   - grpc.Internal:
        error occurs when updating the placement rule.\n   - grpc.NotFound: entry
        to be updated doesn't exist.\n                  : the parent shift template
        or related scheduling activity don't exist or belong to a different scenario
        than the placement rule to update."
      operationId: WFM_UpdatePlacementRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdatePlacementRuleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdatePlacementRuleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha/wfm/updateprogramnode:
    post:
      tags:
      - WFM
      description: "Updates a program node for the given @program_node_sid and org
        sending the request with the provided parameters.\n All of the entity's parameters
        that are not desired to be updated must be filled with their current values.\n
        The @schedule_scenario_sid must be the original for this program node since
        it cannot be changed.\n The @member fields will be ignored since those cannot
        be updated by this method and must be updated by their respective update methods.\n
        Errors:\n   - grpc.Invalid: one or more fields in the @program_node have invalid
        values.\n   - grpc.Internal: error occurs when updating the program node.\n
        \  - grpc.NotFound: entry to be updated doesn't exist, or the given parent
        @location_node_sid belongs to a different scenario than the program node to
        update.\n                    the @skill_profile_category does not exist."
      operationId: WFM_UpdateProgramNode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateProgramNodeReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateProgramNodeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agent/list:
    post:
      tags:
      - Org
      description: ListAgents returns a list of Agents.
      operationId: Org_ListAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListAgentsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListAgentsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agentsmith/agentsmith/followagent:
    post:
      tags:
      - AgentSmith
      description: "FollowAgent method find an agent identified by user_id or asm_session_id
        and return a stream of events\n associated with the current session of the
        user and long as the session lives regardless if the agent is\n using the
        omni interface or neo interface.\n When the agent is in a voice session one
        of the first messages received will be AgentVoiceStartEvent that\n contains
        a sip dial url that can be used to connect to the agent's voice session."
      operationId: AgentSmith_FollowAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.agentsmith.FollowAgentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.agentsmith.FollowAgentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agenttraining/agenttrainingservice/completeagentlearningopportunity:
    post:
      tags:
      - AgentTrainingService
      description: CompleteAgentLearningOpportunity completes an agent's learning
        opportunity.
      operationId: AgentTrainingService_CompleteAgentLearningOpportunity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.agenttraining.CompleteAgentLearningOpportunityRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.agenttraining.CompleteAgentLearningOpportunityResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agenttraining/agenttrainingservice/createlearningopportunity:
    post:
      tags:
      - AgentTrainingService
      description: CreateLearningOpportunity creates a new learning opportunity.
      operationId: AgentTrainingService_CreateLearningOpportunity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.agenttraining.CreateLearningOpportunityRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.agenttraining.CreateLearningOpportunityResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agenttraining/agenttrainingservice/deletelearningopportunity:
    post:
      tags:
      - AgentTrainingService
      description: DeleteLearningOpportunity deletes a learning opportunity.
      operationId: AgentTrainingService_DeleteLearningOpportunity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.agenttraining.DeleteLearningOpportunityRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.agenttraining.DeleteLearningOpportunityResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agenttraining/agenttrainingservice/getlearningopportunity:
    post:
      tags:
      - AgentTrainingService
      description: GetLearningOpportunity gets a learning opportunity.
      operationId: AgentTrainingService_GetLearningOpportunity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.agenttraining.GetLearningOpportunityRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.agenttraining.GetLearningOpportunityResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agenttraining/agenttrainingservice/listagentlearningopportunities:
    post:
      tags:
      - AgentTrainingService
      description: ListAgentLearningOpportunities lists learning opportunities by
        agent.
      operationId: AgentTrainingService_ListAgentLearningOpportunities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.agenttraining.ListAgentLearningOpportunitiesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.agenttraining.ListAgentLearningOpportunitiesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agenttraining/agenttrainingservice/listdashboards:
    post:
      tags:
      - AgentTrainingService
      description: ListDashboards lists dashboards.
      operationId: AgentTrainingService_ListDashboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.agenttraining.ListDashboardsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.agenttraining.ListDashboardsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agenttraining/agenttrainingservice/listlearningopportunities:
    post:
      tags:
      - AgentTrainingService
      description: ListLearningOpportunities lists learning opportunities.
      operationId: AgentTrainingService_ListLearningOpportunities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.agenttraining.ListLearningOpportunitiesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.agenttraining.ListLearningOpportunitiesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agenttraining/agenttrainingservice/listmanagerdashboards:
    post:
      tags:
      - AgentTrainingService
      description: ListManagerDashboards lists manager dashboards.
      operationId: AgentTrainingService_ListManagerDashboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.agenttraining.ListDashboardsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.agenttraining.ListDashboardsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agenttraining/agenttrainingservice/updatelearningopportunity:
    post:
      tags:
      - AgentTrainingService
      description: UpdateLearningOpportunity updates a learning opportunity.
      operationId: AgentTrainingService_UpdateLearningOpportunity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.agenttraining.UpdateLearningOpportunityRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.agenttraining.UpdateLearningOpportunityResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agenttraining/agenttrainingsupportservice/deletelearningopportunitybyorgid:
    post:
      tags:
      - AgentTrainingSupportService
      description: DeleteLearningOpportunityByOrgId deletes a learning opportunity
        in a specific org.
      operationId: AgentTrainingSupportService_DeleteLearningOpportunityByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.agenttraining.DeleteLearningOpportunityByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.agenttraining.DeleteLearningOpportunityResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/agenttraining/agenttrainingsupportservice/listlearningopportunitiesbyorgid:
    post:
      tags:
      - AgentTrainingSupportService
      description: ListLearningOpportunitiesByOrgId lists learning opportunities for
        a specific org.
      operationId: AgentTrainingSupportService_ListLearningOpportunitiesByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.agenttraining.ListLearningOpportunitiesByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.agenttraining.ListLearningOpportunitiesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/assignnewconversation:
    post:
      tags:
      - Asm
      description: Assign agent to matched conversation based on skills and channelTypes
        requested
      operationId: Asm_AssignNewConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.AssignNewConversationReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.AssignNewConversationRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/createsession:
    post:
      tags:
      - Asm
      description: Creates an agent session and enables the voice channel
      operationId: Asm_CreateSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.CreateSessionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.CreateSessionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/disablevoice:
    post:
      tags:
      - Asm
      operationId: Asm_DisableVoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.DisableVoiceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.DisableVoiceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/enablevoice:
    post:
      tags:
      - Asm
      description: Updates the currently active subsession
      operationId: Asm_EnableVoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.EnableVoiceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.EnableVoiceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/endsession:
    post:
      tags:
      - Asm
      description: Closes an asm session and all sub sessions
      operationId: Asm_EndSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.EndSessionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.EndSessionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/getcurrentsession:
    post:
      tags:
      - Asm
      description: Gets an agent's current asm session
      operationId: Asm_GetCurrentSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.GetCurrentSessionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.AsmSession'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/getqueuesdetails:
    post:
      tags:
      - Asm
      description: Set queue details
      operationId: Asm_GetQueuesDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.GetQueuesDetailsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.GetQueuesDetailsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/listagents:
    post:
      tags:
      - Asm
      description: List all agents for the given user. Contains statistical enrichments
        for each agent and their conversations.
      operationId: Asm_ListAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.ListAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.ListAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/listconversations:
    post:
      tags:
      - Asm
      description: Lists the conversations for an assigned agent
      operationId: Asm_ListConversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.ListConversationsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.ListConversationsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/managerstreamagentstate:
    post:
      tags:
      - Asm
      description: Streams back statuses for the desired filter
      operationId: Asm_ManagerStreamAgentState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.ManagerStreamAgentStateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.ManagerStreamAgentStateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/pushevents:
    post:
      tags:
      - Asm
      operationId: Asm_PushEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.PushEventsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.PushEventsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/setconversationcollecteddata:
    post:
      tags:
      - Asm
      description: Set collected data per conversation
      operationId: Asm_SetConversationCollectedData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.SetConversationCollectedDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.SetConversationCollectedDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asm/streamagentstate:
    post:
      tags:
      - Asm
      description: "Streams back status updates for the given asm session\n only the
        asm session sid filter is allowed"
      operationId: Asm_StreamAgentState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.StreamAgentStateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.StreamAgentStateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asmapi/assignnewconversation:
    post:
      tags:
      - AsmApi
      description: Assign agent to matched conversation based on skills and channelTypes
        requested
      operationId: AsmApi_AssignNewConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.AssignNewConversationReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.AssignNewConversationRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asmapi/createsession:
    post:
      tags:
      - AsmApi
      description: Creates an agent session and enables the voice channel
      operationId: AsmApi_CreateSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.CreateSessionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.CreateSessionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asmapi/endsession:
    post:
      tags:
      - AsmApi
      description: Closes an asm session and all sub sessions
      operationId: AsmApi_EndSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.EndSessionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.EndSessionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asmapi/getcurrentsession:
    post:
      tags:
      - AsmApi
      description: Gets an agent's current asm session
      operationId: AsmApi_GetCurrentSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.GetCurrentSessionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.AsmSession'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asmapi/getqueuesdetails:
    post:
      tags:
      - AsmApi
      description: Set queue details
      operationId: AsmApi_GetQueuesDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.GetQueuesDetailsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.GetQueuesDetailsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asmapi/getstatus:
    post:
      tags:
      - AsmApi
      description: Returns an aggregate of the statuses of all channels
      operationId: AsmApi_GetStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.GetStatusReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.GetStatusRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asmapi/listagents:
    post:
      tags:
      - AsmApi
      description: List all agents for the given user. Contains statistical enrichments
        for each agent and their conversations.
      operationId: AsmApi_ListAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.ListAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.ListAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asmapi/listconversations:
    post:
      tags:
      - AsmApi
      description: Lists the conversations for an assigned agent
      operationId: AsmApi_ListConversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.ListConversationsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.ListConversationsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asmapi/setconversationcollecteddata:
    post:
      tags:
      - AsmApi
      description: Set collected data per conversation
      operationId: AsmApi_SetConversationCollectedData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.SetConversationCollectedDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.SetConversationCollectedDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/asm/asmapi/switchsubsession:
    post:
      tags:
      - AsmApi
      description: Updates the currently active subsession
      operationId: AsmApi_SwitchSubsession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.asm.SwitchSubsessionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.asm.SwitchSubsessionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/authtoken/CreateAuthToken:
    post:
      tags:
      - Org
      description: "AUTH TOKEN\n CreateAuthToken creates an auth token for the current
        user."
      operationId: Org_CreateAuthToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateAuthTokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateAuthTokenResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/authtoken/CreateAuthTokenByUserId:
    post:
      tags:
      - Org
      description: CreateAuthTokenByUserId creates an auth token for the given user.
      operationId: Org_CreateAuthTokenByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateAuthTokenByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateAuthTokenByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/authtoken/DeleteAuthToken:
    post:
      tags:
      - Org
      description: DeleteAuthToken deletes a given auth token for the current user.
      operationId: Org_DeleteAuthToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteAuthTokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteAuthTokenResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/authtoken/DeleteAuthTokenByUserId:
    post:
      tags:
      - Org
      description: DeleteAuthTokenByUserId deletes a given auth token for the given
        user.
      operationId: Org_DeleteAuthTokenByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteAuthTokenByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteAuthTokenByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/authtoken/ListAuthTokens:
    post:
      tags:
      - Org
      description: ListAuthTokens list tokens of current user.
      operationId: Org_ListAuthTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListAuthTokensRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListAuthTokensResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/authtoken/ListAuthTokensByUserId:
    post:
      tags:
      - Org
      description: ListAuthTokensByUserId list tokens of given user.
      operationId: Org_ListAuthTokensByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListAuthTokensByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListAuthTokensByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/authtoken/SetAuthTokenExpiration:
    post:
      tags:
      - Org
      description: SetAuthTokenExpiration sets expiration back one year for current
        user.
      operationId: Org_SetAuthTokenExpiration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.SetAuthTokenExpirationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.SetAuthTokenExpirationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/authtoken/SetAuthTokenExpirationByUserId:
    post:
      tags:
      - Org
      description: SetAuthTokenExpirationByUserId sets expiration back one year for
        given user.
      operationId: Org_SetAuthTokenExpirationByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.SetAuthTokenExpirationByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.SetAuthTokenExpirationByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/billing/exportgeneratedinvoice:
    post:
      tags:
      - Billing
      operationId: Billing_ExportGeneratedInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.billing.ExportGeneratedInvoiceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.billing.ExportGeneratedInvoiceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/billing/getbillingplan:
    post:
      tags:
      - Billing
      operationId: Billing_GetBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.billing.GetBillingPlanReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.billing.GetBillingPlanRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/billing/getinvoice:
    post:
      tags:
      - Billing
      operationId: Billing_GetInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.billing.GetInvoiceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.billing.GetInvoiceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/billing/updatebillingplan:
    post:
      tags:
      - Billing
      operationId: Billing_UpdateBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.billing.UpdateBillingPlanReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.billing.UpdateBillingPlanRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/clearmanualdialqueue:
    post:
      tags:
      - CallQueue
      description: Clears the manual dial return queue of the requesting agent.
      operationId: CallQueue_ClearManualDialQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.ClearManualDialQueueReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.ClearManualDialQueueRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/clearpreviewrecordreturnqueue:
    post:
      tags:
      - CallQueue
      description: Clears the preview record return queue for the requesting agent.
      operationId: CallQueue_ClearPreviewRecordReturnQueue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/dequeuecallformanualapproval:
    post:
      tags:
      - CallQueue
      description: "Dequeues a call for manual approval from the requesting agent's
        hunt group queues or a client queue,\n it also returns a field for the queue
        name so call can be enqueued back to the same queue."
      operationId: CallQueue_DequeueCallForManualApproval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.DequeueCallForManualApprovalReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.DequeueCallForManualApprovalRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/dequeuepreviewrecordorcall:
    post:
      tags:
      - CallQueue
      description: "Returns either a preview record or preview call from one of multiple
        queues,\n it also returns a field for the queue name so record/call can be
        enqueued back to the same queue.\n It checks for a record first, if no record
        is dequeued, then the preview call queues will be checked."
      operationId: CallQueue_DequeuePreviewRecordOrCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/dequeuescrubbedcallforpreviewrecord:
    post:
      tags:
      - CallQueue
      description: Returns the scrubbed simple call data for the given preview record.
      operationId: CallQueue_DequeueScrubbedCallForPreviewRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/dequeuesmsmamformanualapproval:
    post:
      tags:
      - CallQueue
      description: "Dequeues a sms mam msg for manual approval from the requesting
        agent's hunt group queues or a client queue,\n it also returns a field for
        the queue name so sms mam msg can be enqueued back to the same queue."
      operationId: CallQueue_DequeueSmsMamForManualApproval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/enqueuemanuallyapprovedcall:
    post:
      tags:
      - CallQueue
      description: Enqueues a call in the MAC approval queue.
      operationId: CallQueue_EnqueueManuallyApprovedCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/enqueuemanuallyapprovedsms:
    post:
      tags:
      - CallQueue
      description: Enqueues sms msg in the MAM approval queue.
      operationId: CallQueue_EnqueueManuallyApprovedSms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/enqueuemanuallyrejectedcall:
    post:
      tags:
      - CallQueue
      description: Enqueues a call in the MAC rejection queue.
      operationId: CallQueue_EnqueueManuallyRejectedCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/enqueuemanuallyrejectedsms:
    post:
      tags:
      - CallQueue
      description: Enqueues sms msg in the MAM rejection queue.
      operationId: CallQueue_EnqueueManuallyRejectedSms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/enqueuepreviewdialcall:
    post:
      tags:
      - CallQueue
      description: Enqueues the given preview dial call into the specified queue.
      operationId: CallQueue_EnqueuePreviewDialCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.EnqueuePreviewDialCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.EnqueuePreviewDialCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/enqueuepreviewrecord:
    post:
      tags:
      - CallQueue
      description: Enqueues the given preview record into the specified queue.
      operationId: CallQueue_EnqueuePreviewRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.EnqueuePreviewRecordReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.EnqueuePreviewRecordRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/processmanualdialcall:
    post:
      tags:
      - CallQueue
      description: "Enqueues the call to the manual dial receive queue for scrubbing.\n
        The call will then be added to the manual dial return queue of the requesting
        agent.\n The scrubbed call is then dequeued from that agent's manual dial
        return queue and returned."
      operationId: CallQueue_ProcessManualDialCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.ProcessManualDialCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.ProcessManualDialCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/requeuemanuallyapprovedcall:
    post:
      tags:
      - CallQueue
      description: Requeues a call requiring manual approval to the specified queue.
      operationId: CallQueue_RequeueManuallyApprovedCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/callqueue/callqueue/requeuemanuallyapprovedsms:
    post:
      tags:
      - CallQueue
      description: Requeues sms msg requiring manual approval to the specified queue.
      operationId: CallQueue_RequeueManuallyApprovedSms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/cfg/getwebagentconfig:
    post:
      tags:
      - Cfg
      description: Get the configuration for a given web agent.
      operationId: Cfg_GetWebAgentConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.cfg.GetWebAgentConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.cfg.WebAgent'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/classifier/file_templates/delete:
    delete:
      tags:
      - ClassifierFileTemplates
      operationId: ClassifierFileTemplates_DeleteFileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.classifier.DeleteFileTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.classifier.DeleteFileTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/classifier/file_templates/get:
    post:
      tags:
      - ClassifierFileTemplates
      operationId: ClassifierFileTemplates_GetFileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.classifier.GetFileTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.classifier.GetFileTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/classifier/file_templates/list:
    post:
      tags:
      - ClassifierFileTemplates
      operationId: ClassifierFileTemplates_ListFileTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.classifier.ListFileTemplatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.classifier.ListFileTemplatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/classifier/file_templates/parse:
    post:
      tags:
      - ClassifierFileTemplates
      operationId: ClassifierFileTemplates_ParseFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.classifier.ParseFileRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.classifier.ParseFileResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/classifier/file_templates/update:
    post:
      tags:
      - ClassifierFileTemplates
      operationId: ClassifierFileTemplates_UpdateFileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.classifier.UpdateFileTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.classifier.UpdateFileTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/contactmanager/contactmanager/addcontactentry:
    post:
      tags:
      - ContactManager
      description: '*

        Adds a new contact entry based on the provided request.'
      operationId: ContactManager_AddContactEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.contactmanager.AddContactEntryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.contactmanager.AddContactEntryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/contactmanager/contactmanager/editcontactentry:
    post:
      tags:
      - ContactManager
      description: '*

        Edits the fields of an existing contact entry...'
      operationId: ContactManager_EditContactEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.contactmanager.EditContactEntryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.contactmanager.EditContactEntryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/contactmanager/contactmanager/getcontactlist:
    post:
      tags:
      - ContactManager
      operationId: ContactManager_GetContactList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.contactmanager.GetContactListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.contactmanager.GetContactListResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/contactmanager/contactmanager/getenccontactentry:
    post:
      tags:
      - ContactManager
      operationId: ContactManager_GetEncContactEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.contactmanager.GetEncContactEntryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.contactmanager.GetEncContactEntryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/contactmanager/contactmanager/getkycenccontactentry:
    post:
      tags:
      - ContactManager
      operationId: ContactManager_GetKYCEncContactEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/contactmanager/contactmanager/getkyckeys:
    post:
      tags:
      - ContactManager
      operationId: ContactManager_GetKYCKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.contactmanager.GetKYCKeysRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.contactmanager.GetKYCKeysResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/contactmanager/contactmanager/listcontactentrylist:
    post:
      tags:
      - ContactManager
      operationId: ContactManager_ListContactEntryList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.contactmanager.ListContactEntryListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.contactmanager.ListContactEntryListResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/contactmanager/contactmanager/listcontactsbyentity:
    post:
      tags:
      - ContactManager
      description: '*

        List contacts for entity'
      operationId: ContactManager_ListContactsByEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.contactmanager.ListContactsByEntityRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.contactmanager.ListContactsByEntityResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delegateduser/create:
    post:
      tags:
      - Org
      description: CreateDelegatedUser creates a new delegated user and enables it
        for the region it is getting created in.
      operationId: Org_CreateDelegatedUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateDelegatedUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateDelegatedUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/createcredential:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_CreateCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.CreateCredentialReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.CreateCredentialRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/createdeliverydefinition:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_CreateDeliveryDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.CreateDeliveryDefinitionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.CreateDeliveryDefinitionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/createencryption:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_CreateEncryption
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.CreateEncryptionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.CreateEncryptionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/createtransferconfig:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_CreateTransferConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.CreateTransferConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.CreateTransferConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/deletecredential:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_DeleteCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.DeleteCredentialReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.DeleteCredentialRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/deletedeliverydefinition:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_DeleteDeliveryDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.DeleteDeliveryDefinitionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.DeleteDeliveryDefinitionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/deleteencryption:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_DeleteEncryption
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.DeleteEncryptionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.DeleteEncryptionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/deletetransferconfig:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_DeleteTransferConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.DeleteTransferConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.DeleteTransferConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/getcredential:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_GetCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.GetCredentialReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.GetCredentialRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/getdeliverydefinition:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_GetDeliveryDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.GetDeliveryDefinitionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.GetDeliveryDefinitionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/getdeliverydefinitionbyname:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_GetDeliveryDefinitionByName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.GetDeliveryDefinitionByNameReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.GetDeliveryDefinitionByNameRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/getencryption:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_GetEncryption
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.GetEncryptionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.GetEncryptionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/gettransferconfig:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_GetTransferConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.GetTransferConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.GetTransferConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/gettransferconfigbyname:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_GetTransferConfigByName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.GetTransferConfigByNameReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.GetTransferConfigByNameRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/listcredential:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_ListCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.ListCredentialsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.ListCredentialsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/listdeliverydefinitions:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_ListDeliveryDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.ListDeliveryDefinitionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.ListDeliveryDefinitionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/listdeliverydefinitionsbycredentialid:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_ListDeliveryDefinitionsByCredentialID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.ListDeliveryDefinitionsByCredentialIDReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.ListDeliveryDefinitionsByCredentialIDRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/listencryptions:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_ListEncryptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.ListEncryptionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.ListEncryptionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/listhistory:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_ListHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.ListHistoryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.ListHistoryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/listhistorybytransferconfig:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_ListHistoryByTransferConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.ListHistoryByTransferConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.ListHistoryByTransferConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/listsmsnumbers:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_ListSMSNumbers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.ListSMSNumbersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.ListSMSNumbersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/listtransferconfigs:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_ListTransferConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.ListTransferConfigsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.ListTransferConfigsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/listtransferconfigsbycredentialid:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_ListTransferConfigsByCredentialID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.ListTransferConfigsByCredentialIDReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.ListTransferConfigsByCredentialIDRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/updatecredential:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_UpdateCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.UpdateCredentialReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.UpdateCredentialRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/updatedeliverydefinition:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_UpdateDeliveryDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.UpdateDeliveryDefinitionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.UpdateDeliveryDefinitionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/updateencryption:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_UpdateEncryption
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.UpdateEncryptionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.UpdateEncryptionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/delivery/updatetransferconfig:
    post:
      tags:
      - DeliveryApi
      operationId: DeliveryApi_UpdateTransferConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.delivery.UpdateTransferConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.delivery.UpdateTransferConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/exile/station/finvi/v1/genericfinviservice/popaccount:
    post:
      tags:
      - GenericFinviService
      description: Displays a given record from a pool to the specified user.
      operationId: GenericFinviService_PopAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.exile.station.finvi.v1.PopAccountReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.exile.station.finvi.v1.PopAccountRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/explorer/explorer/listdatasourceschemas:
    post:
      tags:
      - ExplorerService
      description: ListDatasourceSchemas lists all accessible datasources and their
        schemas.
      operationId: ExplorerService_ListDatasourceSchemas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.explorer.ListDatasourceSchemasRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.explorer.ListDatasourceSchemasResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/explorer/explorer/query:
    post:
      tags:
      - ExplorerService
      description: Query queries a datasource.
      operationId: ExplorerService_Query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.explorer.QueryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.explorer.QueryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/fts/upload_url:
    post:
      tags:
      - FtsApi
      operationId: FtsApi_GetUploadFileUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.fts.GetUploadFileUrlReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.fts.GetUploadFileUrlRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/ghostnotifier/ghostnotifierapi/listnotifications:
    post:
      tags:
      - GhostNotifierApi
      description: Opens a server side stream that will forward and ghost notifications
        to the client for the given user
      operationId: GhostNotifierApi_ListNotifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.ghostnotifier.ListNotificationsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.GhostNotification'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/createcommonsinsight:
    post:
      tags:
      - Insights
      description: CreateCommonsInsight is deprecated.
      operationId: Insights_CreateCommonsInsight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.CreateInsightRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.CreateInsightResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/createinsight:
    post:
      tags:
      - Insights
      description: CreateInsight creates a new insight
      operationId: Insights_CreateInsight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.CreateInsightRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.CreateInsightResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/createoutputconfiguration:
    post:
      tags:
      - Insights
      description: CreateOutputConfiguration creates an output configuration
      operationId: Insights_CreateOutputConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.CreateOutputConfigurationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.CreateOutputConfigurationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/deletecommonsinsight:
    post:
      tags:
      - Insights
      description: DeleteCommonsInsight is deprecated.
      operationId: Insights_DeleteCommonsInsight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.DeleteInsightRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.DeleteInsightResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/deleteinsight:
    post:
      tags:
      - Insights
      description: DeleteInsight deletes a insight
      operationId: Insights_DeleteInsight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.DeleteInsightRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.DeleteInsightResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/deleteoutputconfiguration:
    post:
      tags:
      - Insights
      description: DeleteOutputConfiguration deletes an output configuration
      operationId: Insights_DeleteOutputConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.DeleteOutputConfigurationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.DeleteOutputConfigurationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/getdefaultoutputconfiguration:
    post:
      tags:
      - Insights
      description: GetDefaultOutputConfiguration gets the default output configuration
        for an insight
      operationId: Insights_GetDefaultOutputConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.GetDefaultOutputConfigurationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.GetDefaultOutputConfigurationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/getinsight:
    post:
      tags:
      - Insights
      description: GetInsight gets a insight by id
      operationId: Insights_GetInsight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.GetInsightRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.GetInsightResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/getoutputconfiguration:
    post:
      tags:
      - Insights
      description: GetOutputConfiguration gets an output configuration
      operationId: Insights_GetOutputConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.GetOutputConfigurationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.GetOutputConfigurationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/getvfsschema:
    post:
      tags:
      - Insights
      description: GetVfsSchema gets schema for a vfs
      operationId: Insights_GetVfsSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.GetVfsSchemaRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.GetVfsSchemaResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/listinsights:
    post:
      tags:
      - Insights
      description: ListInsights lists insights
      operationId: Insights_ListInsights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.ListInsightsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.ListInsightsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/listorginsights:
    post:
      tags:
      - Insights
      description: ListOrgInsights lists insights for an org. Used for support app.
      operationId: Insights_ListOrgInsights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.ListOrgInsightsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.ListOrgInsightsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/listoutputconfigurations:
    post:
      tags:
      - Insights
      description: ListOutputConfigurations lists output configurations for an insight
      operationId: Insights_ListOutputConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.ListOutputConfigurationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.ListOutputConfigurationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/listvfses:
    post:
      tags:
      - Insights
      description: ListVfses lists exported vfs aliases
      operationId: Insights_ListVfses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.ListVfsesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.ListVfsesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/listvfsschemas:
    post:
      tags:
      - Insights
      description: ListVfses lists exported vfs aliases
      operationId: Insights_ListVfsSchemas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.ListVfsSchemasRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.ListVfsSchemasResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/publishinsight:
    post:
      tags:
      - Insights
      description: PublishInsight publishes an insight
      operationId: Insights_PublishInsight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.PublishInsightRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.PublishInsightResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/setdefaultoutputconfiguration:
    post:
      tags:
      - Insights
      description: SetDefaultOutputConfiguration sets the specified output configuration
        to default
      operationId: Insights_SetDefaultOutputConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.SetDefaultOutputConfigurationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.SetDefaultOutputConfigurationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/updatecommonsinsight:
    post:
      tags:
      - Insights
      description: UpdateCommonsInsight is deprecated.
      operationId: Insights_UpdateCommonsInsight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.UpdateInsightRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.UpdateInsightResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/updateinsight:
    post:
      tags:
      - Insights
      description: UpdateInsight updates an existing insight
      operationId: Insights_UpdateInsight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.UpdateInsightRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.UpdateInsightResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/insights/insights/updateoutputconfiguration:
    post:
      tags:
      - Insights
      description: UpdateOutputConfiguration updates an output configuration
      operationId: Insights_UpdateOutputConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.insights.UpdateOutputConfigurationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.insights.UpdateOutputConfigurationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/callepicpatient:
    post:
      tags:
      - Integrations
      description: CallEpicPatient initiates a call to the specified number from the
        agent using the click to call button within epic
      operationId: Integrations_CallEpicPatient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.CallEpicPatientReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.CallEpicPatientRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/createintegrationconfig:
    post:
      tags:
      - Integrations
      description: create a integration config
      operationId: Integrations_CreateIntegrationConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.IntegrationConfig'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/createpaymentportallinks:
    post:
      tags:
      - Integrations
      description: "TODO deprecate. use CreatePortalLinks on the PortalManagerApi\n
        pulls the payment_link_config\n creates an integration config for each set
        of data, and generates a url for the specific user"
      operationId: Integrations_CreatePaymentPortalLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.CreatePaymentPortalLinksReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.CreatePaymentPortalLinksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/createportalconfig:
    post:
      tags:
      - Integrations
      description: "TODO all services looking for payment portal configs should be
        using the\n PortalManagerApi service in this same packages\n CLUDG for the
        payment portal configs"
      operationId: Integrations_CreatePortalConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfig'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/deleteintegrationconfig:
    post:
      tags:
      - Integrations
      description: delete an integration config
      operationId: Integrations_DeleteIntegrationConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.DeleteIntegrationConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/deleteportalconfig:
    post:
      tags:
      - Integrations
      description: "TODO better signature\n rpc DeletePortalConfig(DeletePortalConfigReq)
        returns (DeletePortalConfigRes);"
      operationId: Integrations_DeletePortalConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.DeletePortalConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/generateepickeypairs:
    post:
      tags:
      - Integrations
      description: GenerateEpicKeyPairs creates 2 key pairs, stores the private keys,
        and returns the public keys
      operationId: Integrations_GenerateEpicKeyPairs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GenerateEpicKeyPairReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.GenerateEpicKeyPairRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/getaggregatemetadata:
    post:
      tags:
      - Integrations
      description: GetAggregatedMetadata returns the aggregated metrics about the
        portal links for a specified date range
      operationId: Integrations_GetAggregatedMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetAggregatedMetadataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.GetAggregatedMetadataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/getintegrationconfig:
    post:
      tags:
      - Integrations
      description: get an integration config
      operationId: Integrations_GetIntegrationConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetIntegrationConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.IntegrationConfig'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/getintegrationtransaction:
    post:
      tags:
      - Integrations
      description: get an integration transaction
      operationId: Integrations_GetIntegrationTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetIntegrationTransactionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.IntegrationTransaction'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/getintegrationtransactionreport:
    post:
      tags:
      - Integrations
      operationId: Integrations_GetIntegrationTransactionReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetIntegrationTransactionReportReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.GetIntegrationTransactionReportRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/getintegrationtransactionreportdata:
    post:
      tags:
      - Integrations
      operationId: Integrations_GetIntegrationTransactionReportData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetIntegrationTransactionReportDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.GetIntegrationTransactionReportDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/getportalconfig:
    post:
      tags:
      - Integrations
      description: "TODO better signature\n rpc GetPortalConfig(GetPortalConfigReq)
        returns (GetPortalConfigRes);"
      operationId: Integrations_GetPortalConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetPortalConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfig'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/getportallinksbydaterange:
    post:
      tags:
      - Integrations
      description: GetPortalLinksByDateRange returns portal link metrics and portal
        linnk data for specific range
      operationId: Integrations_GetPortalLinksByDateRange
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetPortalLinksByDateRangeReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.GetPortalLinksByDateRangeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/getportallogo:
    post:
      tags:
      - Integrations
      description: TODO deprecate
      operationId: Integrations_GetPortalLogo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetPortalLogoReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.Logo'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/hangupepicpatientcall:
    post:
      tags:
      - Integrations
      description: CallEpicPatient initiates a call to the specified number from the
        agent using the click to call button within epic
      operationId: Integrations_HangUpEpicPatientCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.HangUpEpicPatientCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/integrationtemplatesbyconfig:
    post:
      tags:
      - Integrations
      description: Lists integration templates that use the passed in integration
        config
      operationId: Integrations_ListIntegrationTemplatesByConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListIntegrationTemplatesByConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListIntegrationTemplatesByConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/listallactiondefinitions:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_ListAllActionDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListAllActionDefinitionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListAllActionDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/listavailablePaymentfields:
    post:
      tags:
      - PortalManagerApi
      description: returns the default form fields for payment flow
      operationId: PortalManagerApi_ListAvailablePaymentFields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListAvailablePaymentFieldsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListAvailablePaymentFieldsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/listavailableverificationfields:
    post:
      tags:
      - PortalManagerApi
      description: returns the default form fields for verification flow
      operationId: PortalManagerApi_ListAvailableVerificationFields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListAvailableVerificationFieldsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListAvailableVerificationFieldsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/listintegrationconfignames:
    post:
      tags:
      - Integrations
      description: lists all the names of the configs for an org's integration type
      operationId: Integrations_ListIntegrationConfigNames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListIntegrationConfigNamesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListIntegrationConfigNamesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/listintegrations:
    post:
      tags:
      - Integrations
      description: list all supported integrations
      operationId: Integrations_ListIntegrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.Empty'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.IntegrationInfos'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/listintegrationsfororg:
    post:
      tags:
      - Integrations
      operationId: Integrations_ListIntegrationsForOrg
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListIntegrationsForOrgReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.IntegrationInfos'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/listjourneyconfigs:
    post:
      tags:
      - Integrations
      operationId: Integrations_ListJourneyConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListJourneyConfigsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.IntegrationConfigs'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/listnonjourneyconfigs:
    post:
      tags:
      - Integrations
      operationId: Integrations_ListNonJourneyConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListNonJourneyConfigsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.IntegrationConfigs'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/listportalconfigs:
    post:
      tags:
      - Integrations
      description: "TODO better signature\n rpc ListPortalConfigs(ListPortalConfigsReq)
        returns (ListPortalConfigsRes);"
      operationId: Integrations_ListPortalConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListPortalConfigsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfigs'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/listportaltypes:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_ListPortalTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListPortalTypesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListPortalTypesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/listportalworkflows:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_ListPortalWorkflows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListPortalWorkflowsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListPortalWorkflowsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/populateintegrationlink:
    post:
      tags:
      - Integrations
      operationId: Integrations_PopulateIntegrationLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.PopulateIntegrationLinkReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.PopulateIntegrationLinkRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/process:
    post:
      tags:
      - Integrations
      description: combine rquest parameters with the config parameters and run the
        integration method
      operationId: Integrations_Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ProcessReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ProcessRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/processworkflow:
    post:
      tags:
      - Integrations
      operationId: Integrations_ProcessWorkflow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ProcessWorkflowReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ProcessWorkflowRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/searchpasttransactions:
    post:
      tags:
      - Integrations
      operationId: Integrations_SearchPastTransactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.SearchPastTransactionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.SearchPastTransactionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/summary:
    post:
      tags:
      - Integrations
      description: takes a year in YYYY format and returns the summary of transaction
        for that year
      operationId: Integrations_Summary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.SummaryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.SummaryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/udpateintegrationconfig:
    post:
      tags:
      - Integrations
      description: update an integration config
      operationId: Integrations_UpdateIntegrationConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.UpdateIntegrationConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/updateportalconfig:
    post:
      tags:
      - Integrations
      operationId: Integrations_UpdatePortalConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfig'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrations/updateportallogo:
    post:
      tags:
      - Integrations
      description: TODO deprecate
      operationId: Integrations_UpdatePortalLogo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.UpdatePortalLogoReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.Empty'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrationspublic/getinvoice:
    post:
      tags:
      - IntegrationsPublic
      operationId: IntegrationsPublic_GetInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrationspublic.GetInvoiceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrationspublic.GetInvoiceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrationspublic/getlinkdata:
    post:
      tags:
      - IntegrationsPublic
      operationId: IntegrationsPublic_GetLinkData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrationspublic.GetLinkDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrationspublic.GetLinkDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrationspublic/getreceipt:
    post:
      tags:
      - IntegrationsPublic
      operationId: IntegrationsPublic_GetReceipt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrationspublic.GetReceiptReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrationspublic.GetReceiptRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrationspublic/processworkflow:
    post:
      tags:
      - IntegrationsPublic
      operationId: IntegrationsPublic_ProcessWorkflow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrationspublic.ProcessWorkflowReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrationspublic.ProcessWorkflowRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrationspublic/sessionkeepalive:
    post:
      tags:
      - IntegrationsPublic
      operationId: IntegrationsPublic_SessionKeepAlive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrationspublic.SessionKeepAliveReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrationspublic.SessionKeepAliveRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrationspublic/submitpayment:
    post:
      tags:
      - IntegrationsPublic
      operationId: IntegrationsPublic_SubmitPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrationspublic.SubmitPaymentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrationspublic.SubmitPaymentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/integrationspublic/submitverification:
    post:
      tags:
      - IntegrationsPublic
      operationId: IntegrationsPublic_SubmitVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrationspublic.SubmitVerificationReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrationspublic.SubmitVerificationRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/lms/deletefiletemplate:
    post:
      tags:
      - LMS
      operationId: LMS_DeleteFileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.lms.DeleteFileTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.lms.DeleteFileTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/lms/getfiletemplate:
    post:
      tags:
      - LMS
      operationId: LMS_GetFileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.lms.GetFileTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.lms.GetFileTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/lms/listfiletemplates:
    post:
      tags:
      - LMS
      operationId: LMS_ListFileTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.lms.ListFileTemplatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.lms.ListFileTemplatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/lms/parsefiletemplate:
    post:
      tags:
      - LMS
      operationId: LMS_ParseFileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.lms.ParseFileTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.lms.ParseFileTemplateResult'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/lms/updatefiletemplate:
    post:
      tags:
      - LMS
      operationId: LMS_UpdateFileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.lms.UpdateFileTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.lms.UpdateFileTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/newsroom/createnewsarticle:
    post:
      tags:
      - NewsroomAPI
      description: create news article
      operationId: NewsroomAPI_CreateNewsArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.newsroom.CreateNewsArticleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.newsroom.CreateNewsArticleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/newsroom/createpublishedarticle:
    post:
      tags:
      - NewsroomAPI
      description: create published article
      operationId: NewsroomAPI_CreatePublishedArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.newsroom.CreatePublishedArticleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.newsroom.CreatePublishedArticleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/newsroom/getnewsarticlebyid:
    post:
      tags:
      - NewsroomAPI
      description: get news article details by the id
      operationId: NewsroomAPI_GetNewsArticleById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.newsroom.GetNewsArticleByIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.newsroom.GetNewsArticleByIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/newsroom/getnewsforuser:
    post:
      tags:
      - NewsroomAPI
      description: fetch the unseen articles for the user
      operationId: NewsroomAPI_GetNewsForUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.newsroom.GetNewsForUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.newsroom.GetNewsForUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/newsroom/getpublishedarticlebyid:
    post:
      tags:
      - NewsroomAPI
      description: get published article details by the id
      operationId: NewsroomAPI_GetPublishedArticleById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.newsroom.GetPublishedArticleByIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.newsroom.GetPublishedArticleByIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/newsroom/listimagesfornewsarticle:
    post:
      tags:
      - NewsroomAPI
      description: list newsroom images
      operationId: NewsroomAPI_ListImagesForNewsArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.newsroom.ListImagesForNewsArticleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.newsroom.ListImagesForNewsArticleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/newsroom/listnewsarticles:
    post:
      tags:
      - NewsroomAPI
      description: list news articles
      operationId: NewsroomAPI_ListNewsArticles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.newsroom.ListNewsArticlesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.newsroom.ListNewsArticlesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/newsroom/listpublishedarticles:
    post:
      tags:
      - NewsroomAPI
      description: list published articles
      operationId: NewsroomAPI_ListPublishedArticles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.newsroom.ListPublishedArticlesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.newsroom.ListPublishedArticlesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/newsroom/storenewsarticleimage:
    post:
      tags:
      - NewsroomAPI
      description: upload newsroom image for the news article
      operationId: NewsroomAPI_StoreNewsArticleImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.newsroom.StoreNewsArticleImageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.newsroom.StoreNewsArticleImageResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/newsroom/updatenewsarticle:
    post:
      tags:
      - NewsroomAPI
      description: update news article
      operationId: NewsroomAPI_UpdateNewsArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.newsroom.UpdateNewsArticleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.newsroom.UpdateNewsArticleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/newsroom/uploadnewsarticleimage:
    post:
      tags:
      - NewsroomAPI
      description: upload newsroom image for the news article
      operationId: NewsroomAPI_UploadNewsArticleImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.newsroom.UploadNewsArticleImageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.newsroom.UploadNewsArticleImageResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/newsroom/useractivity:
    post:
      tags:
      - NewsroomAPI
      description: user activity updates
      operationId: NewsroomAPI_UserActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.newsroom.UserActivityRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.newsroom.UserActivityResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/agentProfileGroup/get:
    post:
      tags:
      - Org
      description: GetAgentProfileGroup returns an agent profile group by id
      operationId: Org_GetAgentProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/agentProfileGroup/list:
    post:
      tags:
      - Org
      description: ListAgentProfileGroups returns the agent profile groups associated
        with the current organization
      operationId: Org_ListAgentProfileGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListAgentProfileGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListAgentProfileGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/agentprofilegroup/assign:
    post:
      tags:
      - Org
      description: AssignAgentProfileGroups assigns a list of users to an AgentProfileGroup.
        Can only use if everything is in the same organization.
      operationId: Org_AssignAgentProfileGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AssignAgentProfileGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AssignAgentProfileGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/agentprofilegroup/create:
    post:
      tags:
      - Org
      description: CreateAgentProfileGroup creates an AgentProfileGroup. Can only
        create if user is in same org as AgentProfileGroup
      operationId: Org_CreateAgentProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/agentprofilegroup/delete:
    post:
      tags:
      - Org
      description: DeleteAgentProfileGroup deletes an AgentProfileGroup. Can only
        delete if user is in same org as AgentProfileGroup
      operationId: Org_DeleteAgentProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/agentprofilegroup/update:
    post:
      tags:
      - Org
      description: UpdateAgentProfileGroup updates an AgentProfileGroup. Can only
        update if user is in same org as AgentProfileGroup
      operationId: Org_UpdateAgentProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/archiveorganization:
    post:
      tags:
      - Org
      description: Archives an organization. An archived organization effectively
        disappears, but isn't deleted.
      operationId: Org_ArchiveOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ArchiveOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ArchiveOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/businesshours/addinterval:
    post:
      tags:
      - BusinessHoursService
      description: AddIntervalToBusinessHours adds a day interval to a business hours
        object
      operationId: BusinessHoursService_AddIntervalToBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.businesshours.AddIntervalToBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.businesshours.AddIntervalToBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/businesshours/delete:
    post:
      tags:
      - BusinessHoursService
      description: DeleteBusinessHours removes business hours.
      operationId: BusinessHoursService_DeleteBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.businesshours.DeleteBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.businesshours.DeleteBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/businesshours/evaluate:
    post:
      tags:
      - BusinessHoursService
      description: EvaluateBusinessHours determines whether or not the current time
        is within a business hours day interval
      operationId: BusinessHoursService_EvaluateBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.businesshours.EvaluateBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.businesshours.EvaluateBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/businesshours/get:
    post:
      tags:
      - BusinessHoursService
      description: GetBusinessHours returns the business hours for the ID.
      operationId: BusinessHoursService_GetBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.businesshours.GetBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.businesshours.GetBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/businesshours/list:
    post:
      tags:
      - BusinessHoursService
      description: ListBusinessHours returns all business hours for an Org.
      operationId: BusinessHoursService_ListBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.businesshours.ListBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.businesshours.ListBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/businesshours/removeinterval:
    post:
      tags:
      - BusinessHoursService
      description: RemoveIntervalFromBusinessHours removes a day interval from a business
        hours object
      operationId: BusinessHoursService_RemoveIntervalFromBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.businesshours.RemoveIntervalFromBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.businesshours.RemoveIntervalFromBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/businesshours/set:
    post:
      tags:
      - BusinessHoursService
      description: SetBusinessHours initializes a business hours object
      operationId: BusinessHoursService_SetBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.businesshours.SetBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.businesshours.SetBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/businesshours/updateinfo:
    post:
      tags:
      - BusinessHoursService
      description: UpdateBusinessHoursInfo updates the general info of a business
        hours object
      operationId: BusinessHoursService_UpdateBusinessHoursInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.businesshours.UpdateBusinessHoursInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.businesshours.UpdateBusinessHoursInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/compliance/list:
    post:
      tags:
      - P3Api
      description: List Schedule Rules
      operationId: P3Api_ListScheduleRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListScheduleRulesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListScheduleRulesResult'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/connection/create:
    post:
      tags:
      - AuthConnectionService
      description: CreateAuthConnection creates a new auth0 connection.
      operationId: AuthConnectionService_CreateAuthConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.authconnection.CreateAuthConnectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.authconnection.CreateAuthConnectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/connection/delete:
    post:
      tags:
      - AuthConnectionService
      description: DeleteAuthConnection removes the current orgs auth settings.
      operationId: AuthConnectionService_DeleteAuthConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.authconnection.DeleteAuthConnectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.authconnection.DeleteAuthConnectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/connection/get:
    post:
      tags:
      - AuthConnectionService
      description: GetAuthConnection gets an existing auth connection.
      operationId: AuthConnectionService_GetAuthConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.authconnection.GetAuthConnectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.authconnection.GetAuthConnectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/connection/getsettings:
    post:
      tags:
      - AuthConnectionService
      description: "GetAuthConnectionSettings gets auth connection settings.\n DEPRECATED:
        use GetAuthConnection"
      operationId: AuthConnectionService_GetAuthConnectionSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.authconnection.GetAuthConnectionSettingsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.authconnection.GetAuthConnectionSettingsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/connection/list:
    post:
      tags:
      - AuthConnectionService
      description: ListAuthConnectionIds returns the IDs of all authconnections belonging
        to the current org.
      operationId: AuthConnectionService_ListAuthConnectionIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.authconnection.ListAuthConnectionIdsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.authconnection.ListAuthConnectionIdsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/connection/update/groups:
    post:
      tags:
      - AuthConnectionService
      description: UpdateAuthConnectionGroups updates a connections groups.
      operationId: AuthConnectionService_UpdateAuthConnectionGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.authconnection.UpdateAuthConnectionGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.authconnection.UpdateAuthConnectionGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/connection/update/secret:
    post:
      tags:
      - AuthConnectionService
      description: UpdateAuthConnectionSecret updates a connections secret.
      operationId: AuthConnectionService_UpdateAuthConnectionSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.authconnection.UpdateAuthConnectionSecretRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.authconnection.UpdateAuthConnectionSecretResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/converttomanual:
    post:
      tags:
      - Org
      description: ConvertOrgToManual converts an organization to manual only by org
        id.
      operationId: Org_ConvertOrgToManual
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ConvertOrgToManualRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ConvertOrgToManualResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/create:
    post:
      tags:
      - Org
      description: "CreateOrganization creates a new organization entity and enables
        it for the\n region it is getting created in."
      operationId: Org_CreateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/createresponseevaluator:
    post:
      tags:
      - Org
      operationId: Org_CreateResponseEvaluator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateResponseEvaluatorRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateResponseEvaluatorResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/deleteresponseevaluator:
    post:
      tags:
      - Org
      operationId: Org_DeleteResponseEvaluator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteResponseEvaluatorRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteResponseEvaluatorResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/emailsmsacknowledgement/clear:
    post:
      tags:
      - Org
      description: "ClearEmailUnsubscribeAcknowledgement insert an activity log upon
        the client\n revoking their responsibility for email unsubscribe links."
      operationId: Org_ClearEmailUnsubscribeAcknowledgement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ClearEmailUnsubscribeAcknowledgementRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ClearEmailUnsubscribeAcknowledgementResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/emailsmsacknowledgement/record:
    post:
      tags:
      - Org
      description: "RecordEmailUnsubscribeAcknowledgement insert an activity log upon
        client\n acknowledgement of responsibility for their own email unsubscribe
        links."
      operationId: Org_RecordEmailUnsubscribeAcknowledgement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RecordEmailUnsubscribeAcknowledgementRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RecordEmailUnsubscribeAcknowledgementResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/get:
    post:
      tags:
      - Org
      description: GetOrganization returns a single organization.
      operationId: Org_GetOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/getById:
    post:
      tags:
      - Org
      description: GetOrganizationById returns a single organization by a given orgId.
      operationId: Org_GetOrganizationById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetOrganizationByIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetOrganizationByIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/getresponseevaluator:
    post:
      tags:
      - Org
      operationId: Org_GetResponseEvaluator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetResponseEvaluatorRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetResponseEvaluatorResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/getusersessiondata:
    post:
      tags:
      - Org
      description: GetUserSessionData returns data for the front end's session state
      operationId: Org_GetUserSessionData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetUserSessionDataRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetUserSessionDataResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/assignscripttohuntgroups:
    post:
      tags:
      - Org
      description: AssignScriptToHuntGroups assigns a script to the specified hunt
        groups
      operationId: Org_AssignScriptToHuntGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AssignScriptToHuntGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AssignScriptToHuntGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/copyagenttrigger:
    post:
      tags:
      - Org
      description: "CopyAgentTrigger copys an agent trigger to the given hunt group
        in the same org.\n DEPRECATED: Use services.org.hunt_groups.v1alpha1.CopyHuntGroupAgentTrigger
        instead"
      operationId: Org_CopyAgentTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CopyAgentTriggerRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CopyAgentTriggerResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/copydatadiptemplate:
    post:
      tags:
      - Org
      description: Copies a data dip template.
      operationId: Org_CopyDataDipTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CopyDataDipTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CopyDataDipTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/copydatadiptemplatetoorganization:
    post:
      tags:
      - Org
      description: Copies a data dip template to a different organization.
      operationId: Org_CopyDataDipTemplateToOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CopyDataDipTemplateToOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CopyDataDipTemplateToOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/copyhuntgroupclientinfodisplaytemplate:
    post:
      tags:
      - Org
      description: "CopyHuntGroupClientInfoDisplayTemplate copies the client info
        display template from one hunt group to another.\n It will create a new template
        in the destination hunt group with the same settings as the source template
        if it doesn't already exist.\n Otherwise, it will update the existing template
        with the source template settings."
      operationId: Org_CopyHuntGroupClientInfoDisplayTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CopyHuntGroupClientInfoDisplayTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CopyHuntGroupClientInfoDisplayTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/copyhuntgroupintegrationlink:
    post:
      tags:
      - Org
      description: "CopyHuntGroupIntegrationLink copies the integration link from
        one hunt group to another.\n It will create a new integration link in the
        destination hunt group with the same settings\n as the source integration
        link."
      operationId: Org_CopyHuntGroupIntegrationLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CopyHuntGroupIntegrationLinkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CopyHuntGroupIntegrationLinkResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/copyhuntgroupweblink:
    post:
      tags:
      - Org
      description: Copies a web link from one hunt group to another
      operationId: Org_CopyHuntGroupWebLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CopyHuntGroupWebLinkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CopyHuntGroupWebLinkResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/createagentresponseautorules:
    post:
      tags:
      - Org
      description: Creates a new Agent Call Response Automatically added compliance
        rule set.
      operationId: Org_CreateAgentResponseAutoRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateAgentResponseAutoRulesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateAgentResponseAutoRulesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/createcampaignclientinfodisplaytemplate:
    post:
      tags:
      - Org
      description: "CreateCampaignClientInfoDisplayTemplate creates a new client info
        display template for a campaign\n with the same settings as the source template
        from a hunt group."
      operationId: Org_CreateCampaignClientInfoDisplayTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateCampaignClientInfoDisplayTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateCampaignClientInfoDisplayTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/createdatadiptemplate:
    post:
      tags:
      - Org
      description: Saves a new data dip template.
      operationId: Org_CreateDataDipTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateDataDipTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateDataDipTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/createhuntgroup:
    post:
      tags:
      - Org
      description: "CreateHuntGroup is the RPC method for creating a hunt group.\n
        It will create a hunt group with the given general details."
      operationId: Org_CreateHuntGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateHuntGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateHuntGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/createhuntgroupclientinfodisplaytemplate:
    post:
      tags:
      - Org
      description: CreateHuntGroupClientInfoDisplayTemplate creates a new client info
        display template for a givne hunt group.
      operationId: Org_CreateHuntGroupClientInfoDisplayTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateHuntGroupClientInfoDisplayTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateHuntGroupClientInfoDisplayTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/createhuntgroupscript:
    post:
      tags:
      - Org
      description: CreateHuntGroupScript adds a creates a new hunt group script
      operationId: Org_CreateHuntGroupScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateHuntGroupScriptRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateHuntGroupScriptResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/deleteagentresponseautorules:
    post:
      tags:
      - Org
      description: Deletes an existing Agent Call Response Automatically added compliance
        rule set.
      operationId: Org_DeleteAgentResponseAutoRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteAgentResponseAutoRulesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteAgentResponseAutoRulesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/deletedatadiptemplate:
    post:
      tags:
      - Org
      description: Deletes a data dip template.
      operationId: Org_DeleteDataDipTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteDataDipTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteDataDipTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/deletehuntgroup:
    post:
      tags:
      - Org
      description: DeleteHuntGroup is the RPC method for deleting a hunt group.
      operationId: Org_DeleteHuntGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteHuntGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteHuntGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/deletehuntgroupclientinfodisplaytemplate:
    post:
      tags:
      - Org
      description: DeleteHuntGroupClientInfoDisplayTemplate deletes a client info
        display template for a given hunt group.
      operationId: Org_DeleteHuntGroupClientInfoDisplayTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteHuntGroupClientInfoDisplayTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteHuntGroupClientInfoDisplayTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/deletehuntgroupscript:
    post:
      tags:
      - Org
      description: DeleteHuntGroupScript deletes a hunt group script
      operationId: Org_DeleteHuntGroupScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteHuntGroupScriptRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteHuntGroupScriptResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/get:
    post:
      tags:
      - Org
      description: "GetHuntGroupSettings returns the field masked hunt group settings
        for the\n provided hunt group."
      operationId: Org_GetHuntGroupSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetHuntGroupSettingsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetHuntGroupSettingsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/getdatadiptemplate:
    post:
      tags:
      - Org
      description: Gets a single data dip template.
      operationId: Org_GetDataDipTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetDataDipTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetDataDipTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/gethuntgroupclientinfodisplaytemplate:
    post:
      tags:
      - Org
      description: GetHuntGroupClientInfoDisplayTemplate returns the client info display
        template for a given hunt group.
      operationId: Org_GetHuntGroupClientInfoDisplayTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetHuntGroupClientInfoDisplayTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetHuntGroupClientInfoDisplayTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/gethuntgroupdetails:
    post:
      tags:
      - Org
      description: GetHuntGroupDetails returns the hunt group details for the given
        hunt group.
      operationId: Org_GetHuntGroupDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetHuntGroupDetailsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetHuntGroupDetailsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/gethuntgroupscript:
    post:
      tags:
      - Org
      description: GetHuntGroupScript gets the specified script from the given script
        sid
      operationId: Org_GetHuntGroupScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetHuntGroupScriptRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetHuntGroupScriptResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/listagentresponseautorules:
    post:
      tags:
      - Org
      description: Lists Agent Call Response Automatically added compliance rules
        for an Org.
      operationId: Org_ListAgentResponseAutoRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListAgentResponseAutoRulesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListAgentResponseAutoRulesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/listagenttriggers:
    post:
      tags:
      - Org
      description: "ListAgentTriggers returns a list of agent triggers for the given
        hunt group.\n DEPRECATED: Use services.org.hunt_groups.v1alpha1.ListHuntGroupAgentTriggers
        instead"
      operationId: Org_ListAgentTriggers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListAgentTriggersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListAgentTriggersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/listbroadcasttemplategeneraldetails:
    post:
      tags:
      - Org
      description: ListBroadcastTemplateGeneralDetails returns a list of broadcast
        templates for an organization
      operationId: Org_ListBroadcastTemplateGeneralDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListBroadcastTemplateGeneralDetailsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListBroadcastTemplateGeneralDetailsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/listcalleridbuckets:
    post:
      tags:
      - Org
      description: "Lists caller id numbers with their associated region codes for
        the given\n bucket."
      operationId: Org_ListCallerIdBuckets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListCallerIdBucketsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListCallerIdBucketsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/listdatadiptemplates:
    post:
      tags:
      - Org
      description: Lists data dip templates, optionally filtered by config type.
      operationId: Org_ListDataDipTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListDataDipTemplatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListDataDipTemplatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/listhuntgroupintegrationlinks:
    post:
      tags:
      - Org
      description: ListHuntGroupIntegrationLinks returns all integration links for
        a hunt group.
      operationId: Org_ListHuntGroupIntegrationLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListHuntGroupIntegrationLinksRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListHuntGroupIntegrationLinksResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/listhuntgroupscript:
    post:
      tags:
      - Org
      description: "ListHuntGroupScripts lists all hunt group scripts for the current
        organization.\n DEPRECATED. Use ListOrgHuntGroupScripts instead"
      operationId: Org_ListHuntGroupScripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListHuntGroupScriptsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListHuntGroupScriptsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/listhuntgroupswithclientinfotemplatedata:
    post:
      tags:
      - Org
      description: "ListHuntGroupsWithClientInfoTemplateData lists the hunt groups
        in an organization\n with their client info display template data based on
        the filter."
      operationId: Org_ListHuntGroupsWithClientInfoTemplateData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListHuntGroupsWithClientInfoTemplateDataRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListHuntGroupsWithClientInfoTemplateDataResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/listhuntgroupweblinks:
    post:
      tags:
      - Org
      description: Lists all web links for a given hunt group
      operationId: Org_ListHuntGroupWebLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListHuntGroupWebLinksRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListHuntGroupWebLinksResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/listorghuntgroupscript:
    post:
      tags:
      - Org
      description: ListOrgHuntGroupScripts lists all hunt group scripts for the current
        organization with a streamed response.
      operationId: Org_ListOrgHuntGroupScripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListHuntGroupScriptsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListHuntGroupScriptsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/unassignscriptfromhuntgroups:
    post:
      tags:
      - Org
      description: UnassignScriptFromHuntGroups unassigns a script from the specified
        hunt groups
      operationId: Org_UnassignScriptFromHuntGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UnassignScriptFromHuntGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UnassignScriptFromHuntGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/update:
    post:
      tags:
      - Org
      description: "UpdateHuntGroupSettings updates the selected/masked hunt group
        settings\n for the given hunt group."
      operationId: Org_UpdateHuntGroupSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateHuntGroupSettingsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateHuntGroupSettingsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/updateagentresponseautorules:
    post:
      tags:
      - Org
      description: Updates an existing Agent Call Response Automatically added compliance
        rule set.
      operationId: Org_UpdateAgentResponseAutoRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateAgentResponseAutoRulesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateAgentResponseAutoRulesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/updateagenttriggers:
    post:
      tags:
      - Org
      description: "UpdateAgentTriggers updates all agent triggers for the given hunt
        group.\n DEPRECATED: Use services.org.hunt_groups.v1alpha1.UpdateHuntGroupAgentTriggers
        instead"
      operationId: Org_UpdateAgentTriggers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateAgentTriggersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateAgentTriggersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/updatedatadiptemplate:
    post:
      tags:
      - Org
      description: Updates a data dip template.
      operationId: Org_UpdateDataDipTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateDataDipTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateDataDipTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/updatehuntgroupclientinfodisplaytemplate:
    post:
      tags:
      - Org
      description: UpdateHuntGroupClientInfoDisplayTemplate updates a client info
        display template for a given hunt group.
      operationId: Org_UpdateHuntGroupClientInfoDisplayTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateHuntGroupClientInfoDisplayTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateHuntGroupClientInfoDisplayTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/updatehuntgroupgeneraldetails:
    post:
      tags:
      - Org
      description: UpdateHuntGroupGeneralDetails is the RPC method for updating the
        general details of a hunt group.
      operationId: Org_UpdateHuntGroupGeneralDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateHuntGroupGeneralDetailsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateHuntGroupGeneralDetailsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/updatehuntgroupintegrationlinks:
    post:
      tags:
      - Org
      description: "UpdateHuntGroupIntegrationLinks updates the integration links
        for a hunt group.\n It will create any new integration links that do not already
        exist in the hunt group,\n update any existing integration links with the
        new settings, and delete any integration links\n that are not in the request."
      operationId: Org_UpdateHuntGroupIntegrationLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateHuntGroupIntegrationLinksRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateHuntGroupIntegrationLinksResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/updatehuntgroupscript:
    post:
      tags:
      - Org
      description: UpdateHuntGroupScript updates a script specified by the given script
        sid
      operationId: Org_UpdateHuntGroupScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateHuntGroupScriptRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateHuntGroupScriptResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/huntgroup/updatehuntgroupweblink:
    post:
      tags:
      - Org
      description: Updates the list of web links in a hunt group to be the given list
      operationId: Org_UpdateHuntGroupWebLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateHuntGroupWebLinksRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateHuntGroupWebLinksResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/idp/client/create:
    post:
      tags:
      - IdpService
      description: CreateClient creates a client.
      operationId: IdpService_CreateClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.idp.CreateClientRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.idp.CreateClientResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/idp/client/delete:
    post:
      tags:
      - IdpService
      description: DeleteClient deletes the provided client.
      operationId: IdpService_DeleteClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.idp.DeleteClientRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.idp.DeleteClientResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/idp/client/list:
    post:
      tags:
      - IdpService
      description: ListClients returns all clients.
      operationId: IdpService_ListClients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.idp.ListClientsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.idp.ListClientsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/idp/client/update:
    post:
      tags:
      - IdpService
      description: UpdateClient updates an existing client
      operationId: IdpService_UpdateClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.idp.UpdateClientRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.idp.UpdateClientResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/assign:
    post:
      tags:
      - Org
      description: Assignlabel creates label assignments defined by the request.
      operationId: Org_AssignLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AssignLabelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AssignLabelResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/assignlabels:
    post:
      tags:
      - LabelsService
      description: AssignLabels assigns labels to a specific permission group.
      operationId: LabelsService_AssignLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.labels.AssignLabelsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.labels.AssignLabelsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/attachlabel:
    post:
      tags:
      - LabelsService
      description: AttachLabel attaches a label to a given entity type
      operationId: LabelsService_AttachLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.labels.AttachLabelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.labels.AttachLabelResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/create:
    post:
      tags:
      - Org
      description: CreateLabel creates a label with the given properties.
      operationId: Org_CreateLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateLabelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateLabelResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/createlabel:
    post:
      tags:
      - LabelsService
      description: CreateLabel creates a new label.
      operationId: LabelsService_CreateLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.labels.CreateLabelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.labels.CreateLabelResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/delete:
    post:
      tags:
      - Org
      description: DeleteLabel deletes a label with the id given on the request.
      operationId: Org_DeleteLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteLabelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteLabelResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/deletelabel:
    post:
      tags:
      - LabelsService
      description: DeleteLabel deletes a single label
      operationId: LabelsService_DeleteLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.labels.DeleteLabelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.labels.DeleteLabelResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/detachlabel:
    post:
      tags:
      - LabelsService
      description: DetachLabel detaches a label from an entity based on an entity
        type
      operationId: LabelsService_DetachLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.labels.DetachLabelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.labels.DetachLabelResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/get:
    post:
      tags:
      - Org
      description: GetLabel returns a single label with the given ID.
      operationId: Org_GetLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetLabelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetLabelResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/getassignablelabels:
    post:
      tags:
      - Org
      description: GetAssignableLabels returns a list of labels available to the current
        user.
      operationId: Org_GetAssignableLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetAssignableLabelsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetAssignableLabelsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/getassignmentcounts:
    post:
      tags:
      - Org
      description: "GetAssignmentCounts returns the total amount of label assignments\n
        per entity type."
      operationId: Org_GetAssignmentCounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetAssignmentCountsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetAssignmentCountsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/getlabel:
    post:
      tags:
      - LabelsService
      description: GetLabel gets a single label
      operationId: LabelsService_GetLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.labels.GetLabelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.labels.GetLabelResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/getlabeledentitymap:
    post:
      tags:
      - LabelsService
      description: GetLabeledEntityMap gives back a map of entity Id to attached labels.
        The Entity type is specified on the request
      operationId: LabelsService_GetLabeledEntityMap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.labels.GetLabeledEntityMapRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.labels.GetLabeledEntityMapResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/list:
    post:
      tags:
      - Org
      description: ListLabels returns all unique label names belonging to the given
        org id.
      operationId: Org_ListLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListLabelsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListLabelsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/listlabels:
    post:
      tags:
      - LabelsService
      description: ListLabels lists all labels for a given organization
      operationId: LabelsService_ListLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.labels.ListLabelsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.labels.ListLabelsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/revokelabels:
    post:
      tags:
      - LabelsService
      description: RevokeLabels revokes labels from a specific permission group.
      operationId: LabelsService_RevokeLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.labels.RevokeLabelsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.labels.RevokeLabelsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/unassign:
    post:
      tags:
      - Org
      description: Unassignlabel removes label assignments defined by the request.
      operationId: Org_UnassignLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UnassignLabelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UnassignLabelResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/update:
    post:
      tags:
      - Org
      description: UpdateLabel updates the given label.
      operationId: Org_UpdateLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateLabelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateLabelResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/labels/updatelabel:
    post:
      tags:
      - LabelsService
      description: UpdateLabel updates a single label
      operationId: LabelsService_UpdateLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.labels.UpdateLabelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.labels.UpdateLabelResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/legacy/organization/register:
    post:
      tags:
      - OrgLegacy
      description: Registers a new organization
      operationId: OrgLegacy_RegisterOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.legacy.RegisterOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.legacy.RegisterOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/linkback/acceptterms:
    post:
      tags:
      - Org
      description: "AcceptLinkbackRecordingTerms insert a digital signature acceptance
        activity\n log upon client acknowledgement of terms and conditions usage for
        linkback\n recorded calls."
      operationId: Org_AcceptLinkbackRecordingTerms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AcceptLinkbackRecordingTermsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AcceptLinkbackRecordingTermsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/linkback/updatetemplates:
    post:
      tags:
      - Org
      description: "LinkbackUpdateBroadcastTemplates updates broadcast template options
        action\n parameters to reflect the linkback recording usage value."
      operationId: Org_LinkbackUpdateBroadcastTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.LinkbackUpdateBroadcastTemplatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.LinkbackUpdateBroadcastTemplatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/listByRegion:
    post:
      tags:
      - Org
      description: ListOrganizationsByRegion lists organizations in the given region
        (unarchived).
      operationId: Org_ListOrganizationsByRegion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListOrganizationsByRegionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListOrganizationsByRegionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/listallglobally:
    post:
      tags:
      - Org
      description: ListAllOrganizationsGlobally lists all organizations globally (archived
        and unarchived).
      operationId: Org_ListAllOrganizationsGlobally
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListAllOrganizationsGloballyRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListAllOrganizationsGloballyResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/listarchivedorganizations:
    post:
      tags:
      - Org
      description: ListArchivedOrganizations lists all archived organizations in the
        current region.
      operationId: Org_ListArchivedOrganizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListArchivedOrganizationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListArchivedOrganizationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/listownedorgs:
    post:
      tags:
      - Org
      description: Lists all orgs under the p3 hierarchy
      operationId: Org_ListOwnedOrgs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListOwnedOrgsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListOwnedOrgsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/listresponseevaluators:
    post:
      tags:
      - Org
      operationId: Org_ListResponseEvaluators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListResponseEvaluatorsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListResponseEvaluatorsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/observedholidays/add:
    post:
      tags:
      - ObservedHolidaysService
      description: AddToObservedHolidays adds a new ObservedHolidays for an Org.
      operationId: ObservedHolidaysService_AddToObservedHolidays
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.AddToObservedHolidaysRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.AddToObservedHolidaysResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/observedholidays/delete:
    post:
      tags:
      - ObservedHolidaysService
      description: DeleteObservedHolidays deletes an existing ObservedHolidays.
      operationId: ObservedHolidaysService_DeleteObservedHolidays
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.DeleteObservedHolidaysRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.DeleteObservedHolidaysResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/observedholidays/evaluate:
    post:
      tags:
      - ObservedHolidaysService
      description: EvaluateObservedHolidays evaluates the ObservedHolidays.
      operationId: ObservedHolidaysService_EvaluateObservedHolidays
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.EvaluateObservedHolidaysRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.EvaluateObservedHolidaysResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/observedholidays/get:
    post:
      tags:
      - ObservedHolidaysService
      description: GetObservedHolidays returns the ObservedHolidays for the ID.
      operationId: ObservedHolidaysService_GetObservedHolidays
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.GetObservedHolidaysRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.GetObservedHolidaysResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/observedholidays/list:
    post:
      tags:
      - ObservedHolidaysService
      description: ListObservedHolidays returns all ObservedHolidays for an Org.
      operationId: ObservedHolidaysService_ListObservedHolidays
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.ListObservedHolidaysRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.ListObservedHolidaysResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/observedholidays/remove:
    post:
      tags:
      - ObservedHolidaysService
      description: RemoveObservedHolidays removes an existing ObservedHolidays from
        an Org.
      operationId: ObservedHolidaysService_RemoveObservedHolidays
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.RemoveFromObservedHolidaysRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.RemoveFromObservedHolidaysResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/observedholidays/set:
    post:
      tags:
      - ObservedHolidaysService
      description: SetObservedHolidays creates a new ObservedHolidays for an Org.
      operationId: ObservedHolidaysService_SetObservedHolidays
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.SetObservedHolidaysRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.SetObservedHolidaysResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/observedholidays/updateinfo:
    post:
      tags:
      - ObservedHolidaysService
      description: UpdateObservedHolidaysInfo updates the general info for a specified
        ObservedHolidays.
      operationId: ObservedHolidaysService_UpdateObservedHolidaysInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.UpdateObservedHolidaysInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.observedholidays.UpdateObservedHolidaysInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/getaccountownergroup:
    post:
      tags:
      - Org
      description: "GetAccountOwnerGroup returns the account owner permission group\n
        for an organization."
      operationId: Org_GetAccountOwnerGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetAccountOwnerGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetAccountOwnerGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/getlicenses:
    post:
      tags:
      - Org
      description: GetLicenses returns the licenses an organitzation is assigned.
      operationId: Org_GetLicenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetLicensesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetLicensesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/getlogininfo:
    post:
      tags:
      - Org
      description: "Used to be called GetUserBlocked\n GetUserLoginInfo gets information
        about a user's login."
      operationId: Org_GetUserLoginInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetUserLoginInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetUserLoginInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/getorglicenses:
    post:
      tags:
      - Org
      description: "GetOrgLicenses returns the licenses assigned to the organization\n
        of the user who makes the request."
      operationId: Org_GetOrgLicenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetOrgLicensesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetOrgLicensesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/getuseremailverified:
    post:
      tags:
      - Org
      description: GetUserEmailVerified gets whether the user's email is verified.
      operationId: Org_GetUserEmailVerified
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetUserEmailVerifiedRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetUserEmailVerifiedResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/getuseremailverifiedbyorgid:
    post:
      tags:
      - Org
      description: GetUserEmailVerifiedByOrgId gets whether the user's email is verified.
      operationId: Org_GetUserEmailVerifiedByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetUserEmailVerifiedByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetUserEmailVerifiedByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/removepermissionfromallpermissiongroups:
    post:
      tags:
      - Org
      description: "RemovePermissionFromAllPermissionGroups removes a permission from\n
        all permission groups in an organization."
      operationId: Org_RemovePermissionFromAllPermissionGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RemovePermissionFromAllPermissionGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RemovePermissionFromAllPermissionGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/resetmypassword:
    post:
      tags:
      - Org
      description: ResetMyPassword resets the user's password.
      operationId: Org_ResetMyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ResetMyPasswordRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ResetMyPasswordResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/resetuserpassword:
    post:
      tags:
      - Org
      description: ResetUserPassword resets the user's password.
      operationId: Org_ResetUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ResetUserPasswordRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ResetUserPasswordResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/resetuserpasswordbyorgid:
    post:
      tags:
      - Org
      description: ResetUserPasswordByOrgId resets the user's password.
      operationId: Org_ResetUserPasswordByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ResetUserPasswordByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ResetUserPasswordByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/sendpasswordreset:
    post:
      tags:
      - Org
      description: SendPasswordReset sends a password reset email to the user.
      operationId: Org_SendPasswordReset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.SendPasswordResetRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.SendPasswordResetResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/sendpasswordresetbyorgid:
    post:
      tags:
      - Org
      description: SendPasswordResetByOrgId sends a password reset email to the user.
      operationId: Org_SendPasswordResetByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.SendPasswordResetByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.SendPasswordResetByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/senduseremailverification:
    post:
      tags:
      - Org
      description: SendUserEmailVerification sends a verification email to the user.
      operationId: Org_SendUserEmailVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.SendUserEmailVerificationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.SendUserEmailVerificationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/senduseremailverificationbyorgid:
    post:
      tags:
      - Org
      description: SendUserEmailVerificationByOrgId sends a verification email to
        the user.
      operationId: Org_SendUserEmailVerificationByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.SendUserEmailVerificationByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.SendUserEmailVerificationByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/org/updatelicenses:
    post:
      tags:
      - Org
      description: UpdateLicenses updates an organization's licenses.
      operationId: Org_UpdateLicenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateLicensesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateLicensesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/assignlabels:
    post:
      tags:
      - Org
      description: AssignLabels assigns labels to a given permission group
      operationId: Org_AssignLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AssignLabelsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AssignLabelsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/get:
    post:
      tags:
      - Org
      description: GetPermissions returns the permissions for a given user along with
        other user information.
      operationId: Org_GetPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetPermissionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetPermissionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/getuser:
    post:
      tags:
      - Org
      description: GetUserPermissions returns the permissions for a given user.
      operationId: Org_GetUserPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetUserPermissionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetUserPermissionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/group/assign:
    post:
      tags:
      - Org
      description: AssignUsersPermissionGroup returns a user a permission group.
      operationId: Org_AssignUsersPermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AssignUsersPermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AssignUsersPermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/group/assignAccountOwner:
    post:
      tags:
      - Org
      description: AssignAccountOwnerPermissionToUser returns a user a permission
        group.
      operationId: Org_AssignAccountOwnerPermissionToUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AssignAccountOwnerPermissionToUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AssignAccountOwnerPermissionToUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/group/create:
    post:
      tags:
      - Org
      description: Creates a new permission group.
      operationId: Org_CreatePermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreatePermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreatePermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/group/delete:
    post:
      tags:
      - Org
      description: DeletePermissionGroup deletes the permission group with the given
        id.
      operationId: Org_DeletePermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeletePermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeletePermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/group/init:
    post:
      tags:
      - Org
      description: "Initializes the default read only permissions group for the\n
        given organization."
      operationId: Org_InitDefaultPermissionGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.InitDefaultPermissionGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.InitDefaultPermissionGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/group/list:
    post:
      tags:
      - Org
      description: ListPermissionGroups returns a list of permissions for an organization.
      operationId: Org_ListPermissionGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListPermissionGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListPermissionGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/group/listById:
    post:
      tags:
      - Org
      description: "ListPermissionGroupsByOrgId returns a list of permissions for
        an\n organization."
      operationId: Org_ListPermissionGroupsByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListPermissionGroupsByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListPermissionGroupsByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/group/revoke:
    post:
      tags:
      - Org
      description: RevokeUsersPermissionGroup returns a user a permission group.
      operationId: Org_RevokeUsersPermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RevokeUsersPermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RevokeUsersPermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/group/revokeAccountOwner:
    post:
      tags:
      - Org
      description: RevokeAccountOwnerPermissionFromUser returns a user a permission
        group.
      operationId: Org_RevokeAccountOwnerPermissionFromUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RevokeAccountOwnerPermissionFromUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RevokeAccountOwnerPermissionFromUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/group/update:
    post:
      tags:
      - Org
      description: UpdatePermissionGroup updates the permission group with the given
        id.
      operationId: Org_UpdatePermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdatePermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdatePermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/p3/assign:
    post:
      tags:
      - Org
      description: "AssignUsersP3PermissionGroup assigns a p3 permission group\n to
        a list of users."
      operationId: Org_AssignUsersP3PermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AssignUsersP3PermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AssignUsersP3PermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/p3/create:
    post:
      tags:
      - Org
      description: CreateP3PermissionGroup creates a new p3 permission group.
      operationId: Org_CreateP3PermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateP3PermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateP3PermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/p3/delete:
    post:
      tags:
      - Org
      description: DeleteP3PermissionGroup deletes a p3 permission group.
      operationId: Org_DeleteP3PermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteP3PermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteP3PermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/p3/list:
    post:
      tags:
      - Org
      description: "ListP3PermissionGroups returns the list of p3 permission groups\n
        for the user's org."
      operationId: Org_ListP3PermissionGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListP3PermissionGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListP3PermissionGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/p3/listById:
    post:
      tags:
      - Org
      description: "ListP3PermissionGroupsByOrgId returns the list of p3 permission
        groups\n for an org by id."
      operationId: Org_ListP3PermissionGroupsByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListP3PermissionGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListP3PermissionGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/p3/revoke:
    post:
      tags:
      - Org
      description: "RevokeUsersP3PermissionGroup revokes a p3 permission group\n from
        a list of users."
      operationId: Org_RevokeUsersP3PermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RevokeUsersP3PermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RevokeUsersP3PermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/p3/update:
    post:
      tags:
      - Org
      description: "UpdateP3PermissionGroup updates an existing p3 permission group.\n
        Requires PERMISSION_GROUP_EDIT."
      operationId: Org_UpdateP3PermissionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateP3PermissionGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateP3PermissionGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/p3/update/byOrgId:
    post:
      tags:
      - Org
      description: "UpdateP3PermissionGroup updates an existing p3 permission group.\n
        CUSTOMER_SUPPORT required for passing in an org id."
      operationId: Org_UpdateP3PermissionGroupByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateP3PermissionGroupByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateP3PermissionGroupByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/permissions/revokelabels:
    post:
      tags:
      - Org
      description: RevokeLabels revokes labels from a given permission group
      operationId: Org_RevokeLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RevokeLabelsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RevokeLabelsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/adminclient/get:
    post:
      tags:
      - Org
      description: "GetAdminClientPreferences returns preferences for essential organization\n
        properties only to be used by account managers and customer support."
      operationId: Org_GetAdminClientPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetAdminClientPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetAdminClientPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/adminclient/update:
    post:
      tags:
      - Org
      description: UpdateAdminClientPreferences updates preferences for essential
        organization
      operationId: Org_UpdateAdminClientPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateAdminClientPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateAdminClientPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/agent/get:
    post:
      tags:
      - Org
      description: GetAgentPreferences returns preferences controlling direct agent
        properties.
      operationId: Org_GetAgentPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetAgentPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetAgentPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/agent/update:
    post:
      tags:
      - Org
      description: "UpdateAgentPreferences updates preferences controlling direct
        agent\n properties."
      operationId: Org_UpdateAgentPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateAgentPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateAgentPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/authentication/get:
    post:
      tags:
      - Org
      description: GetAuthenticationPreferences returns preferences for controlling
        the
      operationId: Org_GetAuthenticationPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetAuthenticationPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetAuthenticationPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/authentication/update:
    post:
      tags:
      - Org
      description: UpdateAuthenticationPreferences updates preferences for controlling
        the
      operationId: Org_UpdateAuthenticationPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateAuthenticationPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateAuthenticationPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/broadcast/get:
    post:
      tags:
      - Org
      description: "GetBroadcastPreferences returns preferences for editing templates
        and\n broadcast scheduling properties."
      operationId: Org_GetBroadcastPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetBroadcastPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetBroadcastPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/broadcast/update:
    post:
      tags:
      - Org
      description: "UpdateBroadcastPreferences updates preferences for editing templates
        and\n broadcast scheduling properties."
      operationId: Org_UpdateBroadcastPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateBroadcastPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateBroadcastPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/business/get:
    post:
      tags:
      - Org
      description: GetBusinessPreferences returns preferences for business intelligence.
      operationId: Org_GetBusinessPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetBusinessPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetBusinessPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/business/update:
    post:
      tags:
      - Org
      description: UpdateBusinessPreferences updates preferences for business intelligence.
      operationId: Org_UpdateBusinessPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateBusinessPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateBusinessPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/business/updateadmin:
    post:
      tags:
      - Org
      description: UpdateAdminBusinessPreferences updates preferences for business
        intelligence.
      operationId: Org_UpdateAdminBusinessPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateAdminBusinessPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateAdminBusinessPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/businesshours/addinterval:
    post:
      tags:
      - Org
      description: AddIntervalToBusinessHours adds a day interval to a business hours
        object
      operationId: Org_AddIntervalToBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AddIntervalToBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AddIntervalToBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/businesshours/create:
    post:
      tags:
      - Org
      description: CreateBusinessHours persists times businesses are available.
      operationId: Org_CreateBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/businesshours/delete:
    post:
      tags:
      - Org
      description: DeleteBusinessHours removes business hours.
      operationId: Org_DeleteBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/businesshours/evaluate:
    post:
      tags:
      - Org
      description: EvaluateBusinessHours determines whether or not the current time
        is within a business hours day interval
      operationId: Org_EvaluateBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.EvaluateBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.EvaluateBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/businesshours/get:
    post:
      tags:
      - Org
      description: GetBusinessHours returns the business hours for the ID.
      operationId: Org_GetBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/businesshours/list:
    post:
      tags:
      - Org
      description: ListBusinessHours returns all business hours for an Org.
      operationId: Org_ListBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/businesshours/removeinterval:
    post:
      tags:
      - Org
      description: RemoveIntervalFromBusinessHours removes a day interval from a business
        hours object
      operationId: Org_RemoveIntervalFromBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RemoveIntervalFromBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RemoveIntervalFromBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/businesshours/set:
    post:
      tags:
      - Org
      description: SetBusinessHours initializes a business hours object
      operationId: Org_SetBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.SetBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.SetBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/businesshours/update:
    post:
      tags:
      - Org
      description: UpdateBusinessHours persists changes to times businesses are available.
      operationId: Org_UpdateBusinessHours
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateBusinessHoursRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateBusinessHoursResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/businesshours/updateinfo:
    post:
      tags:
      - Org
      description: UpdateBusinessHoursInfo updates the general info of a business
        hours object
      operationId: Org_UpdateBusinessHoursInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateBusinessHoursInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateBusinessHoursInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/compliance/get:
    post:
      tags:
      - Org
      description: "GetCompliancePreferences returns preferences for natural language
        compliance\n campaign settings."
      operationId: Org_GetCompliancePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetCompliancePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetCompliancePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/compliance/update:
    post:
      tags:
      - Org
      description: "UpdateCompliancePreferences updates preferences for natural language\n
        compliance campaign settings."
      operationId: Org_UpdateCompliancePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateCompliancePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateCompliancePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/contact/get:
    post:
      tags:
      - Org
      description: GetContactPreferences returns preferences for contact lists.
      operationId: Org_GetContactPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetContactPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetContactPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/contact/update:
    post:
      tags:
      - Org
      description: UpdateContactPreferences updates preferences for contact lists.
      operationId: Org_UpdateContactPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateContactPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateContactPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/createcertificateinfo:
    post:
      tags:
      - Org
      description: "CreateCertificateInfo creates a new TLS certificate and\n returns
        the certificate info for the current organization.\n DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.CreateCertificateInfo
        instead"
      operationId: Org_CreateCertificateInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateCertificateInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateCertificateInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/dashboard/get:
    post:
      tags:
      - Org
      description: "GetDashboardGeneralPreferences returns preferences for agent dashboard\n
        controls."
      operationId: Org_GetDashboardGeneralPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetDashboardGeneralPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetDashboardGeneralPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/dashboard/update:
    post:
      tags:
      - Org
      description: "UpdateDashboardGeneralPreferences updates preferences for agent
        dashboard\n controls."
      operationId: Org_UpdateDashboardGeneralPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateDashboardGeneralPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateDashboardGeneralPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/dashboardqueue/get:
    post:
      tags:
      - Org
      description: "GetDashboardQueuePreferences returns preferences for controlling
        agent queue\n and hold table settings."
      operationId: Org_GetDashboardQueuePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetDashboardQueuePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetDashboardQueuePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/dashboardqueue/update:
    post:
      tags:
      - Org
      description: "UpdateDashboardQueuePreferences updates preferences for controlling
        agent\n queue and hold table settings."
      operationId: Org_UpdateDashboardQueuePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateDashboardQueuePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateDashboardQueuePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/deletecertificateinfo:
    post:
      tags:
      - Org
      description: "DeleteCertificateInfo deletes a certificate info for the current
        organization.\n DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.DeleteCertificateInfo
        instead"
      operationId: Org_DeleteCertificateInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteCertificateInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteCertificateInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/emailsms/get:
    post:
      tags:
      - Org
      description: GetEmailSmsPreferences returns preferences for email and SMS management.
      operationId: Org_GetEmailSmsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetEmailSmsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetEmailSmsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/emailsms/update:
    post:
      tags:
      - Org
      description: UpdateEmailSmsPreferences updates preferences for email and SMS
        management.
      operationId: Org_UpdateEmailSmsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateEmailSmsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateEmailSmsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/endofday/get:
    post:
      tags:
      - Org
      description: GetEndOfDayPreferences returns preferences for automated report
        jobs
      operationId: Org_GetEndOfDayPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetEndOfDayPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetEndOfDayPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/endofday/update:
    post:
      tags:
      - Org
      description: UpdateEndOfDayPreferences updates preferences for automated report
        jobs
      operationId: Org_UpdateEndOfDayPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateEndOfDayPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateEndOfDayPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/filter/get:
    post:
      tags:
      - Org
      description: GetReportFilterPreferences returns preferences for filters in reports
        and
      operationId: Org_GetReportFilterPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetFilterPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetFilterPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/filter/update:
    post:
      tags:
      - Org
      description: UpdateReportFilterPreferences updates preferences for filters in
        reports and
      operationId: Org_UpdateReportFilterPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateFilterPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateFilterPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/listcertificateinfo:
    post:
      tags:
      - Org
      description: "ListCertificateInfo returns a list of certificate info for the
        current organization.\n DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.ListCertificateInfo
        instead"
      operationId: Org_ListCertificateInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListCertificateInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListCertificateInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/organization/get:
    post:
      tags:
      - Org
      description: "GetOrganizationPreferences returns general preferences controlling
        basic\n organization related properties."
      operationId: Org_GetOrganizationPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetOrganizationPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetOrganizationPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/organization/update:
    post:
      tags:
      - Org
      description: "UpdateOrganizationPreferences updates general preferences controlling
        basic\n organization related properties."
      operationId: Org_UpdateOrganizationPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateOrganizationPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateOrganizationPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/phone/get:
    post:
      tags:
      - Org
      description: "GetPhonePreferences returns preferences for phone dial options,
        call ID,\n and other call properties."
      operationId: Org_GetPhonePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetPhonePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetPhonePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/phone/update:
    post:
      tags:
      - Org
      description: "UpdatePhonePreferences updates preferences for phone dial options,
        call ID,\n and other call properties."
      operationId: Org_UpdatePhonePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdatePhonePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdatePhonePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/recording/get:
    post:
      tags:
      - Org
      description: GetRecordingPreferences returns preferences for audio recording
        properties.
      operationId: Org_GetRecordingPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetRecordingPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetRecordingPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/recording/update:
    post:
      tags:
      - Org
      description: "UpdateRecordingPreferences updates preferences for audio recording\n
        properties."
      operationId: Org_UpdateRecordingPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateRecordingPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateRecordingPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/revokecertificateinfo:
    post:
      tags:
      - Org
      description: "RevokeCertificateInfo deletes a certificate info for the current
        organization.\n DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.RevokeCertificateInfo
        instead"
      operationId: Org_RevokeCertificateInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RevokeCertificateInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RevokeCertificateInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/schedule/get:
    post:
      tags:
      - Org
      description: "GetSchedulePreferences returns preferences for editing campaign
        scheduling\n properties."
      operationId: Org_GetSchedulePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetSchedulePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetSchedulePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/schedule/update:
    post:
      tags:
      - Org
      description: "UpdateSchedulePreferences updates preferences for editing campaign\n
        scheduling properties."
      operationId: Org_UpdateSchedulePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateSchedulePreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateSchedulePreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/scorecards/get:
    post:
      tags:
      - Org
      description: GetScorecardsPreferences returns preferences for scorecards.
      operationId: Org_GetScorecardsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetScorecardsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetScorecardsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/scorecards/update:
    post:
      tags:
      - Org
      description: UpdateScorecardsPreferences updates preferences for scorecards.
      operationId: Org_UpdateScorecardsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateScorecardsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateScorecardsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/voiceanalytics/get:
    post:
      tags:
      - Org
      description: GetVoiceAnalyticsPreferences returns preferences for voice analytics.
      operationId: Org_GetVoiceAnalyticsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetVoiceAnalyticsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetVoiceAnalyticsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/voiceanalytics/list:
    post:
      tags:
      - Org
      description: ListVoiceAnalyticsPreferences lists preferences for voice analytics.
      operationId: Org_ListVoiceAnalyticsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListVoiceAnalyticsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListVoiceAnalyticsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/voiceanalytics/update:
    post:
      tags:
      - Org
      description: UpdateVoiceAnalyticsPreferences updates preferences for voice analytics.
      operationId: Org_UpdateVoiceAnalyticsPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateVoiceAnalyticsPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateVoiceAnalyticsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/webhook/get:
    post:
      tags:
      - Org
      description: GetWebhookPreferences returns preferences for web-hook push URLs.
      operationId: Org_GetWebhookPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetWebhookPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetWebhookPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/preferences/webhook/update:
    post:
      tags:
      - Org
      description: UpdateWebhookPreferences updates preferences for web-hook push
        URLs.
      operationId: Org_UpdateWebhookPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateWebhookPreferencesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateWebhookPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/soundboard/create:
    post:
      tags:
      - Soundboard
      description: "CreateSoundboard takes in a stream of metadata and audio file
        segments.\n The first expected message should contain SoundboardDetails, then
        following\n messages will be chunks of audio file data, which is then aggregated
        and put\n into rec. The generated soundboard id is returned."
      operationId: Soundboard_CreateSoundboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.soundboard.CreateSoundboardReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.soundboard.CreateSoundboardRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/soundboard/delete:
    post:
      tags:
      - Soundboard
      description: DeleteSondboard deletes a soundboard's metadata from the soundboard
        table.
      operationId: Soundboard_DeleteSoundboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.soundboard.DeleteSoundboardReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.soundboard.DeleteSoundboardRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/soundboard/getfile:
    post:
      tags:
      - Soundboard
      description: "GetSoundboardFile streams back segments of the audio file stored
        in rec\n corresponding to the provided soundboard id and org id."
      operationId: Soundboard_GetSoundboardFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.soundboard.GetSoundboardFileReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.soundboard.GetSoundboardFileRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/soundboard/list:
    post:
      tags:
      - Soundboard
      description: "ListSoundboards returns all of the metadata for soundboards corresponding\n
        corresponding to a given org id."
      operationId: Soundboard_ListSoundboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.soundboard.ListSoundboardsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.soundboard.ListSoundboardsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/soundboard/update:
    post:
      tags:
      - Soundboard
      description: UpdateSondboard updates a soundboard's metadata in the soundboard
        table.
      operationId: Soundboard_UpdateSoundboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.soundboard.UpdateSoundboardReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.soundboard.UpdateSoundboardRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/accept:
    post:
      tags:
      - Org
      description: AcceptTrust accepts an incoming trust.
      operationId: Org_AcceptTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AcceptTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AcceptTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/accepttrust:
    post:
      tags:
      - TrustsService
      description: AcceptTrust accepts an incoming trust.
      operationId: TrustsService_AcceptTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AcceptTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AcceptTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/assign:
    post:
      tags:
      - Org
      description: AssignTrust assigns a trust to the given user ids.
      operationId: Org_AssignTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AssignTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AssignTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/assigntrust:
    post:
      tags:
      - TrustsService
      description: AssignTrust assigns a trust to the given user ids.
      operationId: TrustsService_AssignTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AssignTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AssignTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/create:
    post:
      tags:
      - Org
      description: CreateTrust creates a new trust.
      operationId: Org_CreateTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/createtrust:
    post:
      tags:
      - TrustsService
      description: CreateTrust creates a new trust.
      operationId: TrustsService_CreateTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreateTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreateTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/delete:
    post:
      tags:
      - Org
      description: "DeleteTrust deletes a trust by trust id. Only trusts where the
        current\n org is the grantor can be deleted by this endpoint."
      operationId: Org_DeleteTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/deletetrust:
    post:
      tags:
      - TrustsService
      description: "DeleteTrust deletes a trust by trust id. Only trusts where the
        current\n org is the grantor can be deleted by this endpoint."
      operationId: TrustsService_DeleteTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.DeleteTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.DeleteTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/get:
    post:
      tags:
      - Org
      description: GetTrust returns a single trust by trust id.
      operationId: Org_GetTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/gettrust:
    post:
      tags:
      - TrustsService
      description: GetTrust returns a single trust by trust id.
      operationId: TrustsService_GetTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/list/assignable:
    post:
      tags:
      - Org
      description: "ListAssignableTrusts returns all accepted trusts that are being
        granted\n to the org of the currently logged in user."
      operationId: Org_ListAssignableTrusts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListAssignableTrustsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListAssignableTrustsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/list/given:
    post:
      tags:
      - Org
      description: "ListGivenTrusts returns all trusts that have been given out for\n
        the currently logged in user's org. The returned list will contain\n accepted,
        pending, and rejected trusts."
      operationId: Org_ListGivenTrusts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListGivenTrustsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListGivenTrustsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/list/incoming:
    post:
      tags:
      - Org
      description: "ListIncomingTrusts returns all pending trusts that are being granted\n
        to the org of the currently logged in user."
      operationId: Org_ListIncomingTrusts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListIncomingTrustsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListIncomingTrustsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/list/listassignabletrusts:
    post:
      tags:
      - TrustsService
      description: "ListAssignableTrusts returns all accepted trusts that are being
        granted\n to the org of the currently logged in user."
      operationId: TrustsService_ListAssignableTrusts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListAssignableTrustsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListAssignableTrustsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/list/listgiventrusts:
    post:
      tags:
      - TrustsService
      description: "ListGivenTrusts returns all trusts that have been given out for\n
        the currently logged in user's org. The returned list will contain\n accepted,
        pending, and rejected trusts."
      operationId: TrustsService_ListGivenTrusts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListGivenTrustsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListGivenTrustsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/list/listincomingtrusts:
    post:
      tags:
      - TrustsService
      description: "ListIncomingTrusts returns all pending trusts that are being granted\n
        to the org of the currently logged in user."
      operationId: TrustsService_ListIncomingTrusts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListIncomingTrustsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListIncomingTrustsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/reject:
    post:
      tags:
      - Org
      description: RejectTrust rejects an incoming trust.
      operationId: Org_RejectTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RejectTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RejectTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/rejecttrust:
    post:
      tags:
      - TrustsService
      description: RejectTrust rejects an incoming trust.
      operationId: TrustsService_RejectTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RejectTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RejectTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/unassign:
    post:
      tags:
      - Org
      description: UnassignTrust unassigns a trust from the given user id.
      operationId: Org_UnassignTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UnassignTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UnassignTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/trusts/unassigntrust:
    post:
      tags:
      - TrustsService
      description: UnassignTrust unassigns a trust from the given user id.
      operationId: TrustsService_UnassignTrust
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UnassignTrustRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UnassignTrustResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/unarchiveorganization:
    post:
      tags:
      - Org
      description: Unarchives an organization. An archived organization effectively
        disappears, but isn't deleted.
      operationId: Org_UnArchiveOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UnArchiveOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UnArchiveOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/update:
    post:
      tags:
      - Org
      description: "UpdateOrganization updates the mutable fields on the Organization
        entity\n using the provided field mask."
      operationId: Org_UpdateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/updateresponseevaluator:
    post:
      tags:
      - Org
      operationId: Org_UpdateResponseEvaluator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateResponseEvaluatorRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateResponseEvaluatorResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/addgroupeduseriprestrictions:
    post:
      tags:
      - UsersService
      description: "AddGroupedUserIPRestrictions adds a user or list of user's IPs
        they\n are required to authenticate with"
      operationId: UsersService_AddGroupedUserIPRestrictions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.AddGroupedUserIPRestrictionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.AddGroupedUserIPRestrictionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/addusersubscription:
    post:
      tags:
      - UsersService
      description: Creates a new user subscription.
      operationId: UsersService_AddUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.AddUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.AddUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/addusersubscriptionbyuserid:
    post:
      tags:
      - UsersService
      description: Creates a new user subscription for a specified user with in requested
        users org.
      operationId: UsersService_AddUserSubscriptionByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.AddUserSubscriptionByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.AddUserSubscriptionByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/assignagentprofilegroups:
    post:
      tags:
      - UsersService
      description: AssignAgentProfileGroups assigns a list of users to an AgentProfileGroup.
        Can only use if everything is in the same organization.
      operationId: UsersService_AssignAgentProfileGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.AssignAgentProfileGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.AssignAgentProfileGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/createagentprofilegroup:
    post:
      tags:
      - UsersService
      description: CreateAgentProfileGroup creates an AgentProfileGroup. Can only
        create if user is in same org as AgentProfileGroup
      operationId: UsersService_CreateAgentProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.CreateAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.CreateAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/createauthtoken:
    post:
      tags:
      - UsersService
      description: "AUTH TOKEN\n CreateAuthToken creates an auth token for the current
        user."
      operationId: UsersService_CreateAuthToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.CreateAuthTokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.CreateAuthTokenResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/createauthtokenbyuserid:
    post:
      tags:
      - UsersService
      description: CreateAuthTokenByUserId creates an auth token for the given user.
      operationId: UsersService_CreateAuthTokenByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.CreateAuthTokenByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.CreateAuthTokenByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/createdelegateduser:
    post:
      tags:
      - UsersService
      description: CreateDelegatedUser creates a new delegated user and enables it
        for the region it is getting created in.
      operationId: UsersService_CreateDelegatedUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.CreateDelegatedUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.CreateDelegatedUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/createpasswordresetlink:
    post:
      tags:
      - UsersService
      description: CreatePasswordResetLink creates a password reset link for the given
        user id.
      operationId: UsersService_CreatePasswordResetLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.CreatePasswordResetLinkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.CreatePasswordResetLinkResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/createpasswordresetlinkbyorgid:
    post:
      tags:
      - UsersService
      description: CreatePasswordResetLinkByOrgId creates a password reset link for
        the given user id.
      operationId: UsersService_CreatePasswordResetLinkByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.CreatePasswordResetLinkByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.CreatePasswordResetLinkByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/createuser:
    post:
      tags:
      - UsersService
      description: CreateUser creates a new user and enables it for the region it
        is getting created in.
      operationId: UsersService_CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.CreateUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.CreateUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/deleteagentprofilegroup:
    post:
      tags:
      - UsersService
      description: DeleteAgentProfileGroup deletes an AgentProfileGroup. Can only
        delete if user is in same org as AgentProfileGroup
      operationId: UsersService_DeleteAgentProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.DeleteAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.DeleteAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/deleteauthtoken:
    post:
      tags:
      - UsersService
      description: DeleteAuthToken deletes a given auth token for the current user.
      operationId: UsersService_DeleteAuthToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.DeleteAuthTokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.DeleteAuthTokenResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/deleteauthtokenbyuserid:
    post:
      tags:
      - UsersService
      description: DeleteAuthTokenByUserId deletes a given auth token for the given
        user.
      operationId: UsersService_DeleteAuthTokenByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.DeleteAuthTokenByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.DeleteAuthTokenByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/enablemyusermfa:
    post:
      tags:
      - UsersService
      description: EnableMyUserMfa enables mfa for the current user
      operationId: UsersService_EnableMyUserMfa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.EnableMyUserMfaRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.EnableMyUserMfaResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/enableusermfa:
    post:
      tags:
      - UsersService
      description: EnableUserMfa enables or disables mfa for the given user
      operationId: UsersService_EnableUserMfa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.EnableUserMfaRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.EnableUserMfaResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getagentprofilegroup:
    post:
      tags:
      - UsersService
      description: GetAgentProfileGroup returns an agent profile group by id
      operationId: UsersService_GetAgentProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getmyuser:
    post:
      tags:
      - UsersService
      description: GetMyUser returns a single user by provided claims.
      operationId: UsersService_GetMyUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetMyUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetMyUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getmyusermfainfo:
    post:
      tags:
      - UsersService
      description: GetMyUserMfaInfo returns the mfa info for the current user.
      operationId: UsersService_GetMyUserMfaInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetMyUserMfaInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetMyUserMfaInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getmyuserpasswordresetlink:
    post:
      tags:
      - UsersService
      description: GetMyUserPasswordResetLink updates a user's password.
      operationId: UsersService_GetMyUserPasswordResetLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetMyUserPasswordResetLinkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetMyUserPasswordResetLinkResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getuser:
    post:
      tags:
      - UsersService
      description: GetUser returns a single user by UserId or by AgentSid.
      operationId: UsersService_GetUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getuserbyorgid:
    post:
      tags:
      - UsersService
      description: "GetUserByOrgId returns a single user by UserId and OrgId\n Requires
        Customer Support permission and allows cross Org requests."
      operationId: UsersService_GetUserByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getuseremailverified:
    post:
      tags:
      - UsersService
      description: GetUserEmailVerified gets whether the user's email is verified.
      operationId: UsersService_GetUserEmailVerified
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserEmailVerifiedRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserEmailVerifiedResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getuseremailverifiedbyorgid:
    post:
      tags:
      - UsersService
      description: GetUserEmailVerifiedByOrgId gets whether the user's email is verified.
      operationId: UsersService_GetUserEmailVerifiedByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserEmailVerifiedByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserEmailVerifiedByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getuserlogininfo:
    post:
      tags:
      - UsersService
      description: "Used to be called GetUserBlocked\n GetUserLoginInfo gets information
        about a user's login."
      operationId: UsersService_GetUserLoginInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserLoginInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserLoginInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getusermfainfo:
    post:
      tags:
      - UsersService
      description: GetUserMfaInfo returns the mfa info for the given user.
      operationId: UsersService_GetUserMfaInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserMfaInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserMfaInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getuserpasswordresetlink:
    post:
      tags:
      - UsersService
      description: GetUserPasswordResetLink gets a link to update a user's password.
      operationId: UsersService_GetUserPasswordResetLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserPasswordResetLinkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserPasswordResetLinkResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getuserpasswordresetlinkbyorgid:
    post:
      tags:
      - UsersService
      description: GetUserPasswordResetLinkByOrgId gets a link to update a user's
        password.
      operationId: UsersService_GetUserPasswordResetLinkByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserPasswordResetLinkByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserPasswordResetLinkByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getusersessiondata:
    post:
      tags:
      - UsersService
      description: GetUserSessionData returns data for the front end's session state
      operationId: UsersService_GetUserSessionData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserSessionDataRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserSessionDataResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getusersubscription:
    post:
      tags:
      - UsersService
      description: Gets a user subscription.
      operationId: UsersService_GetUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/getusersubscriptionbyuserid:
    post:
      tags:
      - UsersService
      description: Gets a user subscription for a specified user with in requested
        users org.
      operationId: UsersService_GetUserSubscriptionByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserSubscriptionByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserSubscriptionByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/listagentprofilegroups:
    post:
      tags:
      - UsersService
      description: ListAgentProfileGroups returns the agent profile groups associated
        with the current organization
      operationId: UsersService_ListAgentProfileGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ListAgentProfileGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ListAgentProfileGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/listagents:
    post:
      tags:
      - UsersService
      description: ListAgents returns a list of Agents.
      operationId: UsersService_ListAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ListAgentsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ListAgentsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/listauthtokens:
    post:
      tags:
      - UsersService
      description: ListAuthTokens list tokens of current user.
      operationId: UsersService_ListAuthTokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ListAuthTokensRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ListAuthTokensResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/listauthtokensbyuserid:
    post:
      tags:
      - UsersService
      description: ListAuthTokensByUserId list tokens of given user.
      operationId: UsersService_ListAuthTokensByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ListAuthTokensByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ListAuthTokensByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/listorgsubscriptions:
    post:
      tags:
      - UsersService
      description: Lists subscriptions for multiple users in an org.
      operationId: UsersService_ListOrgSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ListOrgSubscriptionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ListOrgSubscriptionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/listpublicusers:
    post:
      tags:
      - UsersService
      description: ListPublicUsers returns a list of users with limited data for most
        applications.
      operationId: UsersService_ListPublicUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ListPublicUsersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ListPublicUsersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/listusers:
    post:
      tags:
      - UsersService
      description: ListUsers returns a list of users.
      operationId: UsersService_ListUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ListUsersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ListUsersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/listusersallowedips:
    post:
      tags:
      - UsersService
      description: ListUsersAllowedIps returns the list of allowed IPs for the user.
      operationId: UsersService_ListUsersAllowedIps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ListUsersAllowedIpsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ListUsersAllowedIpsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/listusersbyorgid:
    post:
      tags:
      - UsersService
      description: ListUsersByOrgId returns a list of users.
      operationId: UsersService_ListUsersByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ListUsersByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ListUsersByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/listusersbyregion:
    post:
      tags:
      - UsersService
      description: ListUsersByRegion returns a list of usersByRegion.
      operationId: UsersService_ListUsersByRegion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ListUsersByRegionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ListUsersByRegionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/listusersubscriptions:
    post:
      tags:
      - UsersService
      description: Lists user subscriptions.
      operationId: UsersService_ListUserSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ListUserSubscriptionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ListUserSubscriptionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/listusersubscriptionsbyuserid:
    post:
      tags:
      - UsersService
      description: Lists user subscriptions.
      operationId: UsersService_ListUserSubscriptionsByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ListUserSubscriptionsByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ListUserSubscriptionsByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/refreshmfalockout:
    post:
      tags:
      - UsersService
      description: RefreshMfaLockout resets the lockout timer for the given user.
      operationId: UsersService_RefreshMfaLockout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.RefreshMfaLockoutRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.RefreshMfaLockoutResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/refreshmfalockoutbyorgid:
    post:
      tags:
      - UsersService
      description: RefreshMfaLockoutByOrgId resets the lockout timer for the given
        user and org id.
      operationId: UsersService_RefreshMfaLockoutByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.RefreshMfaLockoutByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.RefreshMfaLockoutByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/removegroupeduseriprestrictions:
    post:
      tags:
      - UsersService
      description: "RemoveGroupedUserIPRestrictions removes a user or list of user's
        IPs they\n are required to authenticate with"
      operationId: UsersService_RemoveGroupedUserIPRestrictions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.RemoveGroupedUserIPRestrictionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.RemoveGroupedUserIPRestrictionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/removeusersubscription:
    post:
      tags:
      - UsersService
      description: Remove a user subscription.
      operationId: UsersService_RemoveUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.RemoveUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.RemoveUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/removeusersubscriptionbyuserid:
    post:
      tags:
      - UsersService
      description: Remove a user subscription by a given user id
      operationId: UsersService_RemoveUserSubscriptionByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.RemoveUserSubscriptionByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.RemoveUserSubscriptionByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/resetmypassword:
    post:
      tags:
      - UsersService
      description: ResetMyPassword resets the user's password.
      operationId: UsersService_ResetMyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ResetMyPasswordRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ResetMyPasswordResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/resetuserpassword:
    post:
      tags:
      - UsersService
      description: ResetUserPassword resets the user's password.
      operationId: UsersService_ResetUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ResetUserPasswordRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ResetUserPasswordResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/resetuserpasswordbyorgid:
    post:
      tags:
      - UsersService
      description: ResetUserPasswordByOrgId resets the user's password.
      operationId: UsersService_ResetUserPasswordByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.ResetUserPasswordByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.ResetUserPasswordByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/sendpasswordreset:
    post:
      tags:
      - UsersService
      description: SendPasswordReset sends a password reset email to the user.
      operationId: UsersService_SendPasswordReset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.SendPasswordResetRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.SendPasswordResetResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/sendpasswordresetbyorgid:
    post:
      tags:
      - UsersService
      description: SendPasswordResetByOrgId sends a password reset email to the user.
      operationId: UsersService_SendPasswordResetByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.SendPasswordResetByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.SendPasswordResetByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/senduseremailverification:
    post:
      tags:
      - UsersService
      description: SendUserEmailVerification sends a verification email to the user.
      operationId: UsersService_SendUserEmailVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.SendUserEmailVerificationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.SendUserEmailVerificationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/senduseremailverificationbyorgid:
    post:
      tags:
      - UsersService
      description: SendUserEmailVerificationByOrgId sends a verification email to
        the user.
      operationId: UsersService_SendUserEmailVerificationByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.SendUserEmailVerificationByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.SendUserEmailVerificationByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/setauthtokenexpiration:
    post:
      tags:
      - UsersService
      description: SetAuthTokenExpiration sets expiration back one year for current
        user.
      operationId: UsersService_SetAuthTokenExpiration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.SetAuthTokenExpirationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.SetAuthTokenExpirationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/setauthtokenexpirationbyuserid:
    post:
      tags:
      - UsersService
      description: SetAuthTokenExpirationByUserId sets expiration back one year for
        given user.
      operationId: UsersService_SetAuthTokenExpirationByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.SetAuthTokenExpirationByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.SetAuthTokenExpirationByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/setmfatype:
    post:
      tags:
      - UsersService
      description: SetMfaType sets the given user's mfa type.
      operationId: UsersService_SetMfaType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.SetMfaTypeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.SetMfaTypeResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/setmymfatype:
    post:
      tags:
      - UsersService
      description: SetMyMfaType sets the current user's mfa type.
      operationId: UsersService_SetMyMfaType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.SetMyMfaTypeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.SetMyMfaTypeResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/updateagentprofilegroup:
    post:
      tags:
      - UsersService
      description: UpdateAgentProfileGroup updates an AgentProfileGroup. Can only
        update if user is in same org as AgentProfileGroup
      operationId: UsersService_UpdateAgentProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/updatemyuser:
    post:
      tags:
      - UsersService
      description: UpdateMyUser updates a user.
      operationId: UsersService_UpdateMyUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateMyUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateMyUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/updateuser:
    post:
      tags:
      - UsersService
      description: UpdateUser updates a user.
      operationId: UsersService_UpdateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/updateusercallerid:
    post:
      tags:
      - UsersService
      description: UpdateUserCallerId updates a user.
      operationId: UsersService_UpdateUserCallerId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserCallerIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserCallerIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/updateuserdisabled:
    post:
      tags:
      - UsersService
      description: UpdateUserDisabled updates whether a user is disabled.
      operationId: UsersService_UpdateUserDisabled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserDisabledRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserDisabledResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/updateuserdisabledbyorgid:
    post:
      tags:
      - UsersService
      description: UpdateUserDisabledByOrgId updates a user is disabled.
      operationId: UsersService_UpdateUserDisabledByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserDisabledByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserDisabledByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/updateuserlabels:
    post:
      tags:
      - UsersService
      description: UpdateUserLabels updates a user's labels to be the passed in set
        of labels.
      operationId: UsersService_UpdateUserLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserLabelsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserLabelsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/updateusersubscription:
    post:
      tags:
      - UsersService
      description: Updates a user subscription for the current user
      operationId: UsersService_UpdateUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/org/users/updateusersubscriptionbyuserid:
    post:
      tags:
      - UsersService
      description: Updates a user subscription for a given user id
      operationId: UsersService_UpdateUserSubscriptionByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserSubscriptionByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.users.UpdateUserSubscriptionByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/cancelpreviewdialcall:
    post:
      tags:
      - P3Api
      operationId: P3Api_CancelPreviewDialCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CancelPreviewDialCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CancelPreviewDialCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/createagentskill:
    post:
      tags:
      - P3Api
      description: "Creates a new agent skill as defined by the request message.\n
        Errors:\n    - grpc.InvalidArgument: the client_sid or name in the request
        is invalid."
      operationId: P3Api_CreateAgentSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateAgentSkillReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateAgentSkillRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/createcontactfielddescription:
    post:
      tags:
      - P3Api
      description: Create contact field description details
      operationId: P3Api_CreateContactFieldDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateContactFieldDescriptionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateContactFieldDescriptionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/createcustomdatakey:
    post:
      tags:
      - P3Api
      description: "Creates a new Data Key as defined by the request message\n the
        client_properties_sid should not be set, this is assigned on the backend\n
        Required Permission:\n   ORG_EDIT\n Errors:\n    - grpc.InvalidArgument: The
        custom_data_key field was not set\n    - grpc.Internal: error creating custom
        data key"
      operationId: P3Api_CreateCustomDataKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateCustomDataKeyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateCustomDataKeyRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/creatednclnumbers:
    post:
      tags:
      - P3Api
      operationId: P3Api_CreateDNCLNumbers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateDNCLNumbersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateDNCLNumbersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/createextension:
    post:
      tags:
      - P3Api
      description: "Creates a new extension as defined by the request message\n Required
        Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.InvalidArgument: The
        request has missing or invalid fields.\n    - grpc.Internal: An unexpected
        error occurred while saving the extension."
      operationId: P3Api_CreateExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateExtensionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateExtensionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/createphonebookentry:
    post:
      tags:
      - P3Api
      description: "Creates a new phone_book as defined by the request message.\n
        Required Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.InvalidArgument:
        the fields on the request are missing or invalid.\n    - grpc.Internal: unexpected
        error occurred when saving the phone book."
      operationId: P3Api_CreatePhoneBookEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreatePhoneBookEntryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreatePhoneBookEntryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/createttsvoice:
    post:
      tags:
      - P3Api
      description: "Create a new tts voice\n Required Permissions:\n    TCN_ADMIN_SETTINGS\n
        Errors:\n    - grpc.InvalidArgument: the actual_name or port field on the
        request is invalid.\n    - grpc.Internal: an error was returned while trying
        to insert the new tts voice."
      operationId: P3Api_CreateTtsVoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.CreateTtsVoiceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.CreateTtsVoiceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/deleteagentskill:
    post:
      tags:
      - P3Api
      description: "Deletes the agent skill with the agent_skill_sid given on the
        request.\n Errors:\n    - grpc.InvalidArgument: the agent_skill_sid in the
        request is invalid."
      operationId: P3Api_DeleteAgentSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteAgentSkillReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteAgentSkillRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/deletecontactfielddescription:
    post:
      tags:
      - P3Api
      description: Delete contact field description details
      operationId: P3Api_DeleteContactFieldDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteContactFieldDescriptionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteContactFieldDescriptionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/deletecustomdatakey:
    post:
      tags:
      - P3Api
      description: "Deletes a Custom Data Key with the sid given on the request message.\n
        Required Permission:\n   ORG_EDIT\n Errors:\n    - grpc.InvalidArgument: The
        client_properties_sid field is invalid.\n    - grpc.NotFound: no custom data
        key was deleted for the client_properties_sid.\n    - grpc.Internal: an error
        occurred while trying to remove the custom data key."
      operationId: P3Api_DeleteCustomDataKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteCustomDataKeyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteCustomDataKeyRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/deleteextension:
    post:
      tags:
      - P3Api
      description: "Deletes a pbx_extension with the given pbx_extension_sid.\n Required
        Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.InvalidArgument: The
        request had invalid or missing fields."
      operationId: P3Api_DeleteExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteExtensionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteExtensionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/deletephonebookentry:
    post:
      tags:
      - P3Api
      description: "Deletes the phone_book with the phone_book_sid given on the reques
        message.\n Required Permissions:\n    AGENT_MANAGER"
      operationId: P3Api_DeletePhoneBookEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeletePhoneBookEntryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeletePhoneBookEntryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/deletettsvoice:
    post:
      tags:
      - P3Api
      description: "Delete a tts voice with the given tts_voice_sid.\n Required Permissions:\n
        \   TCN_ADMIN_SETTINGS\n Errors:\n    - grpc.InvalidArgument: the tts_voice_sid
        field on the request is invalid.\n    - grpc.Internal: an error was returned
        while trying to remove the tts voice."
      operationId: P3Api_DeleteTtsVoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DeleteTtsVoiceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DeleteTtsVoiceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/downloadcallrecording:
    post:
      tags:
      - P3Api
      operationId: P3Api_DownloadCallRecording
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DownloadCallRecordingReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DownloadRecordingRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/downloadcallrecordings:
    post:
      tags:
      - P3Api
      operationId: P3Api_DownloadCallRecordings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.DownloadCallRecordingsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.DownloadRecordingRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getactivityloghistory:
    post:
      tags:
      - P3Api
      description: "Get Activity logs for given users and by specified time range\n
        Required Permissions;\n   CUSTOMER_SUPPORT"
      operationId: P3Api_GetActivityLogHistories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetActivityLogHistoryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetActivityLogHistoryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getagenthuntgroup:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetAgentHuntGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentHuntGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.HuntGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getagentprofile:
    post:
      tags:
      - P3Api
      description: GetAgentProfile returns an agent profile.
      operationId: P3Api_GetAgentProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentProfileReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentProfile'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getagentsession:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetAgentSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentSessionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.AgentSession'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getagentskills:
    post:
      tags:
      - P3Api
      description: "Gets the skills of the requesting agent. This includes agent skills,
        hunt group skills, and extension skills(PBX).\n Skills will be returned as
        a value pair (name, level).\n For agent skills, the name of each skill will
        be the agent_skill_sid.\n All other skills' names (hunt group and PBX) will
        be given special formats.\n The requesting agent and hunt_group_sid skills
        will be defaulted to the max level (1000 and 100 respectively).\n\n Required
        permissions:\n   NONE\n Errors:\n   - grpc.Invalid: the hunt_group_sid in
        the request in invalid."
      operationId: P3Api_GetAgentSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetAgentSkillsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetAgentSkillsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getcalldata:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetCallData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCallDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetCallDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getcampaigncompletionstatus:
    post:
      tags:
      - P3Api
      description: "Gets all running broadcasts (task groups) for the requesting agent
        and hunt_group_sid in the request.\n Calculates the percentage of completed
        tasks for each of those task groups.\n Calculates the overall task completion
        percentage of all matching task groups.\n Required permissions:\n   NONE\n
        Errors:\n   - grpc.Invalid: the hunt_group_sid in the request is invalid."
      operationId: P3Api_GetCampaignCompletionStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCampaignCompletionStatusReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetCampaignCompletionStatusRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getclientinfodata:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetClientInfoData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetClientInfoDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetClientInfoDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getclientinfodisplaytemplate:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetClientInfoDisplayTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetClientInfoDisplayTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetClientInfoDisplayTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getconditionaldnclrules:
    post:
      tags:
      - P3Api
      description: "Get the rules for conditionally adding a number to the DNCL depending
        on\n responses or scripts"
      operationId: P3Api_GetConditionalDNCLRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetConditionalDNCLRulesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetConditionalDNCLRulesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getcontactgroupdetails:
    post:
      tags:
      - P3Api
      description: "Get contact group details based on contact group sid from contact_group\n
        table"
      operationId: P3Api_GetContactGroupDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetContactGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ContactGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getcontactgroupsize:
    post:
      tags:
      - P3Api
      description: Get contact group size based on contacts size
      operationId: P3Api_GetContactGroupSize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetContactGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetContactGroupSizeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getcontactschemabycontactgroup:
    post:
      tags:
      - P3Api
      description: Get contact schema details based on contact group sid
      operationId: P3Api_GetContactSchemaByContactGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetContactSchemaByContactGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ContactSchema'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getcurrentagent:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetCurrentAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetCurrentAgentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Agent'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getdispositionkeys:
    post:
      tags:
      - P3Api
      description: "Gets all the available Disposition Keys\n\n Required permissions:\n
        \  NONE"
      operationId: P3Api_GetDispositionKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetDispositionKeysReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetDispositionKeysRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/gethuntgroupagentsettings:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetHuntGroupAgentSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetHuntGroupAgentSettingsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.HuntGroupAgentSettings'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/gethuntgrouppausecodes:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetHuntGroupPauseCodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetHuntGroupPauseCodesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetHuntGroupPauseCodesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getintercompeerinfo:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetIntercomPeerInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetIntercomPeerInfoReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetIntercomPeerInfoRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getlostpeerinfo:
    post:
      tags:
      - P3Api
      description: "Uses lost peer call sid and call type from the request to get
        information about lost call\n gets the name and hunt group of the agent that
        was connected to that call and all types of skills the call has.\n\n Required
        permissions:\n   NONE\n Errors:\n   - grpc.Invalid: the call_sid in the request
        in invalid.\n   - grpc.NotFound: the call sid provided wasn't previously connected
        to any agent."
      operationId: P3Api_GetLostPeerInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetLostPeerInfoReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetLostPeerInfoRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getorgagentsettings:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetOrgAgentSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetOrgAgentSettingsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetOrgAgentSettingsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getqueueconfigurationoptionsarray:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetQueueConfigurationOptionsArray
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetQueueConfigurationOptionsArrayReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetQueueConfigurationOptionsArrayRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getreadyagents:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetReadyAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetReadyAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetReadyAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/getscriptorresponses:
    post:
      tags:
      - P3Api
      description: "Gets the campaign or huntgroup script for the given agent's current
        hunt\n group. If no script is found, it gets the hunt group responses for
        the\n agent's current hunt group. It also does a mail merge with the found
        script\n or responses (if able)."
      operationId: P3Api_GetScriptOrResponses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.GetScriptOrResponsesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.GetScriptOrResponsesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/handlerecordingdelay:
    post:
      tags:
      - P3Api
      operationId: P3Api_HandleRecordingDelay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.HandleRecordingDelayReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.HandleRecordingDelayRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listHuntGroups:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListHuntGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListHuntGroupsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListHuntGroupsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listagentcallhistory:
    post:
      tags:
      - P3Api
      description: "Lists the call history of the requested agent for the past day
        or\n session_sid, depending on the filter parameter."
      operationId: P3Api_ListAgentCallHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentCallHistoryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentCallHistoryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listagentcalllogsbycallsidandtype:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListAgentCallLogsByCallSidAndType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentCallLogsByCallSidAndTypeReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentCallLogsByCallSidAndTypeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listagentcallresponsevalues:
    post:
      tags:
      - P3Api
      description: "Lists the keys and values of the latest responses for the given
        call_sid,\n call_type and agent_sid"
      operationId: P3Api_ListAgentCallResponseValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentCallResponseValuesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentCallResponseValuesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listagentextensions:
    post:
      tags:
      - P3Api
      description: "Lists every agent extension for the current client\n Required
        Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.Internal: unexpected
        error getting pbx_extensions"
      operationId: P3Api_ListAgentExtensions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentExtensionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentExtensionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listagentqueueandonholdcalldata:
    post:
      tags:
      - P3Api
      description: "Returns lists with call data of calls that were:\n Placed on multihold
        by the requesting agent.\n Queued, are ready to be handled and require a subset
        of the agent_skills provided.\n Placed in the Hold Queue Monitor, haven't
        been picked up yet and require a subset of the agent_skills provided.\n Required
        permissions:\n   NONE\n Errors:\n   - grpc.Invalid: the agent_session_sid
        provided in the request is invalid."
      operationId: P3Api_ListAgentQueueAndOnHoldCallData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentQueueAndOnHoldCallDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentQueueAndOnHoldCallDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listagentskillsfilters:
    post:
      tags:
      - P3Api
      description: List agent skills filters by client sid
      operationId: P3Api_ListAgentSkillsFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentSkillsFiltersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentSkillsFiltersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listagentstatisticsdata:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListAgentStatisticsData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentStatisticsDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentStatisticsDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listagenttransferoptions:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListAgentTransferOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentTransferOptionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentTransferOptionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listagenttriggers:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListAgentTriggers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListAgentTriggersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListAgentTriggersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listcallbackroutingagents:
    post:
      tags:
      - P3Api
      description: ListCallbackRoutingAgents returns a list of agents that are allowed
        to make a callback.
      operationId: P3Api_ListCallbackRoutingAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCallbackRoutingAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCallbackRoutingAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listcallbackroutingskills:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListCallbackRoutingSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCallbackRoutingSkillsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCallbackRoutingSkillsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listcalleridsfrombucket:
    post:
      tags:
      - P3Api
      description: "Lists caller id numbers with their associated region codes for
        the given\n bucket"
      operationId: P3Api_ListCallerIdsFromBucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCallerIdsFromBucketReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCallerIdsFromBucketRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listclientphonebookentries:
    post:
      tags:
      - P3Api
      description: "Lists all client phone book entries.\n Required Permissions:\n
        \ AGENT_MANAGER"
      operationId: P3Api_ListClientPhoneBookEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListClientPhoneBookEntriesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListClientPhoneBookEntriesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listcontactfielddescriptions:
    post:
      tags:
      - P3Api
      description: List contact field desc details from contact_field_description
        table
      operationId: P3Api_ListContactFieldDescriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListContactFieldDescriptionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListContactFieldDescriptionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listcontactfielddescriptionsbycgsid:
    post:
      tags:
      - P3Api
      description: List contact field description details based on contact group sid
      operationId: P3Api_ListContactFieldDescriptionsByCGSid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListContactFieldDescriptionsByCGSidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListContactFieldDescriptionsByCGSidRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listcontactgroupdetailsbyclientsid:
    post:
      tags:
      - P3Api
      description: List contact group details based on client sid from contact_group
        table
      operationId: P3Api_ListContactGroupDetailsByClientSid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListContactGroupDetailsByClientSidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListContactGroupDetailsByClientSidRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listcontactimporttemplates:
    post:
      tags:
      - P3Api
      description: "List contactImportTemplates based on client_sid from\n contact_import_template
        table"
      operationId: P3Api_ListContactImportTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListContactImportTemplatesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListContactImportTemplatesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listcustomdatakeys:
    post:
      tags:
      - P3Api
      description: "List of account custom data keys based on client sid\n Required
        Permissions:\n   ORG_VIEW\n Errors:\n    - grpc.Internal: an error was returned
        while trying to retrieve the entity"
      operationId: P3Api_ListCustomDataKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCustomDataKeysReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCustomDataKeysRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listcustomreportfilters:
    post:
      tags:
      - P3Api
      description: List custom report filters by client sid
      operationId: P3Api_ListCustomReportFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListCustomReportFiltersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListCustomReportFiltersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listextendedcallhistory:
    post:
      tags:
      - P3Api
      operationId: P3Api_GetExtendedCallHistories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListExtendedCallHistoryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListExtendedCallHistoryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listhuntgroupextensions:
    post:
      tags:
      - P3Api
      description: "Lists every hunt group extension for the current client\n Required
        Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.Internal: unexpected
        error getting pbx_extensions"
      operationId: P3Api_ListHuntGroupExtensions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListHuntGroupExtensionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListHuntGroupExtensionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listhuntgroupphonebookentries:
    post:
      tags:
      - P3Api
      description: "Lists all hunt group phone book entries.\n Required Permissions:\n
        \ AGENT_MANAGER"
      operationId: P3Api_ListHuntGroupPhoneBookEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListHuntGroupPhoneBookEntriesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListHuntGroupPhoneBookEntriesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listhuntgroupweblinks:
    post:
      tags:
      - P3Api
      description: "Returns a list of weblinks for the hunt group in the request.\n
        It replaces any parameters of a given weblink with the call data of the call
        sid and type from the request message or with the callback details (if a scheduled_callback_id
        is given)."
      operationId: P3Api_ListHuntGroupWebLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListHuntGroupWebLinksReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListHuntGroupWebLinksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listmamagenthuntgroupsbyclientsid:
    post:
      tags:
      - P3Api
      description: "List of agent hunt groups based on client sid\n that have manually
        approved messages enabled"
      operationId: P3Api_ListMAMAgentHuntGroupsByClientSid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListMAMAgentHuntGroupsByClientSidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListMAMAgentHuntGroupsByClientSidRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listorgresponseevaluators:
    post:
      tags:
      - P3Api
      description: Lists the requesting user's org response evaluators.
      operationId: P3Api_ListOrgResponseEvaluators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListOrgResponseEvaluatorsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListOrgResponseEvaluatorsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listoutboundbroadcasttemplatedata:
    post:
      tags:
      - P3Api
      description: "Gets information of the requesting client's broadcast templates
        (template_number, name, type, modify_date)\n It reports if each found template
        is either STANDARD or LAYERED.\n Required permissions:\n   NONE\n Errors:\n
        \  NONE"
      operationId: P3Api_ListOutboundBroadcastTemplateData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListOutboundBroadcastTemplateDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListOutboundBroadcastTemplateDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listpbxextensions:
    post:
      tags:
      - P3Api
      description: Lists all agent and hunt group PBX extensions that the requested
        agent has.
      operationId: P3Api_ListPBXExtensions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListPBXExtensionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListPBXExtensionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listphonebooks:
    post:
      tags:
      - P3Api
      description: "Lists caller_id, outbound and transfer phone books for the requesting
        client and given hunt group sid.\n Entries will be ordered by entry_name and
        phone_number.\n\n Required permissions:\n   NONE\n Errors:\n   - grpc.Invalid:
        the client_sid or hunt_group_sid in the request are invalid.\n   - grpc.Internal:
        unexpected error occurred when retrieving the phone books."
      operationId: P3Api_ListPhoneBooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListPhoneBooksReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListPhoneBooksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listreassignmenthuntgroups:
    post:
      tags:
      - P3Api
      description: "List the hunt groups an agent within a given hunt group can reassign\n
        themselves to. The reassignment hunt groups can optionally be limited by a\n
        hunt group setting. If a hunt group does not allow reassignment, the\n returned
        list will be empty."
      operationId: P3Api_ListReassignmentHuntGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListReassignmentHuntGroupsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListReassignmentHuntGroupsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listskills:
    post:
      tags:
      - P3Api
      description: "Returns a list of skills filtered by types given on\n the request
        message field type_filter. Leaving the type_filter\n field empty will return
        all types of skills."
      operationId: P3Api_ListSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSkillsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSkillsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listskillsforcurrentagent:
    post:
      tags:
      - P3Api
      description: Returns a list of skills for the current agent.
      operationId: P3Api_ListSkillsForCurrentAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSkillsForCurrentAgentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSkillsForCurrentAgentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listsmsnumbers:
    post:
      tags:
      - P3Api
      description: List sms numbers by client sid
      operationId: P3Api_ListSmsNumbers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListSmsNumbersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListSmsNumbersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listtabletemplateproperties:
    post:
      tags:
      - P3Api
      description: List agent and queue table template properties by client sid
      operationId: P3Api_ListTableTemplateProperties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListTableTemplatePropertiesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListTableTemplatePropertiesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listttsvoices:
    post:
      tags:
      - P3Api
      description: "List every tts voice\n Required Permissions:\n    TCN_ADMIN_SETTINGS\n
        Errors:\n    - grpc.Internal: an error was returned while trying to retrieve
        the entity"
      operationId: P3Api_ListTtsVoices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListTtsVoicesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListTtsVoicesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/listwhitelistphonebooks:
    post:
      tags:
      - P3Api
      operationId: P3Api_ListWhiteListPhoneBooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ListWhiteListPhoneBooksReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ListWhiteListPhoneBooksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/manualdialstart:
    post:
      tags:
      - P3Api
      operationId: P3Api_ManualDialStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.ManualDialStartReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.ManualDialStartRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/multiagenthuntgroupassignment:
    post:
      tags:
      - P3Api
      description: "Updates every given user's hunt_group_sid.\n Required Permissions:\n
        \   AGENT_MANAGEMENT\n Errors:\n    - grpc.Internal: an error occurred while
        interacting with the database.\n    - grpc.InvalidArgument: the hunt_group_sid
        or the user id list is empty or contains an invalid value."
      operationId: P3Api_MultiAgentHuntGroupAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.MultiAgentHuntGroupAssignmentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.MultiAgentHuntGroupAssignmentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/multiagentskillassignment:
    post:
      tags:
      - P3Api
      description: "Assign every skill to every agent with the given aptitude.\n Errors:\n
        \   - grpc.Invalid: the aptitude field is invalid."
      operationId: P3Api_MultiAgentSkillAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.MultiAgentSkillAssignmentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.MultiAgentSkillAssignmentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/multiagentskillunassignment:
    post:
      tags:
      - P3Api
      description: "Unassigns every given skill from every given user.\n Errors:\n
        \   - grpc.InvalidArgument:\n        - the user_ids list is empty or contains
        an empty string.\n        - one or more of the user_ids does not belong to
        the client.\n    - grpc.Internal: an error occurred while deleting the skill
        assignments."
      operationId: P3Api_MultiAgentSkillUnassignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.MultiAgentSkillUnassignmentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.MultiAgentSkillUnassignmentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/placepreviewdialcall:
    post:
      tags:
      - P3Api
      operationId: P3Api_PlacePreviewDialCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.PlacePreviewDialCallReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.PlacePreviewDialCallRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/recalculatebilling:
    post:
      tags:
      - P3Api
      description: "RecalculateBilling updates statuses for every billing type given
        on the\n request message for either the current or previous month.\n Only
        data that has already been summed for billing will have it's\n status updated.\n
        Required Permissions:\n  EDIT_BILLING"
      operationId: P3Api_RecalculateBilling
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.RecalculateBillingReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.RecalculateBillingRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/saveagentcallresponses:
    post:
      tags:
      - P3Api
      operationId: P3Api_SaveAgentCallResponses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SaveAgentCallResponsesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SaveAgentCallResponsesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/savelastcallresponse:
    post:
      tags:
      - P3Api
      operationId: P3Api_SaveLastCallResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.SaveLastCallResponseReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.SaveLastCallResponseRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/updateagentassignedhuntgroup:
    post:
      tags:
      - P3Api
      operationId: P3Api_UpdateAgentAssignedHuntGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentAssignedHuntGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentAssignedHuntGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/updateagentcallresponsevalue:
    post:
      tags:
      - P3Api
      operationId: P3Api_UpdateAgentCallResponseValue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentCallResponseValueReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentCallResponseValueRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/updateagenthuntgroup:
    post:
      tags:
      - P3Api
      description: Updates the requesting agent's hunt_group_sid.
      operationId: P3Api_UpdateAgentHuntGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentHuntGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentHuntGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/updateagentskill:
    post:
      tags:
      - P3Api
      description: "Updates an agent skill as defined by the request message.\n Errors:\n
        \   - grpc.InvalidArgument: the agent_skill_sid or name in the request is
        invalid."
      operationId: P3Api_UpdateAgentSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentSkillReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentSkillRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/updateagentskills:
    post:
      tags:
      - P3Api
      description: "Updates an agents assigned skills as defined by the skills list
        on\n the request message.\n Errors:\n    - grpc.InvalidArgument: the user_id
        on the request is invalid."
      operationId: P3Api_UpdateAgentSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateAgentSkillsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateAgentSkillsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/updatecustomdatakey:
    post:
      tags:
      - P3Api
      description: "Updates a custom data key with the client_properties_sid and data
        key\n given on the request\n Required Permissions;\n   ORG_EDIT\n Errors:\n
        \   - grpc.InvalidArgument: The client_properties_sid was empty or the data
        key was not set\n    - grpc.Internal: error updating custom data key, more
        than 1 custom data key records affected\n    - grpc.NotFound: no matching
        custom data key found"
      operationId: P3Api_UpdateCustomDataKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateCustomDataKeyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateCustomDataKeyRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/updateextension:
    post:
      tags:
      - P3Api
      description: "Updates an extension as defined by the request message.\n Required
        Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.InvalidArgument: The
        request had invalid or missing fields.\n    - grpc.Internal: An unexpected
        error occurred updating the extension."
      operationId: P3Api_UpdateExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateExtensionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdateExtensionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/updatepbxextension:
    post:
      tags:
      - P3Api
      operationId: P3Api_UpdatePBXExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdatePBXExtensionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdatePBXExtensionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/updatephonebookentry:
    post:
      tags:
      - P3Api
      description: "Updates an existing phone_book as defined by the request message.\n
        Required Permissions:\n    AGENT_MANAGER\n Errors:\n    - grpc.InvalidArgument:
        the fields on the request are missing or invalid.\n    - grpc.Internal: unexpected
        error occurred when saving the phone book."
      operationId: P3Api_UpdatePhoneBookEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdatePhoneBookEntryReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdatePhoneBookEntryRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/updatepreviewrecordtofinished:
    post:
      tags:
      - P3Api
      description: "Updates task data for a preview record to finished and logs an
        agent\n session event"
      operationId: P3Api_UpdatePreviewRecordToFinished
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdatePreviewRecordToFinishedReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.UpdatePreviewRecordToFinishedRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/p3api/updatetaskstatus:
    post:
      tags:
      - P3Api
      operationId: P3Api_UpdateTaskStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v0alpha.UpdateTaskStatusReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v0alpha.Nil'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/createportallinks:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_CreatePortalLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.CreatePortalLinksReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.CreatePortalLinksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/deleteplugininstance:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_DeletePluginInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.DeletePluginInstanceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.DeletePluginInstanceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/deleteportal:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_DeletePortal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.DeletePortalReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.DeletePortalRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/deleteportalconfig:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_DeletePortalConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.DeletePortalConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.DeletePortalConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/deleteportallink:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_DeletePortalLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.DeletePortalLinkReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.DeletePortalLinkRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/getdetailedportal:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_GetDetailedPortal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetDetailedPortalReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.GetDetailedPortalRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/getplugininstance:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_GetPluginInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetPluginInstanceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.GetPluginInstanceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/getportal:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_GetPortal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetPortalReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.GetPortalRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/getportalconfig:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_GetPortalConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetPortalConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.GetPortalConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/getportalconfiglogo:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_GetPortalConfigLogo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetPortalConfigLogoReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.GetPortalConfigLogoRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/getportallink:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_GetPortalLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.GetPortalLinkReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.GetPortalLinkRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/listdetailedportals:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_ListDetailedPortals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListDetailedPortalsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListDetailedPortalsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/listflowfieldnames:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_ListFlowFieldNames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListFlowFieldNamesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListFlowFieldNamesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/listplugininstances:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_ListPluginInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListPluginInstanceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListPluginInstanceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/listpluginsbymethod:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_ListPluginsByMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListPluginsByMethodReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListPluginsByMethodRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/listportalconfigs:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_ListPortalConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListPortalConfigsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListPortalConfigsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/listportallinks:
    post:
      tags:
      - PortalManagerApi
      description: portal links
      operationId: PortalManagerApi_ListPortalLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListPortalLinksReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListPortalLinksRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/listportals:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_ListPortals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.ListPortalsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.ListPortalsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/updateportalconfiglogo:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_UpdatePortalConfigLogo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.UpdatePortalConfigLogoReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.UpdatePortalConfigLogoRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/upsertplugininstance:
    post:
      tags:
      - PortalManagerApi
      description: PluginInstances
      operationId: PortalManagerApi_UpsertPluginInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.UpsertPluginInstanceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.UpsertPluginInstanceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/upsertportal:
    post:
      tags:
      - PortalManagerApi
      description: portals
      operationId: PortalManagerApi_UpsertPortal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.UpsertPortalReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.UpsertPortalRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/portalmanager/upsertportalconfig:
    post:
      tags:
      - PortalManagerApi
      operationId: PortalManagerApi_UpsertPortalConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.integrations.UpsertPortalConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.integrations.UpsertPortalConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/reportgenerator/reportgenerator/createreportjob:
    post:
      tags:
      - BIReportGeneratorService
      description: CreateReportJob creates a new report job.
      operationId: BIReportGeneratorService_CreateReportJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.CreateReportJobRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.CreateReportJobResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/reportgenerator/reportgenerator/deletereportjob:
    post:
      tags:
      - BIReportGeneratorService
      description: DeleteReportJob deletes a report job.
      operationId: BIReportGeneratorService_DeleteReportJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.DeleteReportJobRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.DeleteReportJobResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/reportgenerator/reportgenerator/generatereport:
    post:
      tags:
      - BIReportGeneratorService
      operationId: BIReportGeneratorService_GenerateReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.GenerateReportRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.GenerateReportResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/reportgenerator/reportgenerator/getreportjob:
    post:
      tags:
      - BIReportGeneratorService
      description: GetReportJob gets a report job.
      operationId: BIReportGeneratorService_GetReportJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.GetReportJobRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.GetReportJobResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/reportgenerator/reportgenerator/listreportjobs:
    post:
      tags:
      - BIReportGeneratorService
      description: ListReportJobs lists report jobs.
      operationId: BIReportGeneratorService_ListReportJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.ListReportJobsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.ListReportJobsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/reportgenerator/reportgenerator/updatereportjob:
    post:
      tags:
      - BIReportGeneratorService
      description: UpdateReportJob updates a report job.
      operationId: BIReportGeneratorService_UpdateReportJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.UpdateReportJobRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.UpdateReportJobResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/addroommember:
    post:
      tags:
      - Room303API
      description: "Member\n\n Add a new member to a room, you must be a room admin
        in order to do that"
      operationId: Room303API_AddRoomMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.AddRoomMemberRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Member'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/archive:
    post:
      tags:
      - Room303API
      operationId: Room303API_ArchiveRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.ArchiveRoomRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Room'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/bulkmarkmessageread:
    post:
      tags:
      - Room303API
      operationId: Room303API_BulkMarkMessageRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.BulkMarkMessageReadRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.BulkMarkMessageReadResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/createmessage:
    post:
      tags:
      - Room303API
      description: Message
      operationId: Room303API_CreateMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.CreateMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.CreateMessageResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/createroom:
    post:
      tags:
      - Room303API
      description: Room
      operationId: Room303API_CreateRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.CreateRoomRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Room'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/deletemessage:
    post:
      tags:
      - Room303API
      operationId: Room303API_DeleteMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.DeleteMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.DeleteMessageResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/editmessage:
    post:
      tags:
      - Room303API
      operationId: Room303API_EditMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.EditMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.EditMessageResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/getglobalconfig:
    post:
      tags:
      - Room303API
      description: get global configuration
      operationId: Room303API_GetGlobalConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.GetGlobalConfigRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.GetGlobalConfigResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/getmessages:
    post:
      tags:
      - Room303API
      operationId: Room303API_GetMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.GetMessagesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.GetMessagesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/getroom:
    post:
      tags:
      - Room303API
      operationId: Room303API_GetRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.GetRoomRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Room'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/getroommember:
    post:
      tags:
      - Room303API
      description: gets the member entity from the provided room if it exists
      operationId: Room303API_GetRoomMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.GetRoomMemberRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Member'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/getunreadstats:
    post:
      tags:
      - Room303API
      operationId: Room303API_GetUnreadStats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.GetUnreadStatsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.GetUnreadStatsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/joinroom:
    post:
      tags:
      - Room303API
      description: adds new member to a room and does not require the member to be
        admin
      operationId: Room303API_JoinRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.JoinRoomRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Room'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/listallrooms:
    post:
      tags:
      - Room303API
      operationId: Room303API_ListAllRooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.ListAllRoomsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.ListRoomsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/listroommembers:
    post:
      tags:
      - Room303API
      description: List the members of this room
      operationId: Room303API_ListRoomMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.ListRoomMembersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.ListRoomMembersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/listroomsformember:
    post:
      tags:
      - Room303API
      operationId: Room303API_ListRoomsForMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.ListRoomsForMemberRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.ListRoomsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/listusersnames:
    post:
      tags:
      - Room303API
      description: ListUsersNames returns a list of users with names and ids
      operationId: Room303API_ListUsersNames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.ListUsersNamesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.ListUsersNamesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/markallmessagesread:
    post:
      tags:
      - Room303API
      operationId: Room303API_MarkAllMessagesRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.MarkAllMessagesReadRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.MarkAllMessagesReadResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/markmessageread:
    post:
      tags:
      - Room303API
      operationId: Room303API_MarkMessageRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.MarkMessageReadRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.MarkMessageReadResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/removeroommember:
    post:
      tags:
      - Room303API
      description: Remove room member (kick), the room member will not receive notifications
        from that room
      operationId: Room303API_RemoveRoomMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.RemoveRoomMemberRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.RemoveRoomMemberResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/setadminforroommember:
    post:
      tags:
      - Room303API
      description: Set a room member as admin, you must be a room admin in order to
        do this.
      operationId: Room303API_SetAdminForRoomMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.SetAdminForRoomMemberRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.SetAdminForRoomMemberResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/streammessageupdates:
    post:
      tags:
      - Room303API
      operationId: Room303API_StreamMessageUpdates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.StreamMessageUpdatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.StreamMessageUpdatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/updateglobalconfig:
    post:
      tags:
      - Room303API
      description: update global configuration
      operationId: Room303API_UpdateGlobalConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.UpdateGlobalConfigRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.room303.UpdateGlobalConfigResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/updateroom:
    post:
      tags:
      - Room303API
      description: allow room to be updated
      operationId: Room303API_UpdateRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.UpdateRoomRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Room'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/room303/room303api/updateroomconfig:
    post:
      tags:
      - Room303API
      description: allow room configurations to be updated
      operationId: Room303API_UpdateRoomConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.room303.UpdateRoomConfigRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.commons.Room'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/bulkcreatequestions:
    post:
      tags:
      - Scorecards
      description: BulkCreateQuestions creates library questions by a scorecard id
      operationId: Scorecards_BulkCreateQuestions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.BulkCreateQuestionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.BulkCreateQuestionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/createautoquestion:
    post:
      tags:
      - Scorecards
      description: CreateAutoQuestion creates an auto question
      operationId: Scorecards_CreateAutoQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateAutoQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateAutoQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/createcategory:
    post:
      tags:
      - Scorecards
      description: CreateCategory creates a new scorecards category
      operationId: Scorecards_CreateCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateCategoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateCategoryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/createevaluation:
    post:
      tags:
      - Scorecards
      description: CreateEvaluation creates a new evaluation
      operationId: Scorecards_CreateEvaluation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateEvaluationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateEvaluationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/createevaluationquestion:
    post:
      tags:
      - Scorecards
      description: DEPRECATED. Use CreateEvaluation to create evaluation sub-entities.
      operationId: Scorecards_CreateEvaluationQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateEvaluationQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateEvaluationQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/createquestion:
    post:
      tags:
      - Scorecards
      description: CreateQuestion creates a new library question
      operationId: Scorecards_CreateQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/createquestioncategory:
    post:
      tags:
      - Scorecards
      description: CreateQuestionCategory links a scorecard question and category
      operationId: Scorecards_CreateQuestionCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateQuestionCategoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateQuestionCategoryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/createscorecard:
    post:
      tags:
      - Scorecards
      description: CreateScorecard creates a new scorecard
      operationId: Scorecards_CreateScorecard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateScorecardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateScorecardResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/createscorecardquestion:
    post:
      tags:
      - Scorecards
      description: CreateScorecardQuestion creates a scorecard scorecard question
      operationId: Scorecards_CreateScorecardQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateScorecardQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateScorecardQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/createsection:
    post:
      tags:
      - Scorecards
      description: CreateSection creates a new scorecards section
      operationId: Scorecards_CreateSection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateSectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateSectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/createsmartquestion:
    post:
      tags:
      - Scorecards
      description: CreateSmartQuestion creates a scorecard smart question.
      operationId: Scorecards_CreateSmartQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateSmartQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.CreateSmartQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/deleteautoevaluation:
    post:
      tags:
      - Scorecards
      description: DeleteAutoEvaluation deletes an auto evaluations
      operationId: Scorecards_DeleteAutoEvaluation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteAutoEvaluationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteAutoEvaluationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/deleteautoquestion:
    post:
      tags:
      - Scorecards
      description: DeleteAutoQuestion deletes an auto question
      operationId: Scorecards_DeleteAutoQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteAutoQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteAutoQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/deletecategory:
    post:
      tags:
      - Scorecards
      description: DeleteCategory deletes a scorecard category
      operationId: Scorecards_DeleteCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteCategoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteCategoryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/deleteevaluation:
    post:
      tags:
      - Scorecards
      description: DeleteEvaluation gets an evaluation
      operationId: Scorecards_DeleteEvaluation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteEvaluationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteEvaluationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/deleteevaluationquestion:
    post:
      tags:
      - Scorecards
      description: DeleteEvaluationQuestion creates an evaluation question
      operationId: Scorecards_DeleteEvaluationQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteEvaluationQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteEvaluationQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/deletequestion:
    post:
      tags:
      - Scorecards
      description: DeleteQuestion deletes a library question
      operationId: Scorecards_DeleteQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/deletequestioncategory:
    post:
      tags:
      - Scorecards
      description: DeleteQuestionCategory deletes link between a scorecard question
        and category
      operationId: Scorecards_DeleteQuestionCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteQuestionCategoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteQuestionCategoryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/deletescorecard:
    post:
      tags:
      - Scorecards
      description: DeleteScorecard deletes a scorecard
      operationId: Scorecards_DeleteScorecard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteScorecardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteScorecardResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/deletescorecardquestion:
    post:
      tags:
      - Scorecards
      description: DeleteScorecardQuestion deletes a scorecard question
      operationId: Scorecards_DeleteScorecardQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteScorecardQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteScorecardQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/deletesection:
    post:
      tags:
      - Scorecards
      description: DeleteSection deletes a scorecard section
      operationId: Scorecards_DeleteSection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteSectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteSectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/deletesmartevaluation:
    post:
      tags:
      - Scorecards
      description: DeleteSmartEvaluation deletes a smart evaluation
      operationId: Scorecards_DeleteSmartEvaluation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteSmartEvaluationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteSmartEvaluationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/deletesmartquestion:
    post:
      tags:
      - Scorecards
      description: DeleteSmartQuestion deletes a smart question.
      operationId: Scorecards_DeleteSmartQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteSmartQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteSmartQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/getautoevaluation:
    post:
      tags:
      - Scorecards
      description: GetAutoEvaluation gets an auto evaluation
      operationId: Scorecards_GetAutoEvaluation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.GetAutoEvaluationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.GetAutoEvaluationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/getautoquestion:
    post:
      tags:
      - Scorecards
      description: GetAutoQuestion gets an auto question
      operationId: Scorecards_GetAutoQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.GetAutoQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.GetAutoQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/getcategory:
    post:
      tags:
      - Scorecards
      description: GetCategory gets a scorecard category
      operationId: Scorecards_GetCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.GetCategoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.GetCategoryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/getevaluation:
    post:
      tags:
      - Scorecards
      description: GetEvaluation gets an evaluation
      operationId: Scorecards_GetEvaluation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.GetEvaluationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.GetEvaluationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/getquestion:
    post:
      tags:
      - Scorecards
      description: GetQuestion gets a library question
      operationId: Scorecards_GetQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.GetQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.GetQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/getscorecard:
    post:
      tags:
      - Scorecards
      description: GetScorecard gets a scorecard by ID
      operationId: Scorecards_GetScorecard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.GetScorecardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.GetScorecardResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/getscorecardquestion:
    post:
      tags:
      - Scorecards
      description: GetScorecardQuestion gets a scorecard question
      operationId: Scorecards_GetScorecardQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.GetScorecardQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.GetScorecardQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/getsection:
    post:
      tags:
      - Scorecards
      description: GetSection gets a scorecard section
      operationId: Scorecards_GetSection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.GetSectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.GetSectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/getsmartevaluation:
    post:
      tags:
      - Scorecards
      description: GetSmartEvaluation gets a smart evaluation
      operationId: Scorecards_GetSmartEvaluation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.GetSmartEvaluationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.GetSmartEvaluationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/listautoevaluations:
    post:
      tags:
      - Scorecards
      description: ListAutoEvaluations gets a list of auto evaluations
      operationId: Scorecards_ListAutoEvaluations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.ListAutoEvaluationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.ListAutoEvaluationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/listcategories:
    post:
      tags:
      - Scorecards
      description: ListCategories lists scorecards categories
      operationId: Scorecards_ListCategories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.ListCategoriesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.ListCategoriesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/listevaluations:
    post:
      tags:
      - Scorecards
      description: ListEvaluations gets a list of evaluations
      operationId: Scorecards_ListEvaluations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.ListEvaluationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.ListEvaluationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/listquestions:
    post:
      tags:
      - Scorecards
      description: ListQuestions lists library questions
      operationId: Scorecards_ListQuestions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.ListQuestionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.ListQuestionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/listscorecards:
    post:
      tags:
      - Scorecards
      description: ListScorecards lists scorecards
      operationId: Scorecards_ListScorecards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.ListScorecardsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.ListScorecardsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/listsections:
    post:
      tags:
      - Scorecards
      description: ListSections lists scorecards sections
      operationId: Scorecards_ListSections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.ListSectionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.ListSectionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/listsmartevaluations:
    post:
      tags:
      - Scorecards
      description: ListSmartEvaluations lists smart evaluations
      operationId: Scorecards_ListSmartEvaluations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.ListSmartEvaluationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.ListSmartEvaluationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/previewevaluationscore:
    post:
      tags:
      - Scorecards
      description: PreviewEvaluationScore previews the score for an evaluation
      operationId: Scorecards_PreviewEvaluationScore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.PreviewEvaluationScoreRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.PreviewEvaluationScoreResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/restoreevaluation:
    post:
      tags:
      - Scorecards
      description: RestoreEvaluation restores an evaluation previously deleted.
      operationId: Scorecards_RestoreEvaluation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.RestoreEvaluationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.RestoreEvaluationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/samplecallsbycategory:
    post:
      tags:
      - Scorecards
      description: SampleCallsByCategory
      operationId: Scorecards_SampleCallsByCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.SampleCallsByCategoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.SampleCallsByCategoryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/scoreevaluation:
    post:
      tags:
      - Scorecards
      description: GetEvaluation gets an evaluation
      operationId: Scorecards_ScoreEvaluation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.ScoreEvaluationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.ScoreEvaluationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/streamautoevaluations:
    post:
      tags:
      - Scorecards
      description: StreamAutoEvaluations streams a list of auto evaluations
      operationId: Scorecards_StreamAutoEvaluations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.StreamAutoEvaluationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.StreamAutoEvaluationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/updateautoquestion:
    post:
      tags:
      - Scorecards
      description: UpdateAutoQuestion updates an auto question
      operationId: Scorecards_UpdateAutoQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateAutoQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateAutoQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/updatecategory:
    post:
      tags:
      - Scorecards
      description: UpdateCategory updates a scorecard category
      operationId: Scorecards_UpdateCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateCategoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateCategoryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/updateevaluation:
    post:
      tags:
      - Scorecards
      description: UpdateEvaluation updates an evaluation
      operationId: Scorecards_UpdateEvaluation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateEvaluationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateEvaluationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/updateevaluationquestion:
    post:
      tags:
      - Scorecards
      description: UpdateEvaluationQuestion updates an existing evaluation question
      operationId: Scorecards_UpdateEvaluationQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateEvaluationQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateEvaluationQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/updatequestion:
    post:
      tags:
      - Scorecards
      description: UpdateQuestion updates a library question
      operationId: Scorecards_UpdateQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/updatescorecard:
    post:
      tags:
      - Scorecards
      description: UpdateScorecard updates an existing scorecard
      operationId: Scorecards_UpdateScorecard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateScorecardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateScorecardResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/updatescorecardquestion:
    post:
      tags:
      - Scorecards
      description: UpdateScorecardQuestion updates a scorecard question
      operationId: Scorecards_UpdateScorecardQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateScorecardQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateScorecardQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/updatesection:
    post:
      tags:
      - Scorecards
      description: UpdateSection updates a scorecard section
      operationId: Scorecards_UpdateSection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateSectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateSectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecards/updatesmartquestion:
    post:
      tags:
      - Scorecards
      description: UpdateSmartQuestion updates a smart question.
      operationId: Scorecards_UpdateSmartQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateSmartQuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.UpdateSmartQuestionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecardssupport/bulkdeleteautoevaluations:
    post:
      tags:
      - ScorecardsSupport
      description: BulkDeleteAutoEvaluations deletes a set of auto evaluations in
        a given org.
      operationId: ScorecardsSupport_BulkDeleteAutoEvaluations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.BulkDeleteAutoEvaluationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.BulkDeleteAutoEvaluationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecardssupport/bulkdeleteevaluations:
    post:
      tags:
      - ScorecardsSupport
      description: BulkDeleteEvaluations deletes a set of evaluations in a given org.
      operationId: ScorecardsSupport_BulkDeleteEvaluations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.BulkDeleteEvaluationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.BulkDeleteEvaluationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecardssupport/deleteautoevaluationbyorgid:
    post:
      tags:
      - ScorecardsSupport
      description: DeleteAutoEvaluationByOrgId deletes an auto evaluations
      operationId: ScorecardsSupport_DeleteAutoEvaluationByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteAutoEvaluationByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteAutoEvaluationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecardssupport/deleteevaluationbyorgid:
    post:
      tags:
      - ScorecardsSupport
      description: DeleteEvaluationByOrgId delete an evaluation in a specific org
      operationId: ScorecardsSupport_DeleteEvaluationByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteEvaluationByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteEvaluationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecardssupport/listautoevaluationsbyorgid:
    post:
      tags:
      - ScorecardsSupport
      description: ListAutoEvaluationsByOrgId gets a list of auto evaluations
      operationId: ScorecardsSupport_ListAutoEvaluationsByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.ListAutoEvaluationsByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.ListAutoEvaluationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecardssupport/listcategoriesbyorgid:
    post:
      tags:
      - ScorecardsSupport
      description: ListCategoriesByOrgId lists categories
      operationId: ScorecardsSupport_ListCategoriesByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.ListCategoriesByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.ListCategoriesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecardssupport/listevaluationsbyorgid:
    post:
      tags:
      - ScorecardsSupport
      description: ListEvaluationsByOrgId gets a list of evaluations by org id
      operationId: ScorecardsSupport_ListEvaluationsByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.ListEvaluationsByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.ListEvaluationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/scorecards/scorecardssupport/listscorecardsbyorgid:
    post:
      tags:
      - ScorecardsSupport
      description: ListScorecardsByOrgId lists scorecards
      operationId: ScorecardsSupport_ListScorecardsByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.scorecards.ListScorecardsByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.scorecards.ListScorecardsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/sentinel/sendevents:
    post:
      tags:
      - Sentinel
      description: Send a json blob of ui events and logs.
      operationId: Sentinel_SendEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.sentinel.SendEventsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.sentinel.SendEventsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/assignownskillgroups:
    post:
      tags:
      - SkillsService
      description: AssignOwnSkillGroups updates the current users skill groups
      operationId: SkillsService_AssignOwnSkillGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.AssignOwnSkillGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.AssignOwnSkillGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/assignskillgroups:
    post:
      tags:
      - SkillsService
      description: AssignSkillGroups assigns a user to the given skill groups.
      operationId: SkillsService_AssignSkillGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.AssignSkillGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.AssignSkillGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/createskillgroup:
    post:
      tags:
      - SkillsService
      description: CreateSkillGroup creates a new skill group.
      operationId: SkillsService_CreateSkillGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.CreateSkillGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.CreateSkillGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/deleteskillgroup:
    post:
      tags:
      - SkillsService
      description: DeleteSkillGroup deletes a skill group.
      operationId: SkillsService_DeleteSkillGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.DeleteSkillGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.DeleteSkillGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/getagentskills:
    post:
      tags:
      - SkillsService
      description: "Gets the skills of the requesting agent. This includes agent skills,
        hunt group skills, and extension skills(PBX).\n Skills will be returned as
        a value pair (name, level).\n For agent skills, the name of each skill will
        be the agent_skill_sid.\n All other skills' names (hunt group and PBX) will
        be given special formats.\n The requesting agent and hunt_group_sid skills
        will be defaulted to the max level (1000 and 100 respectively).\n\n Required
        permissions:\n   NONE\n Errors:\n   - grpc.Invalid: the hunt_group_sid in
        the request in invalid."
      operationId: SkillsService_GetAgentSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.GetAgentSkillsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.GetAgentSkillsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/getskillgroup:
    post:
      tags:
      - SkillsService
      description: GetSkillGroup gets a single skill group.
      operationId: SkillsService_GetSkillGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.GetSkillGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.GetSkillGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/getskillgroupmembers:
    post:
      tags:
      - SkillsService
      description: GetSkillGroupMembers gets the members of a skill group.
      operationId: SkillsService_GetSkillGroupMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.GetSkillGroupMembersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.GetSkillGroupMembersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/getuserskillgroups:
    post:
      tags:
      - SkillsService
      description: GetUserSkillGroups gets the skill groups assigned to a user.
      operationId: SkillsService_GetUserSkillGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.GetUserSkillGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.GetUserSkillGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/getuserskills:
    post:
      tags:
      - SkillsService
      description: GetUserSkills gets a user's skill proficiencies.
      operationId: SkillsService_GetUserSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.GetUserSkillsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.GetUserSkillsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/listassignedskillgroups:
    post:
      tags:
      - SkillsService
      description: Returns a list of skills for the current user.
      operationId: SkillsService_ListAssignedSkillGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.ListAssignedSkillGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.ListAssignedSkillGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/listskillgroups:
    post:
      tags:
      - SkillsService
      description: ListSkillGroups lists the skill groups belonging to an organization.
      operationId: SkillsService_ListSkillGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.ListSkillGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.ListSkillGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/listskillgroupsmembers:
    post:
      tags:
      - SkillsService
      description: ListSkillGroupsMembers gets the members of a skill group for each
        skill group in an Org.
      operationId: SkillsService_ListSkillGroupsMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.ListSkillGroupsMembersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.ListSkillGroupsMembersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/listskillsforcurrentagent:
    post:
      tags:
      - SkillsService
      description: Returns a list of skills for the current agent.
      operationId: SkillsService_ListSkillsForCurrentAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.ListSkillsForCurrentAgentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.ListSkillsForCurrentAgentResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/removeskillfromallgroups:
    post:
      tags:
      - SkillsService
      description: RemoveSkillFromAllGroups removes a skill from all skill groups
        which contain it.
      operationId: SkillsService_RemoveSkillFromAllGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.RemoveSkillFromAllGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.RemoveSkillFromAllGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/revokeownskillgroups:
    post:
      tags:
      - SkillsService
      description: RevokeOwnSkillGroups updates the current users skill groups
      operationId: SkillsService_RevokeOwnSkillGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.RevokeOwnSkillGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.RevokeOwnSkillGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/revokeskillgroups:
    post:
      tags:
      - SkillsService
      description: RevokeSkillGroups revokes the given skill groups from a user.
      operationId: SkillsService_RevokeSkillGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.RevokeSkillGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.RevokeSkillGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/updateskillgroup:
    post:
      tags:
      - SkillsService
      description: UpdateSkillGroup updates a single skill group.
      operationId: SkillsService_UpdateSkillGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.UpdateSkillGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.UpdateSkillGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/skills/updateuseronskillgroup:
    post:
      tags:
      - SkillsService
      description: UpdateUsersOnSkillGroup updates a skill groups assigned users.
      operationId: SkillsService_UpdateUsersOnSkillGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.skills.UpdateUsersOnSkillGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.skills.UpdateUsersOnSkillGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/srec/srec/deletescreenrecording:
    post:
      tags:
      - Srec
      description: DeleteScreenRecording deletes a screen recording.
      operationId: Srec_DeleteScreenRecording
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.srec.DeleteScreenRecordingRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.srec.DeleteScreenRecordingResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/srec/srec/getscreenrecordingurl:
    post:
      tags:
      - Srec
      description: GetScreenRecordingURL returns the screen recording url.
      operationId: Srec_GetScreenRecordingURL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.srec.GetScreenRecordingURLRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.srec.GetScreenRecordingURLResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/srec/srec/listscreenrecordings:
    post:
      tags:
      - Srec
      description: ListScreenRecordings returns screen recordings.
      operationId: Srec_ListScreenRecordings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.srec.ListScreenRecordingsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.srec.ListScreenRecordingsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/addentityref:
    post:
      tags:
      - Tickets
      description: Public method to addEntityRef
      operationId: Tickets_AddEntityRef
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.AddEntityRefRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.AddEntityRefResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/assignself:
    post:
      tags:
      - Tickets
      description: Public method to assign a ticket
      operationId: Tickets_AssignSelf
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.CreateSelfAssignReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.CreateSelfAssignRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/assignticket:
    post:
      tags:
      - Tickets
      description: "Public method to assign ticket\n Would be deprecated"
      operationId: Tickets_AssignTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.AssignTicketReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.AssignTicketRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/assignticketaction:
    post:
      tags:
      - Tickets
      description: Public method to assign a ticket action
      operationId: Tickets_AssignTicketAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.AssignTicketActionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.AssignTicketActionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/assigntickettemplate:
    post:
      tags:
      - Tickets
      description: Public method to assign a Template To a Project
      operationId: Tickets_AssignTicketTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.AssignProjectTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.AssignProjectTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/auditlog:
    post:
      tags:
      - Tickets
      description: Public method to List audit log for Ticketing system
      operationId: Tickets_ListTicketAuditLog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListTicketAuditLogReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListTicketAuditLogRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/changeticketstatus:
    post:
      tags:
      - Tickets
      description: Public method to change the Status of a ticket
      operationId: Tickets_ChangeTicketStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ChangeTicketStatusRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ChangeTicketStatusResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/closeticket:
    post:
      tags:
      - Tickets
      description: "Public Method to Close a ticket\n Any agent can close the ticket.
        No BE validation required"
      operationId: Tickets_CloseTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.CloseTicketReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.CloseTicketRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/closeticketaction:
    post:
      tags:
      - Tickets
      description: Any agent can close the ticket. No BE validation required
      operationId: Tickets_CloseTicketAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.CloseTicketActionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.CloseTicketActionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/createcomment:
    post:
      tags:
      - Tickets
      description: Public Method to create a Comment.
      operationId: Tickets_CreateComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.CreateCommentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.CreateCommentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/createsla:
    post:
      tags:
      - Tickets
      description: Public Method to create a sla.
      operationId: Tickets_CreateSLA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.CreateSlaReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.CreateSlaRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/createticket:
    post:
      tags:
      - Tickets
      description: Public Method to create a ticket.
      operationId: Tickets_CreateTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.CreateTicketReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.CreateTicketRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/createticketaction:
    post:
      tags:
      - Tickets
      description: Public method to assign a ticket
      operationId: Tickets_CreateTicketAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.CreateTicketActionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.CreateTicketActionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/createtickettemplate:
    post:
      tags:
      - Tickets
      description: Public method to create a Ticket Template
      operationId: Tickets_CreateTicketTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.CreateTicketTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.CreateTicketTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/editmaskticket:
    post:
      tags:
      - Tickets
      description: "Public Method to edit a ticket.\n EditTicket would be deprecated"
      operationId: Tickets_EditMaskTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.EditMaskTicketReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.EditMaskTicketRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/editticket:
    post:
      tags:
      - Tickets
      description: Public Method to edit a ticket.
      operationId: Tickets_EditTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.EditTicketReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.EditTicketRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/edittickettemplate:
    post:
      tags:
      - Tickets
      description: Public method to Edit a Ticket Template
      operationId: Tickets_EditTicketTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.EditTicketTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.EditTicketTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/enableproject:
    post:
      tags:
      - Tickets
      description: Public method to Enable Project for Ticketing system
      operationId: Tickets_EnableProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.EnableProjectReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.EnableProjectRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/getallActiontype:
    post:
      tags:
      - Tickets
      description: Public method to list all Action Types
      operationId: Tickets_GetAllActionType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.GetActionTypeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.GetActionTypeResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/getphonenumbertype:
    post:
      tags:
      - Tickets
      description: Public method to list all Action Types
      operationId: Tickets_GetPhoneNumberType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.GetPhoneNumberTypeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.GetPhoneNumberTypeResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/listagenttickets:
    post:
      tags:
      - Tickets
      description: public method - to return list of available tickets to pick for
        an Agent
      operationId: Tickets_ListAgentTickets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListAgentTicketsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListAgentTicketsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/listallocatedtickets:
    post:
      tags:
      - Tickets
      operationId: Tickets_ListAllocatedTickets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListAllocatedTicketReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListAllocatedTicketRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/listavailableagenttickets:
    post:
      tags:
      - Tickets
      description: public method - to return list of available tickets to pick for
        an Agent
      operationId: Tickets_ListAvailableAgentTickets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListAvailableAgentTicketsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListAvailableAgentTicketsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/listentityrefsbyticket:
    post:
      tags:
      - Tickets
      description: Public method to listEntityRefsByTicket
      operationId: Tickets_ListEntityRefsByTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListEntityRefsByTicketRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListEntityRefsByTicketResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/listprojects:
    post:
      tags:
      - Tickets
      description: Public method to List projects enabled for Ticketing system
      operationId: Tickets_ListEnabledProjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListEnabledProjectsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListEnabledProjectsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/listskills:
    post:
      tags:
      - Tickets
      description: public method to fetch list of skills for a tickets user
      operationId: Tickets_ListSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListSkillsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListSkillsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/listsla:
    post:
      tags:
      - Tickets
      description: Public method to list sla
      operationId: Tickets_ListSLA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListSlaReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListSlaRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/listslacondition:
    post:
      tags:
      - Tickets
      description: Public method to list sla_condition
      operationId: Tickets_ListSLACondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListSlaConditionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListSlaConditionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/listtickets:
    post:
      tags:
      - Tickets
      description: Public method to list tickets
      operationId: Tickets_ListTickets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListTicketsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListTicketsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/listticketsbyentityref:
    post:
      tags:
      - Tickets
      description: Public method to listTicketsByEntityRef
      operationId: Tickets_ListTicketsByEntityRef
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListTicketsByEntityRefRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListTicketsByEntityRefResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/listtickettemplate:
    post:
      tags:
      - Tickets
      description: Public method to all Ticket Templates
      operationId: Tickets_ListTicketTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListTicketTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListTicketTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/listusers:
    post:
      tags:
      - Tickets
      description: public method to fetch list of users for a tickets user
      operationId: Tickets_ListUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ListUsersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ListUsersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/replycomment:
    post:
      tags:
      - Tickets
      description: Public method to list sla_condition
      operationId: Tickets_ReplyComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ReplyCommentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ReplyCommentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/updatesla:
    post:
      tags:
      - Tickets
      description: Public method to update sla
      operationId: Tickets_UpdateSLA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.UpdateSlaReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.UpdateSlaRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/tickets/tickets/viewticket:
    post:
      tags:
      - Tickets
      description: Public method to view ticket
      operationId: Tickets_ViewTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.tickets.ViewTicketReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.tickets.ViewTicketRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/addgroupeduseriprestrictions:
    post:
      tags:
      - Org
      description: "AddGroupedUserIPRestrictions adds a user or list of user's IPs
        they\n are required to authenticate with"
      operationId: Org_AddGroupedUserIPRestrictions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AddGroupedUserIPRestrictionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AddGroupedUserIPRestrictionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/admin/get:
    post:
      tags:
      - Org
      description: "GetUserByOrgId returns a single user by UserId and OrgId\n Requires
        Customer Support permission and allows cross Org requests."
      operationId: Org_GetUserByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetUserByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetUserByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/admin/update/password:
    post:
      tags:
      - Org
      description: GetUserPasswordResetLinkByOrgId gets a link to update a user's
        password.
      operationId: Org_GetUserPasswordResetLinkByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetUserPasswordResetLinkByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetUserPasswordResetLinkByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/admin/update/userdisabled:
    post:
      tags:
      - Org
      description: UpdateUserDisabledByOrgId updates a user is disabled.
      operationId: Org_UpdateUserDisabledByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserDisabledByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserDisabledByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/createpasswordresetlink:
    post:
      tags:
      - Org
      description: CreatePasswordResetLink creates a password reset link for the given
        user id.
      operationId: Org_CreatePasswordResetLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreatePasswordResetLinkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreatePasswordResetLinkResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/createpasswordresetlinkbyorgid:
    post:
      tags:
      - Org
      description: CreatePasswordResetLinkByOrgId creates a password reset link for
        the given user id.
      operationId: Org_CreatePasswordResetLinkByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.CreatePasswordResetLinkByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.CreatePasswordResetLinkByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/enablemyusermfa:
    post:
      tags:
      - Org
      description: EnableMyUserMfa enables mfa for the current user
      operationId: Org_EnableMyUserMfa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.EnableMyUserMfaRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.EnableMyUserMfaResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/enableusermfa:
    post:
      tags:
      - Org
      description: EnableUserMfa enables or disables mfa for the given user
      operationId: Org_EnableUserMfa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.EnableUserMfaRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.EnableUserMfaResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/generatetotpsecret:
    post:
      tags:
      - Org
      description: "GenerateTOTPSecret generates a new TOTP secret key for the current
        user and\n returns it with a url to be displayed as a QR code that can be
        scanned\n by an authenticator app."
      operationId: Org_GenerateTOTPSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GenerateTOTPSecretRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GenerateTOTPSecretResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/get:
    post:
      tags:
      - Org
      description: GetUser returns a single user by UserId or by AgentSid.
      operationId: Org_GetUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/getmy:
    post:
      tags:
      - Org
      description: GetMyUser returns a single user by UserId or by AgentSid.
      operationId: Org_GetMyUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetMyUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetMyUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/getmyallowedmfamethods:
    post:
      tags:
      - Org
      description: GetMyAllowedMfaMethods returns the mfa methods allowed to the current
        user.
      operationId: Org_GetMyAllowedMfaMethods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetMyAllowedMfaMethodsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetMyAllowedMfaMethodsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/getmyusermfainfo:
    post:
      tags:
      - Org
      description: GetMyUserMfaInfo returns the mfa info for the current user.
      operationId: Org_GetMyUserMfaInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetMyUserMfaInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetMyUserMfaInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/getusermfainfo:
    post:
      tags:
      - Org
      description: GetUserMfaInfo returns the mfa info for the given user.
      operationId: Org_GetUserMfaInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetUserMfaInfoRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetUserMfaInfoResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/list:
    post:
      tags:
      - Org
      description: ListUsers returns a list of users.
      operationId: Org_ListUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListUsersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListUsersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/list/region:
    post:
      tags:
      - Org
      description: ListUsersByRegion returns a list of usersByRegion.
      operationId: Org_ListUsersByRegion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListUsersByRegionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListUsersByRegionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/listByOrgId:
    post:
      tags:
      - Org
      description: ListUsersByOrgId returns a list of users.
      operationId: Org_ListUsersByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListUsersByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListUsersByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/listPublicUsers:
    post:
      tags:
      - Org
      description: ListPublicUsers returns a list of users with limited data for most
        applications.
      operationId: Org_ListPublicUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListPublicUsersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListPublicUsersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/listUsersAllowedIps:
    post:
      tags:
      - Org
      description: ListUsersAllowedIps -
      operationId: Org_ListUsersAllowedIps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListUsersAllowedIpsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListUsersAllowedIpsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/refreshmfalockout:
    post:
      tags:
      - Org
      description: RefreshMfaLockout resets the lockout timer for the given user.
      operationId: Org_RefreshMfaLockout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RefreshMfaLockoutRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RefreshMfaLockoutResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/refreshmfalockoutbyorgid:
    post:
      tags:
      - Org
      description: RefreshMfaLockoutByOrgId resets the lockout timer for the given
        user and org id.
      operationId: Org_RefreshMfaLockoutByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RefreshMfaLockoutByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RefreshMfaLockoutByOrgIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/removegroupeduseriprestrictions:
    post:
      tags:
      - Org
      description: "RemoveGroupedUserIPRestrictions removes a user or list of user's
        IPs they\n are required to authenticate with"
      operationId: Org_RemoveGroupedUserIPRestrictions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RemoveGroupedUserIPRestrictionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RemoveGroupedUserIPRestrictionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/setmfatype:
    post:
      tags:
      - Org
      description: SetMfaType sets the given user's mfa type.
      operationId: Org_SetMfaType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.SetMfaTypeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.SetMfaTypeResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/setmymfatype:
    post:
      tags:
      - Org
      description: SetMyMfaType sets the current user's mfa type.
      operationId: Org_SetMyMfaType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.SetMyMfaTypeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.SetMyMfaTypeResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/subscription/add:
    post:
      tags:
      - Org
      description: Creates a new user subscription.
      operationId: Org_AddUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AddUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AddUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/subscription/addByUserId:
    post:
      tags:
      - Org
      description: Creates a new user subscription for a specified user with in requested
        users org.
      operationId: Org_AddUserSubscriptionByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.AddUserSubscriptionByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.AddUserSubscriptionByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/subscription/get:
    post:
      tags:
      - Org
      description: Gets a user subscription.
      operationId: Org_GetUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/subscription/getByUserId:
    post:
      tags:
      - Org
      description: Gets a user subscription for a specified user with in requested
        users org.
      operationId: Org_GetUserSubscriptionByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetUserSubscriptionByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetUserSubscriptionByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/subscription/list:
    post:
      tags:
      - Org
      description: Lists user subscriptions.
      operationId: Org_ListUserSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListUserSubscriptionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListUserSubscriptionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/subscription/listByOrgId:
    post:
      tags:
      - Org
      description: Lists subscriptions for multiple users in an org.
      operationId: Org_ListOrgSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListOrgSubscriptionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListOrgSubscriptionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/subscription/listByUserId:
    post:
      tags:
      - Org
      description: Lists user subscriptions.
      operationId: Org_ListUserSubscriptionsByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.ListUserSubscriptionsByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.ListUserSubscriptionsByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/subscription/remove:
    post:
      tags:
      - Org
      description: Remove a user subscription.
      operationId: Org_RemoveUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RemoveUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RemoveUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/subscription/removeByUserId:
    post:
      tags:
      - Org
      description: Remove a user subscription by a given user id
      operationId: Org_RemoveUserSubscriptionByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.RemoveUserSubscriptionByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.RemoveUserSubscriptionByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/subscription/update:
    post:
      tags:
      - Org
      description: Updates a user subscription for the current user
      operationId: Org_UpdateUserSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserSubscriptionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserSubscriptionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/subscription/updateByUserId:
    post:
      tags:
      - Org
      description: Updates a user subscription for a given user id
      operationId: Org_UpdateUserSubscriptionByUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserSubscriptionByUserIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserSubscriptionByUserIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/update:
    post:
      tags:
      - Org
      description: UpdateUser updates a user.
      operationId: Org_UpdateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/update/callerid:
    post:
      tags:
      - Org
      description: UpdateUserCallerId updates a user.
      operationId: Org_UpdateUserCallerId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserCallerIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserCallerIdResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/update/me:
    post:
      tags:
      - Org
      description: UpdateMyUser updates a user.
      operationId: Org_UpdateMyUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateMyUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateMyUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/update/password:
    post:
      tags:
      - Org
      description: GetUserPasswordResetLink gets a link to update a user's password.
      operationId: Org_GetUserPasswordResetLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetUserPasswordResetLinkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetUserPasswordResetLinkResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/update/passwordmy:
    post:
      tags:
      - Org
      description: GetMyUserPasswordResetLink updates a user's password.
      operationId: Org_GetMyUserPasswordResetLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.GetMyUserPasswordResetLinkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.GetMyUserPasswordResetLinkResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/update/userdisabled:
    post:
      tags:
      - Org
      description: UpdateUserDisabled updates whether a user is disabled.
      operationId: Org_UpdateUserDisabled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserDisabledRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserDisabledResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/updateuserlabels:
    post:
      tags:
      - Org
      description: UpdateUserLabels updates a user's labels to be the passed in set
        of labels.
      operationId: Org_UpdateUserLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserLabelsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.UpdateUserLabelsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/user/verifytotpcode:
    post:
      tags:
      - Org
      description: VerifyTOTPCode validates that the given TOTP code and verifies
        that the user has setup TOTP correctly.
      operationId: Org_VerifyTOTPCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.org.VerifyTOTPCodeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.org.VerifyTOTPCodeResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/notifier/notifier/getnotify:
    post:
      tags:
      - Notifier
      description: GetNotify returns a notify.
      operationId: Notifier_GetNotify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.notifier.GetNotifyRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.notifier.Notify'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/audit:
    post:
      tags:
      - Vanalytics
      description: "Audit audits the used transcription audio time for a client. The
        window\n of time to audit can be widened or narrowed using the request since
        and\n until fields."
      operationId: Vanalytics_Audit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.AuditRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.AuditResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/bulkcreateflagreview:
    post:
      tags:
      - Vanalytics
      description: BulkCreateFlagReview creates flag reviews.
      operationId: Vanalytics_BulkCreateFlagReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.BulkCreateFlagReviewRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.BulkCreateFlagReviewResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/bulkdeletetranscripts:
    post:
      tags:
      - Vanalytics
      description: BulkDeleteTranscripts bulk deletes transcripts matching the provided
        query.
      operationId: Vanalytics_BulkDeleteTranscripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.BulkDeleteTranscriptsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.BulkDeleteTranscriptsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/bulkrestoretranscripts:
    post:
      tags:
      - Vanalytics
      description: BulkRestoreTranscripts bulk restores transcripts matching the provided
        query.
      operationId: Vanalytics_BulkRestoreTranscripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.BulkRestoreTranscriptsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.BulkRestoreTranscriptsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/createcorrection:
    post:
      tags:
      - Vanalytics
      description: CreateCorrection creates a correction.
      operationId: Vanalytics_CreateCorrection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.CreateCorrectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.CreateCorrectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/createfilter:
    post:
      tags:
      - Vanalytics
      description: "CreateFilter creates a new filter. The filter contains a search
        request\n to filter transcripts."
      operationId: Vanalytics_CreateFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.CreateFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.Filter'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/createflag:
    post:
      tags:
      - Vanalytics
      description: CreateFlag creates a new flag.
      operationId: Vanalytics_CreateFlag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.CreateFlagRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/createflagfilter:
    post:
      tags:
      - Vanalytics
      description: DEPRECATED.
      operationId: Vanalytics_CreateFlagFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.CreateFlagFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagFilter'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/createflagreview:
    post:
      tags:
      - Vanalytics
      description: CreateFlagReview creates a flag review.
      operationId: Vanalytics_CreateFlagReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.CreateFlagReviewRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagReview'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/createflagtranscript:
    post:
      tags:
      - Vanalytics
      description: CreateFlagTranscript creates a flag transcript.
      operationId: Vanalytics_CreateFlagTranscript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.CreateFlagTranscriptRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.CreateFlagTranscriptResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/deletecorrection:
    post:
      tags:
      - Vanalytics
      description: DeleteCorrection deletes a correction.
      operationId: Vanalytics_DeleteCorrection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.DeleteCorrectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.DeleteCorrectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/deletefilter:
    post:
      tags:
      - Vanalytics
      description: DeleteFilter deletes filter given a filter_sid.
      operationId: Vanalytics_DeleteFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.DeleteFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.DeleteFilterResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/deleteflag:
    post:
      tags:
      - Vanalytics
      description: DeleteFlag deletes the flag identified by the given flag_sid.
      operationId: Vanalytics_DeleteFlag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.DeleteFlagRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.DeleteFlagResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/deleteflagfilter:
    post:
      tags:
      - Vanalytics
      description: DEPRECATED.
      operationId: Vanalytics_DeleteFlagFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.DeleteFlagFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.DeleteFlagFilterResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/getcorrection:
    post:
      tags:
      - Vanalytics
      description: GetCorrection gets a correction.
      operationId: Vanalytics_GetCorrection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.GetCorrectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.Correction'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/getfilter:
    post:
      tags:
      - Vanalytics
      description: GetFilter gets filter given a filter_sid, name or search request.
      operationId: Vanalytics_GetFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.GetFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.Filter'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/getflag:
    post:
      tags:
      - Vanalytics
      description: GetFlag gets a flag.
      operationId: Vanalytics_GetFlag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.GetFlagRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/getrecordingurl:
    post:
      tags:
      - Vanalytics
      description: GetRecordingUrl gets a signed url to download a transcript recording.
      operationId: Vanalytics_GetRecordingUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.GetRecordingUrlRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.GetRecordingUrlResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/gettranscriptsummary:
    post:
      tags:
      - Vanalytics
      description: GetTranscriptSummary gets a transcript summary for a provided transcript.
      operationId: Vanalytics_GetTranscriptSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.GetTranscriptSummaryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.GetTranscriptSummaryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/listagentresponsevalues:
    post:
      tags:
      - Vanalytics
      description: ListAgentResponseValues lists transcript agent response values.
      operationId: Vanalytics_ListAgentResponseValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListAgentResponseValuesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListAgentResponseValuesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/listbillingspan:
    post:
      tags:
      - Vanalytics
      description: ListBillingSpan lists billing spans.
      operationId: Vanalytics_ListBillingSpan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListBillingSpanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListBillingSpanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/listcorrections:
    post:
      tags:
      - Vanalytics
      description: ListCorrections lists corrections.
      operationId: Vanalytics_ListCorrections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListCorrectionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListCorrectionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/listfilters:
    post:
      tags:
      - Vanalytics
      description: ListFilters lists filters.
      operationId: Vanalytics_ListFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListFiltersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListFiltersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/listflagSnapshots:
    post:
      tags:
      - Vanalytics
      description: ListFlagSnapshots lists flag snapshots in an organization.
      operationId: Vanalytics_ListFlagSnapshots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListFlagSnapshotsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListFlagSnapshotsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/listflagfilters:
    post:
      tags:
      - Vanalytics
      description: ListFlagFilters lists flag filter associations.
      operationId: Vanalytics_ListFlagFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListFlagFiltersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListFlagFiltersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/listflagreviews:
    post:
      tags:
      - Vanalytics
      description: ListFlagReviews lists reviews in an organization.
      operationId: Vanalytics_ListFlagReviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListFlagReviewsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListFlagReviewsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/listflags:
    post:
      tags:
      - Vanalytics
      description: ListFlags lists flags in an organization.
      operationId: Vanalytics_ListFlags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListFlagsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListFlagsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/listflagtranscriptfilters:
    post:
      tags:
      - Vanalytics
      description: ListFlagTranscriptFilters lists flag transcript filters in an organization.
      operationId: Vanalytics_ListFlagTranscriptFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListFlagTranscriptFiltersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListFlagTranscriptFiltersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/listtranscriptgroupnames:
    post:
      tags:
      - Vanalytics
      description: ListTranscriptGroupNames lists transcript group names.
      operationId: Vanalytics_ListTranscriptGroupNames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListTranscriptGroupNamesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.ListTranscriptGroupNamesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/search:
    post:
      tags:
      - Vanalytics
      description: "Search searches transcripts by search criteria. The search response\n
        contains one page of transcript hits. Traversing the paginated hits is\n achieved
        through subsequent requests using the response sort field."
      operationId: Vanalytics_Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/searchflagtranscripts:
    post:
      tags:
      - Vanalytics
      description: SearchFlagTranscripts searches flag transcripts.
      operationId: Vanalytics_SearchFlagTranscripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchFlagTranscriptsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchFlagTranscriptsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/updatecorrection:
    post:
      tags:
      - Vanalytics
      description: UpdateCorrection updates a correction.
      operationId: Vanalytics_UpdateCorrection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.UpdateCorrectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.UpdateCorrectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/updatefilter:
    post:
      tags:
      - Vanalytics
      description: UpdateFilter updates a filter search request and/or name.
      operationId: Vanalytics_UpdateFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.UpdateFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.Filter'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalytics/updateflag:
    post:
      tags:
      - Vanalytics
      description: UpdateFlag updates a flag.
      operationId: Vanalytics_UpdateFlag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.UpdateFlagRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalyticssupport/deleteflagtranscript:
    post:
      tags:
      - VanalyticsSupport
      description: DeleteFlagTranscript deletes a flag transcript.
      operationId: VanalyticsSupport_DeleteFlagTranscript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.DeleteFlagTranscriptRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.DeleteFlagTranscriptResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vanalytics/vanalyticssupport/searchbyorgid:
    post:
      tags:
      - VanalyticsSupport
      description: SearchByOrgId searches transcripts for a specific org.
      operationId: VanalyticsSupport_SearchByOrgId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchByOrgIdRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/vmds/downloadspecifiedmessages:
    post:
      tags:
      - VmdsService
      operationId: VmdsService_DownloadSpecifiedMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.vmds.DownloadSpecifiedMessagesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.vmds.DownloadSpecifiedMessagesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/archiveagentleavepetition:
    post:
      tags:
      - WFM
      description: "Archives an agent leave petition with the given @agent_leave_petition_id
        for the org sending the request.\n If the leave petition has the status of
        PENDING_PETITION, the petition must be resolved first, or the request will
        error.\n If the petition has a status of APPROVED_PETITION and a portion of
        the petitions @requested_datetime_ranges lies in the future,\n   the petition
        may not be archived without being cancelled.\n Errors:\n   - grpc.Invalid:
        the request data is invalid, the agent leave petition is approved for a future
        datetime, still pending, or is already archived.\n   - grpc.Internal: error
        occurs when archiving the agent leave petition.\n   - grpc.NotFound: the @agent_leave_petition_id
        does not exist for the org sending the request."
      operationId: WFM_ArchiveAgentLeavePetition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ArchiveAgentLeavePetitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ArchiveAgentLeavePetitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/buildagentdiagnostics:
    post:
      tags:
      - WFM
      description: "Builds and returns the diagnostics for the wfm agent associated
        with the given @wfm_agent_sid or @agent_group_sid for the org sending the
        request.\n Response will only contain:\n    one element if build for a single
        @wfm_agent_sid.\n    one element for each WFM agent if build for an @agent_group_sid.\n
        \  - grpc.Invalid: the @wfm_agent_sid, or @agent_group_sid is invalid.\n   -
        grpc.NotFound: the given @wfm_agent_sid doesn't exist or the @agent_group_sid
        has no agents.\n   - grpc.Internal: error occurs building the diagnostics."
      operationId: WFM_BuildAgentDiagnostics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.BuildAgentDiagnosticsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.BuildAgentDiagnosticsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/buildcallprofiletemplate:
    post:
      tags:
      - WFM
      description: "Builds and returns a call profile template for the org sending
        the request and the given @skill_profile_category.\n The template will be
        generated using the training data for said skill profile category using the
        @training_data_range and @averages_calculation_range_in_months\n from the
        client's saved forecasting parameters.\n The @total_calls in the returned
        template be summed from the (@training_data_start_datetime - @averages_calculation_range_in_months)
        to @training_data_end_datetime,\n or from @training_data_start_datetime to
        @training_data_end_datetime if @averages_calculation_range_in_months is 0.\n
        The fixed averages fields in the call profile template, will be set to the
        averages that the skill profile category has.\n Errors:\n   - grpc.Invalid:
        the @skill_profile_category in the request is invalid.\n   - grpc.NotFound:
        the @skill_profile_category given is not found for the org.\n   - grpc.Internal:
        error occurs when building the call profile template."
      operationId: WFM_BuildCallProfileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.BuildCallProfileTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.BuildCallProfileTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/buildcallprofiletemplateforskillprofile:
    post:
      tags:
      - WFM
      description: "Builds and returns a call profile template for the org sending
        the request and the given @skill_profile_sid.\n The template will be generated
        using the training data for said skill profile using the @training_data_range
        and @averages_calculation_range_in_months\n from the client's saved forecasting
        parameters.\n The @total_calls in the returned template be summed from the
        (@training_data_start_datetime - @averages_calculation_range_in_months) to
        @training_data_end_datetime,\n or from @training_data_start_datetime to @training_data_end_datetime
        if @averages_calculation_range_in_months is 0.\n The fixed averages fields
        in the call profile template, will be set to the averages that the skill profile
        has.\n DEPRECATED as of Sep/7/2023 - Use BuildCallProfileTemplate instead.\n
        Errors:\n   - grpc.Invalid: the @skill_profile_sid in the request is invalid.\n
        \  - grpc.NotFound: the @skill_profile_sid given is not found for the org.\n
        \  - grpc.Internal: error occurs when building the call profile template."
      operationId: WFM_BuildCallProfileTemplateForSkillProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.BuildCallProfileTemplateForSkillProfileReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.BuildCallProfileTemplateForSkillProfileRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/builddowandmoyprofiles:
    post:
      tags:
      - WFM
      description: "Converts the given @profile_tod and @profile_woms to a ProfileDOW
        and ProfileMOY.\n Errors:\n   - grpc.Invalid: the @profile_tod or @profile_woms
        in the request are invalid.\n   - grpc.Internal: error occurs when building
        the ProfileDOW or ProfileMOY."
      operationId: WFM_BuildDOWAndMOYProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.BuildDOWAndMOYProfilesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.BuildDOWAndMOYProfilesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/builddraftschedule:
    post:
      tags:
      - WFM
      description: "Builds a draft schedule for the given @node_selector in @schedule_scenario_sid
        over @schedule_scenario_scheduling_range for @draft_schedule_sid and the org
        making the request.\n The @schedule_scenario_scheduling_range field is optional.
        If not set, the draft schedule will be obtained with it's default range from
        it's start to end time.\n @include parameters are used when retrieving the
        resulting draft schedule, and work in the same way as for GetDraftSchedule.\n
        Will return diagnostics for the newly built schedule, or just diagnostics
        if the schedule cannot be built successfully due to diagnostic error.\n If
        @auto_generate_agents is set to true, unassigned agents will automatically
        be generated to meet the requirements of the shift templates min and max agents."
      operationId: WFM_BuildDraftSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.BuildDraftScheduleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.BuildDraftScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/buildglobaldiagnostics:
    post:
      tags:
      - WFM
      description: "Builds and returns the global diagnostics and @nodes_checked for
        the @schedule_scenario_sid and the org sending the request.\n Errors:\n   -
        grpc.Invalid: the @schedule_scenario_sid has an invalid values.\n   - grpc.NotFound:
        the given @schedule_scenario_sid doesn't exist for the org making the request.\n
        \  - grpc.Internal: error occurs when building the diagnostics."
      operationId: WFM_BuildGlobalDiagnostics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.BuildGlobalDiagnosticsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.BuildGlobalDiagnosticsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/buildnodediagnostics:
    post:
      tags:
      - WFM
      description: "Builds and returns the diagnostics and @nodes_checked for the
        @node_to_check for @schedule_scenario_sid and the org sending the request.\n
        The @schedule_scenario_sid must match the scenario of the @node_to_check.\n
        Errors:\n   - grpc.Invalid: the @node_to_check is invalid for @schedule_scenario_sid
        and the org making the request.\n   - grpc.NotFound: the given @node_to_check
        doesn't exist.\n   - grpc.Internal: error occurs when building the diagnostics."
      operationId: WFM_BuildNodeDiagnostics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.BuildNodeDiagnosticsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.BuildNodeDiagnosticsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/buildprofileforecastbyinterval:
    post:
      tags:
      - WFM
      description: "Builds a profile forecast using the provided @call_profile_template.\n
        The forecaster will produce intervals from the following range using the client's
        saved forecasting parameters:\n (@training_data_range_end_datetime - @forecast_test_range_in_weeks)
        to @forecast_range_end_datetime.\n The @total_calls in the @call_profile_template
        will be scaled using the same ranges as BuildCallProfileTemplate.\n The @fixed_averages_forecast
        field indicates whether or not to do a fixed averages forecast.\n Errors:\n
        \  - grpc.Invalid: the @skill_profile_category or @call_profile_template in
        the request is invalid.\n   - grpc.Internal: error occurs during the building
        of the profile forecast."
      operationId: WFM_BuildProfileForecastByInterval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.BuildProfileForecastByIntervalReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CallDataByInterval'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/buildprofileforecastbyintervalwithstats:
    post:
      tags:
      - WFM
      description: "Builds a profile forecast using the provided @call_profile_template.\n
        The forecaster will produce intervals from the following range using the client's
        saved forecasting parameters:\n (@training_data_range_end_datetime - @forecast_test_range_in_weeks)
        to @forecast_range_end_datetime.\n The @total_calls in the @call_profile_template
        will be scaled using the same ranges as BuildCallProfileTemplate.\n The @fixed_averages_forecast
        field indicates whether or not to do a fixed averages forecast.\n It also
        returns the statistics of the produced forecast by using the test data of
        the given @skill_profile_category.\n Errors:\n   - grpc.Invalid: the @skill_profile_category
        or @call_profile_template in the request is invalid.\n   - grpc.Internal:
        error occurs during the building of the profile forecast."
      operationId: WFM_BuildProfileForecastByIntervalWithStats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.BuildProfileForecastByIntervalWithStatsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.BuildProfileForecastByIntervalWithStatsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/buildregressionforecastbyinterval:
    post:
      tags:
      - WFM
      description: "Generates a regression forecast using the provided @regression_template.\n
        It will generate forecast intervals for the skill profiles sids in @skill_profile_sids_to_forecast.\n
        It will use the client's saved forecasting test range as the start datetime
        and the forecast range as the end datetime of the forecasted data.\n It will
        use the client's saved interval width to divide the resulting forecast intervals.\n
        Errors:\n   - grpc.Invalid: no @skill_profile_sids_to_forecast are given or
        the @regression_template in the request is invalid.\n   - grpc.Internal: error
        occurs during the building of the regression forecast."
      operationId: WFM_BuildRegressionForecastByInterval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.BuildRegressionForecastByIntervalReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CallDataByInterval'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/buildregressionforecastbyintervalwithstats:
    post:
      tags:
      - WFM
      description: "Generates a regression forecast and calculates forecast statistics
        using the provided @regression_template.\n It will generate forecast intervals
        for the skill profiles sids in @skill_profile_sids_to_forecast.\n It will
        use the client's saved forecasting test range as the start datetime and the
        forecast range as the end datetime of the forecasted data.\n It will use the
        client's saved interval width to divide the resulting forecast intervals.\n
        The first message received will be the forecast statistics while all subsequent
        ones will be the forecast intervals.\n\n Errors:\n   - grpc.Invalid: no @skill_profile_sids_to_forecast
        are given or the @regression_template in the request is invalid.\n   - grpc.Internal:
        error occurs either during the when building the forecast or calculating the
        stats."
      operationId: WFM_BuildRegressionForecastByIntervalWithStats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.BuildRegressionForecastByIntervalWithStatsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.BuildRegressionForecastByIntervalWithStatsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/buildshifttemplatediagnostics:
    post:
      tags:
      - WFM
      description: "Builds and returns the diagnostics for the shift template associated
        with the given @shift_template_sid for the org sending the request.\n   -
        grpc.Invalid: the @shift_template_sid is invalid.\n   - grpc.NotFound: the
        given @shift_template_sid doesn't exist for the org sending the request.\n
        \  - grpc.Internal: error occours building the diagnostics for the shift template."
      operationId: WFM_BuildShiftTemplateDiagnostics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.BuildShiftTemplateDiagnosticsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.BuildShiftTemplateDiagnosticsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/calculatetrainingdataaveragesforskillprofile:
    post:
      tags:
      - WFM
      description: "Calculates and returns the averages in the training data for the
        given @skill_profile_sid.\n Averages to be returned will be weighted by the
        number of calls that each training data interval has.\n The start time that
        the training data will be averaged can be modified based on the forecasting
        parameter @averages_calculation_range_in_months,\n which will subtract that
        many months from the training data range end datetime and set it as the start
        time.\n If @averages_calculation_range_in_months is 0, it will use the training
        data range start datetime.\n\n Errors:\n   - grpc.Invalid: the @skill_profile_sid
        in the request is invalid.\n   - grpc.NotFound: the @skill_profile_sid given
        is not found.\n   - grpc.Internal: error occurs when calculating the averages
        from the training data."
      operationId: WFM_CalculateTrainingDataAveragesForSkillProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CalculateTrainingDataAveragesForSkillProfileReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CalculateTrainingDataAveragesForSkillProfileRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/cancelagentleavepetition:
    post:
      tags:
      - WFM
      description: "Cancels the given @agent_leave_petition_id for the organization
        sending the request.\n If @agent_leave_petition_id has a status of APPROVED_PETITION,
        the agent's schedule will have time off blocks removed,\n   but any desired
        shifts must be added by the user after that leave is canceled.\n Errors:\n
        \  - grpc.Invalid: the request data is invalid, the @agent_leave_petition_id
        is already canceled.\n   - grpc.Internal: error occurs when canceling the
        agent leave petition, or removing time off shifts from the agent's schedule.\n
        \  - grpc.NotFound: the @agent_leave_petition_id does not exist for the org
        sending the request."
      operationId: WFM_CancelAgentLeavePetition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CancelAgentLeavePetitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CancelAgentLeavePetitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/clearschedule:
    post:
      tags:
      - WFM
      description: "Clears shift instances from the @schedule_selector for the org
        sending the request.\n If @node_selector is set, only shifts related to the
        given @node_selector will be cleared.\n If @node_selector is not set, all
        shifts on the @schedule_selector may be cleared, regardless of the shift template
        they are associated with.\n If @datetime_range is set, only the shifts overlapping
        the @datetime_range will be cleared.\n If @datetime_range is not set, all
        shifts on the schedule will be considered in range to be deleted and @invert_datetime_range
        and @start_datetimes_only must be set to false.\n If @invert_datetime_range
        is set to true, the shifts overlapping the range before and after the provided
        @datetime_range will be deleted.\n If @invert_datetime_range is set to false,
        the provided @datetime_range will be used.\n If @start_datetimes_only is set
        to true, deletes the shifts that start within the @datetime range, or start
        before or after @datetime_range if @invert_datetime_range is true.\n If @start_datetimes_only
        is set to false, deletes the shifts that overlap with the @datetime range,
        or overlap the range before or after @datetime_range if @invert_datetime_range
        is true.\n If @delete_locked is set to true, both locked and unlocked shifts
        will be cleared.\n If @delete_locked is set to false, only shifts with @is_locked
        set to false may be cleared.\n Errors:\n   - grpc.Invalid: the @node_selector,
        @schedule_selector, or @datetime_range in the request are invalid.\n   - grpc.NotFound:
        the draft schedule with the given @schedule_selector doesn't exist.\n   -
        grpc.Internal: error occurs when removing the shifts from the schedule."
      operationId: WFM_ClearSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ClearScheduleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ClearScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/copyscenario:
    post:
      tags:
      - WFM
      description: "Copies the existing scenario with the @scenario_sid_to_copy for
        the org sending the request using the provided parameters.\n Scheduling targets
        of entities in the scenario to copy will also be copied.\n The new @schedule_scenario_sid
        of the new entity will be returned in the response.\n Errors:gg\n   - grpc.Invalid:
        the parameters @scenario_sid_to_copy or any others are invalid.\n   - grpc.NotFound:
        the scenario corresponding to the @scenario_sid_to_copy doesn't exist.\n   -
        grpc.Internal: error occurs when creating/coping the new scenario."
      operationId: WFM_CopyScenario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CopyScenarioReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CopyScenarioRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/copyscheduletoschedule:
    post:
      tags:
      - WFM
      description: "Copies the shifts from @source_schedule_selector to @destination_schedule_selector,
        constrained by the given parameters for the org sending the request.\n If
        @datetime_range is set, all shifts within the datetime range will be copied.\n
        If @datetime_range is not set, all shifts in the @source_schedule_selector
        within the schedule range of the @destination_schedule_selector will be copied.
        However if one of them is a published schedule, it will use the schedule range
        of the draft schedule.\n If @start_datetimes_only is set to false, then shifts
        are considered to be within the @datetime range if any portion of them is
        within the range.\n If @start_datetimes_only is set to true, then only shifts
        with start times within the @datetime range will be copied.\n If @overlap_as_warning
        is set to false, any overlapping shifts for a given agent will return a diagnostic
        error, and prevent any shifts from being copied.\n If @overlap_as_warning
        is set to true, the shifts will be copied regardless of overlap conflicts,
        and any conflicts will cause a diagnostic warning to be returned after.\n
        Errors:\n   -grpc.Invalid: one or more fields in the request have invalid
        values.\n   -grpc.NotFound: the @source_schedule_selector or @destination_schedule_selector
        don't exist for the org sending the request.\n   -grpc.Internal: error occurs
        when creating the copied shift instances."
      operationId: WFM_CopyScheduleToSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CopyScheduleToScheduleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CopyScheduleToScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/copyshiftinstancestoschedule:
    post:
      tags:
      - WFM
      description: "Copies the given @shift_instance_sids to @destination_schedule
        for the org sending the request.\n If there are any overlap conflicts on @destination_schedule
        and @overlap_as_warning is set to false,\n  then @shift_instance_sids will
        not be copied, and a list of diagnostics detailing the overlaps will be returned.\n
        If @overlap_as_warning is set to true, overlap conflicts will not prevent
        the shifts from being copied, and the overlap diagnostics will be returned
        after as warning messages instead.\n Errors:\n   - grpc.Invalid: one or more
        fields in the request have invalid values.\n   - grpc.NotFound: the @shift_instance_sids
        or @destination_schedule does not exist for the org sending the request.\n
        \  - grpc.Internal: error occurs when copying the shift instances."
      operationId: WFM_CopyShiftInstancesToSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CopyShiftInstancesToScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/copywfmagentmemberships:
    post:
      tags:
      - WFM
      description: "Copies the membership association of @originating_wfm_agent_sid
        to @target_wfm_agent_sid.\n The wfm agents must both belong to the org sending
        the request.\n Any existing membership associations on @target_wfm_agent_sid
        with be retained.\n Any conflicting memberships for @target_wfm_agent_sid
        will be set with the membership of @originating_wfm_agent_sid.\n Errors:\n
        \  - grpc.NotFound: the @wfm_agent_sids or @agent_group_sid don't exist for
        the org sending the request.\n   - grpc.Internal: error occurs when creating
        the associations."
      operationId: WFM_CopyWFMAgentMemberships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CopyWFMAgentMembershipsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CopyWFMAgentMembershipsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createadherenceagentrule:
    post:
      tags:
      - WFM
      description: "Creates the given adherence agent @rule for the org sending the
        request.\n Errors:\n   - grpc.Invalid: the values on the given @rule are invalid.\n
        \  - grpc.Internal: error occurs when creating the given @rule."
      operationId: WFM_CreateAdherenceAgentRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAdherenceAgentRuleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAdherenceAgentRuleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createadherenceagentruleclause:
    post:
      tags:
      - WFM
      description: "Creates the given adherence agent rule @clause for the org sending
        the request.\n Errors:\n   - grpc.Invalid: the values on the given @clause
        are invalid.\n   - grpc.Internal: error occurs when creating the given @clause.\n
        \  - grpc.NotFound: agent rule with the @agent_rule_sid does not exist."
      operationId: WFM_CreateAdherenceAgentRuleClause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAdherenceAgentRuleClauseRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAdherenceAgentRuleClauseResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createadherencedepartmentalrule:
    post:
      tags:
      - WFM
      description: "Creates the given adherence departmental @rule for the org sending
        the request.\n Errors:\n   - grpc.Invalid: the values on the given @rule are
        invalid.\n   - grpc.Internal: error occurs when creating the given @rule."
      operationId: WFM_CreateAdherenceDepartmentalRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAdherenceDepartmentalRuleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAdherenceDepartmentalRuleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createadherencedepartmentalruleclause:
    post:
      tags:
      - WFM
      description: "Creates the given adherence departmental rule @clause for the
        org sending the request.\n Errors:\n   - grpc.Invalid: the values on the given
        @clause are invalid.\n   - grpc.Internal: error occurs when creating the given
        @clause.\n   - grpc.NotFound: departmental rule with the @departmetal_rule_sid
        does not exist."
      operationId: WFM_CreateAdherenceDepartmentalRuleClause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAdherenceDepartmentalRuleClauseRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAdherenceDepartmentalRuleClauseResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createadherencerulenotificationconfig:
    post:
      tags:
      - WFM
      description: "Creates the given adherence @notification_config for the org sending
        the request.\n Errors:\n   - grpc.Invalid: the values on the given @notification_config
        are invalid.\n   - grpc.Internal: error occurs when creating the given @notification_config."
      operationId: WFM_CreateAdherenceRuleNotificationConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAdherenceRuleNotificationConfigRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAdherenceRuleNotificationConfigResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createadherencerulenotificationconfigentry:
    post:
      tags:
      - WFM
      description: "Creates the given adherence @notification_config_entry for the
        org sending the request.\n Errors:\n   - grpc.Invalid: the values on the given
        @notification_config_entry are invalid.\n   - grpc.Internal: error occurs
        when creating the given @notification_config_entry.\n   - grpc.NotFound: notification
        config with the @notification_config_sid does not exist."
      operationId: WFM_CreateAdherenceRuleNotificationConfigEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAdherenceRuleNotificationConfigEntryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAdherenceRuleNotificationConfigEntryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createagentavailabilitypattern:
    post:
      tags:
      - WFM
      description: "Creates an agent availability pattern for the org sending the
        request with the provided parameters.\n The @agent_availability_pattern_sid
        of the new entity will be returned in the response.\n The @schedule_scenario_sid
        must match the scenario of the @parent_entity.\n Errors:\n   - grpc.Invalid:
        the parameters in the @agent_availability_pattern are invalid.\n   - grpc.NotFound:
        the parent entity doesn't exist.\n   - grpc.Internal: error occurs when creating
        the agent availability pattern."
      operationId: WFM_CreateAgentAvailabilityPattern
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAgentAvailabilityPatternReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAgentAvailabilityPatternRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createagentgroup:
    post:
      tags:
      - WFM
      description: "Creates an agent group with the provided parameters.\n A successful
        response should contain the @agent_group_sid of the newly created entity.\n
        The @schedule_scenario_sid must match the scenario of the @parent_entity.\n
        The @member fields will be ignored since those cannot be created by this method
        and must be created by their respective create methods.\n Errors:\n   - grpc.Invalid:
        the @name, or @parent_entity are invalid.\n   - grpc.NotFound: @parent_entity
        doesn't exist\n   - grpc.Internal: error occurs when creating the agent group."
      operationId: WFM_CreateAgentGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAgentGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAgentGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createagentleavepetition:
    post:
      tags:
      - WFM
      description: "Creates an agent leave petition to request time off for the @wfm_agent_sid
        over the @requested_datetime_ranges for the org sending the request.\n The
        @petition_comment must be set with a value.\n The @requested_datetime_ranges
        may not overlap each other.\n The number of working hours requested off should
        be set in @requested_hours_off.\n The @requested_hours_off does not need to
        relate directly to the datetime range being requested off,\n   for example
        in the case where a 14 hour schedulable range is being taken off but 8 hours
        of work will be paid out with PTO.\n The usage of @requested_hours_off hours
        will depend on org policy, but is not yet implemented.\n Errors:\n   - grpc.Invalid:
        the request data is invalid.\n   - grpc.Internal: error occurs when creating
        the time off request.\n   - grpc.NotFound: the @wfm_agent_sid does not exist
        for the org sending the request."
      operationId: WFM_CreateAgentLeavePetition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAgentLeavePetitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateAgentLeavePetitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createcallprofiletemplate:
    post:
      tags:
      - WFM
      description: "Creates the given @call_profile_template for the org sending the
        request.\n Errors:\n   - grpc.Invalid: the @call_profile_template in the request
        is invalid.\n   - grpc.Internal: error occurs during the creation of the call
        profile."
      operationId: WFM_CreateCallProfileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateCallProfileTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateCallProfileTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createclientnode:
    post:
      tags:
      - WFM
      description: "Creates the given client @node for the org sending the request
        and @parent_sid in the node.\n The @client_node_sid of the new entity will
        be returned in the response.\n The @schedule_scenario_sid must match the scenario
        of the parent call center node.\n The @member fields will be ignored since
        those cannot be created by this method and must be created by their respective
        create methods.\n Errors:\n   - grpc.Invalid: the @name, @parent_sid, or @time_zone_val
        is invalid.\n   - grpc.NotFound: parent call center node doesn't exist, or
        belongs to a different scenario than the one given.\n   - grpc.Internal: error
        occurs when creating the client node."
      operationId: WFM_CreateClientNode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateClientNodeReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateClientNodeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createconstraintrule:
    post:
      tags:
      - WFM
      description: "Creates the given @constraint_rule for the org sending the request.\n
        The @constraint_rule_sid and @skill_proficiency_sid (if one was created) of
        the new entities will be returned in the response.\n The @schedule_scenario_sid
        must match the scenario of the @parent_entity.\n If @rule_type is set to MIN_SKILL_LEVEL,
        the @member_target_entity field must be set with a skill proficiency and the
        @constraint_rule.target_sid will be ignored.\n If the @member_target_entity
        is for a skill proficiency, that skill proficiency will be created with the
        given @constraint_rule as parent.\n If @rule_type is NOT MIN_SKILL_LEVEL then
        the @target_sid must be that of a scheduling activity.\n The all other @member
        fields will be ignored since those cannot be created by this method and must
        be created by their respective create methods.\n Errors:\n   - grpc.Invalid:
        one or more fields in the @constraint_rule have invalid values.\n   - grpc.NotFound:
        the given @target_sid for the given @rule_type, or @parent_entity don't exist.\n
        \  - grpc.Internal: error occurs when creating the constraint rule."
      operationId: WFM_CreateConstraintRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateConstraintRuleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateConstraintRuleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createdraftschedule:
    post:
      tags:
      - WFM
      description: "Creates a draft schedule for the org sending the request with
        the provided parameters.\n The @draft_schedule_sid of the new entity will
        be returned in the response.\n The @created_at and @last_updated_at fields
        will be set to the current time and null respectively.\n The draft schedule
        will include the published schedule's shift instances and shift segments.\n
        Errors:\n   - grpc.Invalid: the @name, @description or @scheduling_range are
        invalid.\n   - grpc.Internal: error occurs when creating the draft schedule."
      operationId: WFM_CreateDraftSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateDraftScheduleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateDraftScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createinactiveskillprofilemapping:
    post:
      tags:
      - WFM
      description: "Creates a mapping entry for the @inactive_skill_profile_sid to
        the @active_skill_profile_sid for the org sending the request.\n DEPRECATED
        as of Sep/27/2023 - Use skill profile groups instead.\n Errors:\n   - grpc.Invalid:
        the @inactive_skill_profile_sid, or @active_skill_profile_sid in the request
        are invalid.\n                   the @inactive_skill_profile_sid given is
        of an active skill profile.\n                   the @active_skill_profile_sid
        given is of an inactive skill profile.\n   - grpc.Internal: error occurs when
        creating the inactive skill profile mapping."
      operationId: WFM_CreateInactiveSkillProfileMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateInactiveSkillProfileMappingReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateInactiveSkillProfileMappingRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createinitialdemoactivities:
    post:
      tags:
      - WFM
      description: "Create an initial set of demo activities for the org sending the
        requests.\n If any non skill activities already exist matching the names of
        the demo non skill activities, a second copy will not be created.\n Required
        permissions:\n   NONE\n Errors:\n   - grpc.Internal: error occurs when creating
        the activities or checking if they already exist."
      operationId: WFM_CreateInitialDemoActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateInitialDemoActivitiesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateInitialDemoActivitiesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createlocationnode:
    post:
      tags:
      - WFM
      description: "Creates the given location @node for the org sending the request
        and parent @client_node_sid.\n The @location_node_sid of the new entity will
        be returned in the response.\n The @schedule_scenario_sid must match the scenario
        of the parent client node.\n The @member fields will be ignored since those
        cannot be created by this method and must be created by their respective create
        methods.\n Errors:\n   - grpc.Invalid: one or more fields in the @node have
        invalid values.\n   - grpc.NotFound: parent client node doesn't exist or belongs
        to a different scenario than the one given.\n   - grpc.Internal: error occurs
        when creating the location node."
      operationId: WFM_CreateLocationNode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateLocationNodeReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateLocationNodeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createnonskillactivity:
    post:
      tags:
      - WFM
      description: "Creates the given @non_skill_activity for the org sending the
        request.\n Will also create a scheduling activity wrapper for the non skill
        activity.\n The @non_skill_activity_sid and @scheduling_activity_sid of the
        new entities will be returned in the response.\n Errors:\n   - grpc.Invalid:
        one or more fields in the @non_skill_activity have invalid values.\n   - grpc.NotFound:
        the @schedule_scenario_sid doesn't exist.\n   - grpc.Internal: error occurs
        when creating the non skill activity or scheduling activity."
      operationId: WFM_CreateNonSkillActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateNonSkillActivityReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateNonSkillActivityRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createopentimespattern:
    post:
      tags:
      - WFM
      description: "Creates an open times pattern for the org sending the request
        with the provided parameters.\n The @open_times_pattern_sid of the new entity
        will be returned in the response.\n The @schedule_scenario_sid must match
        the scenario of the @parent_entity.\n Errors:\n   - grpc.Invalid: the parameters
        in the @open_times_pattern are invalid.\n   - grpc.NotFound: the parent entity
        doesn't exist.\n   - grpc.Internal: error occurs when creating the open times
        pattern."
      operationId: WFM_CreateOpenTimesPattern
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateOpenTimesPatternReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateOpenTimesPatternRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createplacementrule:
    post:
      tags:
      - WFM
      description: "Creates a placement rule for org sending the request with the
        provided parameters.\n The @placement_rule_sid of the new entity will be returned
        in the response.\n The @schedule_scenario_sid must match the scenario of the
        parent shift template.\n The @member fields will be ignored since those cannot
        be created by this method and must be created by their respective create methods.\n
        Errors:\n   - grpc.Invalid: the parameters in the @placement_rule are invalid.\n
        \  - grpc.NotFound: the parent shift template doesn't exist or belongs to
        a different scenario than the one given.\n                    the scheduling
        activity to associate with the placement rule doesn't exist or belongs to
        a different scenario than the one given.\n   - grpc.Internal: error occurs
        when creating the placement rule."
      operationId: WFM_CreatePlacementRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreatePlacementRuleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreatePlacementRuleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createprogramnode:
    post:
      tags:
      - WFM
      description: "Creates the given program @node for the org sending the request
        and parent @location_node_sid.\n The @program_node_sid of the new entity will
        be returned in the response.\n The @schedule_scenario_sid must match the scenario
        of the parent location node.\n The @member fields will be ignored since those
        cannot be created by this method and must be created by their respective create
        methods.\n Errors:\n   - grpc.Invalid: one or more fields in the @node have
        invalid values.\n   - grpc.NotFound: parent location node doesn't exist or
        belongs to a different scenario than the one given.\n                    the
        @skill_profile_category does not exist.\n   - grpc.Internal: error occurs
        when creating the program node."
      operationId: WFM_CreateProgramNode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateProgramNodeReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateProgramNodeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createregressiontemplate:
    post:
      tags:
      - WFM
      description: "Creates an entry for the @regression_template for the requesting
        org.\n Errors:\n   - grpc.Invalid: the @regression_template in the request
        is invalid.\n   - grpc.Internal: error occurs when creating the regression
        template."
      operationId: WFM_CreateRegressionTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateRegressionTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateRegressionTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/creatergbacolor:
    post:
      tags:
      - WFM
      description: "Creates the given @color for the org sending the request.\n Errors:\n
        \  - grpc.Invalid: the values on the given @color are invalid.\n   - grpc.Internal:
        error occurs when creating the given @color or an rgba with @color.name already
        exists."
      operationId: WFM_CreateRgbaColor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateRgbaColorRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateRgbaColorResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createschedulescenariowithnodes:
    post:
      tags:
      - WFM
      description: "Creates a new schedule scenario for the org sending the request
        with the provided parameters.\n The new @schedule_scenario_sid of the new
        entity will be returned in the response.\n It also creates 1 of each of the
        following: call center, client, program, location node, and on call scheduling
        activity (if it doesn't exist already for the org).\n The @node_description
        fields may optionally be left blank.\n The @copied_from_scenario_sid field
        will be ignored, as it will be set to nil in the newly created scenario.\n
        The @creation_datetime and @is_default fields will also be ignored and set
        as the current time and false respectively.\n The @skill_profile_category
        will be associated with the created program node.\n Errors:\n   - grpc.Invalid:
        parameters in the @req are invalid for the org making the request.\n   - grpc.NotFound:
        the @skill_profile_category does not exist.\n   - grpc.Internal: error occurs
        when creating the new scenario, or any of the node entities."
      operationId: WFM_CreateScheduleScenarioWithNodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateScheduleScenarioWithNodesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateScheduleScenarioWithNodesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createshiftinstance:
    post:
      tags:
      - WFM
      description: "Creates a shift instance for the org sending the request with
        the provided parameters.\n This method is not implemented. Do not use.\n Errors:\n
        \  - grpc.Invalid: one or more fields in the request have invalid values.\n
        \  - grpc.Internal: error occurs when creating the shift instance."
      operationId: WFM_CreateShiftInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateShiftInstanceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateShiftInstanceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createshiftinstancev2:
    post:
      tags:
      - WFM
      description: "Creates a shift instance for the org sending the request with
        the provided parameters.\n If @wfm_agent_sids is empty, then the shift instance
        will be created for a newly created unassigned agent.\n A shift instance will
        be created for each wfm agent sid provided.\n Errors:\n   - grpc.Invalid:
        one or more fields in the request have invalid values.\n   - grpc.Internal:
        error occurs when creating the shift instance.\n   - grpc.NotFound: the @draft_schedule_sid,
        @shift_template_sid, or @wfm_agent_sids do not exist for the org sending the
        request."
      operationId: WFM_CreateShiftInstanceV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateShiftInstanceV2Req'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateShiftInstanceV2Res'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createshiftinstancewithsegments:
    post:
      tags:
      - WFM
      description: "Creates the @shift_instance with any member shift segments and
        shift segment call stats for the org sending the request.\n If @ignore_diagnostics_errors
        any diagnostics encountered will be returned as warnings, and the shift will
        still be created.\n   Otherwise, any diagnostics triggered by the given @shift_instance
        will be returned and the shift will not be created.\n Errors:\n   -grpc.Invalid:
        one or more fields in the request have invalid values.\n   -grpc.NotFound:
        the fields referenced in @shift_instance or its member shift segments don't
        exist for the org.\n   -grpc.Internal: error occurs when creating the shift
        instance or its members."
      operationId: WFM_CreateShiftInstanceWithSegments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateShiftInstanceWithSegmentsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateShiftInstanceWithSegmentsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createshifttemplate:
    post:
      tags:
      - WFM
      description: "Creates a shift template for the org sending the request with
        the provided parameters\n The @shift_template_sid of the new entity will be
        returned in the response.\n The @schedule_scenario_sid must match the scenario
        of the parent program node.\n The @member fields will be ignored since those
        cannot be created by this method and must be created by their respective create
        methods.\n Errors:\n   - grpc.Invalid: the @name, or @program_node_sid are
        invalid.\n   - grpc.AlreadyExists: a shift template with the given @name already
        exists.\n   - grpc.NotFound: the parent program node doesn't exist or belongs
        to a different scenario than the one given.\n   - grpc.Internal: error occurs
        when creating the shift template."
      operationId: WFM_CreateShiftTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateShiftTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateShiftTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createskillproficiencies:
    post:
      tags:
      - WFM
      description: "Creates skill proficiencies for the org sending the request with
        the provided parameters.\n The @schedule_scenario_sid must match the scenario
        of the @parent_entities.\n Errors:\n   - grpc.Invalid: the parameters in a
        @proficiency, or the @schedule_scenario_sid are invalid.\n   - grpc.NotFound:
        for any of the given @skill_proficiencies:\n                    the @parent_entity
        doesn't exist.\n                    the @skill_sid doesn't exist.\n                    the
        skill profile with @preferred_skill_profile_sid doesn't contain the given
        @skill_sid.\n   - grpc.AlreadyExists: a skill proficiency with the given @skill_sid
        and @parent_entity already exists.\n   - grpc.Internal: error occurs when
        creating the skill proficiencies."
      operationId: WFM_CreateSkillProficiencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateSkillProficienciesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateSkillProficienciesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createskillprofilegroup:
    post:
      tags:
      - WFM
      description: "Creates the given @skill_profile_group.\n @skill_profile_group_sids
        will be ignored since associations cannot be created by this method.\n Errors:\n
        \  - grpc.Invalid: the @skill_profile_group in the request is invalid.\n   -
        grpc.Internal: error occurs creating the skill profile group."
      operationId: WFM_CreateSkillProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateSkillProfileGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateSkillProfileGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createtouragentcollection:
    post:
      tags:
      - WFM
      description: "Creates the given @tour_agent_collection for the org sending the
        request and return the @tour_agent_collection_sid.\n The @wfm_agent_sids will
        be ignored and will not be created through this endpoint.\n Errors:\n   -
        grpc.Invalid: the request data is invalid.\n   - grpc.AlreadyExists: the first_week_pattern_number
        for @tour_pattern_sid is already in use by another tour agent collection.\n
        \  - grpc.NotFound: the given @tour_pattern_sid does not exist for the org
        sending the request.\n   - grpc.Internal: error occurs when creating the entity."
      operationId: WFM_CreateTourAgentCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateTourAgentCollectionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateTourAgentCollectionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createtouragentcollectionwfmagents:
    post:
      tags:
      - WFM
      description: "Creates an assocation between the @tour_agent_collection_sid and
        the @wfm_agent_sids for the org sending the request.\n If there is already
        an association between any of the @wfm_agent_sids and the Tour Pattern that
        @tour_agent_collection_sid belongs to, the method will fail and no associations
        will be created.\n Errors:\n   - grpc.Invalid: the request data is invalid\n
        \  - grpc.AlreadyExists: an association already exists for at least one SID
        in @wfm_agent_sids.\n   - grpc.Internal: error occurs when creating the association."
      operationId: WFM_CreateTourAgentCollectionWFMAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateTourAgentCollectionWFMAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateTourAgentCollectionWFMAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createtourpattern:
    post:
      tags:
      - WFM
      description: "Creates a Tour Pattern for @shift_template_sid and the org sending
        the request, returning @tour_pattern_sid.\n If there is already a Tour Pattern
        for @shift_template_sid then the method call will fail to create a new Tour
        Pattern.\n Errors:\n   - grpc.Invalid: the request data is invalid.\n   -
        grpc.AlreadyExists: A Tour Pattern already exists for @shift_template_sid.\n
        \  - grpc.Internal: error occurs when creating the Tour Pattern."
      operationId: WFM_CreateTourPattern
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateTourPatternReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateTourPatternRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createtourshiftinstanceconfig:
    post:
      tags:
      - WFM
      description: "Creates the @tour_shift_instance_config for the org sending the
        request, returning @tour_shift_instance_config_sid.\n The given @tour_shift_instance_config
        will not be created if it will overlap another tour shift instance config
        belonging to @tour_week_pattern_sid.\n The @member_tour_shift_segment_configs
        field will be ignored, and will not be created if passed through this endpoint.\n
        Errors:\n   - grpc.Invalid: the request data is invalid or a preexisting tour
        shift instance config would overlap @tour_shift_instance_config.\n   - grpc.Internal:
        error occurs when creating the data."
      operationId: WFM_CreateTourShiftInstanceConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateTourShiftInstanceConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateTourShiftInstanceConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createtourshiftsegmentconfig:
    post:
      tags:
      - WFM
      description: "Creates the given @tour_shift_segment_config for the org sending
        the request, returning @tour_shift_segment_config_sid.\n Errors:\n   - grpc.Invalid:
        the request data is invalid.\n   - grpc.NotFound: the @tour_shift_instance_config_sid
        does not exist for the org sending the request.\n   - grpc.Internal: error
        occurs when creating the entity."
      operationId: WFM_CreateTourShiftSegmentConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateTourShiftSegmentConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateTourShiftSegmentConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createtourweekpattern:
    post:
      tags:
      - WFM
      description: "Creates a Tour Week Pattern for @tour_pattern_sid for the org
        sending the request, returning @tour_week_pattern_sid.\n The newly created
        Tour Week Pattern will be placed at the end of the existing sequence of tour
        week patterns for @tour_pattern_sid.\n Errors:\n   - grpc.Invalid: the request
        data is invalid.\n   - grpc.NotFound: the given @tour_pattern_sid does not
        exist for the org sending the request.\n   - grpc.Internal: error occurs when
        creating the Tour Week Pattern."
      operationId: WFM_CreateTourWeekPattern
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateTourWeekPatternReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateTourWeekPatternRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createunassignedwfmagent:
    post:
      tags:
      - WFM
      description: "Creates an agent that is not assigned a tcn agent for the org
        sending the request.\n If @wfm_agent_sid_to_copy_agent_group_associations
        is set, it will also copy that agent's agent group associations to the new
        agent.\n Otherwise only the new agent will be created.\n Errors:\n   - grpc.Invalid:
        the @wfm_agent_sid_to_copy_agent_group_associations in the request is invalid.\n
        \  - grpc.Internal: error occurs creating the agent or the memberships.\n
        \  - grpc.NotFound: the given @wfm_agent_sid_to_copy_agent_group_associations
        doesn't exist for the org."
      operationId: WFM_CreateUnassignedWFMAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateUnassignedWFMAgentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateUnassignedWFMAgentResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/createwfmagentmemberships:
    post:
      tags:
      - WFM
      description: "Creates a membership association for each of the given @wfm_agent_sids
        with the given @agent_group_sid.\n The @schedule_scenario_sid must match the
        scenario of the agent group and wfm agents.\n Errors:\n   - grpc.Invalid:
        the @wfm_agent_sids, or @agent_group_sid are invalid.\n   - grpc.NotFound:
        the @wfm_agent_sids or @agent_group_sid don't exist for the org or given @schedule_scenario_sid.\n
        \  - grpc.Internal: error occurs when creating the association."
      operationId: WFM_CreateWFMAgentMemberships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.CreateWFMAgentMembershipsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CreateWFMAgentMembershipsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleteadherenceagentruleclause:
    post:
      tags:
      - WFM
      description: "Deletes the agent rule clause that has the given @adherence_agent_rule_clause_id
        for the org sending the request.\n Errors:\n   - grpc.Invalid: the value of
        the given @adherence_agent_rule_clause_id is invalid.\n   - grpc.Internal:
        error occurs when deleting the given @adherence_agent_rule_clause_id.\n   -
        grpc.NotFound: departmental rule with the @adherence_agent_rule_clause_id
        does not exist."
      operationId: WFM_DeleteAdherenceAgentRuleClause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteAdherenceAgentRuleClauseRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteAdherenceAgentRuleClauseResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleteadherencedepartmentalruleclause:
    post:
      tags:
      - WFM
      description: "Deletes the departmental rule clause that has the given @adherence_departmental_rule_clause_id
        for the org sending the request.\n Errors:\n   - grpc.Invalid: the value of
        the given @adherence_departmental_rule_clause_id is invalid.\n   - grpc.Internal:
        error occurs when deleting the given @adherence_departmental_rule_clause_id.\n
        \  - grpc.NotFound: departmental rule with the @adherence_departmental_rule_clause_id
        does not exist."
      operationId: WFM_DeleteAdherenceDepartmentalRuleClause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteAdherenceDepartmentalRuleClauseRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteAdherenceDepartmentalRuleClauseResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleteadherencerulenotificationconfigentry:
    post:
      tags:
      - WFM
      description: "Deletes the notification config entry that has the given @adherence_rule_notification_config_entry_id
        for the org sending the request.\n Errors:\n   - grpc.Invalid: the given @adherence_rule_notification_config_entry_id
        is invalid.\n   - grpc.Internal: error occurs when deleting the given @adherence_rule_notification_config_entry_id.\n
        \  - grpc.NotFound: notification config with the @adherence_rule_notification_config_entry_id
        does not exist."
      operationId: WFM_DeleteAdherenceRuleNotificationConfigEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteAdherenceRuleNotificationConfigEntryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteAdherenceRuleNotificationConfigEntryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleteagentavailabilitypattern:
    post:
      tags:
      - WFM
      description: "Deletes an agent availability pattern with the coresponding @agent_availability_pattern_sid
        for the org sending the request.\n Errors:\n   - grpc.Invalid: the @agent_availability_pattern_sid
        has an invalid value.\n   - grpc.NotFound: the @agent_availability_pattern
        with the given sid doesn't exist.\n   - grpc.Internal: error occurs when removing
        the agent availability pattern."
      operationId: WFM_DeleteAgentAvailabilityPattern
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteAgentAvailabilityPatternReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteAgentAvailabilityPatternRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deletecallprofiletemplate:
    post:
      tags:
      - WFM
      description: "Deletes a call profile template for the requesting org that has
        the given @call_profile_template_sid.\n Errors:\n   - grpc.Invalid: the @call_profile_template_sid
        in the request is invalid.\n   - grpc.Internal: error occurs during the deletion
        of the call profile."
      operationId: WFM_DeleteCallProfileTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteCallProfileTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteCallProfileTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleteconstraintrule:
    post:
      tags:
      - WFM
      description: "Deletes a constraint rule with the coresponding @constraint_rule_sid
        for the org sending the request.\n It also deletes the entity referenced by
        the @target_sid and @rule_type if said entity is not a member of any other
        entity or the on call scheduling activity.\n Errors:\n   - grpc.Invalid: the
        @constraint_rule_sid is invalid for the org making the request.\n   - grpc.NotFound:
        the given @constraint_rule doesn't exist.\n   - grpc.Internal: error occurs
        when removing the constraint rule."
      operationId: WFM_DeleteConstraintRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteConstraintRuleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteConstraintRuleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deletedraftschedule:
    post:
      tags:
      - WFM
      description: "Deletes a draft schedule with the corresponding @draft_schedule_sid
        for the org sending the request.\n It also deletes all of its shift instances
        and segments.\n Errors:\n   - grpc.Invalid: the @draft_schedule_sid is invalid
        for the org making the request.\n   - grpc.NotFound: the draft schedule with
        the given @draft_schedule_sid doesn't exist.\n   - grpc.Internal: error occurs
        when removing the draft schedule."
      operationId: WFM_DeleteDraftSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteDraftScheduleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteDraftScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleteforecastintervals:
    post:
      tags:
      - WFM
      description: "Deletes forecast data intervals/deltas based on the parameters
        provided.\n If @delete_param is type skill_profile_category, then the intervals/deltas
        to be deleted will be\n associated with that id. If @delete_param is type
        interval_sids, then the intervals/deltas to be\n deleted will be contained
        in the list @interval_sids. The @delete_type field determines which\n table(s)
        in the database the intervals/deltas will be deleted from.\n Errors:\n   -
        grpc.Invalid: one of the @delete_params is invalid\n   - grpc.NotFound: no
        matching intervals/deltas are found for deletion.\n   - grpc.Internal: error
        occurs during the deletion of the forecast data intervals/deltas."
      operationId: WFM_DeleteForecastIntervals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteForecastIntervalsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteForecastIntervalsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deletehistoricaldatadeltas:
    post:
      tags:
      - WFM
      description: "Deletes deltas whose dates match the given @start_datetimes for
        the given @skill_profile_sid.\n If no @start_datetimes are given, it will
        delete all the deltas that the given @skill_profile_sid has.\n Errors:\n   -
        grpc.Invalid: the @skill_profile_sid, or @start_datetimes in the request are
        invalid.\n   - grpc.NotFound: no matching deltas are found for deletion.\n
        \  - grpc.Internal: error occurs during the deletion of the historical data
        interval."
      operationId: WFM_DeleteHistoricalDataDeltas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteHistoricalDataDeltasReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteHistoricalDataDeltasRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleteopentimespattern:
    post:
      tags:
      - WFM
      description: "Deletes an open times pattern with the coresponding @open_times_pattern_sid
        for the org sending the request.\n Errors:\n   - grpc.Invalid: the @open_times_pattern_sid
        is invalid for the org making the request.\n   - grpc.NotFound: the given
        @open_times_pattern doesn't exist.\n   - grpc.Internal: error occurs when
        removing the open times pattern."
      operationId: WFM_DeleteOpenTimesPattern
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteOpenTimesPatternReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteOpenTimesPatternRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleteplacementrule:
    post:
      tags:
      - WFM
      description: "Deletes a placement rule with the coresponding @placement_rule_sid
        for the org sending the request.\n It also deletes the scheduling activity
        referenced by the @scheduling_activity_sid if said activity is not a member
        of any other entity.\n Errors:\n   - grpc.Invalid: the @placement_rule_sid
        is invalid for the org making the request.\n   - grpc.NotFound: the given
        @placement_rule doesn't exist.\n   - grpc.Internal: error occurs when removing
        the placement rule."
      operationId: WFM_DeletePlacementRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeletePlacementRuleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeletePlacementRuleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleterealtimemanagementstatecolor:
    post:
      tags:
      - WFM
      description: "Deletes the state color for the given @state for the org sending
        the request.\n The state will be associated with the system default color.\n
        Errors:\n  - grpc.Invalid: the @state is invalid or is not associated with
        an @rbg_color_id.\n  - grpc.Internal: error occurs when deleting the state
        color fails."
      operationId: WFM_DeleteRealTimeManagementStateColor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteRealTimeManagementStateColorRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteRealTimeManagementStateColorResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleteregressiontemplate:
    post:
      tags:
      - WFM
      description: "Deletes a regression template for the requesting org that has
        the given @regression_template_sid.\n Errors:\n   - grpc.Invalid: the @regression_template_sid
        in the request is invalid.\n   - grpc.Internal: error occurs during the deletion
        of the regression template."
      operationId: WFM_DeleteRegressionTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteRegressionTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteRegressionTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deletergbacolor:
    post:
      tags:
      - WFM
      description: "Delete the rgba color with the @rgba_color_id for the org sending
        the request.\n Deletes any real time management state colors that are using
        @rgba_color_id, leaving them with their default colors.option\n Errors:\n
        \ - grpc.Invalid: the @rgba_color_id is invalid or does not exist.\n  - grpc.Internal:
        error occurs when deleting the rgba color or real time management state colors."
      operationId: WFM_DeleteRgbaColor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteRgbaColorRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteRgbaColorResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleteschedulingtarget:
    post:
      tags:
      - WFM
      description: "Deletes the scheduling target of the corresponding @node_selector
        for the org sending the request.\n Errors:\n   -grpc.Invalid: the @node_selector
        is invalid.\n   -grpc.NotFound: the scheduling target for the given @node_selector
        doesn't exist for the org making the request.\n   -grpc.Internal: error occurs
        when removing the scheduling target."
      operationId: WFM_DeleteSchedulingTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteSchedulingTargetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteSchedulingTargetRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleteshiftinstances:
    post:
      tags:
      - WFM
      description: "Deletes shift instances with the corresponding @shift_instance_sids
        for the org sending the request.\n Errors:\n   -grpc.Invalid: the @shift_instance_sids
        are invalid for the org making the request.\n   -grpc.NotFound: the shift
        instances with the given @shift_instance_sids don't exist.\n   -grpc.Internal:
        error occurs when removing the shift instances."
      operationId: WFM_DeleteShiftInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteShiftInstancesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteShiftInstancesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deleteskillproficiency:
    post:
      tags:
      - WFM
      description: "Deletes a skill proficiency with the corresponding @skill_proficiency_sid
        for the org sending the request.\n Errors:\n   -grpc.Invalid: the @skill_proficiency_sid
        is invalid for the org making the request.\n   -grpc.NotFound: the skill proficiency
        with the given @skill_proficiency_sid doesn't exist.\n   -grpc.Internal: error
        occurs when removing the skill proficiency."
      operationId: WFM_DeleteSkillProficiency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteSkillProficiencyReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteSkillProficiencyRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deletetouragentcollections:
    post:
      tags:
      - WFM
      description: "Deletes the Tour Agent collections matching @tour_agent_collection_sids
        for the org sending the request.\n Any existing associations with WFM Agent
        Sids will be deleted as well.\n Errors:\n   - grpc.Invalid: the request data
        is invalid.\n   - grpc.Internal: error occurs when deleting the tour agent
        collections."
      operationId: WFM_DeleteTourAgentCollections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteTourAgentCollectionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteTourAgentCollectionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deletetouragentcollectionwfmagents:
    post:
      tags:
      - WFM
      description: "Deletes association between the @wfm_agent_sids and @tour_agent_collection_sid
        for the org sending the request.\n If no @wfm_agent_sids are provided, all
        existing @wfm_agent_sids for the given @tour_agent_collection_sid will be
        deleted.\n Errors:\n   - grpc.Invalid: the request data is invalid.\n   -
        grpc.NotFound: there are no WFM Agent associations to delete for @tour_agent_collection_sid.\n
        \  - grpc.Internal: error occurs when getting the tour agent collections."
      operationId: WFM_DeleteTourAgentCollectionWFMAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteTourAgentCollectionWFMAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteTourAgentCollectionWFMAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deletetourpattern:
    post:
      tags:
      - WFM
      description: "Deletes the Tour Pattern belonging to @tour_pattern_sid and the
        org sending the request.\n Any member Tour Week Patterns or Agent Collections
        will be deleted as well.\n Errors:\n   - grpc.Invalid: the request data is
        invalid.\n   - grpc.Internal: error occurs when deleting the data or it's
        children."
      operationId: WFM_DeleteTourPattern
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteTourPatternReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteTourPatternRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deletetourshiftinstanceconfigs:
    post:
      tags:
      - WFM
      description: "Deletes the Tour Shift Instance Configs matching @tour_shift_instance_config_sids
        for the org sending the request.\n Errors:\n   - grpc.Invalid: the request
        data is invalid.\n   - grpc.Internal: error occurs when getting the Tour Shift
        Instance Configs."
      operationId: WFM_DeleteTourShiftInstanceConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteTourShiftInstanceConfigsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteTourShiftInstanceConfigsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deletetourshiftsegmentconfigs:
    post:
      tags:
      - WFM
      description: "Deletes the Tour Shift Segment Configs associated with the given
        @tour_shift_segment_config_sids for the org sending the request.\n Errors:\n
        \  - grpc.Invalid: the request data is invalid.\n   - grpc.Internal: error
        occurs when deleting the Tour Shift Segment Configs."
      operationId: WFM_DeleteTourShiftSegmentConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteTourShiftSegmentConfigsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteTourShiftSegmentConfigsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deletetourweekpatterns:
    post:
      tags:
      - WFM
      description: "Deletes the Tour Week Patterns with the given @tour_week_pattern_sids
        for the org sending the request.\n Any Tour Week Instance or Segment Configs
        using @tour_week_pattern_sids will be deleted.\n Request will error if any
        @tour_week_pattern_sids are in use by a Tour Agent Collection, as those must
        be removed first.\n Errors:\n   - grpc.Invalid: the request data is invalid.\n
        \  - grpc.FailedPrecondition: a @tour_week_pattern_sid is in use by a Tour
        Agent Collection.\n   - grpc.Internal: error occurs when deleting the tour
        week patterns or configs."
      operationId: WFM_DeleteTourWeekPatterns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteTourWeekPatternsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteTourWeekPatternsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deletewfmagentmemberships:
    post:
      tags:
      - WFM
      description: "Deletes a membership association for each of the given @wfm_agent_sids
        with the given @agent_group_sid for the org sending the request.\n Errors:\n
        \  - grpc.Invalid: the @wfm_agent_sids, or @agent_group_sid are invalid.\n
        \  - grpc.NotFound: any of the given memberships to delete do not exist.\n
        \  - grpc.Internal: error occurs when deleting the association."
      operationId: WFM_DeleteWFMAgentMemberships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteWFMAgentMembershipsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteWFMAgentMembershipsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/deletewfmagentsmemberships:
    post:
      tags:
      - WFM
      description: "Deletes all membership associations for the given @wfm_agent_sids
        with the given @agent_group_sids.\n Errors:\n   - grpc.Invalid: the @wfm_agent_sids,
        or @agent_group_sids are invalid.\n   - grpc.Internal: error occurs when deleting
        the associations."
      operationId: WFM_DeleteWFMAgentsMemberships
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteWFMAgentsMembershipsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteWFMAgentsMembershipsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/disconnectinactiveskillprofilemapping:
    post:
      tags:
      - WFM
      description: "Changes the current mapping for the given @inactive_skill_profile_sid
        to be disconnected.\n DEPRECATED as of Sep/27/2023 - Use skill profile groups
        instead.\n Errors:\n   - grpc.Invalid: the @inactive_skill_profile_sid in
        the request is invalid.\n   - grpc.NotFound: the skill profile is not found
        for the org.\n   - grpc.Internal: the current mapping for the given @inactive_skill_profile_sid
        is already disconnected,\n\t\t\t\t            the given @inactive_skill_profile_sid
        is of an active skill profile."
      operationId: WFM_DisconnectInactiveSkillProfileMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.DisconnectInactiveSkillProfileMappingReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.DisconnectInactiveSkillProfileMappingRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/generatetourweekpatterns:
    post:
      tags:
      - WFM
      description: "Generates a list of tour week patterns for @target_shift_template_sid
        and the org sending the request.\n Sets the member_tour_week_patterns with
        a tour week pattern for each of the @num_weeks_in_tour.\n Each of the tour
        week patterns will be set with tour shift instances and segment configs based
        on\n   the forecasted call data over the next @num_weeks_in_tour, starting
        on the next Monday.\n The returned data will not be persisted. This method
        will not effect any existing tour week patterns in the database.\n The @tour_week_patterns
        returned by this method are intended to replace, not append, all currenly
        existing tour week patterns for @target_shift_template_sid, once persisted.\n
        Errors:\n   - grpc.Invalid: the request data is invalid.\n   - grpc.NotFound:
        there is no call center node or @shift_template_sid associated with @schedule_scenario_sid.\n
        \  - grpc.Internal: error occurs when generating the tour week patterns."
      operationId: WFM_GenerateTourWeekPatterns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GenerateTourWeekPatternsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GenerateTourWeekPatternsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getavailabilitybitmaps:
    post:
      tags:
      - WFM
      description: "Gets the inherited, own, and resulting bitmaps for the agent availability
        patterns of @entities_to_check for @schedule_scenario_sid and the org sending
        the request.\n The @schedule_scenario_sid must match the scenario of the @entities_to_check.\n
        @entities_to_check must have the entity_type field set with a wfm agent, agent
        group or a type of node.\n If an availability bitmap is requested for an agent
        group, the bitmaps for all of it's member agents will be returned instead.\n
        The bitmaps will be generated for the span of @datetime_range.\n If @bitmap_type
        is COMPLETE, the bitmaps will be generated using all relevant pattern data.\n
        If @bitmap_type is ONLY_WEEKMAPS, the bitmaps will be generated using only
        the weekmap data from the availability patterns.\n If @bitmap_type is ONLY_CALENDAR_ITEMS,
        the bitmaps will be generated using only the calendar item data from the availability
        patterns.\n Errors:\n   - grpc.Invalid: the @entities_to_check is invalid
        for @schedule_scenario_sid and the org making the request.\n                 :
        the @datetime_range is invalid.\n   - grpc.NotFound: the given @entities_to_check
        don't exist.\n   - grpc.Internal: error occurs when getting the agent availability
        pattern bitmaps."
      operationId: WFM_GetAvailabilityBitmaps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetAvailabilityBitmapsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetAvailabilityBitmapsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getavailableregressionforecastermodeltypes:
    post:
      tags:
      - WFM
      description: "Gets a list of enums that represent all of the forecaster types
        that are currently available for use\n Errors:\n  -grpc.Internal: error occurs
        when contacting the forecaster to get the available forecaster types."
      operationId: WFM_GetAvailableRegressionForecasterModelTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetAvailableRegressionForecasterModelTypesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetAvailableRegressionForecasterModelTypesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getclienthistorycacheinfo:
    post:
      tags:
      - WFM
      description: "Gets the state of the cache for the org sending the request, and
        if the cache's state is not_loaded, or loading_failed,\n it will start the
        loading task before returning the current state.\n DEPRECATED as of Dec/13/2023
        - Use PerformInitialClientSetup instead.\n Errors:\n  -grpc.Internal: error
        occurs when getting the cache info."
      operationId: WFM_GetClientHistoryCacheInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetClientHistoryCacheInfoReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetClientHistoryCacheInfoRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getdefaultschedulingtarget:
    post:
      tags:
      - WFM
      description: "Gets the scheduling-target values for the org making the request.\n
        Errors:\n   - grpc.Internal: error occours when getting the scheduling-target
        values."
      operationId: WFM_GetDefaultSchedulingTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetDefaultSchedulingTargetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetDefaultSchedulingTargetRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getdraftschedule:
    post:
      tags:
      - WFM
      description: "Gets the draft schedule with @draft_schedule_sid for the corresponding
        @datetime_range for the org sending the request.\n The @datetime_range field
        is optional. If not set, the draft schedule will be obtained with it's default
        range from it's start to end time.\n if @include_shift_instances is true,
        the shift instances associated within @datetime_range for the draft schedule
        will be returned in the draft schedules shift_instances field.\n @node_selector
        must be for a node that belongs to the same schedule scenario as @draft_schedule_sid.\n
        if @include_shift_template is true, any returned shift instances will have
        their orginating shift template returned in their origin_shift_template field.\n
        if @include_shift_segments is true, any returned shift instances will have
        their shift_segments field set, otherwise the field will be left nil.\n if
        @include_scheduling_activity is true, any returned shift segments will have
        their scheduling_activity field set, otherwise the field will be left nil.\n
        if @include_activity is true, any returned scheduling activities will have
        their member_non_skill_activity field set, otherwise the field will be left
        nil.\n Errors:\n   - grpc.Invalid: the @datetime_range or @draft_schedule_sid
        are invalid.\n   - grpc.NotFound: the @node_selector or @draft_schedule_sid
        doesn't exist.\n   - grpc.Internal: error occurs when getting the draft schedule."
      operationId: WFM_GetDraftSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetDraftScheduleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetDraftScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getdraftschedulerequiredcalls:
    post:
      tags:
      - WFM
      description: "Gets the required calls intervals for the specified draft schedule
        for the corresponding @viewing_range, for the org sending the request.\n Errors:\n
        \  - grpc.Invalid: the request data is invalid.\n   - grpc.NotFound: the draft
        schedule doesn't exist.\n   - grpc.Internal: error occurs when getting the
        data."
      operationId: WFM_GetDraftScheduleRequiredCalls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetDraftScheduleRequiredCallsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetDraftScheduleRequiredCallsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getforecastingparameters:
    post:
      tags:
      - WFM
      description: "Gets the forecasting parameters for the org sending the request.\n
        If the org hasn't created any parameters, it will return the default parameters.\n
        Errors:\n   - grpc.Internal: error occurs when getting the parameters."
      operationId: WFM_GetForecastingParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetForecastingParametersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetForecastingParametersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getlastskillprofileresyncdate:
    post:
      tags:
      - WFM
      description: "Gets the last date of a skill profile resync for the org seding
        the request.\n If the org has never done a skill profile resync @resync_date
        will not be set.\n Errors:\n   - grpc.Internal: error occurs when getting
        the resync date."
      operationId: WFM_GetLastSkillProfileResyncDate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetLastSkillProfileResyncDateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetLastSkillProfileResyncDateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getoncallschedulingactivity:
    post:
      tags:
      - WFM
      description: "Gets the on call scheduling activity for the org sending the request.\n
        Required permissions:\n   NONE\n Errors:\n   -grpc.NotFound: the on call scheduling
        activity for the org is not found.\n   -grpc.Internal: error occurs when getting
        on call scheduling activity."
      operationId: WFM_GetOnCallSchedulingActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetOnCallSchedulingActivityReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetOnCallSchedulingActivityRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getopentimesbitmaps:
    post:
      tags:
      - WFM
      description: "Gets the inherited, own, and resulting bitmaps for the open times
        patterns of @node_to_check for @schedule_scenario_sid and the org sending
        the request.\n The @schedule_scenario_sid must match the scenario of the @node_to_check.\n
        If @bitmap_type is COMPLETE, the bitmaps will be generated using all relevant
        pattern data.\n If @bitmap_type is ONLY_WEEKMAPS, the bitmaps will be generated
        using only the weekmap data from the open times patterns.\n If @bitmap_type
        is ONLY_CALENDAR_ITEMS, the bitmaps will be generated using only the calendar
        item data from the open times patterns.\n The bitmaps will be generated for
        the span of @datetime_range.\n Errors:\n   - grpc.Invalid: the @node_to_check
        is invalid for @schedule_scenario_sid and the org making the request.\n                 :
        the @datetime_range is invalid.\n   - grpc.NotFound: the given @node_to_check
        doesn't exist.\n   - grpc.Internal: error occurs when getting the open times
        pattern bitmaps."
      operationId: WFM_GetOpenTimesBitmaps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetOpenTimesBitmapsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetOpenTimesBitmapsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getperformancemetrics:
    post:
      tags:
      - WFM
      description: "Gets the performance metrics across @datetime_range for shift
        instances in @schedule_selector associated with @node_selector for the org
        making the request.\n Performance metrics will be generated for each of the
        given @metric_params.\n The @interval_width_in_minutes must be a multiple
        of 5.\n Errors:\n   - grpc.Invalid: the request data is invalid.\n   - grpc.NotFound:
        the @node_selector, @schedule_selector, or their shift instances doesn't exist.\n
        \  - grpc.Internal: error occurs when getting the data."
      operationId: WFM_GetPerformanceMetrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetPerformanceMetricsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetPerformanceMetricsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getpublishedschedule:
    post:
      tags:
      - WFM
      description: "Gets the published schedule for the corresponding @datetime_range
        for the org sending the request.\n Will create a published schedule if it
        does not exist already for the org sending the request.\n if @include_shift_instances
        is true, the shift instances associated within @datetime_range for the published
        schedule will be returned in the published schedules shift_instances field.\n
        if @include_shift_template is true, any returned shift instances will have
        their orginating shift template returned in their origin_shift_template field.\n
        if @include_shift_segments is true, any returned shift instances will have
        their shift_segments field set, otherwise the field will be left nil.\n if
        @include_scheduling_activity is true, any returned shift segments will have
        their scheduling_activity field set, otherwise the field will be left nil.\n
        if @include_activity is true, any returned scheduling activities will have
        their member_non_skill_activity field set, otherwise the field will be left
        nil.\n Errors:\n   - grpc.Invalid: the @datetime_range, @metric_types are
        invalid.\n   - grpc.NotFound: the @node_selector doesn't exist.\n   - grpc.Internal:
        error occurs when getting the published schedule."
      operationId: WFM_GetPublishedSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetPublishedScheduleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetPublishedScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getpublishedschedulerequiredcalls:
    post:
      tags:
      - WFM
      description: "Gets the required calls intervals for the published schedule for
        the corresponding @viewing_range, for the org sending the request.\n Errors:\n
        \  - grpc.Invalid: the request data is invalid.\n   - grpc.NotFound: the published
        schedule doesn't exist.\n   - grpc.Internal: error occurs when getting the
        data."
      operationId: WFM_GetPublishedScheduleRequiredCalls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetPublishedScheduleRequiredCallsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetPublishedScheduleRequiredCallsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getschedulingtarget:
    post:
      tags:
      - WFM
      description: "Gets the @own_scheduling_target, @inherited_scheduling_target,
        and @resulting_scheduling_target for the given @node_selector and the org
        making the request.\n Errors:\n   - grpc.Invalid: the @node_selector is invalid.\n
        \  - grpc.NotFound: the given @node_selector doesn't exist for the org making
        the request.\n   - grpc.Internal: error occours when getting the scheduling
        target."
      operationId: WFM_GetSchedulingTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetSchedulingTargetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetSchedulingTargetRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getskillprofile:
    post:
      tags:
      - WFM
      description: "Get a skill profile that has the given @skill_profile_sid.\n It
        also gets all the skills and the mappings associated with that profile.\n
        If the @inactive_as_of_date of the skill profile is nil then the mapping is
        of inactive profiles to this one,\n otherwise the mapping is of this profile
        to an active one.\n Errors:\n   - grpc.Invalid: the @skill_profile_sid in
        the request is invalid.\n   - grpc.Internal: error occurs when getting the
        skill profile.\n   - grpc.NotFound: skill profile doesn't exist."
      operationId: WFM_GetSkillProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetSkillProfileReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetSkillProfileRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/getskillprofilescount:
    post:
      tags:
      - WFM
      description: "Gets the total number of skill profiles associated with the org
        sending the request.\n Errors:\n   - grpc.Internal: error occurs when getting
        the skill profiles count."
      operationId: WFM_GetSkillProfilesCount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetSkillProfilesCountReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetSkillProfilesCountRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/gettimeoffschedulingactivity:
    post:
      tags:
      - WFM
      description: "Gets the time off scheduling activity for the org sending the
        request.\n Required permissions:\n   NONE\n Errors:\n   -grpc.NotFound: the
        time off scheduling activity for the org is not found.\n   -grpc.Internal:
        error occurs when getting time off scheduling activity."
      operationId: WFM_GetTimeOffSchedulingActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetTimeOffSchedulingActivityRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetTimeOffSchedulingActivityResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/gettourpattern:
    post:
      tags:
      - WFM
      description: "Gets the Tour Pattern belonging to @shift_template_sid and the
        org sending the request.\n Errors:\n   - grpc.Invalid: the request data is
        invalid.\n   - grpc.NotFound: the requested Tour Pattern does not exist.\n
        \  - grpc.Internal: error occurs when getting the data."
      operationId: WFM_GetTourPattern
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetTourPatternReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetTourPatternRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/gettourpatterndiagnostics:
    post:
      tags:
      - WFM
      description: "Returns a list of diagnostics describing any issues with the given
        @tour_pattern.\n Checks the internal consistency between the pattern and all
        members, as well as making sure required fields are set with valid values.\n
        Ignores sid fields, except for @shift_template_sid and @scheduling_activity_sid.\n
        Does not query the database to check that foreign keys exist.\n Returns a
        single diagnostic with an OK code if the given @tour_pattern has no issues.\n
        The @member_tour_week_patterns and @member_tour_agent_collections fields must
        be set on @tour_pattern.\n Errors:\n   - grpc.Internal: error occurs when
        validating the tour pattern or members."
      operationId: WFM_GetTourPatternDiagnostics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetTourPatternDiagnosticsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetTourPatternDiagnosticsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/gettourpatternwithmembers:
    post:
      tags:
      - WFM
      description: "Gets the Tour Pattern belonging to @shift_template_sid and the
        org sending the request.\n The @tour_pattern will be returned with all member
        entities.\n Errors:\n   - grpc.Invalid: the request data is invalid.\n   -
        grpc.NotFound: the requested Tour Pattern does not exist.\n   - grpc.Internal:
        error occurs when getting the data."
      operationId: WFM_GetTourPatternWithMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.GetTourPatternWithMembersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.GetTourPatternWithMembersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/helloworldwfmadherence:
    post:
      tags:
      - WFM
      description: "A hello world endpoint to test the WFM Adherence App.\n Returns
        a string with a hello world message."
      operationId: WFM_HelloWorldWFMAdherence
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.HelloWorldWFMAdherenceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.HelloWorldWFMAdherenceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listadherenceagentrules:
    post:
      tags:
      - WFM
      description: "Gets all adherence agent @rules for the org sending the request.\n
        Rules will include their respective clauses.\n Errors:\n   - grpc.Invalid:
        the request arguments are invalid.\n   - grpc.Internal: error occurs when
        getting the rules."
      operationId: WFM_ListAdherenceAgentRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListAdherenceAgentRulesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListAdherenceAgentRulesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listadherencedepartmentalrules:
    post:
      tags:
      - WFM
      description: "Gets all adherence departmental @rules for the org sending the
        request.\n Rules will include their respective clauses.\n Errors:\n   - grpc.Invalid:
        the request arguments are invalid.\n   - grpc.Internal: error occurs when
        getting the rules."
      operationId: WFM_ListAdherenceDepartmentalRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListAdherenceDepartmentalRulesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListAdherenceDepartmentalRulesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listadherencerulenotificationconfigs:
    post:
      tags:
      - WFM
      description: "Gets all adherence rule @notification_configs for the org sending
        the request.\n Configs will include their respective entries.\n Errors:\n
        \  - grpc.Invalid: the request arguments are invalid.\n   - grpc.Internal:
        error occurs when getting the notification configs."
      operationId: WFM_ListAdherenceRuleNotificationConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListAdherenceRuleNotificationConfigsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListAdherenceRuleNotificationConfigsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listagentleavepetitions:
    post:
      tags:
      - WFM
      description: "Lists agent leave petitions for the @wfm_agent_sids over @datetime_range
        for the org sending the request.\n If no @wfm_agent_sids are provided, all
        agent leave petitions overlapping @datetime_range for the org sending the
        request will be returned.\n If no @datetime_range is provided, petitions will
        be returned across all datetimes.\n If @include_archived is true, archived
        agent leave petitions will be returned as well, otherwise archived requests
        will not be included.\n If no agent leave petitions are found for the given
        parameters, an empty slice will be returned.\n Errors:\n   - grpc.Invalid:
        the request data is invalid.\n   - grpc.Internal: error occurs when listing
        the agent leave petitions."
      operationId: WFM_ListAgentLeavePetitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListAgentLeavePetitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListAgentLeavePetitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listagentschedulegroups:
    post:
      tags:
      - WFM
      description: "ListAgentScheduleGroups lists all schedulable agent groups for
        the given @entity filled with @member_wfm_agents for the org sending the request.\n
        The given @entity must be either a Node or a ShiftTemplate.\n\n Errors:\n
        \  - grpc.Invalid: the request data is invalid.\n   - grpc.Internal: error
        occurs when getting the agent groups."
      operationId: WFM_ListAgentScheduleGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListAgentScheduleGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListAgentScheduleGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listagentstatesforday:
    post:
      tags:
      - WFM
      description: "List the real time agent states for published schedule and the
        org sending the request, starting on the given @start_datetime.\n If the @end_datetime
        is set, all agent state sequences will be returned for the range between @start_datetime
        and @end_datetime.\n If @end_datetime is not set, the agent state sequences
        will be returned over a 24 hour period or until the current time, whichever
        is shorter.\n Errors:\n   - grpc.Invalid: the @start_datetime is invalid or
        beyond the current datetime.\n   - grpc.Internal: error occurs when listing
        the agent states."
      operationId: WFM_ListAgentStatesForDay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListAgentStatesForDayRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListAgentStatesForDayResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listallwfmagents:
    post:
      tags:
      - WFM
      description: "Lists all wfm agents for the org sending the request.\n if @include_inactive
        is true then inactive agents will also be included, otherwise only active
        agents will be returned.\n if @include_skill_proficiencies is true then agents
        returned will include their skill proficiencies.\n if @include_agent_groups
        is true then the @agent_groups_by_agent response field will be set with a
        list of agent groups correlating to each agents index in the @wfm_agents field.\n
        if @include_agent_groups is set to true, the @agent_group_schedule_scenario_sid
        field must be set, so that the agent groups for the correct scenario are returned.\n
        if @include_agent_groups is set to true, and @agent_group_schedule_scenario_sid
        is not set, the agent groups will not be filtered by schedule scenario.\n
        if @include_agent_groups is set to false, the @agent_group_schedule_scenario_sid
        will be ignored.\n @agent_group_schedule_scenario_sid does not effect which
        @wfm_agents are returned.\n WFM agents with no associated agent_groups will
        have an empty slice in agent_groups_by_agent at their correlated index.\n
        Errors:\n   - grpc.Internal: error occurs when getting the wfm agents."
      operationId: WFM_ListAllWFMAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListAllWFMAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListAllWFMAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listcallprofiletemplates:
    post:
      tags:
      - WFM
      description: "Gets the call profile templates that the org sending the request
        has.\n Errors:\n   - grpc.Internal: error occurs when getting the templates."
      operationId: WFM_ListCallProfileTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListCallProfileTemplatesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListCallProfileTemplatesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listcandidateschedulingactivities:
    post:
      tags:
      - WFM
      description: "Lists the candidate scheduling activities for a constraint or
        placement rule, inherited through given @parent_of_rule for @schedule_scenario_sid
        for the org making the request.\n @parent_of_rule may be any type of node,
        agent group, or shift template which the rule will belong to.\n If the rule
        will belong to a wfm agent, the agent group must be supplied instead to get
        a relevant set of candidate scheduling activities.\n Member non skill activity
        of each scheduling activity will be included in the response.\n The on call
        scheduling activity will always be included.\n Errors:\n   - grpc.Invalid:
        the @parent_of_rule is invalid.\n   - grpc.NotFound: @parent_of_rule doesn't
        exist\n   - grpc.Internal: error occurs when applying inheritance or getting
        the nodes from @parent_of_rule."
      operationId: WFM_ListCandidateSchedulingActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListCandidateSchedulingActivitiesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListCandidateSchedulingActivitiesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listcandidatewfmagents:
    post:
      tags:
      - WFM
      description: "Lists all candidate wfm agents for the org sending the request
        and given @agent_group_sid.\n A WFM agent is considered a candidate when it's
        active and it doesn't already belong to the given agent group.\n Member entities
        will not be returned.\n Errors:\n   - grpc.Invalid: @agent_group_sid has an
        invalid value.\n   - grpc.Internal: error occurs when getting the wfm agents."
      operationId: WFM_ListCandidateWFMAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListCandidateWFMAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListCandidateWFMAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listconfigentities:
    post:
      tags:
      - WFM
      description: "Gets config entities that match the org sending the request and
        given @entity_type and that belong to the @belongs_to_entity and @schedule_scenario_sid
        parameters.\n If @include_member_lists is set to true the member lists of
        the entities retrieved will be included.\n Any nodes in the returned set of
        entities will have inherited nonskill associations applied to the node's member_nonskill_activity
        fields.\n Errors:\n   - grpc.Invalid: the @entity_type, or @belongs_to_entity
        have invalid values.\n   - grpc.Internal: error occurs when getting the config
        entities."
      operationId: WFM_ListConfigEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listdraftschedules:
    post:
      tags:
      - WFM
      description: "Lists the draft schedules whose scheduling_range overlaps the
        given @datetime_range for the org sending the request.\n If @datetime_range
        is not set, all draft schedules for the org will be returned.\n Errors:\n
        \  - grpc.Invalid: the @datetime_range is invalid.\n   - grpc.Internal: error
        occurs when listing the draft schedules."
      operationId: WFM_ListDraftSchedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListDraftSchedulesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListDraftSchedulesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listforecastintervals:
    post:
      tags:
      - WFM
      description: "Gets the forecast data intervals for the given @skill_profile_category.\n
        Errors:\n   - grpc.Invalid: the @skill_profile_category in the request is
        invalid.\n   - grpc.Internal: error occurs when getting the forecast data
        intervals."
      operationId: WFM_ListForecastIntervals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListForecastIntervalsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CallDataByInterval'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listforecastintervalsforskillprofile:
    post:
      tags:
      - WFM
      description: "Gets the forecast data intervals for the given @skill_profile_sid.\n
        DEPRECATED as of Sep/13/2023 - Use ListForecastIntervals instead.\n Errors:\n
        \  - grpc.Invalid: the @skill_profile_sid in the request is invalid.\n   -
        grpc.Internal: error occurs when getting the forecast data intervals."
      operationId: WFM_ListForecastIntervalsForSkillProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListForecastIntervalsForSkillProfileReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.CallDataByInterval'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listhistoricaldata:
    post:
      tags:
      - WFM
      description: "Gets the historical data for the org sending the request and the
        given @skill_profile_category.\n It will look through the client's call history
        and generate the historical data by using their configured forecasting parameters
        (historical data period and interval width).\n The duration of each interval
        will be the interval width of the org's forecasting parameters.\n It also
        applies any deltas that the client has stored for the given @skill_profile_category,
        if the category is a group it will use the deltas of the skill profiles part
        of that group.\n If the client has no historical data, only the deltas will
        be applied to the returned intervals, all other intervals will have nil averages.\n
        Errors:\n   - grpc.Invalid: the @skill_profile_category in the request is
        invalid.\n   - grpc.NotFound: the @skill_profile_category given is not found
        for the org.\n   - grpc.Internal: error occurs when getting the historical
        data."
      operationId: WFM_ListHistoricalData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListHistoricalDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListHistoricalDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listhistoricaldataforallskillprofiles:
    post:
      tags:
      - WFM
      description: "Retrieves the history for all the skill profiles of the requesting
        org.\n Each value in every interval that has the same @start_datetime of each
        skill profile will be summed then averaged and made into a single one.\n When
        calculating the averages, each interval's values will be weighted by the number
        of @total_calls it has.\n History will be sorted by @start_datetime in ascending
        order, and the range is determined by the client's historical range.\n Errors:\n
        \  - grpc.Internal: error occurs when retriving the history."
      operationId: WFM_ListHistoricalDataForAllSkillProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListHistoricalDataForAllSkillProfilesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListHistoricalDataForAllSkillProfilesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listnonskillactivities:
    post:
      tags:
      - WFM
      description: "Lists the non skill activities that belong to the org sending
        the request.\n Errors:.\n   - grpc.Internal: error occurs when listing the
        activites."
      operationId: WFM_ListNonSkillActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListNonSkillActivitiesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListNonSkillActivitiesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listnonskillactivityassociations:
    post:
      tags:
      - WFM
      description: "Lists the IDs of non skill activities that belong to the org sending
        the request which have the given @relationship_type with the @associated_entity.\n
        Errors:\n   - grpc.Invalid: the @associated_entity or @relationship_type are
        invalid.\n   - grpc.Internal: error occurs when listing the associations."
      operationId: WFM_ListNonSkillActivityAssociations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListNonSkillActivityAssociationsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListNonSkillActivityAssociationsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listopendaterangesfornodeopentimesbitmaps:
    post:
      tags:
      - WFM
      description: "Gets the datetime ranges over which the given @node_selector open
        times patterns are open throughout the given @datetime_range for the org sending
        the request.\n If the @node_selector is not open during that range, no ranges
        will be returned.\n If the @node_selector is opened before or after the given
        @datetime_range, those times outside of @datetime_range will not be included
        in the returned @open_close_ranges.\n Errors:\n   - grpc.Invalid: the @node_selector
        or @datetime_range is invalid.\n   - grpc.NotFound: the given @node_selector
        doesn't exist in @schedule_scenario_sid for the org sending the request.\n
        \  - grpc.Internal: error occurs when getting the open time close times."
      operationId: WFM_ListOpenDateRangesForNodeOpenTimesBitmaps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListOpenDateRangesForNodeOpenTimesBitmapsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListOpenDateRangesForNodeOpenTimesBitmapsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listpatternsforschedulingactivityclassifications:
    post:
      tags:
      - WFM
      description: "Lists the Open Time and Agent Availability patterns for the given
        @parent_entity and @scheduling_activity_classifications for the org sending
        the request.\n Required permissions:\n   NONE\n Errors:\n   - grpc.Invalid:
        the arguments in the request are invalid.\n   - grpc.Internal: error occurs
        getting the patterns or their scheduling activity sids."
      operationId: WFM_ListPatternsForSchedulingActivityClassifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListPatternsForSchedulingActivityClassificationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListPatternsForSchedulingActivityClassificationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listrealtimemanagementstatecolors:
    post:
      tags:
      - WFM
      description: "List org assigned colors for real-time management states.\n Any
        states that do not have an assigned state color will have their system default
        state color returned instead.\n Errors:\n  - grpc.Internal: error occurs when
        listing the real-time management state colors."
      operationId: WFM_ListRealTimeManagementStateColors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListRealTimeManagementStateColorsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListRealTimeManagementStateColorsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listrealtimemanagementstates:
    post:
      tags:
      - WFM
      description: "List org-level RealTimeManagementStates.\n Errors:\n   - grpc.Invalid:
        on invalid input.\n   - grpc.Internal: on unexpected error."
      operationId: WFM_ListRealTimeManagementStates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListRealTimeManagementStatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListRealTimeManagementStatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listregressiontemplates:
    post:
      tags:
      - WFM
      description: "Gets all the regression templates that the org sending the request
        has.\n Errors:\n   - grpc.Internal: error occurs when getting the regression
        templates."
      operationId: WFM_ListRegressionTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListRegressionTemplatesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListRegressionTemplatesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listrequiredcallsintervals:
    post:
      tags:
      - WFM
      description: "Lists the required calls intervals for the given @node_selector
        over the given @datetime_range for the org making the request.\n The @interval_width_in_minutes
        must be a multiple of 5.\n Errors:\n   - grpc.Invalid: the request data is
        invalid.\n   - grpc.Internal: error occurs when getting the data."
      operationId: WFM_ListRequiredCallsIntervals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListRequiredCallsIntervalsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListRequiredCallsIntervalsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listrgbacolors:
    post:
      tags:
      - WFM
      description: "Lists all rbga colors for the org sending the request.\n Errors:\n
        \  - grpc.Internal: error occurs when listing the @colors."
      operationId: WFM_ListRgbaColors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListRgbaColorsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListRgbaColorsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listshiftinstancesbysid:
    post:
      tags:
      - WFM
      description: "Lists the shift instances with the corresponding @shift_instance_sids
        for the org sending the request.\n If @include_shift_template is set to true
        then the related shift template for the shift instances will be returned in
        the shift template field.\n If @include_shift_segments is set to true then
        the related shift segments for the shift instances will be returned in the
        shift segments field.\n If @include_shift_segment_call_stats is set to true
        then the related shift segment call stats for the shift segments will be returned
        in the call stats by skill collection field on the shift segments.\n If @include_scheduling_activity
        is set to true then the related scheduling activity for the shift segment
        will be returned in the scheduling activity field.\n @include_shift_segments
        must be true to take effect.\n If @include_activity is set to true then the
        related non skill activity for the scheduling activity will be returned in
        the scheduling\n activities member non skill activity field. @include_scheduling_activity
        must be true to take effect.\n Errors:\n   - grpc.Invalid: @shift_instance_sids
        in the request are invalid.\n   - grpc.Internal: error occurs when listing
        the shift instances or their shift segments."
      operationId: WFM_ListShiftInstancesBySid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListShiftInstancesBySidReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListShiftInstancesBySidRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listshiftinstancesidsforagent:
    post:
      tags:
      - WFM
      description: "Lists the shift_instance_sids for the Shift Instances associated
        with @wfm_agent_sid over the given @datetime_range and @schedule_selector.\n
        Errors:\n   - grpc.Invalid: the request data is invalid.\n   - grpc.Internal:
        error occurs when getting the data."
      operationId: WFM_ListShiftInstanceSidsForAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListShiftInstanceSidsForAgentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListShiftInstanceSidsForAgentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listshiftinstancesidsforschedule:
    post:
      tags:
      - WFM
      description: "Lists the shift_instance_sids for the Shift Instances associated
        with the given @datetime_range and @schedule_selector.\n If @node_selector
        is set, only shifts sids related to the given @node_selector will be listed.\n
        If @node_selector is not set, all shifts on the @schedule_selector may be
        cleared, regardless of the node they are associated with.\n If @node_selector
        is set, the @schedule_scenario_sid must be set to match @node_selector.\n
        Errors:\n   - grpc.Invalid: the request data is invalid.\n   - grpc.Internal:
        error occurs when getting the data."
      operationId: WFM_ListShiftInstanceSidsForSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListShiftInstanceSidsForScheduleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListShiftInstanceSidsForScheduleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listshiftsegmentsbyshiftinstancesids:
    post:
      tags:
      - WFM
      description: "Lists shift segments for the specified shift instances for the
        org sending the request.\n If @include_scheduling_activity is set to true
        then the related scheduling activity for the shift segment will be returned
        in the scheduling activity field.\n If @include_activity is set to true then
        the related non skill activity for the scheduling activity will be returned
        in the scheduling activities member non skill activity field.\n Errors:\n
        \  - grpc.Invalid: the request data is invalid.\n   - grpc.NotFound: a shift
        instance doesn't exist.\n   - grpc.Internal: error occurs when getting the
        data."
      operationId: WFM_ListShiftSegmentsByShiftInstanceSids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListShiftSegmentsByShiftInstanceSidsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListShiftSegmentsByShiftInstanceSidsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listshifttemplatesbysids:
    post:
      tags:
      - WFM
      description: "Lists the shift templates matching the specified @shift_template_sids
        for the org sending the request.\n If @include_placement_rules is set to true,
        the @shift_templates will be returned with their member placement rules.\n
        Errors:\n   - grpc.Invalid: the @shift_template_sids are invalid.\n   - grpc.Internal:
        error occurs when getting the data."
      operationId: WFM_ListShiftTemplatesBySids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListShiftTemplatesBySidsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListShiftTemplatesBySidsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listskillprofilegroups:
    post:
      tags:
      - WFM
      description: "Gets the skill profile groups that have the @skill_profile_group_sids
        for the org sending the request.\n if @include_inactive is true then inactive
        groups will also be included, otherwise only active groups will be returned.\n
        If @skill_profile_group_sids is empty it will get all the skill profile groups
        for the org.\n Errors:\n   - grpc.Invalid: the @skill_profile_group_sids in
        the request is invalid.\n   - grpc.Internal: error occurs getting the skill
        profile groups."
      operationId: WFM_ListSkillProfileGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListSkillProfileGroupsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListSkillProfileGroupsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listskillprofiles:
    post:
      tags:
      - WFM
      description: "Retrieves all the skill profiles of the org sending the request.\n
        Also it can return the skills of each of the returned profiles.\n Errors:"
      operationId: WFM_ListSkillProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListSkillProfilesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListSkillProfilesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listskills:
    post:
      tags:
      - WFM
      description: "Gets all the skills that the org sending the request has.\n Skills
        returned will be sorted by @skill_sid in ascending order.\n Errors:\n   -
        grpc.Internal: error occurs when getting the skills."
      operationId: WFM_ListSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListSkillsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListSkillsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listtopskillprofiles:
    post:
      tags:
      - WFM
      description: "Gets the top N skill profiles with the highest calls_count for
        org sending the request where N is @max_number_of_profiles.\n It will also
        return the number of skills found for that profile.\n Individual skills that
        each profile has will not be returned.\n Errors:\n   - grpc.Invalid: the @max_number_of_profiles
        in the request is invalid.\n   - grpc.Internal: error occurs when getting
        the skill profiles."
      operationId: WFM_ListTopSkillProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListTopSkillProfilesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListTopSkillProfilesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listtouragentcollections:
    post:
      tags:
      - WFM
      description: "Lists the Tour Agent Collections belonging to @tour_pattern_sid
        for the org sending the request.\n Errors:\n   - grpc.Invalid: the request
        data is invalid.\n   - grpc.Internal: error occurs when getting the tour agent
        collections."
      operationId: WFM_ListTourAgentCollections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListTourAgentCollectionsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListTourAgentCollectionsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listtouragentcollectionwfmagents:
    post:
      tags:
      - WFM
      description: "Lists the WFM Agent SIDs belonging to @tour_agent_collection_sids
        for the org sending the request.\n The resulting sids will be returned in
        @wfm_agent_pairings each containing an @agent_collection_sid and @wfm_agent_sids.\n
        If no agents are found for a sid in the given @tour_agent_collection_sids,
        that @agent_collection_sid will have an empty slice in @wfm_agent_sids.\n
        Errors:\n   - grpc.Invalid: the request data is invalid.\n   - grpc.Internal:
        error occurs when getting the tour agent collections."
      operationId: WFM_ListTourAgentCollectionWFMAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListTourAgentCollectionWFMAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListTourAgentCollectionWFMAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listtourshiftinstanceconfigs:
    post:
      tags:
      - WFM
      description: "Lists the Tour Shift Instance Configs belonging to @tour_week_pattern_sids
        for the org sending the request.\n Errors:\n   - grpc.Invalid: the request
        data is invalid.\n   - grpc.Internal: error occurs when getting the Tour Shift
        Instance Configs."
      operationId: WFM_ListTourShiftInstanceConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListTourShiftInstanceConfigsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListTourShiftInstanceConfigsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listtourshiftsegmentconfigs:
    post:
      tags:
      - WFM
      description: "Lists the Tour Shift Segment Configs belonging to @tour_shift_instance_config_sids
        for the org sending the request.\n Errors:\n   - grpc.Invalid: the request
        data is invalid.\n   - grpc.Internal: error occurs when getting the Tour Shift
        Segment Configs."
      operationId: WFM_ListTourShiftSegmentConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListTourShiftSegmentConfigsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListTourShiftSegmentConfigsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listtourweekpatterns:
    post:
      tags:
      - WFM
      description: "Lists the Tour Week Patterns with @tour_pattern_sid for the org
        sending the request\n Errors:\n   - grpc.Invalid: the request data is invalid.\n
        \  - grpc.Internal: error occurs when getting the Tour Week Patterns."
      operationId: WFM_ListTourWeekPatterns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListTourWeekPatternsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListTourWeekPatternsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listunassignedwfmagents:
    post:
      tags:
      - WFM
      description: "Lists all wfm agents that don't have a TCN agent assigned to them
        for the given @orgId.\n Member entities will not be returned.\n Errors:\n
        \  - grpc.Internal: error occurs when getting the wfm agents."
      operationId: WFM_ListUnassignedWFMAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListUnassignedWFMAgentsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListUnassignedWFMAgentsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listungroupedwfmagents:
    post:
      tags:
      - WFM
      description: "Lists all wfm agents who are not grouped with any agent group
        for the given org sending the request that were created at or after the given
        @created_after_datetime.\n If @schedule_scenario_sid is positive, it will
        filter further to get only agents who are not grouped with any agent group
        for that scenario.\n if @include_skill_proficiencies is true then agents returned
        will include their skill proficiencies.\n Member entities will not be returned.\n
        Errors:\n   - grpc.Invalid: @created_after_datetime has an invalid value.\n
        \  - grpc.Internal: error occurs when getting the wfm agents."
      operationId: WFM_ListUngroupedWFMAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListUngroupedWFMAgentsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListUngroupedWFMAgentsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listvalidagentsforreplacement:
    post:
      tags:
      - WFM
      description: "Returns a list of @wfm_agent_sids that are suitable for replacing
        @wfm_agent_sid_to_replace for the given parameters and the org sending the
        request.\n Only enforces that skill proficiencies are covered by the individual
        wfm agents, does not enforce constraint rules.\n If @skip_skill_proficiency_sort
        is False, the agents will be returned in order of cumulative skill proficiency
        towards the required skills.\n If @include_skill_mismatches is True, the agents
        will be included even if they do not include all of the required skills for
        the shifts being replaced.\n If @skip_force_same_agent_groups is False, the
        agents will only be returned if they belong to every agent group that @wfm_agent_sid_to_replace
        is a member of. Otherwise, this check will be skipped.\n Errors:\n   - grpc.Invalid:
        the request data is invalid.\n   - grpc.Internal: error occurs when determinining
        which agents are valid."
      operationId: WFM_ListValidAgentsForReplacement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListValidAgentsForReplacementReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListValidAgentsForReplacementRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listwfmagentsassociatedwithagentgroup:
    post:
      tags:
      - WFM
      description: "Lists the IDs of wfm agents that belong to the org sending the
        request which are associated with the given @agent_group_sid.\n Errors:\n
        \  - grpc.Invalid: the @agent_group_sid is invalid.\n   - grpc.Internal: error
        occurs when listing the wfm agents."
      operationId: WFM_ListWFMAgentsAssociatedWithAgentGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListWFMAgentsAssociatedWithAgentGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListWFMAgentsAssociatedWithAgentGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/listwfmagentsids:
    post:
      tags:
      - WFM
      description: "Gets the wfm_agent_sids with the given @tcn_agent_sids for the
        org sending the request.\n Returns a map where Key: tcn_agent_sid - Value:
        wfm_agent_sid.\n If the wfm_agent_sid is not found for any @tcn_agent_sids,
        they will not have an entry in the returned @sids.\n Errors:\n  - grpc.Invalid:
        the @tcn_agent_sids are invalid.\n  - grpc.Internal: error occours while listing
        the wfm_agent_sids."
      operationId: WFM_ListWFMAgentSids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ListWFMAgentSidsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ListWFMAgentSidsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/performinitialclientsetup:
    post:
      tags:
      - WFM
      description: "Starts the tasks to perform the initial setup on wfm services
        for the org sending the request.\n It will then report the state of their
        setup task.\n A new setup task will only be started if the client hasn't done
        one before, or their setup failed previously.\n Errors:\n  - grpc.Internal:
        error occurs when performing the initial setup."
      operationId: WFM_PerformInitialClientSetup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.PerformInitialClientSetupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.PerformInitialClientSetupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/publishdraftschedule:
    post:
      tags:
      - WFM
      description: "Publishes the shift instances of the given @draft_schedule_sid
        to the published schedule of the org sending the request.\n Overlapping shift
        instances that aren't locked will be replaced with the instances from the
        draft schedule.\n If @ignore_diagnostics_errors is set to true, it will publish
        the schedule regardless of any diagnostics errors,\n otherwise it will return
        those diagnostic errors and not publish the schedule.\n @include parameters
        are used when retrieving the resulting published schedule, and work in the
        same way as for GetDraftSchedule.\n Errors:\n   - grpc.Invalid: the parameters
        in the @req are invalid..\n   - grpc.NotFound: @draft_schedule_sid doesn't
        exist.\n   - grpc.Internal: error occurs when publishing the draft schedule."
      operationId: WFM_PublishDraftSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.PublishDraftScheduleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.PublishDraftScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/removeagentfromfutureshifts:
    post:
      tags:
      - WFM
      description: "Removes the @wfm_agent_sid_to_remove from all future shifts for
        the org.\n If @replace_with_new_unassigned_agent is set to true, a new unassigned
        agent will be created and it will be assigned to the shifts and agent groups
        from @wfm_agent_sid_to_remove.\n If @replace_with_new_unassigned_agent is
        set to false, the future shifts will just be deleted.\n If the @wfm_agent_sid_to_remove
        is not currently inactive, it will be set as inactive.\n Errors:\n   - grpc.Internal:
        error occurs when deleting the shifts, creating the new unassigned agent,
        reassigning the shifts to that agent, or setting the agent to inactive."
      operationId: WFM_RemoveAgentFromFutureShifts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.RemoveAgentFromFutureShiftsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.RemoveAgentFromFutureShiftsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/removeagentfromschedulerequest:
    post:
      tags:
      - WFM
      description: "Removes the @wfm_agent_sid from @schedule_selector over @datetime_range
        for the org sending the request.\n Creates a new unassigned agent with the
        same active agent group associations as @wfm_agent_sid for @schedule_scenario_sid.\n
        The unassigned agent will be assigned to shifts belonging to @wfm_agent_sid,
        returning newly created unassigned agent's SID and the updated shifts.\n Errors:\n
        \  - grpc.Invalid: the request data is invalid.\n   - grpc.Internal: error
        occurs when creating the unassigned agent or updating the shifts."
      operationId: WFM_RemoveAgentFromSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.RemoveAgentFromScheduleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.RemoveAgentFromScheduleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/replaceagentonschedule:
    post:
      tags:
      - WFM
      description: "Replaces @wfm_agent_sid_to_remove with @wfm_agent_sid_to_add for
        the given parameters and the org sending the request.\n If @skip_overlapping_shifts,
        shifts with an overlap conflict will be skipped, otherwise overlap conflicts
        will cause a diagnostic to be returned.\n Does not enforce skill proficiencies.
        To check skill proficiencies for shift replacement use ListValidAgentsForReplacement.\n
        DEPRECATED as of Jan/22/2024 - Use ReplaceAgentOnScheduleV1 instead.\n Errors:\n
        \  - grpc.Invalid: the request data is invalid.\n   - grpc.Internal: error
        occurs when replacing the @wfm_agent_sid_to_remove."
      operationId: WFM_ReplaceAgentOnSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ReplaceAgentOnScheduleRes'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ReplaceAgentOnScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/replaceagentonschedulev1:
    post:
      tags:
      - WFM
      description: "Replaces @wfm_agent_sid_to_remove with @wfm_agent_sid_to_add for
        the given parameters and the org sending the request.\n If @skip_overlapping_shifts,
        shifts with an overlap conflict will be skipped, otherwise overlap conflicts
        will cause a diagnostic to be returned.\n Does not enforce skill proficiencies.
        To check skill proficiencies for shift replacement use ListValidAgentsForReplacement.\n
        Errors:\n   - grpc.Invalid: the request data is invalid.\n   - grpc.Internal:
        error occurs when replacing the @wfm_agent_sid_to_remove."
      operationId: WFM_ReplaceAgentOnScheduleV1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ReplaceAgentOnScheduleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ReplaceAgentOnScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/resetdraftschedule:
    post:
      tags:
      - WFM
      description: "Resets the shifts on the @draft_schedule_sid for the org sending
        the request.\n Shifts overlapping the @datetime_range will be deleted, then
        that @datetime_range will be populated with shifts from the published schedule.\n
        If no @datetime_range is provided, all shifts will be removed from the @draft_schedule_sid,
        and published shifts will be copied across the draft's datetime range.\n If
        @unlocked_only is set to true, only unlocked shifts will be deleted, and the
        locked shift instances will remain.\n   The published schedule will still
        be copied, so any newly overlapping shifts will result in an overlap warning.\n
        Errors:\n   - grpc.Invalid: the @datetime_range or @draft_schedule_sid are
        invalid for the org sending the request.\n   - grpc.NotFound: the @draft_schedule_sid
        doesn't exist.\n   - grpc.Internal: error occurs when resetting the schedule."
      operationId: WFM_ResetDraftSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ResetDraftScheduleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ResetDraftScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/resolveagentleavepetition:
    post:
      tags:
      - WFM
      description: "Resolves the given @agent_leave_petition_id, setting the given
        parameters, for the org sending the request.\n May only resolve leave petitions
        that currently have a PENDING_PETITION status.\n May only set the @petition_status
        to APPROVED_PETITION or DENIED_PETITION.\n If a petition is approved, time
        off shifts will be added to the agent's schedule across the requested_datetime_ranges.\n
        If @retain_partial_shifts is true, partial shifts overlapping the requested_datetime_ranges
        will have the remaining portion of the shift retained,\n    if the remaining
        portion of the shift is at least 30 minutes in length.\n If @retain_partial_shifts
        is false, the entirety of shifts overlapping the requested_datetime_ranges
        range will be deleted or transfered depending on @replace_with_unassigned_agent.\n
        If @replace_with_unassigned_agent is true, an unassigned agent sid will be
        assigned to the covered shifts instead of deleting them.\n When @replace_with_unassigned_agent
        is true, if @retain_partial_shifts is also true, only the portion of the shift
        in the requested datetime ranges will be transfered.\n When @replace_with_unassigned_agent
        is true, if @retain_partial_shifts is false, the entirety of any overlapping
        shifts will be transfered.\n Errors:\n   - grpc.Invalid: the request data
        is invalid, the @agent_leave_petition_id is not pending approval.\n   - grpc.Internal:
        error occurs when resolving the agent leave petition, or modifying the agent's
        schedule.\n   - grpc.NotFound: the @agent_leave_petition_id does not exist
        for the org sending the request."
      operationId: WFM_ResolveAgentLeavePetition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ResolveAgentLeavePetitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ResolveAgentLeavePetitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/resyncskillprofiles:
    post:
      tags:
      - WFM
      description: "Resyncs the skill profiles of the org sending the request.\n It
        will add skills and skill profiles based on that client's historical call
        data.\n Errors:\n   - grpc.Internal: error occurs when creating the new skills
        and skill profiles."
      operationId: WFM_ResyncSkillProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.ResyncSkillProfilesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.ResyncSkillProfilesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/setdefaultschedulingtarget:
    post:
      tags:
      - WFM
      description: "Sets the scheduling-target values for the org making the request.\n
        Errors:\n   - grpc.Invalid: any of the given values are invalid.\n   - grpc.Internal:
        error occours when setting the scheduling-target values."
      operationId: WFM_SetDefaultSchedulingTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.SetDefaultSchedulingTargetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.SetDefaultSchedulingTargetRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/setschedulingtarget:
    post:
      tags:
      - WFM
      description: "Creates the given @scheduling_target for the org making the request.\n
        The @scheduling_target_sid of the new entity will be returned in the response.\n
        Any preexisting scheduling target for @node_entity will be removed upon creation
        of the new @scheduling_target.\n Errors:\n   - grpc.Invalid: the @scheduling_target
        is invalid.\n   - grpc.NotFound: @node_entity doesn't exist for @schedule_scenario_sid
        and the org making the request.\n   - grpc.Internal: error occours when setting
        the scheduling target."
      operationId: WFM_SetSchedulingTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.SetSchedulingTargetReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.SetSchedulingTargetRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/splitshiftinstance:
    post:
      tags:
      - WFM
      description: "Splits the @shift_instance_sid into two, at the given @time_to_split,
        returning the updated and new @shift_instances.\n Any shift segments will
        be split between the two shift instances at @time_to_split.\n If the @time_to_split
        creates instances shorter then the minimum length specified by the shift template,\n
        \  warning diagnostics will be returned and the instance will still be split.\n
        Errors:\n   -grpc.Invalid: one or more fields in the request have invalid
        values, or @time_to_split is not at least 5 minutes from the start or end
        of @shift_instance_sid.\n   -grpc.NotFound: the @shift_instance_sid does't
        exist for the org sending the request.\n   -grpc.Internal: error occurs when
        creating or updating the shift instances."
      operationId: WFM_SplitShiftInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.SplitShiftInstanceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.SplitShiftInstanceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/swapshiftinstances:
    post:
      tags:
      - WFM
      description: "Swaps shift instances with the given @shift_instance_sids that
        belong to @wfm_agent_sid1 to belong to @wfm_agent_sid2 (and viceversa).\n
        Returns the swapped @shift_instances after they are succesfully updated.\n
        If there are other shifts for the given @wfm_agent_sids with an overlap conflict,
        diagnostics will be returned instead.\n All @shift_instance_sids must belong
        to the same schedule, and be from a draft schedule.\n Errors:\n   - grpc.Invalid:
        one or more fields in the request have invalid values.\n   - grpc.NotFound:
        wfm_agent_sid_1, wfm_agent_sid_2, or shift_instance_sids do not exist for
        the org sending the request.\n   - grpc.Internal: error occurs when swapping
        the shift instances."
      operationId: WFM_SwapShiftInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.SwapShiftInstancesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.SwapShiftInstancesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateadherenceagentrule:
    post:
      tags:
      - WFM
      description: "Updates the given adherence agent @rule for the org sending the
        request.\n Fields that can be updated are: name, selected_entity_id, selected_entity_type,
        rule_requirement_type, adherence_rule_notification_config_id.\n Errors:\n
        \  - grpc.Invalid: the values on the given @rule are invalid.\n   - grpc.NotFound:
        agent rule clause with @adherence_agent_rule_clause_id does not exist.\n   -
        grpc.Internal: error occurs when updating the given @rule."
      operationId: WFM_UpdateAdherenceAgentRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAdherenceAgentRuleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAdherenceAgentRuleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateadherenceagentruleclause:
    post:
      tags:
      - WFM
      description: "Updates the given adherence agent rule @clause for the org sending
        the request.\n Fields that can be updated are: action_type, condition, amount,
        unit.\n Errors:\n   - grpc.Invalid: the values on the given @clause are invalid.\n
        \  - grpc.Internal: error occurs when updating the given @clause.\n   - grpc.NotFound:
        agent rule with the with @adherence_agent_rule_clause_id does not exist to
        update."
      operationId: WFM_UpdateAdherenceAgentRuleClause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAdherenceAgentRuleClauseRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAdherenceAgentRuleClauseResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateadherencedepartmentalrule:
    post:
      tags:
      - WFM
      description: "Updates the given adherence departmental @rule for the org sending
        the request.\n Fields that can be updated are: name, selected_entity_id, selected_entity_type,
        rule_requirement_type,\n rule_range, custom_range, adherence_rule_notification_config_id.\n
        Errors:\n   - grpc.Invalid: the values on the given @rule are invalid.\n   -
        grpc.NotFound: departmental rule clause with @adherence_departmental_rule_clause_id
        does not exist.\n   - grpc.Internal: error occurs when updating the given
        @rule."
      operationId: WFM_UpdateAdherenceDepartmentalRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAdherenceDepartmentalRuleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAdherenceDepartmentalRuleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateadherencedepartmentalruleclause:
    post:
      tags:
      - WFM
      description: "Updates the given adherence departmental rule @clause for the
        org sending the request.\n Fields that can be updated are: action_type, condition,
        amount, unit, per_amount, per_unit.\n Errors:\n   - grpc.Invalid: the values
        on the given @clause are invalid.\n   - grpc.Internal: error occurs when updating
        the given @clause.\n   - grpc.NotFound: departmental rule with the with @adherence_departmental_rule_clause_id
        does not exist to update."
      operationId: WFM_UpdateAdherenceDepartmentalRuleClause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAdherenceDepartmentalRuleClauseRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAdherenceDepartmentalRuleClauseResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateadherencerulenotificationconfig:
    post:
      tags:
      - WFM
      description: "Updates the given adherence @notification_config for the org sending
        the request.\n Fields that can be updated are: name.\n Errors:\n   - grpc.Invalid:
        the values on the given @notification_config are invalid.\n   - grpc.NotFound:
        the given notification config is not found.\n   - grpc.Internal: error occurs
        when updating the given @notification_config."
      operationId: WFM_UpdateAdherenceRuleNotificationConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAdherenceRuleNotificationConfigRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAdherenceRuleNotificationConfigResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateadherencerulenotificationconfigentry:
    post:
      tags:
      - WFM
      description: "Updates the given adherence @notification_config_entry for the
        org sending the request.\n Fields that can be updated are: recipient_user_id,
        notification_medium, seconds_to_wait_for_no_response.\n Errors:\n   - grpc.Invalid:
        the values on the given @notification_config_entry are invalid.\n   - grpc.NotFound:
        the given notification config entry is not found.\n   - grpc.Internal: error
        occurs when updating the given @notification_config_entry."
      operationId: WFM_UpdateAdherenceRuleNotificationConfigEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAdherenceRuleNotificationConfigEntryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAdherenceRuleNotificationConfigEntryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateagentavailabilitypattern:
    post:
      tags:
      - WFM
      description: "Updates an agent availability pattern for the given @agent_availability_pattern_sid
        and org sending the request with the provided parameters.\n All of the entity's
        parameters that are not desired to be updated must be filled with their current
        values.\n The @schedule_scenario_sid must be the original for this agent availability
        pattern since it cannot be changed.\n Errors:\n   - grpc.Invalid: one or more
        fields in the @agent_availability_pattern have invalid values.\n   - grpc.Internal:
        error occurs when updating the agent avilability pattern.\n   - grpc.NotFound:
        entry to be updated doesn't exist, or the @parent_entity has a different @schedule_scenario_sid
        than the agent availability pattern."
      operationId: WFM_UpdateAgentAvailabilityPattern
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAgentAvailabilityPatternReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAgentAvailabilityPatternRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateagentgroup:
    post:
      tags:
      - WFM
      description: "Updates the agent group corresponding to the @agent_group_sid,
        @name, and @parent_entity.\n All of the entity's parameters that are not desired
        to be updated must be filled with their current values.\n The @schedule_scenario_sid
        must be the original for this agent group since it cannot be changed.\n The
        @member fields will be ignored since those cannot be updated by this method
        and must be updated by their respective update methods.\n Errors:\n   - grpc.Invalid:
        the @agent_group_sid, @parent_entity, or @name in the request are invalid.\n
        \  - grpc.Internal: error occurs when updating the agent group.\n   - grpc.AlreadyExists:
        an agent group with the given @name already exists.\n   - grpc.NotFound: entry
        to be updated doesn't exist, or the @parent_entity has a different @schedule_scenario_sid
        than the agent group."
      operationId: WFM_UpdateAgentGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAgentGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateAgentGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updatecallcenternode:
    post:
      tags:
      - WFM
      description: "Updates the call center @node that has the given @call_center_node_sid.\n
        All of the entity's parameters that are not desired to be updated must be
        filled with their current values.\n The @schedule_scenario_sid must be the
        original for this call center node since it cannot be changed.\n The @member
        fields will be ignored since those cannot be updated by this method and must
        be updated by their respective update methods.\n Errors:\n   - grpc.Invalid:
        the one or more of the fields in the request are invalid.\n   - grpc.Internal:
        error occurs when updating the call center node.\n   - grpc.NotFound: entry
        to be updated doesn't exist."
      operationId: WFM_UpdateCallCenterNode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateCallCenterNodeReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateCallCenterNodeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateclientnode:
    post:
      tags:
      - WFM
      description: "Updates a client node for the org sending the request that has
        the given @client_node_sid and @schedule_scenario_sid.\n All of the entity's
        parameters that are not desired to be updated must be filled with their current
        values.\n The @schedule_scenario_sid must be the original for this client
        node since it cannot be changed.\n The @member fields will be ignored since
        those cannot be updated by this method and must be updated by their respective
        update methods.\n Errors:\n   - grpc.Invalid: one or more fields in the @node
        have invalid values.\n   - grpc.Internal: error occurs when updating the client
        @node.\n   - grpc.NotFound: entry to be updated doesn't exist, or the given
        @parent_sid (call_center_node_sid) belongs to a different scenario than this
        @node."
      operationId: WFM_UpdateClientNode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateClientNodeReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateClientNodeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateconstraintrule:
    post:
      tags:
      - WFM
      description: "Updates the constraint rule corresponding for given @contraint_rule_sid
        for the org sending the request with the provided parameters.\n All of the
        entity's parameters that are not desired to be updated must be filled with
        their current values.\n The @schedule_scenario_sid must be the original for
        this constraint rule since it cannot be changed.\n If @rule_type is set to
        MIN_SKILL_LEVEL, the @member_target_entity field must be set with a skill
        proficiency, otherwise it should not be set and field will be ignored.\n If
        the @target_sid is for a different skill proficiency than the current one
        the constraint rule has as a target,\n the old one will be deleted and a new
        one will be created for the given @member_target_entity.\n If @rule_type is
        NOT MIN_SKILL_LEVEL then the @target_sid must be that of a scheduling activity.\n
        The all other @member fields will be ignored since those cannot be updated
        by this method and must be updated by their respective update methods.\n Errors:\n
        \  - grpc.Invalid: one or more fields in the @constraint_rule have invalid
        values.\n   - grpc.NotFound: entry to be updated doesn't exist, or the @parent_entity
        has a different @schedule_scenario_sid than the constraint rule.\n                  :
        the given @target_sid for the given @rule_type, or @parent_entity don't exist.\n
        \  - grpc.Internal: error occurs when updating the constraint rule."
      operationId: WFM_UpdateConstraintRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateConstraintRuleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateConstraintRuleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updatedraftschedule:
    post:
      tags:
      - WFM
      description: "Updates the @name, @description, and @datetime_range of the given
        @draft_schedule_sid for the org sending the request.\n The @name, @description,
        and @datetime_range fields must all be set with their desired values.\n If
        @delete_shifts_not_in_range if true, then any instances outside of the @datetime_range
        will be permenantly deleted with no recovery option.\n If @delete_shifts_not_in_range
        is false, instances outside of the new @datetime_range will be retained, for
        use if the datetime range is expanded to cover the instances in the future.\n
        If @copy_shifts_into_new_range time is true, then new the portion of an expanded
        @datetime_range which has no instances will copy the instances from the published
        schedule. If false, no instances will be created for an expanded @scheduling_range.\n
        If @get_updated_shifts is true, then the returned draft schedule will also
        contain the shift instances and segments in the given @datetime_range.\n Errors:\n
        \  - grpc.Invalid: the @name, @description or @datetime_range are invalid.\n
        \  - grpc.Internal: error occurs when updating the schedule or its instances."
      operationId: WFM_UpdateDraftSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateDraftScheduleReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateDraftScheduleRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updatelocationnode:
    post:
      tags:
      - WFM
      description: "Updates a location node corresponding to the given @location_node_sid
        and org sending the request with the provided parameters.\n All of the entity's
        parameters that are not desired to be updated must be filled with their current
        values.\n The @schedule_scenario_sid must be the original for this location
        node since it cannot be changed.\n The @member fields will be ignored since
        those cannot be updated by this method and must be updated by their respective
        update methods.\n Errors:\n   - grpc.Invalid: one or more fields in the @location_node
        have invalid values.\n   - grpc.Internal: error occurs when updating the location
        node.\n   - grpc.NotFound: entry to be updated doesn't exist, or the given
        parent @client_node_sid belongs to a different scenario than the node to update."
      operationId: WFM_UpdateLocationNode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateLocationNodeReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateLocationNodeRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updatenonskillactivity:
    post:
      tags:
      - WFM
      description: "Updates a non skill activity that has the given @non_skill_activity_sid
        with the given values.\n Errors:\n   - grpc.Invalid: @non_skill_activity fields
        have invalid values.\n   - grpc.NotFound: non skill activity for the given
        @non_skill_activity_sid doesn't exist.\n   - grpc.Internal: error occurs when
        updating the non skill activity."
      operationId: WFM_UpdateNonSkillActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateNonSkillActivityReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateNonSkillActivityRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateopentimespattern:
    post:
      tags:
      - WFM
      description: "Updates an open times pattern for the given @open_times_pattern_sid
        and org sending the request with the provided parameters.\n All of the entity's
        parameters that are not desired to be updated must be filled with their current
        values.\n The @schedule_scenario_sid must be the original for this open times
        pattern since it cannot be changed.\n Required permission:\n   NONE\n Errors:\n
        \  - grpc.Invalid: one or more fields in the @open_times_pattern have invalid
        values.\n   - grpc.NotFound: the given @open_times_pattern or it's @parent_entity
        doesn't exist.\n   - grpc.Internal: error occurs when updating the open times
        pattern."
      operationId: WFM_UpdateOpenTimesPattern
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateOpenTimesPatternReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateOpenTimesPatternRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updatergbacolor:
    post:
      tags:
      - WFM
      description: "Updates the given @color for the org sending the request.\n Returns
        the updated rgba color after it has been updated.\n Errors:\n   - grpc.Internal:
        error occurs when updating the rgba color, or getting the updated color.\n
        \  - grpc.NotFound: the color with @color.rgba_color_id does not exist."
      operationId: WFM_UpdateRgbaColor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateRgbaColorRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateRgbaColorResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateschedulescenario:
    post:
      tags:
      - WFM
      description: "Updates a schedule scenario corresponding to the given @schedule_scenario_sid
        and org sending the request with the provided parameters.\n Only the @name,
        @description and @datetime_set_to_inactive fields may be updated, and must
        be filled in with current value if updating the field is not desired.\n The
        @schedule_scenario_sid must be the original for the schedule scenario since
        it cannot be updated.\n All other fields will be ignored since they cannot
        be updated.\n Errors:\n   -grpc.Invalid: one or more fields in the @scenario
        have invalid values.\n   -grpc.NotFound: the scenario with the given @schedule_scenario_sid
        doesn't exist.\n   -grpc.Internal: error occurs when updating the scenario."
      operationId: WFM_UpdateScheduleScenario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateScheduleScenarioReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateScheduleScenarioRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateshiftinstance:
    post:
      tags:
      - WFM
      description: "Updates a shift instance for the org sending the request with
        the provided parameters.\n This method is not implemented. Do not use.\n Errors:\n
        \  - grpc.Invalid: one or more fields in the request have invalid values.\n
        \  - grpc.Internal: error occurs when updating the shift instance."
      operationId: WFM_UpdateShiftInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateShiftInstanceReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateShiftInstanceRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateshiftinstancev2:
    post:
      tags:
      - WFM
      description: "Updates a shift instance for the org sending the request with
        the provided parameters.\n Errors:\n   - grpc.Invalid: one or more fields
        in the request have invalid values.\n   - grpc.Internal: error occurs when
        updating the shift instance."
      operationId: WFM_UpdateShiftInstanceV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateShiftInstanceV2Req'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateShiftInstanceV2Res'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateshiftinstancewithsegments:
    post:
      tags:
      - WFM
      description: "Runs diagnostics on the given @shift_instance for the org sending
        the request.\n If @ignore_diagnostics_errors is True, the shift will be updated
        regardless of diagnostic errors and any diagnostics will be returned as warnings.\n
        Otherwise, the shift will only be updated if there are no diagnostic errors.\n
        Only the @start_datetime, @is_locked, @width_in_minutes and @wfm_agent_sid
        fields of the shift will be updated.\n\n Any existing shift segments belonging
        to @shift_instance will be deleted and replaced with the ones in the given
        @shift_instance.\n If no segments are provided, the existing segments will
        still be deleted and the instances will be left without any.\n Errors:\n   -
        grpc.Invalid: the request data is invalid.\n   - grpc.Internal: error occurs
        when updating the @shift_instance or replacing their member shift segments."
      operationId: WFM_UpdateShiftInstanceWithSegments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateShiftInstanceWithSegmentsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateShiftInstanceWithSegmentsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateshifttemplate:
    post:
      tags:
      - WFM
      description: "Updates a shift template for the given @shift_template_sid and
        org sending the request with the provided parameters.\n All of the entity's
        parameters that are not desired to be updated must be filled with their current
        values.\n The @schedule_scenario_sid must be the original for this shift template
        since it cannot be changed.\n The @member fields will be ignored since those
        cannot be updated by this method and must be updated by their respective update
        methods.\n Errors:\n   - grpc.Invalid: the @shift_template_sid, @name, @program_node_sid
        are invalid.\n   - grpc.AlreadyExists: a shift template with the given @name
        already exists.\n   - grpc.NotFound: the parent program node doesn't exist
        or belongs to a different scenario than the shift template to update.\n   -
        grpc.Internal: error occurs when updating the shift template."
      operationId: WFM_UpdateShiftTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateShiftTemplateReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateShiftTemplateRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateskillproficiencies:
    post:
      tags:
      - WFM
      description: "Updates skill proficiencies corresponding to the given @skill_proficiency_sids
        and org sending the request with the provided parameters.\n All of the entity's
        parameters that are not desired to be updated must be filled with their current
        values.\n The @skill_sid and @parent_entity field of each proficiency will
        be ignored since it cannot be updated.\n Errors:\n   - grpc.Invalid: one or
        more fields in the @skill_proficiencies have invalid values.\n   - grpc.Internal:
        error occurs when updating the skill proficiencies.\n   - grpc.NotFound: for
        any of the given @skill_proficiencies:\n                    the @skill_sid
        doesn't exist.\n                    the skill profile with @preferred_skill_profile_sid
        doesn't contain the skill of the given skill proficiency.\n   - grpc.AlreadyExists:
        a skill proficiency with the given @skill_sid and @parent_entity already exists."
      operationId: WFM_UpdateSkillProficiencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProficienciesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProficienciesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateskillprofile:
    post:
      tags:
      - WFM
      description: "Updates the @name, and averages of a skill profile that has the
        given @skill_profile_sid.\n It also updates it to no longer be unnamed.\n
        Errors:\n   - grpc.Invalid: the @skill_profile_sid, @name or averages in the
        request are invalid.\n   - grpc.Internal: error occurs when updating the skill
        profile.\n   - grpc.NotFound: entry to be updated doesn't exist."
      operationId: WFM_UpdateSkillProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProfileReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProfileRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateskillprofileaveragesusinghistoricaldata:
    post:
      tags:
      - WFM
      description: "Calculates the averages for call characteristics using the historical
        data of the given @skill_profile_sids, @skill_profile_group_sids and org sending
        the request.\n If no @skill_profile_sids are given, it will calculate the
        averages for all skill profiles for the org sending the request.\n If no @skill_profile_group_sids
        are given, it will calculate the averages for all skill profile groups for
        the org sending the request.\n Averages will be weighted by the number of
        calls that each historical data interval has.\n Once the averages are calculated,
        they will be updated in the db for those skill profiles.\n\n If a nil @datetime_range
        is given then the range used will be @training_data_range_end_datetime - @averages_calculation_range_in_months
        to the @training_data_range_end_datetime from the forecasting parameters.\n
        If @averages_calculation_range_in_months is 0, it will use the @training_data_range_start_datetime
        as the start datetime of the range.\n\n If @exclude_skill_profiles_with_manual_averages
        is true, it will exclude skill profiles and groups that have manual averages
        from the calculation\n even if those skill profiles and groups are in @skill_profile_sids
        or @skill_profile_group_sids respectively.\n\n Errors:\n   - grpc.Internal:
        error occurs when calculating the averages from the historical data."
      operationId: WFM_UpdateSkillProfileAveragesUsingHistoricalData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProfileAveragesUsingHistoricalDataReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProfileAveragesUsingHistoricalDataRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateskillprofilegroup:
    post:
      tags:
      - WFM
      description: "Updates the given @skill_profile_group that has the @skill_profile_group_sid
        for the org sending the request.\n @skill_profile_group_sids will be ignored
        since associations cannot be updated by this method.\n Errors:\n   - grpc.Invalid:
        the @skill_profile_group in the request is invalid.\n   - grpc.NotFound: the
        skill profile group to update doesn't exist.\n   - grpc.Internal: error occurs
        updating the skill profile group."
      operationId: WFM_UpdateSkillProfileGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProfileGroupReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProfileGroupRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateskillprofilegroupassociations:
    post:
      tags:
      - WFM
      description: "Updates associations of the given @skill_profile_group_sid for
        the org sending the request.\n It will create the associations with the @skill_profile_sids_to_associate,
        and remove the associations with the @skill_profile_sids_to_disassociate.\n
        Only one of the skill_profile_sids fields needs to be set, but both can be
        set on the same request.\n Errors:\n   - grpc.Invalid: the values in the request
        are invalid.\n   - grpc.Internal: error occurs updating the skill profile
        group associations."
      operationId: WFM_UpdateSkillProfileGroupAssociations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProfileGroupAssociationsReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProfileGroupAssociationsRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updateskillprofileproficiencies:
    post:
      tags:
      - WFM
      description: "Updates the @proficiencies for the given skill profile's skills
        that belong the org sending the request.\n Errors:\n   - grpc.Invalid: the
        @proficiencies in the request are invalid.\n   - grpc.Internal: error occurs
        when updating the skill profiles proficiencies."
      operationId: WFM_UpdateSkillProfileProficiencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProfileProficienciesReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProfileProficienciesRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updatetouragentcollection:
    post:
      tags:
      - WFM
      description: "Updates the given @tour_agent_collection matching the @tour_agent_collection_sid
        for the org sending the request.\n The @wfm_agent_sids will be ignored and
        will not be updated through this endpoint.\n Errors:\n   - grpc.Invalid: the
        request data is invalid.\n   - grpc.AlreadyExists: the first_week_pattern_number
        for @tour_pattern_sid is already in use by another tour agent collection.\n
        \  - grpc.NotFound: the given @tour_pattern_sid does not exist for the org
        sending the request.\n   - grpc.Internal: error occurs when updating the entity."
      operationId: WFM_UpdateTourAgentCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateTourAgentCollectionReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateTourAgentCollectionRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updatetourshiftinstanceconfigs:
    post:
      tags:
      - WFM
      description: "Updates the @tour_shift_instance_config for the org sending the
        request, returning @tour_shift_instance_config_sid.\n The given @tour_shift_instance_config
        will not be created if it will overlap another tour shift instance config
        belonging to @tour_week_pattern_sid.\n The @member_tour_shift_segment_configs
        field will be ignored, and will not be updated if passed through this endpoint.\n
        Errors:\n   - grpc.Invalid: the request data is invalid or a preexisting Tour
        Shift Instance Config would overlap @tour_shift_instance_config.\n   - grpc.Internal:
        error occurs when updating the data."
      operationId: WFM_UpdateTourShiftInstanceConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateTourShiftInstanceConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateTourShiftInstanceConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updatetourshiftsegmentconfig:
    post:
      tags:
      - WFM
      description: "Updates the given @tour_shift_segment_config matching @tour_shift_segment_config_sid
        for the org sending the request.\n If the updated Tour Shift Segment Config
        overlaps another segment or does not fit within the parent Tour Shift Instance
        Config the update will fail.\n Errors:\n   - grpc.Invalid: the request data
        is invalid or the resulting update would result in a conflict.\n   - grpc.NotFound:
        the @tour_shift_instance_config_sid does not exist for the org sending the
        request.\n   - grpc.Internal: error occurs when updating the entity."
      operationId: WFM_UpdateTourShiftSegmentConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateTourShiftSegmentConfigReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateTourShiftSegmentConfigRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/updatewfmagent:
    post:
      tags:
      - WFM
      description: "Updates a wfm agent for the given @wfm_agent_sid and org sending
        the request with the provided parameters.\n All of the entity's parameters
        that are not desired to be updated must be filled with their current values.\n
        The @member fields will be ignored since those cannot be updated by this method
        and must be updated by their respective update methods.\n The @tcn_agent_sid
        cannot be updated.\n Required permission:\n   NONE\n Errors:\n   - grpc.Invalid:
        one or more fields in the @wfm_agent have invalid values.\n   - grpc.NotFound:
        WFM agent with the given @wfm_agent_sid doesn't exist.\n   - grpc.Internal:
        error occurs when updating the wfm agent."
      operationId: WFM_UpdateWFMAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateWFMAgentReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateWFMAgentRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/upsertforecastdatadelta:
    post:
      tags:
      - WFM
      description: "Tries to create an entry for the given @delta for the org sending
        the request.\n If the org already has an entry for it, it will update the
        already exisiting entry.\n Errors:\n   - grpc.Invalid: the @delta in the request
        is invalid.\n   - grpc.Internal: error occurs when upserting the forecast
        data delta."
      operationId: WFM_UpsertForecastDataDelta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertForecastDataDeltaReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertForecastDataDeltaRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/upsertforecastdatadeltas:
    post:
      tags:
      - WFM
      description: "Tries to create entries for the given @deltas.\n If the org already
        has entries for any of them, it will update the already existing entry.\n
        Errors:\n   - grpc.Invalid: the @deltas in the request are invalid.\n   -
        grpc.Internal: error occurs when upserting the forecast data deltas."
      operationId: WFM_UpsertForecastDataDeltas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertForecastDataDeltasReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertForecastDataDeltasRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/upsertforecastingparameters:
    post:
      tags:
      - WFM
      description: "Tries to create an entry for the given forecasting parameters
        for the org sending the request.\n If the org already has an entry for them,
        it will update the already existing entry.\n Errors:\n   - grpc.Invalid: the
        @forecasting_parameters in the request is invalid.\n   - grpc.Internal: error
        occurs when upserting the parameters."
      operationId: WFM_UpsertForecastingParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertForecastingParametersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertForecastingParametersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/upserthistoricaldatadelta:
    post:
      tags:
      - WFM
      description: "Tries to create an entry for the given @delta for the org sending
        the request.\n If the org already has an entry for it, it will update the
        already exisiting entry.\n Errors:\n   - grpc.Invalid: the @delta in the request
        is invalid.\n   - grpc.Internal: error occurs when upserting the historical
        data interval."
      operationId: WFM_UpsertHistoricalDataDelta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertHistoricalDataDeltaReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertHistoricalDataDeltaRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/upserthistoricaldatadeltas:
    post:
      tags:
      - WFM
      description: "Tries to create entries for the given @deltas.\n If the given
        org already has an entry for any of the deltas, it will replace the already
        existing entries.\n This is made into a unary due to the UI's lack of support
        for client streams.\n Errors:\n   - grpc.Invalid: the @deltas in the request
        are invalid.\n   - grpc.Internal: error occurs when upserting the historical
        data deltas."
      operationId: WFM_UpsertHistoricalDataDeltas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertHistoricalDataDeltasReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertHistoricalDataDeltasRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/upsertnonskillactivityassociation:
    post:
      tags:
      - WFM
      description: "Upserts an association for the given @non_skill_activity_sid to
        the given @node.\n All downstream members of the entity will have their inheritance
        state cleared, and inherit the given association.\n If an association already
        exists between the non skill activity and the @node then their @relationship_type
        will be updated.\n The @schedule_scenario_sid must match the scenario of the
        @parent_entity.\n If a NOT_ASSOCIATED_WITH relationship is being created,
        the tree will be checked for conflicting downstream effects.\n If any member
        rules, are referencing the non skill activity and @relationship_type is NOT_ASSOCIATED_WITH,
        then the upsert will not take effect, and the list of related entities to
        be updated/removed first will be returned.\n Errors:\n   - grpc.Invalid: the
        @non_skill_activity_sid, @node or @association_type are invalid.\n                 :
        the non skill activity and @node belong to different scenarios.\n   - grpc.NotFound:
        the @non_skill_activity_sid or @node don't exist.\n   - grpc.Internal: error
        occurs when upserting the association."
      operationId: WFM_UpsertNonSkillActivityAssociation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertNonSkillActivityAssociationReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/upsertprofileforecast:
    post:
      tags:
      - WFM
      description: "Builds a profile forecast for the given @skill_profile_sid and
        org sending the request using the given @call_profile_template.\n The forecaster
        will produce intervals from the following range using the client's saved forecasting
        parameters:\n @forecast_range_start_datetime to @forecast_range_end_datetime.\n
        The @total_calls in the @call_profile_template will be scaled using the same
        ranges as BuildCallProfileTemplateForSkillProfile.\n The intervals produced
        will be saved in the database.\n The @fixed_averages_forecast field indicates
        whether or not to do a fixed averages forecast.\n Errors:\n   - grpc.Invalid:
        the @skill_profile_sid or @call_profile_template in the request are invalid.\n
        \  - grpc.NotFound: the @skill_profile_sid doesn't exist.\n   - grpc.Internal:
        error occurs when upserting the profile forecast."
      operationId: WFM_UpsertProfileForecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertProfileForecastReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertProfileForecastRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/upsertrealtimemanagementstatecolor:
    post:
      tags:
      - WFM
      description: "Sets the given @state to be associated with the given @rgba_color_id
        for the org sending the request.\n Errors:\n   - grpc.Internal: error upserting
        the real time management state color or returning the newly created state
        color.\n   - grpc.NotFound: the given @rgba_color_id does not exist."
      operationId: WFM_UpsertRealTimeManagementStateColor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertRealTimeManagementStateColorRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertRealTimeManagementStateColorResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/upsertregressionforecast:
    post:
      tags:
      - WFM
      description: "Builds a regression forecast for the org using the given @regression_template
        and saves the resulting intervals in the db.\n It will generate forecast intervals
        for the skill profiles sids in @save_forecasts_for_skill_profile_sids,\n if
        the list is empty or has no valid skill profile sids, it will generate and
        save forecasts for all active skill profiles.\n If any intervals produced
        already exist in the db, they will be replaced with the ones produced.\n Errors:\n
        \  - grpc.Invalid: the @regression_template in the request is invalid.\n   -
        grpc.Internal: error occurs when upserting the regression forecast."
      operationId: WFM_UpsertRegressionForecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertRegressionForecastReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertRegressionForecastRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/wfm/upserttourpatternwithmembers:
    post:
      tags:
      - WFM
      description: "Replaces the existing Tour Pattern and members with @tour_pattern
        for the @tour_pattern.shift_template_sid and the org sending the request.\n
        Returns the newly created Tour Pattern and members with their updated SIDs
        and Week Pattern Numbers.\n Any existing Tour Week Patterns, Tour Shift Instance
        and Segment Configs, Tour Agent Collections and their WFM Agent SIDs\n   belonging
        to @tour_pattern.shift_template_sid will be replaced with the members on the
        provided @tour_pattern.\n At least one Tour Agent Collection and one Tour
        Week Pattern must be provided in the member fields.\n If the tour pattern
        data or members have issues that prevent them from being persisted, a list
        of diagnostics will be returned describing the issues that must be resolved.\n
        Errors:\n   - grpc.Invalid: the request data is invalid.\n   - grpc.NotFound:
        the @tour_pattern.shift_template_sid does not exist.\n   - grpc.Internal:
        error occurs when upserting the tour pattern or members."
      operationId: WFM_UpsertTourPatternWithMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertTourPatternWithMembersReq'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertTourPatternWithMembersRes'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/workflows/createworkflowdefinition:
    post:
      tags:
      - WorkflowDefinitionPersistService
      description: GetWorkflowDefinition retrieves a flow definition from the database
      operationId: WorkflowDefinitionPersistService_GetWorkflowDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.workflows.GetWorkflowDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.workflows.GetWorkflowDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/workflows/deleteworkflowdefinition:
    post:
      tags:
      - WorkflowDefinitionPersistService
      description: DeleteWorkflowDefinition deletes a flow definition from the database
      operationId: WorkflowDefinitionPersistService_DeleteWorkflowDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.workflows.DeleteWorkflowDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.workflows.DeleteWorkflowDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/workflows/listworkflowdefinitions:
    post:
      tags:
      - WorkflowDefinitionPersistService
      description: "ListWorkflowDefinitions retrieves a list of flow definitions from
        the database optionally filtered by the owning application\n if application
        is not specified, all flow definitions for the org are returned"
      operationId: WorkflowDefinitionPersistService_ListWorkflowDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.workflows.ListWorkflowDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.workflows.ListWorkflowDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/workflows/updateworkflowdefinition:
    post:
      tags:
      - WorkflowDefinitionPersistService
      description: UpdateWorkflowDefinition updates a flow definition in the database.
        Only the name, description and definition graph itself are updated
      operationId: WorkflowDefinitionPersistService_UpdateWorkflowDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.workflows.UpdateWorkflowDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.workflows.UpdateWorkflowDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /api/v1alpha1/workflows/validateworkflowdefinition:
    post:
      tags:
      - WorkflowDefinitionPersistService
      description: ValidateWorkflowDefinition validates a flow definition in the database.
        Only the name, description and definition graph itself are updated
      operationId: WorkflowDefinitionPersistService_ValidateWorkflowDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.v1alpha1.workflows.ValidateWorkflowDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.v1alpha1.workflows.ValidateWorkflowDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/commitbillingplan:
    post:
      tags:
      - BillingService
      description: "Commits a billing plan for the ORG, finalizing it's creation and
        allowing it\n to become active.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.FailedPrecondition: The billing plan is already committed.\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The specified billing plan doesn't
        exist.\n   - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: BillingService_CommitBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.CommitBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.CommitBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/commitdefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Commits a default billing plan for the REGION, finalizing it's
        creation and allowing it\n to become active.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.FailedPrecondition: The default
        billing plan is already committed.\n   - grpc.Internal: An internal error
        occurred.\n   - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound:
        The specified default billing plan doesn't exist.\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable."
      operationId: BillingService_CommitDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.CommitDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.CommitDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/createbillingplan:
    post:
      tags:
      - BillingService
      description: "Creates a billing plan for the ORG.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable. Likely a transient issue with a downstream
        service."
      operationId: BillingService_CreateBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.CreateBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.CreateBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/createdefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Creates the default billing plan for the REGION.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An
        internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_CreateDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.CreateDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.CreateDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/createdefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Creates a default rate definition for a default billing plan for
        the REGION.\n Required permissions:\n   CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n
        Errors:\n   - grpc.AlreadyExists: A rate definition with the same feature
        already exists.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The default billing plan doesn't
        exist.\n   - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_CreateDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.CreateDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.CreateDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/createinvoice:
    post:
      tags:
      - BillingService
      description: "Creates an invoice for the ORG for the specified billing cycle.\n
        Required permissions:\n   CUSTOMER_SUPPORT\n Errors:\n   - grpc.AlreadyExists:
        An invoice already exists for the specified billing cycle.\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: BillingService_CreateInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.CreateInvoiceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.CreateInvoiceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/createratedefinition:
    post:
      tags:
      - BillingService
      description: "Creates a rate definition for a Billing Plan in an ORG.\n Required
        permissions:\n   CUSTOMER_SUPPORT\n Errors:\n   - grpc.AlreadyExists: A rate
        definition with the same feature id already exists.\n   - grpc.Internal: An
        internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The specified billing plan or rate definition group doesn't
        exist.\n   - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: BillingService_CreateRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.CreateRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.CreateRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/deletebillingplan:
    post:
      tags:
      - BillingService
      description: "Deletes an inactive billing plan. A billing plan is inactive if
        it hasn't started.\n Required permissions:\n   CUSTOMER_SUPPORT\n Errors:\n
        \  - grpc.FailedPrecondition: The billing plan is active.\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The specified billing plan doesn't exist.\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable. Likely a transient issue with a downstream
        service."
      operationId: BillingService_DeleteBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.DeleteBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.DeleteBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/deletedefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Deletes an inactive default billing plan for the REGION. A billing
        plan is inactive\n if it hasn't started.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.FailedPrecondition: The billing
        plan is active.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The default billing plan doesn't
        exist.\n   - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_DeleteDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.DeleteDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.DeleteDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/deletedefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Deletes a rate definition from the default billing plan for the
        REGION.\n   - The default billing plan must be inactive.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.FailedPrecondition:
        The billing plan is active.\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        rate definition doesn't exist.\n   - grpc.PermissionDenied: Caller doesn't
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_DeleteDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.DeleteDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.DeleteDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/deleteinvoice:
    post:
      tags:
      - BillingService
      description: "Deletes an invoice.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The specified invoice doesn't
        exist.\n   - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: BillingService_DeleteInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.DeleteInvoiceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.DeleteInvoiceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/deleteratedefinition:
    post:
      tags:
      - BillingService
      description: "Deletes a rate definition from a Billing Plan in an ORG.\n   -
        The billing plan must be inactive.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.FailedPrecondition: The billing plan is active.\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The specified billing plan or rate definition group doesn't
        exist.\n   - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: BillingService_DeleteRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.DeleteRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.DeleteRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/duplicatebillingplan:
    post:
      tags:
      - BillingService
      description: "Duplicates a billing plan. This copies the billing plan and all
        of its rate definitions.\n Required permissions:\n   CUSTOMER_SUPPORT\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The specified billing plan doesn't
        exist.\n   - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: BillingService_DuplicateBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.DuplicateBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.DuplicateBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/duplicatedefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Duplicates a default billing plan. This copies the billing plan,
        all of its rate definitions,\n and all of its rate definition groups and features.\n
        Required permissions:\n   CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The specified billing plan doesn't
        exist.\n   - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: BillingService_DuplicateDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.DuplicateDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.DuplicateDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/exportinvoice:
    post:
      tags:
      - BillingService
      description: "Exports an invoice.\n Required permissions:\n   TCN_BILLING_ADMIN\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: BillingService_ExportInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.ExportInvoiceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.ExportInvoiceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/getactivebillingplan:
    post:
      tags:
      - BillingService
      description: "Returns the active billing plan for the ORG or REGION. The active
        billing plan is a billing plan\n whose start_time has passed and end_time
        has not passed. If multiple satisfy that requirement, the\n newest one is
        considered active. If no plan is active, it indicates the ORG is using REGION
        defaults,\n or that the REGION has not been set up for billing yet.\n Required
        permissions:\n   CUSTOMER_SUPPORT\n Errors:\n   - grpc.Internal: An internal
        error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n   -
        grpc.NotFound: There isn't an active billing plan.\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable. Likely a transient issue with a downstream
        service."
      operationId: BillingService_GetActiveBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.GetActiveBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.GetActiveBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/getbillingplan:
    post:
      tags:
      - BillingService
      description: "Returns the specified billing plan.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        specified billing plan doesn't exist.\n   - grpc.PermissionDenied: Caller
        doesn't have the required permissions.\n   - grpc.Unavailable: The operation
        is currently unavailable. Likely a transient issue with a downstream service."
      operationId: BillingService_GetBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.GetBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.GetBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/getbillingplanhistory:
    post:
      tags:
      - BillingService
      description: "Returns the billing plan history for the ORG or REGION.\n Required
        permissions:\n   CUSTOMER_SUPPORT\n Errors:\n   - grpc.Internal: An internal
        error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n   -
        grpc.PermissionDenied: Caller doesn't have the required permissions.\n   -
        grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_GetBillingPlanHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.GetBillingPlanHistoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.GetBillingPlanHistoryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/getinvoice:
    post:
      tags:
      - BillingService
      description: "Returns the specified invoice.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The specified invoice doesn't
        exist.\n   - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: BillingService_GetInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.GetInvoiceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.GetInvoiceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/getratedefinition:
    post:
      tags:
      - BillingService
      description: "Returns the specified rate definition.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        specified rate definition doesn't exist.\n   - grpc.PermissionDenied: Caller
        doesn't have the required permissions.\n   - grpc.Unavailable: The operation
        is currently unavailable."
      operationId: BillingService_GetRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.GetRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.GetRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/listbillingplans:
    post:
      tags:
      - BillingService
      description: "Lists billing plans.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: BillingService_ListBillingPlans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.ListBillingPlansRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.ListBillingPlansResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/listinvoices:
    post:
      tags:
      - BillingService
      description: "Lists invoices.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: BillingService_ListInvoices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.ListInvoicesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.ListInvoicesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/listratedefinitions:
    post:
      tags:
      - BillingService
      description: "Lists rate definitions.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_ListRateDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.ListRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.ListRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/updatebillingplan:
    post:
      tags:
      - BillingService
      description: "Updates an inactive billing plan. A billing plan is inactive if
        it hasn't started.\n Required permissions:\n   CUSTOMER_SUPPORT\n Errors:\n
        \  - grpc.FailedPrecondition: The billing plan is active.\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The specified billing plan doesn't exist.\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable. Likely a transient issue with a downstream
        service."
      operationId: BillingService_UpdateBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.UpdateBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.UpdateBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/updatedefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Updates an inactive default billing plan for the REGION. A billing
        plan is inactive\n if it hasn't started.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.FailedPrecondition: The billing
        plan is active.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: BillingService_UpdateDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.UpdateDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.UpdateDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/updatedefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Updates a default rate definition.\n   - The billing plan must
        be inactive.\n Required permissions:\n   CUSTOMER_SUPPORT\n Errors:\n   -
        grpc.FailedPrecondition: The billing plan is active.\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The specified rate definition doesn't exist.\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable."
      operationId: BillingService_UpdateDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.UpdateDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.UpdateDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/updateinvoice:
    post:
      tags:
      - BillingService
      description: "Updates the specified invoice.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The specified invoice doesn't
        exist.\n   - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: BillingService_UpdateInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.UpdateInvoiceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.UpdateInvoiceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha1/updateratedefinition:
    post:
      tags:
      - BillingService
      description: "Updates a rate definition.\n   - The billing plan must be inactive.\n
        Required permissions:\n   CUSTOMER_SUPPORT\n Errors:\n   - grpc.FailedPrecondition:
        The billing plan is active.\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        specified rate definition doesn't exist.\n   - grpc.PermissionDenied: Caller
        doesn't have the required permissions.\n   - grpc.Unavailable: The operation
        is currently unavailable."
      operationId: BillingService_UpdateRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha1.UpdateRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha1.UpdateRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/createdefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Creates a rate definition for the REGION.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.AlreadyExists:
        A rate definition with the same data already exists.\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_CreateDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.CreateDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.CreateDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/createdefaultratedefinitions:
    post:
      tags:
      - BillingService
      description: "Creates rate definitions for the REGION.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.AlreadyExists:
        A rate definition with the same data already exists.\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_CreateDefaultRateDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.CreateDefaultRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.CreateDefaultRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/createratedefinition:
    post:
      tags:
      - BillingService
      description: "Creates a rate definition for an ORG.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n Errors:\n   - grpc.AlreadyExists: A rate definition
        with the same data already exists.\n   - grpc.Internal: An internal error
        occurred.\n   - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable. Likely a transient issue with a downstream
        service."
      operationId: BillingService_CreateRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.CreateRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.CreateRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/createratedefinitions:
    post:
      tags:
      - BillingService
      description: "Creates rate definitions for an ORG.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n Errors:\n   - grpc.AlreadyExists: A rate definition
        with the same data already exists.\n   - grpc.Internal: An internal error
        occurred.\n   - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable. Likely a transient issue with a downstream
        service."
      operationId: BillingService_CreateRateDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.CreateRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.CreateRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/deletedefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Deletes a rate definition from the REGION.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An
        internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rate definition doesn't exist.\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable."
      operationId: BillingService_DeleteDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.DeleteDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.DeleteDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/deletedefaultratedefinitions:
    post:
      tags:
      - BillingService
      description: "Deletes rate definitions from the REGION.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An
        internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rate definition doesn't exist.\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable."
      operationId: BillingService_DeleteDefaultRateDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.DeleteDefaultRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.DeleteDefaultRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/deleteratedefinition:
    post:
      tags:
      - BillingService
      description: "Deletes a rate definition from an ORG.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        specified rate definition doesn't exist.\n   - grpc.PermissionDenied: Caller
        doesn't have the required permissions.\n   - grpc.Unavailable: The operation
        is currently unavailable. Likely a transient issue with a downstream service."
      operationId: BillingService_DeleteRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.DeleteRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.DeleteRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/deleteratedefinitions:
    post:
      tags:
      - BillingService
      description: "Deletes rate definitions from an ORG.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        specified rate definition doesn't exist.\n   - grpc.PermissionDenied: Caller
        doesn't have the required permissions.\n   - grpc.Unavailable: The operation
        is currently unavailable. Likely a transient issue with a downstream service."
      operationId: BillingService_DeleteRateDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.DeleteRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.DeleteRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/exportinvoice:
    post:
      tags:
      - BillingService
      description: "Exports an invoice.\n Required permissions:\n   TCN_BILLING_ADMIN\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: BillingService_ExportInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.ExportInvoiceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.ExportInvoiceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/getratedefinition:
    post:
      tags:
      - BillingService
      description: "Returns the specified rate definition.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        specified rate definition doesn't exist.\n   - grpc.PermissionDenied: Caller
        doesn't have the required permissions.\n   - grpc.Unavailable: The operation
        is currently unavailable."
      operationId: BillingService_GetRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.GetRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.GetRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/getratehistory:
    post:
      tags:
      - BillingService
      description: "Returns the rate history for the ORG or REGION.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable."
      operationId: BillingService_GetRateHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.GetRateHistoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.GetRateHistoryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/listactiveratedefinitions:
    post:
      tags:
      - BillingService
      description: "Lists active rate definitions.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_ListActiveRateDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.ListActiveRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.ListActiveRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/listratedefinitions:
    post:
      tags:
      - BillingService
      description: "Lists rate definitions.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_ListRateDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.ListRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.ListRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/updatedefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Updates a default rate definition.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The specified rate definition
        doesn't exist.\n   - grpc.PermissionDenied: Caller doesn't have the required
        permissions.\n   - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_UpdateDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.UpdateDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.UpdateDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha2/updateratedefinition:
    post:
      tags:
      - BillingService
      description: "Updates a rate definition.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The specified rate definition
        doesn't exist.\n   - grpc.PermissionDenied: Caller doesn't have the required
        permissions.\n   - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_UpdateRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha2.UpdateRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha2.UpdateRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/applybillingplandraft:
    post:
      tags:
      - BillingService
      description: "Applies a draft billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The draft billing plan was not
        found.\n   - grpc.PermissionDenied: The caller does not have the required
        permissions.\n   - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_ApplyBillingPlanDraft
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.ApplyBillingPlanDraftRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.ApplyBillingPlanDraftResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/applydefaultbillingplandraft:
    post:
      tags:
      - BillingService
      description: "Applies a default draft billing plan.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An
        internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The draft billing plan was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_ApplyDefaultBillingPlanDraft
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.ApplyDefaultBillingPlanDraftRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.ApplyDefaultBillingPlanDraftResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/createbillingplan:
    post:
      tags:
      - BillingService
      description: "Creates a new billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_CreateBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.CreateBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.CreateBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/createdefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Creates a new default billing plan.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An
        internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_CreateDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.CreateDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.CreateDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/createdefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Creates a new rate definition for a default plan.\n   - Creating
        a rate definition on an existing SKU: the sku_id must be provided.\n   - Creating
        a rate definition on a new SKU: the product must be provided and the sku_id
        omitted.\n Required permissions:\n   CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_CreateDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.CreateDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.CreateDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/createratedefinition:
    post:
      tags:
      - BillingService
      description: "Creates a new rate definition.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_CreateRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.CreateRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.CreateRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/deletebillingplan:
    post:
      tags:
      - BillingService
      description: "Deletes a billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_DeleteBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.DeleteBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.DeleteBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/deletedefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Deletes a default billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_DeleteDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.DeleteDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.DeleteDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/deletedefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Deletes a rate definition for a default billing plan.\n Required
        permissions:\n   CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rate definition was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_DeleteDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.DeleteDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.DeleteDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/deleteratedefinition:
    post:
      tags:
      - BillingService
      description: "Deletes a rate definition.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate definition was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_DeleteRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.DeleteRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.DeleteRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/exportinvoice:
    post:
      tags:
      - BillingService
      description: "Exports an invoice.\n Required permissions:\n   TCN_BILLING_ADMIN\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: BillingService_ExportInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.ExportInvoiceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.ExportInvoiceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/getbillingplan:
    post:
      tags:
      - BillingService
      description: "Gets a billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_GetBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.GetBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.GetBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/getdefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Gets a default billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        default billing plan was not found.\n   - grpc.PermissionDenied: The caller
        does not have the required permissions.\n   - grpc.Unavailable: The operation
        is currently unavailable."
      operationId: BillingService_GetDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.GetDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.GetDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/getdefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Gets a rate definition for a default billing plan.\n Required
        permissions:\n   CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rate definition was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_GetDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.GetDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.GetDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/getratedefinition:
    post:
      tags:
      - BillingService
      description: "Gets a rate definition.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate definition was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_GetRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.GetRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.GetRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/listbillingplans:
    post:
      tags:
      - BillingService
      description: "Lists billing plans.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_ListBillingPlans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.ListBillingPlansRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.ListBillingPlansResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/listdefaultbillingplans:
    post:
      tags:
      - BillingService
      description: "Lists default billing plans.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_ListDefaultBillingPlans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.ListDefaultBillingPlansRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.ListDefaultBillingPlansResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/listdefaultratedefinitions:
    post:
      tags:
      - BillingService
      description: "Lists rate definitions for a default billing plan.\n Required
        permissions:\n   CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rate definition was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_ListDefaultRateDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.ListDefaultRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.ListDefaultRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/listproducts:
    post:
      tags:
      - BillingService
      description: "Lists the products.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_ListProducts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.ListProductsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.ListProductsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/listratedefinitions:
    post:
      tags:
      - BillingService
      description: "Lists rate definitions.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate definition was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_ListRateDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.ListRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.ListRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/updatebillingplan:
    post:
      tags:
      - BillingService
      description: "Updates a billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_UpdateBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.UpdateBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.UpdateBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/updatedefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Updates a default billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_UpdateDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.UpdateDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.UpdateDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/updatedefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Updates a rate definition for a default billing plan.\n Required
        permissions:\n   CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rate definition was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_UpdateDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.UpdateDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.UpdateDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha3/updateratedefinition:
    post:
      tags:
      - BillingService
      description: "Updates a rate definition.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate definition was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_UpdateRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha3.UpdateRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha3.UpdateRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/applybillingplandraft:
    post:
      tags:
      - BillingService
      description: "Applies a draft billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The draft billing plan was not
        found.\n   - grpc.PermissionDenied: The caller does not have the required
        permissions.\n   - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_ApplyBillingPlanDraft
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.ApplyBillingPlanDraftRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.ApplyBillingPlanDraftResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/applydefaultbillingplandraft:
    post:
      tags:
      - BillingService
      description: "Applies a default draft billing plan.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An
        internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The draft billing plan was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_ApplyDefaultBillingPlanDraft
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.ApplyDefaultBillingPlanDraftRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.ApplyDefaultBillingPlanDraftResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/clonebillingplan:
    post:
      tags:
      - BillingService
      description: "Clones a billing plan\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_CloneBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.CloneBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.CloneBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/clonedefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Clones a default billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_CloneDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.CloneDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.CloneDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/createbillingplan:
    post:
      tags:
      - BillingService
      description: "Creates a new billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_CreateBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.CreateBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.CreateBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/createbillingtag:
    post:
      tags:
      - BillingService
      description: "Creates a new billing tag.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_CreateBillingTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.CreateBillingTagRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.CreateBillingTagResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/createdefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Creates a new default billing plan.\n Required permissions:\n
        \  CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An
        internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_CreateDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.CreateDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.CreateDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/createdefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Creates a new rate definition for a default plan.\n   - Creating
        a rate definition on an existing SKU: the sku_id must be provided.\n   - Creating
        a rate definition on a new SKU: the product must be provided and the sku_id
        omitted.\n Required permissions:\n   CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_CreateDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.CreateDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.CreateDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/creatematchingrule:
    post:
      tags:
      - BillingService
      description: "Creates a new matching rule.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_CreateMatchingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.CreateMatchingRuleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.CreateMatchingRuleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/createratedefinition:
    post:
      tags:
      - BillingService
      description: "Creates a new rate definition.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_CreateRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.CreateRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.CreateRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/deletebillingplan:
    post:
      tags:
      - BillingService
      description: "Deletes a billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_DeleteBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.DeleteBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.DeleteBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/deletebillingtag:
    post:
      tags:
      - BillingService
      description: "Deletes a billing tag.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        billing tag was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_DeleteBillingTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.DeleteBillingTagRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.DeleteBillingTagResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/deletedefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Deletes a default billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_DeleteDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.DeleteDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.DeleteDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/deletedefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Deletes a rate definition for a default billing plan.\n Required
        permissions:\n   CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rate definition was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_DeleteDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.DeleteDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.DeleteDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/deletematchingrule:
    post:
      tags:
      - BillingService
      description: "Deletes a matching rule.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        matching rule was not found.\n   - grpc.PermissionDenied: The caller does
        not have the required permissions.\n   - grpc.Unavailable: The operation is
        currently unavailable."
      operationId: BillingService_DeleteMatchingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.DeleteMatchingRuleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.DeleteMatchingRuleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/deleteratedefinition:
    post:
      tags:
      - BillingService
      description: "Deletes a rate definition.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate definition was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_DeleteRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.DeleteRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.DeleteRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/exportinvoice:
    post:
      tags:
      - BillingService
      description: "Exports an invoice.\n Required permissions:\n   TCN_BILLING_ADMIN\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: BillingService_ExportInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.ExportInvoiceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.ExportInvoiceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/getbillingplan:
    post:
      tags:
      - BillingService
      description: "Gets a billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_GetBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.GetBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.GetBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/getbillingtag:
    post:
      tags:
      - BillingService
      description: "Gets a billing tag.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        billing tag was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_GetBillingTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.GetBillingTagRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.GetBillingTagResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/getdefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Gets a default billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        default billing plan was not found.\n   - grpc.PermissionDenied: The caller
        does not have the required permissions.\n   - grpc.Unavailable: The operation
        is currently unavailable."
      operationId: BillingService_GetDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.GetDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.GetDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/getdefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Gets a rate definition for a default billing plan.\n Required
        permissions:\n   CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rate definition was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_GetDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.GetDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.GetDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/getmatchingrule:
    post:
      tags:
      - BillingService
      description: "Gets a matching rule.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        matching rule was not found.\n   - grpc.PermissionDenied: The caller does
        not have the required permissions.\n   - grpc.Unavailable: The operation is
        currently unavailable."
      operationId: BillingService_GetMatchingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.GetMatchingRuleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.GetMatchingRuleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/getratedefinition:
    post:
      tags:
      - BillingService
      description: "Gets a rate definition.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate definition was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_GetRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.GetRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.GetRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/listbillingplans:
    post:
      tags:
      - BillingService
      description: "Lists billing plans.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_ListBillingPlans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.ListBillingPlansRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.ListBillingPlansResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/listbillingtags:
    post:
      tags:
      - BillingService
      description: "Lists billing tags.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_ListBillingTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.ListBillingTagsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.ListBillingTagsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/listdefaultbillingplans:
    post:
      tags:
      - BillingService
      description: "Lists default billing plans.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_ListDefaultBillingPlans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.ListDefaultBillingPlansRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.ListDefaultBillingPlansResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/listdefaultratedefinitions:
    post:
      tags:
      - BillingService
      description: "Lists rate definitions for a default billing plan.\n Required
        permissions:\n   CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rate definition was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_ListDefaultRateDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.ListDefaultRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.ListDefaultRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/listmatchingrules:
    post:
      tags:
      - BillingService
      description: "Lists matching rules.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_ListMatchingRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.ListMatchingRulesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.ListMatchingRulesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/listratedefinitions:
    post:
      tags:
      - BillingService
      description: "Lists rate definitions.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate definition was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_ListRateDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.ListRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.ListRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/updatebillingplan:
    post:
      tags:
      - BillingService
      description: "Updates a billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_UpdateBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.UpdateBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.UpdateBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/updatebillingtag:
    post:
      tags:
      - BillingService
      description: "Updates a billing tag.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        billing tag was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_UpdateBillingTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.UpdateBillingTagRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.UpdateBillingTagResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/updatedefaultbillingplan:
    post:
      tags:
      - BillingService
      description: "Updates a default billing plan.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingService_UpdateDefaultBillingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.UpdateDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.UpdateDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/updatedefaultratedefinition:
    post:
      tags:
      - BillingService
      description: "Updates a rate definition for a default billing plan.\n Required
        permissions:\n   CUSTOMER_SUPPORT\n   TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rate definition was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingService_UpdateDefaultRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.UpdateDefaultRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.UpdateDefaultRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/updatematchingrule:
    post:
      tags:
      - BillingService
      description: "Updates a matching rule.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        \  TCN_BILLING_ADMIN\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        matching rule was not found.\n   - grpc.PermissionDenied: The caller does
        not have the required permissions.\n   - grpc.Unavailable: The operation is
        currently unavailable."
      operationId: BillingService_UpdateMatchingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.UpdateMatchingRuleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.UpdateMatchingRuleResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/billing/v1alpha4/updateratedefinition:
    post:
      tags:
      - BillingService
      description: "Updates a rate definition.\n Required permissions:\n   CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate definition was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingService_UpdateRateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.billing.v1alpha4.UpdateRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.billing.v1alpha4.UpdateRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/omnichannel/asm/v1alpha1/createsession:
    post:
      tags:
      - AsmService
      description: Creates an agent session and enables the voice channel
      operationId: AsmService_CreateSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.CreateSessionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.CreateSessionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/omnichannel/asm/v1alpha1/disablevoice:
    post:
      tags:
      - AsmService
      operationId: AsmService_DisableVoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.DisableVoiceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.DisableVoiceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/omnichannel/asm/v1alpha1/enablevoice:
    post:
      tags:
      - AsmService
      description: Updates the currently active subsession
      operationId: AsmService_EnableVoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.EnableVoiceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.EnableVoiceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/omnichannel/asm/v1alpha1/endsession:
    post:
      tags:
      - AsmService
      description: Closes an asm session and all sub sessions
      operationId: AsmService_EndSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.EndSessionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.EndSessionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/omnichannel/asm/v1alpha1/getcurrentsession:
    post:
      tags:
      - AsmService
      description: Gets an agent's current asm session
      operationId: AsmService_GetCurrentSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/omnichannel/asm/v1alpha1/listsessions:
    post:
      tags:
      - AsmService
      description: List all Sessions for the given user. Contains statistical enrichments
        for each agent and their conversations.
      operationId: AsmService_ListAsmUserDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/omnichannel/asm/v1alpha1/pushevents:
    post:
      tags:
      - AsmService
      description: puah events push a list of events
      operationId: AsmService_PushEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.PushEventsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.omnichannel.asm.v1alpha1.PushEventResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/omnichannel/oauth/v1alpha1/getconnectedinboxoauthurl:
    post:
      tags:
      - OauthService
      operationId: OauthService_GetConnectedInboxOAuthURL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.omnichannel.oauth.v1alpha1.GetConnectedInboxOAuthURLRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.omnichannel.oauth.v1alpha1.GetConnectedInboxOAuthURLResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/omnichannel/tasks/v1alpha1/bulkcanceltasks:
    post:
      tags:
      - TasksService
      operationId: TasksService_BulkCancelTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.omnichannel.tasks.v1alpha1.BulkCancelTasksRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.omnichannel.tasks.v1alpha1.BulkCancelTasksResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/omnichannel/tasks/v1alpha1/canceltasks:
    post:
      tags:
      - TasksService
      operationId: TasksService_CancelTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.omnichannel.tasks.v1alpha1.CancelTasksRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.omnichannel.tasks.v1alpha1.CancelTasksResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/exilecertificatemanager/v1alpha1/assignexileconfiguration:
    post:
      tags:
      - ExileCertificateManagerService
      description: AssignExileConfiguration assigns a configuration to a certificate.
      operationId: ExileCertificateManagerService_AssignExileConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.AssignExileConfigurationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.AssignExileConfigurationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/exilecertificatemanager/v1alpha1/createexilecertificate:
    post:
      tags:
      - ExileCertificateManagerService
      description: "CreateExileCertificate creates a new TLS certificate and\n returns
        the exile ceritificate for the current organization."
      operationId: ExileCertificateManagerService_CreateExileCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.CreateExileCertificateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.CreateExileCertificateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/exilecertificatemanager/v1alpha1/createexileconfiguration:
    post:
      tags:
      - ExileCertificateManagerService
      description: CreateExileConfiguration creates a new exile configuration for
        the current organization.
      operationId: ExileCertificateManagerService_CreateExileConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.CreateExileConfigurationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.CreateExileConfigurationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/exilecertificatemanager/v1alpha1/deleteexileconfiguration:
    post:
      tags:
      - ExileCertificateManagerService
      description: "DeleteExileConfiguration deletes a exile configuration for the
        current organization.\n The configuration can only be deleted if it is not
        assigned to any certificates."
      operationId: ExileCertificateManagerService_DeleteExileConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.DeleteExileConfigurationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.DeleteExileConfigurationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/exilecertificatemanager/v1alpha1/listexilecertificate:
    post:
      tags:
      - ExileCertificateManagerService
      description: ListExileCertificates returns a list of exile ceritificate for
        the current organization.
      operationId: ExileCertificateManagerService_ListExileCertificates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.ListExileCertificatesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.ListExileCertificatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/exilecertificatemanager/v1alpha1/listexileconfigurations:
    post:
      tags:
      - ExileCertificateManagerService
      description: ListExileConfigurations returns a list of exile configurations
        for the current organization.
      operationId: ExileCertificateManagerService_ListExileConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.ListExileConfigurationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.ListExileConfigurationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/exilecertificatemanager/v1alpha1/revokeexilecertificate:
    post:
      tags:
      - ExileCertificateManagerService
      description: RevokeExileCertificate deletes a exile ceritificate for the current
        organization.
      operationId: ExileCertificateManagerService_RevokeExileCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.RevokeExileCertificateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.RevokeExileCertificateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/exilecertificatemanager/v1alpha1/unassignexileconfiguration:
    post:
      tags:
      - ExileCertificateManagerService
      description: UnassignExileConfiguration unassigns a configuration from a certificate.
      operationId: ExileCertificateManagerService_UnassignExileConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.UnassignExileConfigurationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.UnassignExileConfigurationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/exilecertificatemanager/v1alpha1/updateexileconfiguration:
    post:
      tags:
      - ExileCertificateManagerService
      description: UpdateExileConfiguration updates a exile configuration for the
        current organization.
      operationId: ExileCertificateManagerService_UpdateExileConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.UpdateExileConfigurationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.UpdateExileConfigurationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/huntgroups/v1alpha1/admincopyhuntgrouptoorganization:
    post:
      tags:
      - HuntGroupsService
      description: "AdminCopyHuntGroupToOrganization copies a hunt group to a different
        organization.\n This will create a new hunt group in the destination organization
        with the same\n settings/parameters and all associated data (skill, call-queue
        config) as the source hunt group."
      operationId: HuntGroupsService_AdminCopyHuntGroupToOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.AdminCopyHuntGroupToOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.AdminCopyHuntGroupToOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/huntgroups/v1alpha1/copyhuntgroupagenttrigger:
    post:
      tags:
      - HuntGroupsService
      description: CopyHuntGroupAgentTrigger copys an agent trigger to the given hunt
        group in the same org.
      operationId: HuntGroupsService_CopyHuntGroupAgentTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.CopyHuntGroupAgentTriggerRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.CopyHuntGroupAgentTriggerResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/huntgroups/v1alpha1/copyhuntgroupexilelink:
    post:
      tags:
      - HuntGroupsService
      description: "CopyHuntGroupExileLink copies an exile link from one hunt group
        to another.\n It will create a new exile link in the destination hunt group
        with the same\n settings/parameters as the source exile link."
      operationId: HuntGroupsService_CopyHuntGroupExileLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.CopyHuntGroupExileLinkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.CopyHuntGroupExileLinkResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/huntgroups/v1alpha1/listhuntgroupagenttriggers:
    post:
      tags:
      - HuntGroupsService
      description: ListHuntGroupAgentTriggers returns a list of agent triggers for
        the given hunt group.
      operationId: HuntGroupsService_ListHuntGroupAgentTriggers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.ListHuntGroupAgentTriggersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.ListHuntGroupAgentTriggersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/huntgroups/v1alpha1/listhuntgroupexilelinks:
    post:
      tags:
      - HuntGroupsService
      description: ListHuntGroupExileLinks returns a list of Exile links for a given
        hunt group.
      operationId: HuntGroupsService_ListHuntGroupExileLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.ListHuntGroupExileLinksRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.ListHuntGroupExileLinksResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/huntgroups/v1alpha1/updatehuntgroupagenttriggers:
    post:
      tags:
      - HuntGroupsService
      description: UpdateHuntGroupAgentTriggers updates all agent triggers for the
        given hunt group.
      operationId: HuntGroupsService_UpdateHuntGroupAgentTriggers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.UpdateHuntGroupAgentTriggersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.UpdateHuntGroupAgentTriggersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/org/huntgroups/v1alpha1/updatehuntgroupexilelinks:
    post:
      tags:
      - HuntGroupsService
      description: "UpdateHuntGroupExileLinks updates the exile links for a hunt group.\n
        It will create any new exile links that do not already exist in the hunt group,\n
        update any existing exile links with the new settings/parameters, and\n delete
        any exile links that are not in the request."
      operationId: HuntGroupsService_UpdateHuntGroupExileLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.UpdateHuntGroupExileLinksRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.UpdateHuntGroupExileLinksResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v1/pbxservice/assignrandomextension:
    post:
      tags:
      - PBXService
      description: "Assigns a random extension either to a PBX user or a Ring Group\n
        Required permissions:\n   PBX-MANAGER\n Errors:\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Internal: An internal
        error occurred.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: PBXService_AssignRandomExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v1.AssignRandomExtensionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v1.AssignRandomExtensionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v1/pbxservice/createringgroup:
    post:
      tags:
      - PBXService
      description: "Creates a ring group for the authenticated caller's ORG.\n Required
        permissions:\n   PBX-MANAGER\n Errors:\n   - grpc.InvalidArgument: The request
        is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the required
        permissions.\n   - grpc.Internal: An internal error occurred.\n   - grpc.Unavailable:
        The operation is currently unavailable. Likely a transient issue with a downstream
        service."
      operationId: PBXService_CreateRingGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v1.CreateRingGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v1.CreateRingGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v1/pbxservice/deleteringgroup:
    post:
      tags:
      - PBXService
      description: "Deletes a specific Ring Group for the authenticated caller's ORG.\n
        Required permissions:\n   PBX-MANAGER\n Errors:\n   - grpc.InvalidArgument:
        The groupID is an invalid format.\n   - grpc.NotFound: The group does not
        exist or is not in the caller's ORG.\n   - grpc.PermissionDenied: Caller doesn't
        have the required permissions.\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: PBXService_DeleteRingGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v1.DeleteRingGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v1.DeleteRingGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v1/pbxservice/querypbxusers:
    post:
      tags:
      - PBXService
      description: "Queries details of PBX Users based on specified criteria for the
        authenticated callers ORG\n Required permissions:\n   PBX-MANAGER\n Errors:\n
        \  - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.Unavailable: The
        operation is currently unavailable. Likely a transient issue with a downstream
        service."
      operationId: PBXService_QueryPbxUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v1.QueryPbxUsersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v1.QueryPbxUsersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v1/pbxservice/queryringgroups:
    post:
      tags:
      - PBXService
      description: "Queries details of Ring Groups based on specified criteria for
        the authenticated callers ORG\n Required permissions:\n   PBX-MANAGER\n Errors:\n
        \  - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.Unavailable: The
        operation is currently unavailable. Likely a transient issue with a downstream
        service."
      operationId: PBXService_QueryRingGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v1.QueryRingGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v1.QueryRingGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v1/pbxservice/updatepbxuser:
    post:
      tags:
      - PBXService
      description: "Updates details of a PBX User for the authenticated callers ORG.\n
        Allows for updating, activating, and deactivating a user.\n Required permissions:\n
        \  PBX-MANAGER\n Errors:\n   - grpc.PermissionDenied: Caller doesn't have
        the required permissions.\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: PBXService_UpdatePbxUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v1.UpdatePbxUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v1.UpdatePbxUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v1/pbxservice/updateringgroup:
    post:
      tags:
      - PBXService
      description: "Updates details of a Ring Group for the authenticated callers
        ORG. This operation acts as an \"upsert\".\n   - If the groupID is in the
        update mask and the group exists, the group will be updated.\n   - If the
        groupID is not in the update mask a group will be created.\n Allows for creating
        and updating a ring group.\n Required permissions:\n   PBX-MANAGER\n Errors:\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Internal: An internal
        error occurred.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: PBXService_UpdateRingGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v1.UpdateRingGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v1.UpdateRingGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v2/pbxservice/assignrandomextension:
    post:
      tags:
      - PBXService
      description: "Assigns a random extension either to a PBX user or a Ring Group\n
        Required permissions:\n   PBX-MANAGER\n Errors:\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.NotFound: No free
        extension found.\n   - grpc.Internal: An internal error occurred.\n   - grpc.Unavailable:
        The operation is currently unavailable. Likely a transient issue with a downstream
        service."
      operationId: PBXService_AssignRandomExtension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v2.AssignRandomExtensionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v2.AssignRandomExtensionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v2/pbxservice/createringgroup:
    post:
      tags:
      - PBXService
      description: "Creates a ring group for the authenticated caller's ORG.\n Required
        permissions:\n   PBX-MANAGER\n Errors:\n   - grpc.InvalidArgument: The request
        is invalid.\n   - grpc.OutOfRange: The request has fields that are out of
        range of constraints\n   - grpc.AlreadyExists: The extension or name already
        exists.\n   - grpc.PermissionDenied: Caller doesn't have the required permissions.\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.Unavailable: The
        operation is currently unavailable. Likely a transient issue with a downstream
        service."
      operationId: PBXService_CreateRingGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v2.CreateRingGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v2.CreateRingGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v2/pbxservice/deleteringgroup:
    post:
      tags:
      - PBXService
      description: "Deletes a specific Ring Group for the authenticated caller's ORG.\n
        Required permissions:\n   PBX-MANAGER\n Errors:\n   - grpc.InvalidArgument:
        The groupID is an invalid format.\n   - grpc.NotFound: The group does not
        exist or is not in the caller's ORG.\n   - grpc.PermissionDenied: Caller doesn't
        have the required permissions.\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: PBXService_DeleteRingGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v2.DeleteRingGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v2.DeleteRingGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v2/pbxservice/getpbxuser:
    post:
      tags:
      - PBXService
      description: "Returns details of the PBX User associated with the pbx_user_id\n
        Required permissions:\n   PBX-MANAGER\n Errors:\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Internal: An internal error occurred.\n   -
        grpc.NotFound: The user does not exist or is not in the caller's ORG.\n   -
        grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: PBXService_GetPBXUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v2.GetPBXUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v2.GetPBXUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v2/pbxservice/getringgroup:
    post:
      tags:
      - PBXService
      description: "Returns details of the Ring Group associated with the ring_group_id\n
        Required permissions:\n   PBX-MANAGER\n Errors:\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Internal: An internal error occurred.\n   -
        grpc.NotFound: The group does not exist or is not in the caller's ORG.\n   -
        grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: PBXService_GetRingGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v2.GetRingGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v2.GetRingGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v2/pbxservice/getsipaccount:
    post:
      tags:
      - PBXService
      description: "Returns details of the SIP Account associated with the sip_id\n
        Required permissions:\n   PBX-MANAGER\n Errors:\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: Caller doesn't have the
        required permissions.\n   - grpc.Internal: An internal error occurred.\n   -
        grpc.NotFound: The group does not exist or is not in the caller's ORG.\n   -
        grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: PBXService_GetSIPAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v2.GetSIPAccountRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v2.GetSIPAccountResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v2/pbxservice/listpbxusers:
    post:
      tags:
      - PBXService
      description: "Returns details of all PBX Users associated with the authenticated
        callers ORG\n Required permissions:\n   PBX-MANAGER\n Errors:\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Internal: An internal
        error occurred.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: PBXService_ListPBXUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v2.ListPBXUsersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v2.ListPBXUsersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v2/pbxservice/listringgroups:
    post:
      tags:
      - PBXService
      description: "Returns details of all Ring Groups associated with the authenticated
        callers ORG\n Required permissions:\n   PBX-MANAGER\n Errors:\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Internal: An internal
        error occurred.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: PBXService_ListRingGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v2.ListRingGroupsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v2.ListRingGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v2/pbxservice/listsipaccounts:
    post:
      tags:
      - PBXService
      description: "Returns details of all SIP Accounts associated with the authenticated
        callers ORG\n Required permissions:\n   PBX-MANAGER\n Errors:\n   - grpc.PermissionDenied:
        Caller doesn't have the required permissions.\n   - grpc.Internal: An internal
        error occurred.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: PBXService_ListSIPAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v2.ListSIPAccountsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v2.ListSIPAccountsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v2/pbxservice/updateringgroup:
    post:
      tags:
      - PBXService
      description: "Updates details of a Ring Group for the authenticated callers
        ORG. This operation acts as an \"upsert\".\n   - If the groupID is in the
        update mask and the group exists, the group will be updated.\n   - If the
        groupID is not in the update mask a group will be created.\n Allows for creating
        and updating a ring group.\n Required permissions:\n   PBX-MANAGER\n Errors:\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.AlreadyExists:
        The extension or name already exists.\n   - grpc.PermissionDenied: Caller
        doesn't have the required permissions.\n   - grpc.Internal: An internal error
        occurred.\n   - grpc.Unavailable: The operation is currently unavailable.
        Likely a transient issue with a downstream service."
      operationId: PBXService_UpdateRingGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v2.UpdateRingGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v2.UpdateRingGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/pbx/v2/pbxservice/updatesipaccount:
    post:
      tags:
      - PBXService
      description: "Updates details of the SIP Account for the specific SIP Account
        within the authenticated callers ORG.\n Allows for updating, activating, and
        deactivating a user.\n Required permissions:\n   PBX-MANAGER\n Errors:\n   -
        grpc.InvalidArgument: The request is invalid.\n   - grpc.AlreadyExists: The
        extension already exists\n   - grpc.PermissionDenied: Caller doesn't have
        the required permissions.\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.Unavailable: The operation is currently unavailable. Likely a transient
        issue with a downstream service."
      operationId: PBXService_UpdateSIPAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.pbx.v2.UpdateSIPAccountRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.pbx.v2.UpdateSIPAccountResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/bulkdeletetranslations:
    post:
      tags:
      - TranslationsService
      description: "Bulk delete translations\n Required permissions:\n   - PERMISSION_CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.InvalidArgument: The request is not valid."
      operationId: TranslationsService_BulkDeleteTranslations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.BulkDeleteTranslationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.BulkDeleteTranslationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/disablecontext:
    post:
      tags:
      - TranslationsService
      description: "disable a context for LLM translations\n Required permissions:\n
        \  - PERMISSION_CUSTOMER_SUPPORT\n Errors:\n   - grpc.InvalidArgument: The
        request is not valid."
      operationId: TranslationsService_DisableContext
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.DisableContextRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.DisableContextResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/enablecontext:
    post:
      tags:
      - TranslationsService
      description: "enable a context for LLM translations\n Required permissions:\n
        \  - PERMISSION_CUSTOMER_SUPPORT\n Errors:\n   - grpc.InvalidArgument: The
        request is not valid.\n   - grpc.NotFound: No context found"
      operationId: TranslationsService_EnableContext
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.EnableContextRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.EnableContextResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/getsystemmessage:
    post:
      tags:
      - TranslationsService
      operationId: TranslationsService_GetSystemMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.GetSystemMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.GetSystemMessageResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/listcontexts:
    post:
      tags:
      - TranslationsService
      description: "Lists localization contexts\n Required permissions:\n  - PERMISSION_CUSTOMER_SUPPORT"
      operationId: TranslationsService_ListContexts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.ListContextsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.ListContextsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/listlanguages:
    post:
      tags:
      - TranslationsService
      description: "Lists localization languages\n Required permissions:\n  - Any
        Authenticated User"
      operationId: TranslationsService_ListLanguages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.ListLanguagesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.ListLanguagesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/listtranslations:
    post:
      tags:
      - TranslationsService
      description: "Lists translations by context/language\n Required permissions:\n
        \ - PERMISSION_CUSTOMER_SUPPORT\n Errors:\n   - grpc.InvalidArgument: The
        request is not valid.\n   - grpc.NotFound: No templates found for the given
        context and language."
      operationId: TranslationsService_ListTranslations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.ListTranslationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.ListTranslationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/setsystemmessage:
    post:
      tags:
      - TranslationsService
      description: "set/get context system message to give more tuned LLMs when translating
        for that context (WARNING - this overrides the previous system message for
        the context if exists)\n Required permissions:\n   - PERMISSION_CUSTOMER_SUPPORT\n
        Errors:\n   - grpc.InvalidArgument: The request is not valid."
      operationId: TranslationsService_SetSystemMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.SetSystemMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.SetSystemMessageResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/testsystemmessage:
    post:
      tags:
      - TranslationsService
      description: "Gives a translation for a system message, template and language
        with no side effects (Used for testing system messages)\n Required permissions:\n
        \  - PERMISSION_CUSTOMER_SUPPORT\n Errors:\n   - grpc.InvalidArgument: The
        request is not valid."
      operationId: TranslationsService_TestSystemMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.TestSystemMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.TestSystemMessageResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/translatetemplate:
    post:
      tags:
      - TranslationsService
      description: "Translate a template for a given context and language.\n Required
        permissions:\n   Any Authenticated User\n Errors:\n   - grpc.AlreadyExists
        : This template is already translated for the given context and language.\n
        \  - grpc.InvalidArgument: The request is not valid."
      operationId: TranslationsService_TranslateTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.TranslateTemplateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.TranslateTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/triggerllmtranslation:
    post:
      tags:
      - TranslationsService
      description: "Re-run the LLM translation for a given translationID\n Required
        permissions:\n   - PERMISSION_CUSTOMER_SUPPORT\n Errors:\n   - grpc.InvalidArgument:
        The request is not valid."
      operationId: TranslationsService_TriggerLLMTranslation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.TriggerLLMTranslationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.TriggerLLMTranslationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/triggerllmtranslations:
    post:
      tags:
      - TranslationsService
      description: "re-run all translations for a given context (WARNING - this should
        be ran sparingly as it is a heavy operation and costs money)\n Required permissions:\n
        \  - PERMISSION_CUSTOMER_SUPPORT\n Errors:\n   - grpc.InvalidArgument: The
        request is not valid."
      operationId: TranslationsService_TriggerLLMTranslations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.TriggerLLMTranslationsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.TriggerLLMTranslationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /services/translations/v1alpha1/updatetranslation:
    post:
      tags:
      - TranslationsService
      description: "Overrides the translation for a given translationID\n Required
        permissions:\n   - PERMISSION_CUSTOMER_SUPPORT\n Errors:\n   - grpc.InvalidArgument:
        The request is not valid."
      operationId: TranslationsService_UpdateTranslation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/services.translations.v1alpha1.UpdateTranslationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.translations.v1alpha1.UpdateTranslationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcnapi/omni/projects/v1/regions/{region}/orgs/{org}/projects:
    get:
      tags:
      - Projects
      description: Method to list projects
      operationId: Projects_ListProjects
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcnapi.omni.projects.v1.ListProjectsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - Projects
      description: Method to create a project
      operationId: Projects_CreateProject
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcnapi.omni.projects.v1.Project'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcnapi.omni.projects.v1.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcnapi/omni/projects/v1/regions/{region}/orgs/{org}/projects/{project}:
    get:
      tags:
      - Projects
      description: Method to get a rpoject
      operationId: Projects_GetProject
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcnapi.omni.projects.v1.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - Projects
      description: Method to delete a project
      operationId: Projects_DeleteProject
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcnapi.omni.projects.v1.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - Projects
      description: Method to update a project
      operationId: Projects_UpdateProject
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the update mask
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcnapi.omni.projects.v1.Project'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcnapi.omni.projects.v1.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/bulkcreateflagreview:
    post:
      tags:
      - Vanalytics
      description: BulkCreateFlagReview creates flag reviews.
      operationId: Vanalytics_BulkCreateFlagReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.BulkCreateFlagReviewRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.BulkCreateFlagReviewResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/bulkdeletetranscripts:
    post:
      tags:
      - Vanalytics
      description: BulkDeleteTranscripts bulk deletes transcripts matching the provided
        query.
      operationId: Vanalytics_BulkDeleteTranscripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.BulkDeleteTranscriptsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.BulkDeleteTranscriptsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/bulkrestoretranscripts:
    post:
      tags:
      - Vanalytics
      description: BulkRestoreTranscripts bulk restores transcripts matching the provided
        query.
      operationId: Vanalytics_BulkRestoreTranscripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.BulkRestoreTranscriptsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.BulkRestoreTranscriptsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/createcorrection:
    post:
      tags:
      - Vanalytics
      description: CreateCorrection creates a correction.
      operationId: Vanalytics_CreateCorrection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.CreateCorrectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.CreateCorrectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/createfilter:
    post:
      tags:
      - Vanalytics
      description: "CreateFilter creates a new filter. The filter contains a transcript
        query\n to filter transcripts."
      operationId: Vanalytics_CreateFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.CreateFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.Filter'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/createflag:
    post:
      tags:
      - Vanalytics
      description: CreateFlag creates a new flag.
      operationId: Vanalytics_CreateFlag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.CreateFlagRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.Flag'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/createflagreview:
    post:
      tags:
      - Vanalytics
      description: CreateFlagReview creates a flag review.
      operationId: Vanalytics_CreateFlagReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.CreateFlagReviewRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.FlagReview'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/createflagtranscript:
    post:
      tags:
      - Vanalytics
      description: CreateFlagTranscript creates a flag transcript.
      operationId: Vanalytics_CreateFlagTranscript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.CreateFlagTranscriptRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.CreateFlagTranscriptResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/deletecorrection:
    post:
      tags:
      - Vanalytics
      description: DeleteCorrection deletes a correction.
      operationId: Vanalytics_DeleteCorrection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.DeleteCorrectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.DeleteCorrectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/deletefilter:
    post:
      tags:
      - Vanalytics
      description: DeleteFilter deletes filter given a filter_sid.
      operationId: Vanalytics_DeleteFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.DeleteFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.DeleteFilterResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/deleteflag:
    post:
      tags:
      - Vanalytics
      description: DeleteFlag deletes the flag identified by the given flag_sid.
      operationId: Vanalytics_DeleteFlag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.DeleteFlagRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.DeleteFlagResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/getcorrection:
    post:
      tags:
      - Vanalytics
      description: GetCorrection gets a correction.
      operationId: Vanalytics_GetCorrection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.GetCorrectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.Correction'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/getfilter:
    post:
      tags:
      - Vanalytics
      description: GetFilter gets filter given a filter_sid or name.
      operationId: Vanalytics_GetFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.GetFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.Filter'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/getflag:
    post:
      tags:
      - Vanalytics
      description: GetFlag gets a flag.
      operationId: Vanalytics_GetFlag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.GetFlagRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.Flag'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/getrecordingurl:
    post:
      tags:
      - Vanalytics
      description: GetRecordingUrl gets a signed url to download a transcript recording.
      operationId: Vanalytics_GetRecordingUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.GetRecordingUrlRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.GetRecordingUrlResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/gettranscriptsummary:
    post:
      tags:
      - Vanalytics
      description: GetTranscriptSummary gets a transcript summary for a provided transcript.
      operationId: Vanalytics_GetTranscriptSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.GetTranscriptSummaryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.GetTranscriptSummaryResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/listagentresponsevalues:
    post:
      tags:
      - Vanalytics
      description: ListAgentResponseValues lists transcript agent response values.
      operationId: Vanalytics_ListAgentResponseValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.ListAgentResponseValuesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.ListAgentResponseValuesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/listbillingspan:
    post:
      tags:
      - Vanalytics
      description: ListBillingSpan lists billing spans.
      operationId: Vanalytics_ListBillingSpan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.ListBillingSpanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.ListBillingSpanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/listcorrections:
    post:
      tags:
      - Vanalytics
      description: ListCorrections lists corrections.
      operationId: Vanalytics_ListCorrections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.ListCorrectionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.ListCorrectionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/listfilters:
    post:
      tags:
      - Vanalytics
      description: ListFilters lists filters.
      operationId: Vanalytics_ListFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.ListFiltersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.ListFiltersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/listflagfilters:
    post:
      tags:
      - Vanalytics
      description: ListFlagFilters lists flag filter associations.
      operationId: Vanalytics_ListFlagFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.ListFlagFiltersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.ListFlagFiltersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/listflagreviews:
    post:
      tags:
      - Vanalytics
      description: ListFlagReviews lists reviews in an organization.
      operationId: Vanalytics_ListFlagReviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.ListFlagReviewsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.ListFlagReviewsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/listflags:
    post:
      tags:
      - Vanalytics
      description: ListFlags lists flags in an organization.
      operationId: Vanalytics_ListFlags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.ListFlagsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.ListFlagsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/listflagsnapshots:
    post:
      tags:
      - Vanalytics
      description: ListFlagSnapshots lists flag snapshots in an organization.
      operationId: Vanalytics_ListFlagSnapshots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.ListFlagSnapshotsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.ListFlagSnapshotsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/listflagtranscriptfilters:
    post:
      tags:
      - Vanalytics
      description: ListFlagTranscriptFilters lists flag transcript filters in an organization.
      operationId: Vanalytics_ListFlagTranscriptFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.ListFlagTranscriptFiltersRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.ListFlagTranscriptFiltersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/listtranscriptgroupnames:
    post:
      tags:
      - Vanalytics
      description: ListTranscriptGroupNames lists transcript group names.
      operationId: Vanalytics_ListTranscriptGroupNames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.ListTranscriptGroupNamesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.ListTranscriptGroupNamesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/searchtranscripts:
    post:
      tags:
      - Vanalytics
      description: "SearchTranscripts searches transcripts by search criteria. The
        search response\n contains one page of transcript hits. Traversing the paginated
        hits is\n achieved by making use of the given page token."
      operationId: Vanalytics_SearchTranscripts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.SearchTranscriptsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.SearchTranscriptsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/updatecorrection:
    post:
      tags:
      - Vanalytics
      description: UpdateCorrection updates a correction.
      operationId: Vanalytics_UpdateCorrection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.UpdateCorrectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.UpdateCorrectionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/updatefilter:
    post:
      tags:
      - Vanalytics
      description: UpdateFilter updates a filter transcript query and/or name.
      operationId: Vanalytics_UpdateFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.UpdateFilterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.Filter'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/updateflag:
    post:
      tags:
      - Vanalytics
      description: UpdateFlag updates a flag.
      operationId: Vanalytics_UpdateFlag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.UpdateFlagRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.Flag'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /wfo/vanalytics/v2/vanalytics/audit:
    post:
      tags:
      - Vanalytics
      description: "Audit audits the used transcription audio time for a client. The
        window\n of time to audit can be widened or narrowed using the request since
        and\n until fields."
      operationId: Vanalytics_Audit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wfo.vanalytics.v2.AuditRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wfo.vanalytics.v2.AuditResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
components:
  schemas:
    api.commons.ActionType:
      type: object
      properties:
        actionTypeId:
          type: string
        actionName:
          type: string
    api.commons.ActivatedConversationAsmEvent:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/api.commons.OmniConversation'
    api.commons.ActivatedConversationEvent:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/api.commons.OmniConversation'
    api.commons.AdherenceAgentRule:
      type: object
      properties:
        adherenceAgentRuleId:
          type: string
          description: ID of this agent rule.
        name:
          type: string
          description: Name of this agent rule.
        selectedEntity:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConfigEntity'
          description: "Config entity that the rule applies to, supported ones are:\n
            CALL_CENTER_NODE, CLIENT_NODE, LOCATION_NODE, PROGRAM_NODE, AGENT_GROUP,
            WFM_AGENT, SHIFT_TEMPLATE."
        ruleRequirementType:
          type: integer
          description: Specifies the requirement type of this rule.
          format: enum
        adherenceRuleNotificationConfigId:
          type: string
          description: ID of the notification config that this rule will use/follow.
        ruleClauses:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AdherenceAgentRuleClause'
          description: Clauses that belong to this rule. Only used by List methods.
      description: Represents an adherence agent rule.
    api.commons.AdherenceAgentRuleAction:
      type: object
      properties:
        actionType:
          type: integer
          description: Type of ths action.
          format: enum
      description: Represents a agent rule action.
    api.commons.AdherenceAgentRuleClause:
      type: object
      properties:
        adherenceAgentRuleClauseId:
          type: string
          description: ID of this agent rule clause.
        adherenceAgentRuleId:
          type: string
          description: ID of the agent rule that this clause belongs to.
        action:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceAgentRuleAction'
          description: Action that this agent rule clause evaluates.
        condition:
          type: integer
          description: Condition that will be evaluated between the @action and the
            @amount.
          format: enum
        amount:
          type: integer
          description: Amount to evaluate.
          format: int32
        unit:
          type: integer
          description: Unit that the @amount is on.
          format: enum
      description: Represents an adherence agent rule clause.
    api.commons.AdherenceDepartmentalRule:
      type: object
      properties:
        adherenceDepartmentalRuleId:
          type: string
          description: ID of this departmental rule.
        name:
          type: string
          description: Name of this departmental rule.
        selectedEntity:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConfigEntity'
          description: "Config entity that the rule applies to, supported ones are:\n
            CALL_CENTER_NODE, CLIENT_NODE, LOCATION_NODE, PROGRAM_NODE, SHIFT_TEMPLATE,
            AGENT_GROUP."
        ruleRequirementType:
          type: integer
          description: Specifies the requirement type of this rule.
          format: enum
        adherenceRuleNotificationConfigId:
          type: string
          description: ID of the notification config that this rule will use/follow.
        ruleRange:
          type: integer
          description: Range that this rule will be applied at.
          format: enum
        customRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Custom date range to apply the rule, must only be set when
            @rule_range is CUSTOM_DATE_RANGE.
        ruleClauses:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AdherenceDepartmentalRuleClause'
          description: Clauses that belong to this rule. Only used by List methods.
      description: Represents an adherence departmental rule.
    api.commons.AdherenceDepartmentalRuleAction:
      type: object
      properties:
        actionType:
          type: integer
          description: Type of ths action.
          format: enum
      description: Represents a departmental rule action.
    api.commons.AdherenceDepartmentalRuleClause:
      type: object
      properties:
        adherenceDepartmentalRuleClauseId:
          type: string
          description: ID of this departmental rule clause.
        adherenceDepartmentalRuleId:
          type: string
          description: ID of the departmental rule that this clause belongs to.
        action:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceDepartmentalRuleAction'
          description: Action that this departmental rule clause evaluates.
        condition:
          type: integer
          description: Condition that will be evaluated between the @action and the
            @amount.
          format: enum
        amount:
          type: integer
          description: Amount to evaluate.
          format: int32
        unit:
          type: integer
          description: Unit that the @amount is on.
          format: enum
        perAmount:
          type: integer
          description: "Optional amount to evaluate e.g:\n drops below <80%> calls
            answered in <10> seconds will be - amount: 80, unit: percentage, per_amount:
            10, per_unit: seconds."
          format: int32
        perUnit:
          type: integer
          description: Unit that the @per_amount is on, only used when the @per_amount
            is set.
          format: enum
      description: Represents an adherence departmental rule clause.
    api.commons.AdherenceRuleNotificationConfig:
      type: object
      properties:
        adherenceRuleNotificationConfigId:
          type: string
          description: ID of the notification config.
        name:
          type: string
          description: Name of the notification config.
        entries:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AdherenceRuleNotificationConfigEntry'
          description: Entries that belong to this rule. Only used by List methods.
      description: Represents a configuration for adherence rule notifications.
    api.commons.AdherenceRuleNotificationConfigEntry:
      type: object
      properties:
        adherenceRuleNotificationConfigEntryId:
          type: string
          description: ID of the notification config entry.
        adherenceRuleNotificationConfigId:
          type: string
          description: ID of the notification config that this entry belongs to.
        recipientUserId:
          type: string
          description: ID of the user ID that will receive this notification.
        notificationMedium:
          type: integer
          description: Medium to be used for deliving the notification.
          format: enum
        secondsToWaitForNoResponse:
          type: integer
          description: Number of seconds to wait to trigger this notification entry
            after the rule that uses this config was violated.
          format: int32
      description: Represents a user entry for a notification.
    api.commons.AgentAlert:
      type: object
      properties:
        backofficeMessage:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentBackofficeMessageAlert'
          description: a message from backoffice
        directedCallRinging:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentDirectedCallRingingAlert'
          description: alert that a direct agent call is ringing
        directedCallHangup:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentDirectedCallHangupAlert'
          description: alert that a direct agent call hungup
      description: message used to wrap the alert one of
    api.commons.AgentBackofficeMessageAlert:
      type: object
      properties:
        expireDuration:
          type: string
          description: the amount of time in seconds the event should expire - 0 mean
            no expiration
        timestamp:
          type: string
          description: the date/time that the even happened
          format: date-time
        targetAgentSession:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentSession'
          description: the information of the agent this event is for
        message:
          type: string
          description: the message send from backoffice
        id:
          type: string
          description: a unique id for the message
      description: an event used to send a back office message to an agent
    api.commons.AgentDirectedCallHangupAlert:
      type: object
      properties:
        expireDuration:
          type: string
          description: the amount of time in seconds the event should expire - 0 mean
            no expiration
        timestamp:
          type: string
          description: the date/time that the even happened
          format: date-time
        targetAgentSession:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentSession'
          description: the information of the agent this event is for
        callerSid:
          allOf:
          - $ref: '#/components/schemas/api.commons.CallerSid'
          description: the information of the caller entity
        id:
          type: string
          description: a unique id for the message
      description: an event used to alert an agent that they have an agent directed
        call that hung up
    api.commons.AgentDirectedCallRingingAlert:
      type: object
      properties:
        expireDuration:
          type: string
          description: the amount of time in seconds the event should expire - 0 mean
            no expiration
        timestamp:
          type: string
          description: the date/time that the even happened
          format: date-time
        targetAgentSession:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentSession'
          description: the information of the agent this event is for
        callerSid:
          allOf:
          - $ref: '#/components/schemas/api.commons.CallerSid'
          description: the information of the caller entity
        callerId:
          type: string
          description: the number the caller called from
        destinationNumber:
          type: string
          description: the number the caller called
        id:
          type: string
          description: a unique id for the message
      description: an event used to alert an agent that they have an agent directed
        call that came in
    api.commons.AgentLeavePetition:
      type: object
      properties:
        agentLeavePetitionId:
          type: string
          description: ID of the agent leave petition.
        wfmAgentSid:
          type: string
          description: ID of the agent requesting the time off.
        petitionStatus:
          type: integer
          description: Current status of the time off request.
          format: enum
        petitionComment:
          type: string
          description: A comment sent by agent when the time off was requested.
        responseComment:
          type: string
          description: "A response from the manager when the request was approved
            or denied.\n This field is null by default."
        requestedDatetimeRanges:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: A list of datetime ranges to be blocked off on the schedule.
        createdTime:
          type: string
          description: The timestamp from when the request was created.
          format: date-time
        archivedTime:
          type: string
          description: "The timestamp from when the timestamp was archived, if it
            has been archived.\n This field is null by default."
          format: date-time
        resolvedTime:
          type: string
          description: "The timestamp from when the timestamp was resolved, if it
            has been resolved.\n The request is resolved when it is either approved
            or denied.\n This field is null by default."
          format: date-time
        resolvedByUserId:
          type: string
          description: "The user ID of the manager who approved or denied the request.\n
            This field is null by default."
        requestedHoursOff:
          type: number
          description: "The number of working hours requested off.\n This does not
            need to relate directly to the datetime range being requested off,\n For
            example in the case where a 14 hour schedulable range is being taken off
            but 8 hours of work will be paid out with PTO."
          format: float
      description: Represents an agent's request for time off.
    api.commons.AgentQueuedCallsNotification:
      type: object
      properties:
        agentQueueCalls:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AgentQueuedCallsNotification_QueuedCallData'
          description: calls that were queued and have a matching subset of the agent_skills
            from the request.
        onHoldCalls:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AgentQueuedCallsNotification_QueuedCallData'
          description: calls that were placed on multi-hold by the agent_sid from
            the request.
        hqmCalls:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AgentQueuedCallsNotification_QueuedCallData'
          description: "calls that were placed in the Hold Queue Monitor, are still
            on hold by the destination (hold music is being played by the other party)
            and have\n a matching subset of the agent_skills from the request."
    api.commons.AgentQueuedCallsNotification_QueuedCallData:
      type: object
      properties:
        callSid:
          type: string
          description: id of the found call.
        phoneNumber:
          type: string
          description: number dialed when the call was placed.
        callerId:
          type: string
          description: caller_id used when the call was placed.
        callType:
          type: integer
          description: call type of the found call.
          format: enum
        startDate:
          type: string
          description: timestamp indicating when the call started.
          format: date-time
        holdDate:
          type: string
          description: timestamp indicating when the call was put on hold (only set
            when call is a hold call).
          format: date-time
        skills:
          type: array
          items:
            type: string
          description: formatted skills that the call requires.
        agentSpecific:
          type: boolean
          description: indicates if the call is specific to the agent (multi-hold)
            or it can be picked up by multiple agents (queued and HQM calls).
        queuedNotificationType:
          type: integer
          description: queued notification type of the call.
          format: enum
    api.commons.AgentSession:
      type: object
      properties:
        agentSid:
          type: string
          description: the agent's sid
        tenantSid:
          type: string
          description: the client's sid
        sessionSid:
          type: string
          description: the voice session sid
        asmSessionSid:
          type: string
          description: the asm session sid
        orgId:
          type: string
          description: the org id of the user/agent
        regionId:
          type: string
          description: the region id of the user/agent
        userId:
          type: string
          description: the user's id
      description: a complex type that completely identifies an agent
    api.commons.AgentState:
      type: object
      properties:
        status:
          type: string
          description: the asterisk status
        statusDesc:
          type: integer
          description: the status enum
          format: enum
        paused:
          type: boolean
          description: if the agent is paused
        queue:
          type: string
          description: the queue the agent is in (client id)
        currentSessionId:
          type: string
          description: the voice session id
        lastStatusChange:
          type: string
          description: the time the status changed
        monitoring:
          type: boolean
          description: if the agent is monitoring
        callsCount:
          type: string
          description: the number of calls the agent has taken
        lastSipCode:
          type: string
          description: the last sip code
        agentPeerIsLostCall:
          type: boolean
          description: if the agent is on call with a lost call
        disabled:
          type: boolean
          description: if the agent is disabled
        callerWasSuspended:
          type: boolean
          description: if the agent is on call with a call that was suspended
        transferMembers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.TransferMember'
          description: the list of transfer members
        agentPeerIsDirectToAgent:
          type: boolean
          description: if the agent is on call with a direct to agent call
        userId:
          type: string
          description: the user_id of the agent
        agentSid:
          type: string
          description: the agent_sid of the agent
        asmSessionSid:
          type: string
          description: the asm_session_sid of the agent
        agentIsMuted:
          type: boolean
          description: indicates if the agent is muted or not
        uuid:
          type: string
          description: uuid for the agent state
    api.commons.AgentStateSegment:
      type: object
      properties:
        orderInRts:
          type: integer
          description: "The order that this agent state segment fits into the AgentStateSequence.\n
            Sequence starts at 0."
          format: int32
        states:
          type: array
          items:
            type: integer
            format: enum
          description: The state of the agent during this segment.
        widthInMinutes:
          type: integer
          description: The width of this segment in minutes.
          format: int32
        widthInSeconds:
          type: integer
          description: The width of this segment in seconds.
          format: int32
      description: Represents an agents real time state over a period of time.
    api.commons.AgentStateSequence:
      type: object
      properties:
        wfmAgentSid:
          type: string
          description: ID of the agent that the real time state sequence relates to.
        startDatetime:
          type: string
          description: The datetime where the agent state sequence starts.
          format: date-time
        stateSegments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AgentStateSegment'
          description: The list of agent state segments that cover the length of the
            sequence.
      description: Represents a sequence of real time states for a WFM agent.
    api.commons.AsmEvent:
      type: object
      properties:
        state:
          type: integer
          format: enum
        eventTime:
          type: string
        activatedConversationAsmEvent:
          $ref: '#/components/schemas/api.commons.ActivatedConversationAsmEvent'
        deactivatedConversationAsmEvent:
          $ref: '#/components/schemas/api.commons.DeactivatedConversationAsmEvent'
        sentMessageAsmEvent:
          $ref: '#/components/schemas/api.commons.SentMessageAsmEvent'
        sendStatusAsmEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.SendStatusAsmEvent'
          description: An event to indicate that the status has changed
        pauseEvent:
          $ref: '#/components/schemas/api.commons.PauseEvent'
        resumeEvent:
          $ref: '#/components/schemas/api.commons.ResumeEvent'
        conversationPulledEvent:
          $ref: '#/components/schemas/api.commons.ConversationPulledEvent'
      description: AsmEvent
    api.commons.AssignProjectTemplate:
      type: object
      properties:
        ticketTemplateId:
          type: array
          items:
            type: string
        projectId:
          type: string
      description: Deprecated and will not be used
    api.commons.AuthTokenExpiration:
      type: object
      properties:
        token:
          type: string
          description: The token that is expiring
        expiration:
          type: string
          description: The token expiration
          format: date-time
      description: AuthTokenExpiration is used to notify the user about an auth token
        expiration
    api.commons.AutoEvaluation:
      type: object
      properties:
        autoEvaluationId:
          type: string
        scorecardId:
          type: string
        callSid:
          type: string
        agentUserId:
          type: string
        autoEvaluationSections:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AutoEvaluationSection'
        completedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        callType:
          type: integer
          format: enum
        transcriptSid:
          type: string
        expressionMatched:
          type: boolean
        riskLevel:
          type: integer
          format: enum
        callLength:
          type: integer
          format: int32
        scorecardInfo:
          $ref: '#/components/schemas/api.commons.AutoEvaluation_ScorecardInfo'
        categoryInfo:
          $ref: '#/components/schemas/api.commons.AutoEvaluation_CategoryInfo'
      description: AutoEvaluation is an auto evaluation
    api.commons.AutoEvaluationQuestion:
      type: object
      properties:
        autoEvaluationQuestionId:
          type: string
        autoEvaluationId:
          type: string
        autoEvaluationSectionId:
          type: string
        autoQuestionId:
          type: string
        flagged:
          type: array
          items:
            type: string
        passed:
          type: boolean
        sortOrder:
          type: integer
          format: int32
        riskLevel:
          type: integer
          format: enum
        expressionMatched:
          type: boolean
      description: AutoEvaluationQuestion is an auto question in an evaluation.
    api.commons.AutoEvaluationSection:
      type: object
      properties:
        autoEvaluationSectionId:
          type: string
        autoEvaluationId:
          type: string
        sectionId:
          type: string
        sortOrder:
          type: integer
          format: int32
        deletedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        autoEvaluationQuestions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AutoEvaluationQuestion'
        riskLevel:
          type: integer
          format: enum
      description: AutoEvaluationSection is an auto Section in an evaluation.
    api.commons.AutoEvaluation_CategoryInfo:
      type: object
      properties:
        title:
          type: string
    api.commons.AutoEvaluation_ScorecardInfo:
      type: object
      properties:
        title:
          type: string
    api.commons.AutoQuestion:
      type: object
      properties:
        autoQuestionId:
          type: string
        flagSid:
          type: string
        scorecardId:
          type: string
        autoSectionId:
          type: string
        sortOrder:
          type: integer
          format: int32
        flagExpression:
          allOf:
          - $ref: '#/components/schemas/api.commons.AutoQuestion_FlagExpr'
          description: Boolean expression of which flags to match
        question:
          type: string
        description:
          type: string
        questionId:
          type: string
        riskLevel:
          type: integer
          format: enum
      description: AutoQuestion represents an automatically scored question.
    api.commons.AutoQuestion_FlagExpr:
      type: object
      properties:
        and:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AutoQuestion_FlagExpr'
          description: Optional. Boolean and operator.
        or:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AutoQuestion_FlagExpr'
          description: Optional. Boolean or operator.
        flag:
          allOf:
          - $ref: '#/components/schemas/api.commons.FlagExpr_Flag'
          description: Optional. Flag to match.
        not:
          allOf:
          - $ref: '#/components/schemas/api.commons.AutoQuestion_FlagExpr'
          description: Optional. Boolean not operator.
      description: FlagExpr defines a boolean expression of filters.
    api.commons.CallIdentifier:
      type: object
      properties:
        sid:
          type: string
        type:
          type: integer
          format: enum
      description: CallIdentifier is used to completely identify calls.
    api.commons.CallProfileGroupAvgs:
      type: object
      properties:
        minAverage:
          type: number
          description: min average (e.g. min ATAB)
          format: float
        maxAverage:
          type: number
          description: max average (e.g. max ATAB)
          format: float
        distributionProfile:
          $ref: '#/components/schemas/api.commons.DistributionProfile'
      description: defines a template profile of call characteristic distributions
    api.commons.CallProfileGroupCalls:
      type: object
      properties:
        totalCalls:
          type: integer
          format: int32
        distributionProfile:
          $ref: '#/components/schemas/api.commons.DistributionProfile'
      description: defines a template profile for call count distributions
    api.commons.CallbackContext:
      type: object
      properties:
        callerId:
          type: string
        phoneNo:
          type: string
        countryCode:
          type: string
        callerName:
          type: string
        callerCountryCode:
          type: string
      description: Message for Voice Callback Context
    api.commons.CallerSid:
      type: object
      properties:
        callerSid:
          type: string
          description: the caller's sid
        type:
          type: integer
          description: the type of the caller
          format: enum
        tenantSid:
          type: string
          description: the client's sid
        orgId:
          type: string
          description: org id of the caller
      description: a complex type that completely identifies a caller
    api.commons.Category:
      type: object
      properties:
        categoryId:
          type: string
        authorId:
          type: string
        title:
          type: string
        description:
          type: string
        skillProfiles:
          type: array
          items:
            type: string
        version:
          type: integer
          format: int32
        callTypes:
          type: array
          items:
            type: integer
            format: enum
        isSystem:
          type: boolean
        categoryType:
          type: integer
          format: enum
        skillProfileGroupSids:
          type: array
          items:
            type: string
      description: "Category wraps a set of skills (or labels).\n A scorecard can
        only be used to evaluate calls\n with the same skill(s) as its category."
    api.commons.ChatColorProperties:
      type: object
      properties:
        primaryColor:
          type: string
        headerTextColor:
          type: string
        paragraphTextColor:
          type: string
    api.commons.ChatHeader:
      type: object
      properties:
        header:
          type: string
          description: the main text to display
        subheader:
          type: string
          description: the text to display beneath the header
      description: The header data for the chat widget associated to a given chat
        campaign
    api.commons.ClientHistoryCacheInfo:
      type: object
      properties:
        state:
          type: integer
          description: Current state that a client's cache is at.
          format: enum
        progressPercentage:
          type: integer
          description: Percentage estimate of how much of the cache has been loaded.
          format: int32
    api.commons.ClientInfoDataRow:
      type: object
      properties:
        fieldLabel:
          type: string
        fieldValue:
          type: string
        isPhone:
          type: boolean
        dialedNumber:
          type: boolean
        contactFieldDescriptionSid:
          type: string
    api.commons.ClientInfoDisplayTemplateRow:
      type: object
      properties:
        fieldLabel:
          type: string
          description: Field label for the row
        color:
          allOf:
          - $ref: '#/components/schemas/api.commons.RGBColor'
          description: Color of the text in the row
        bgColor:
          allOf:
          - $ref: '#/components/schemas/api.commons.RGBColor'
          description: Backgorund color in the row
        contactFieldDescriptionSid:
          type: string
          description: Sid that relates the row to a contact field description
        allowAgentCopy:
          type: boolean
          description: Shows a copy button in the row that copies the field value
            to your clipboard
      description: ClientInfoDisplayTemplateRow
    api.commons.CommType:
      type: object
      properties:
        callType:
          type: integer
          format: enum
        emailType:
          type: integer
          format: enum
        smsType:
          type: integer
          format: enum
        whatsappType:
          type: integer
          format: enum
      description: type of communication
    api.commons.Comment:
      type: object
      properties:
        commentSid:
          type: string
          description: The snowflake id of a comment row in ticket_comment.
        ticketSid:
          type: string
          description: The ticket reference where the comment was added.
        comment:
          type: string
          description: The comment text
        createdById:
          type: string
          description: commenter by id
        createdByName:
          type: string
          description: comment by name
        createdByDate:
          type: string
          description: created by date
          format: date-time
        ticketCode:
          type: string
          description: ticket_code
      description: Comment - Fields for Comment on a ticket, listing comments of a
        ticket (ViewComment)
    api.commons.ComplianceRule:
      type: object
      properties:
        text:
          type: string
          description: text representation of the compliance rule
        permit:
          type: boolean
          description: whether the compliance rule passed or not
        pluginResponse:
          type: string
          description: extra response data
      description: ComplianceRule -
    api.commons.ComplianceRuleSet:
      type: object
      properties:
        id:
          type: string
          description: the compliance rule set identifier
        name:
          type: string
          description: name of the compliance rule set
        sha:
          type: string
          description: the SHA indicating the version of the rule set
        rules:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ComplianceRule'
          description: "list of compliance rules ran in this version of the\n rule
            set."
      description: ComplianceRuleSet -
    api.commons.ConfigEntity:
      type: object
      properties:
        entitySid:
          type: string
          description: ID of the config entity.
        entityType:
          type: integer
          description: Type of entity that the @entity_sid will reference.
          format: enum
      description: ID and type of a config entity.
    api.commons.ConfirmReplyComment:
      type: object
      properties:
        isCreated:
          type: boolean
          description: boolean value to confirm edit comment
      description: ConfirmReplyComment -
    api.commons.ConnectedInbox:
      type: object
      properties:
        connectedInboxSid:
          type: string
          description: connected inbox identifier
        emailAddress:
          type: string
          description: connected email address
        username:
          type: string
          description: username for accessing email
        password:
          type: string
          description: password for accessing email
        checkFrequencyMinutes:
          type: string
          description: how often the email should be checked (in minutes)
        serverName:
          type: string
          description: server name the email is located on
        serverPort:
          type: string
          description: server port the email is located on
        lastScheduledTime:
          type: string
          description: time the email was last scheduled to be checked
          format: date-time
        lastChecked:
          type: string
          description: time the email was last checked
          format: date-time
        purgeThreshold:
          type: string
          description: how many emails should build up before getting purged
        emailSalt:
          type: string
          description: salt used in encoding
        numConsecutiveFailures:
          type: integer
          description: number of consecutive failures allowed before entering an ERROR_STANDBY
            state
          format: int32
        lastError:
          type: string
          description: the last error that occurred
        standbyErrorTime:
          type: string
          description: time the email entered ERROR_STANDBY
          format: date-time
        lastUpdated:
          type: string
          description: time the inbox was last updated
          format: date-time
        maxMessageSize:
          type: integer
          description: maximum message size
          format: int32
        maxMessages:
          type: integer
          description: maximum number of messages
          format: int32
        googleXoauth2RefreshToken:
          type: string
          description: google xoauth2 refresh token (if using google xoauth2)
        googleXoauth2AccessToken:
          type: string
          description: google xoauth2 access token (if using google xoauth2)
        googleXoauth2AccessTokenExpiration:
          type: string
          description: time the google xoauth2 access token expires (if using google
            xoauth2)
          format: date-time
        authenticationType:
          type: integer
          description: type of authentication that should be used
          format: enum
        oauthReferenceId:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConnectedInboxOAuthConfig'
          description: config for the oauth provider
      description: ConnectedInbox -
    api.commons.ConnectedInboxOAuthConfig:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        expiresAt:
          type: string
        referenceId:
          type: string
      description: ConnectedInboxOAuthConfig -
    api.commons.ConsentCondition:
      type: object
      properties:
        consentConditionId:
          type: string
          description: Condition id
        consentId:
          type: string
          description: Consent it belongs to
        daysOfTheWeek:
          type: array
          items:
            type: integer
            format: enum
          description: Days of week the condition is applicable to
        timeOfDayFrom:
          type: string
          description: Time of day condition starts
        timeOfDayTo:
          type: string
          description: Time of day condition ends
        fromDate:
          type: string
          description: Date condition starts
          format: date-time
        toDate:
          type: string
          description: Date condition ends
          format: date-time
      description: "ConsentCondition defines conditions\n required for a consent to
        take affect"
    api.commons.ConstructedFilename:
      type: object
      properties:
        overrideFilename:
          type: string
          description: "This is the name part that is sandwiched between prefix and
            suffix.\n If this is nil, we will use the original uploaded filename.\n
            if this is not nil (including empty string) we will use the nested 'value'\n
            field as the filename."
        prefix:
          type: string
          description: prefix is prepended to the filename (or override_filename)
        dateFormat:
          type: string
          description: 'format string like: YYYY-MM-DDhhmmss'
        suffix:
          type: string
          description: "suffix is appeneded to the filename (or override_filename)\n
            suffix will go before the extension, even if the original filename has
            an\n extension included"
        fileExtension:
          type: string
          description: "extension to add to the file, (if none already exists as part
            of the\n original filename)"
        datePosition:
          type: integer
          description: "If 0 (default) date is positioned very first (before prefix)\n
            note that before/after filename reference the same position if\n 'use_empty_filename'
            is set"
          format: enum
        dayToUse:
          type: integer
          description: Day to use for date
          format: enum
      description: "Represents a filename that we will construct using the original
        uploaded name\n prefix, date in \"date_format\" format, and extension\n filename
        = date + prefix + original_filename + suffix + ext"
    api.commons.ContactEntry:
      type: object
      properties:
        contactEntrySid:
          type: string
          description: the unique identifier of the contact entry list
        contactListSid:
          type: string
          description: the identifier of the contact list
        dateCreated:
          type: string
          description: the time the disposition was created
          format: date-time
        dateModified:
          type: string
          description: the time the disposition was last modified
          format: date-time
        fieldNames:
          type: array
          items:
            type: string
          description: the list of field names
        dataFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniDataField'
          description: 'list of fields associated to contact entry (can contain different
            types of data: string|int64|etc.)'
      description: ContactEntry -
    api.commons.ContactList:
      type: object
      properties:
        contactListSid:
          type: string
          description: the unique identifier of the contact list
        name:
          type: string
          description: the name string
        description:
          type: string
          description: the description string
        fieldNames:
          type: array
          items:
            type: string
          description: list of field names
        projectSid:
          allOf:
          - $ref: '#/components/schemas/api.commons.Int64Id'
          description: the project sid
        dateCreated:
          type: string
          description: the time the disposition was created
          format: date-time
        dateModified:
          type: string
          description: the time the disposition was last modified
          format: date-time
        contactEntries:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ContactEntry'
          description: the list of contact entries
        metadata:
          allOf:
          - $ref: '#/components/schemas/api.commons.ContactList_Metadata'
          description: metaData
      description: ContactList -
    api.commons.ContactList_Metadata:
      type: object
      properties:
        entryCount:
          type: string
      description: Metadata - contains extra details for contact lists
    api.commons.ConversationCollectedData:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ConversationCollectedData_Item'
          description: the list of data
      description: represents a a list of information collected for a conversation
    api.commons.ConversationCollectedData_Item:
      type: object
      properties:
        conversationCollectedDataSid:
          type: string
          description: the id of the record
        conversationSid:
          type: string
          description: the id of the conversation
        dataName:
          type: string
          description: the name of the data
        dataValue:
          type: string
          description: the value of the data
        collectionTime:
          type: string
          description: when the data was collected
          format: date-time
        userId:
          type: string
          description: the user that collected the data (if this is not set then it
            was collected by the customer)
      description: represents a piece of meta information collect for a particular
        conversation
    api.commons.ConversationCustomerInformation:
      type: object
      properties:
        name:
          type: string
        phoneNumber:
          type: string
        emailAddress:
          type: string
    api.commons.ConversationPulledEvent:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/api.commons.OmniConversation'
    api.commons.ConversationTimeoutMessageConfig:
      type: object
      properties:
        isDisabled:
          type: boolean
          description: disables timeout messages altogether, defaults at false for
            no change is previous behavior
        msg:
          type: string
          description: msg is the configurable message for the timeout. If msg is
            left blank, the canned message is sent
      description: allows the user to configure a custom message for when a conversation
        times out, or to disable the message all together
    api.commons.CountryCode:
      type: object
      properties:
        countryCode:
          type: string
        countryName:
          type: string
        countryId:
          type: string
    api.commons.CronExpression:
      type: object
      properties:
        repeatMinutes:
          type: string
          description: repeat_minutes is the minutes expression to repeat the report.
        hoursOfDay:
          type: string
          description: hours_of_day is the hours expression of the day to repeat the
            report.
        daysOfMonth:
          type: string
          description: days_of_month is the days expression of the month to repeat
            the report.
        monthsOfYear:
          type: string
          description: months_of_year is the months expression of the year to repeat
            the report.
        dayOfWeek:
          type: string
          description: day_of_week is the day of the week expression to repeat the
            report.
      description: CronExpression is a message for the cron expression of a report.
    api.commons.DashboardAgentInfo:
      type: object
      properties:
        userId:
          type: string
          description: agents user id
        name:
          type: string
          description: agents name
        userName:
          type: string
          description: agents user name
        huntGroupName:
          type: string
          description: agents hunt group name
        partnerAgentId:
          type: string
          description: partner agent id
        huntGroupSid:
          type: string
          description: the agents hunt group sid
        agentSid:
          type: string
          description: the agents sid
        userCallerId:
          type: string
          description: the user caller id
        firstName:
          type: string
          description: agents first name
        lastName:
          type: string
          description: agents last name
        created:
          type: string
          description: the date of creation
          format: date-time
        lastUpdated:
          type: string
          description: the date of last update
          format: date-time
        agentProfileGroupId:
          type: string
          description: agents profile group id
        agentProfileGroupName:
          type: string
          description: agents profile group name
        agentStatus:
          type: integer
          description: enum of agents status
          format: enum
        currentConversationSid:
          type: string
          description: the agents current conversation
        averageCustomerWaitTimeSeconds:
          type: string
          description: time from first customer message to agent response. between
            all conversations.
        averageTimeToRespondSeconds:
          type: string
          description: responste time between all conversations.
        averageConversationDurationSeconds:
          type: string
          description: time from first customer message to conversation close. between
            all conversations.
        loginTime:
          type: string
          description: login time
          format: date-time
        lastEventTime:
          type: string
          description: last event time
          format: date-time
        events:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.DashboardAgentInfo_DashboardAgentResponseEvent'
          description: the list of response events
        skills:
          type: object
          additionalProperties:
            type: string
          description: Agents Skills
        asmSessionSid:
          type: string
          description: Asm Session Sid
    api.commons.DashboardAgentInfo_DashboardAgentResponseEvent:
      type: object
      properties:
        responseTimeSeconds:
          type: string
          description: the time it took to respond in seconds
        time:
          type: string
          description: the time of the event
          format: date-time
        isInitialAgentMessage:
          type: boolean
          description: whether or not this was the initial message sent by the agent
      description: The response event information for an agent
    api.commons.DateExp:
      type: object
      properties:
        month:
          type: integer
          format: enum
        day:
          type: string
        year:
          type: string
    api.commons.DatetimeRange:
      type: object
      properties:
        startDatetime:
          type: string
          description: begining datetime
          format: date-time
        endDatetime:
          type: string
          description: ending datetime
          format: date-time
    api.commons.DayFilter:
      type: object
      properties:
        type:
          type: integer
          description: type is the type of day filter.
          format: enum
        dayOfWeekFilter:
          allOf:
          - $ref: '#/components/schemas/api.commons.DayOfWeekFilter'
          description: day_of_week_filter is the filter for days of the week.
        dayOfMonthFilter:
          allOf:
          - $ref: '#/components/schemas/api.commons.DayOfMonthFilter'
          description: day_of_month_filter is the filter for days of the month.
      description: DayFilter is used to specify days for a report to be delivered.
    api.commons.DayOfMonthFilter:
      type: object
      properties:
        dayOfMonths:
          type: array
          items:
            type: integer
            format: int32
          description: day_of_months is a list of days of the month.
        isLastDayOfMonth:
          type: boolean
          description: is_last_day_of_month is a flag for the last day of the month.
      description: DayOfMonthFilter filters the days of the month for a report.
    api.commons.DayOfWeekFilter:
      type: object
      properties:
        daysOfWeeks:
          type: array
          items:
            type: integer
            format: enum
          description: days_of_weeks is a list of days of the week.
        weeksOfMonths:
          type: array
          items:
            type: integer
            format: int32
          description: weeks_of_months is a list of weeks of the month.
      description: DayOfWeekFilter filters the days of the week for a report.
    api.commons.DeactivatedConversationAsmEvent:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/api.commons.OmniConversation'
    api.commons.DeactivatedConversationEvent:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/api.commons.OmniConversation'
    api.commons.DeliveryOptions:
      type: object
      properties:
        transferConfigSid:
          type: string
          description: transfer_config_sid is the transfer config sid to deliver the
            report.
        failureNotificationEmails:
          type: array
          items:
            type: string
          description: failure_notification_emails are the emails to notify on failure.
      description: DeliveryOptions is a message for the delivery options of a report.
    api.commons.DeliveryTimes:
      type: object
      properties:
        deliveryTimes:
          type: array
          items:
            type: integer
            format: int32
          description: seconds after midnight when the report should be delivered.
        repeatFrequency:
          type: integer
          description: repeat_frequency is the frequency of the report.
          format: enum
      description: DeliveryTimes is a message for the delivery times of a report.
    api.commons.DialedNumberFieldSettings:
      type: object
      properties:
        shouldDisplay:
          type: boolean
          description: Should the dialed number be displayed?
        color:
          allOf:
          - $ref: '#/components/schemas/api.commons.RGBColor'
          description: Color of the text of the dialed number
        bgColor:
          allOf:
          - $ref: '#/components/schemas/api.commons.RGBColor'
          description: Color of the background of the dialed number
        allowAgentCopy:
          type: boolean
          description: Shows a copy button in the row that copies the field value
            to your clipboard
      description: Dialed Number Field Settings
    api.commons.DigitWrapper:
      type: object
      properties:
        value:
          type: integer
          format: enum
    api.commons.Disposition:
      type: object
      properties:
        dispositionSid:
          type: string
          description: the unique identifier of the disposition
        dateCreated:
          type: string
          description: the time the disposition was created
          format: date-time
        dateModified:
          type: string
          description: the time the disposition was last modified
          format: date-time
        disposition:
          type: string
          description: the disposition string
        deleted:
          type: boolean
          description: if the disposition was deleted
      description: Disposition -
    api.commons.DispositionField:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        pairs:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.DispositionPair'
    api.commons.DispositionMod:
      type: object
      properties:
        dispositions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.DispositionField'
    api.commons.DispositionPair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    api.commons.DistributionProfile:
      type: object
      properties:
        profileTod:
          allOf:
          - $ref: '#/components/schemas/api.commons.ProfileTOD'
          description: "For each of the 7 days of the week, a list of intervals signifying
            the distribution by time of day in intervals\n determined by interval_minutes,
            starting with interval 0 = 12AM. so there would be 96 element for 15-minute
            intervals"
        profileWoms:
          allOf:
          - $ref: '#/components/schemas/api.commons.ProfileWOMS'
          description: "For each of the 12 months of the year, a list of 6 week profiles.
            The first index for a given month is week 1 : the week\n   of the first
            day of the month. The week with the last day of the month is the last
            index. e.g August 2021 has\n   6 'weeks'"
        profileDow:
          allOf:
          - $ref: '#/components/schemas/api.commons.ProfileDOW'
          description: a profile for each day of the week
        profileMoy:
          allOf:
          - $ref: '#/components/schemas/api.commons.ProfileMOY'
          description: a profile for each month of the year
    api.commons.DnclExp:
      type: object
      properties:
        listName:
          type: string
        fieldNames:
          $ref: '#/components/schemas/api.commons.FieldNamesMod'
    api.commons.Duration:
      type: object
      properties:
        value:
          type: string
          description: Value of of the Scale
        scale:
          type: integer
          description: Scale - In minutes,hour,day,week,month,year
          format: enum
    api.commons.EditAttribute:
      type: object
      properties:
        colDesc:
          type: string
          description: Column Descripter
        fromVal:
          type: string
        toVal:
          type: string
        isEdited:
          type: boolean
    api.commons.EditTicket:
      type: object
      properties:
        ticketSid:
          type: string
          description: The ticket reference where the comment was added.
        editValue:
          allOf:
          - $ref: '#/components/schemas/api.commons.EditAttribute'
          description: The comment text
        ticketCode:
          type: string
          description: ticket_code
        ticketActionId:
          type: string
          description: ticket_action_id
      description: EditTicket - ** Only used in auditlog as a payload **
    api.commons.EmailbackContext:
      type: object
      properties:
        contactName:
          type: string
        toEmail:
          type: string
        fromEmail:
          type: string
      description: Message for EMAIL Callback Context
    api.commons.Empty:
      type: object
      properties: {}
    api.commons.Encryption:
      type: object
      properties: {}
      description: TODO
    api.commons.EntityExp:
      type: object
      properties:
        subEntity:
          type: integer
          format: enum
        entity:
          type: integer
          format: enum
    api.commons.Evaluation:
      type: object
      properties:
        evaluationId:
          type: string
        scorecardId:
          type: string
        scorerId:
          type: string
        callSid:
          type: string
        score:
          type: number
          format: double
        evaluationState:
          type: integer
          format: enum
        evaluationSections:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.EvaluationSection'
        completedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        agentUserId:
          type: string
        callType:
          type: integer
          format: enum
        transcriptSid:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Evaluation_CustomField'
        deletedBy:
          type: string
        isRecoverable:
          type: boolean
      description: "Evaluation represents a evaluated scorecard.\n A Evaluation represents
        a single call and single agent that has been evaluated."
    api.commons.EvaluationQuestion:
      type: object
      properties:
        evaluationQuestionId:
          type: string
        evaluationId:
          type: string
        scorecardQuestionId:
          type: string
        skipped:
          type: boolean
        points:
          type: string
        answers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.EvaluationQuestion_Answer'
        evaluationSectionId:
          type: string
        comment:
          type: string
        sortOrder:
          type: integer
          format: int32
      description: EvaluationQuestion is a question in an evaluation
    api.commons.EvaluationQuestion_Answer:
      type: object
      properties:
        answerOption:
          type: string
        points:
          type: integer
          format: uint32
        failType:
          type: integer
          format: enum
        answerPoints:
          type: integer
          format: int32
      description: Answer represents an answer option of an evaluation question
    api.commons.EvaluationSection:
      type: object
      properties:
        evaluationSectionId:
          type: string
        evaluationId:
          type: string
        sectionId:
          type: string
        points:
          type: integer
          format: int32
        possiblePoints:
          type: integer
          format: int32
        sortOrder:
          type: integer
          format: int32
        deletedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        evaluationQuestions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.EvaluationQuestion'
        autoEvaluationQuestions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AutoEvaluationQuestion'
        skipped:
          type: boolean
      description: EvaluationSection is collection of evaluation questions in a section
    api.commons.Evaluation_CustomField:
      type: object
      properties:
        key:
          type: string
        field:
          type: string
      description: CustomField represents a custom key-value pair defined by users.
    api.commons.Event:
      type: object
      properties:
        state:
          type: integer
          format: enum
        eventTime:
          type: string
        activatedConversationEvent:
          $ref: '#/components/schemas/api.commons.ActivatedConversationEvent'
        deactivatedConversationEvent:
          $ref: '#/components/schemas/api.commons.DeactivatedConversationEvent'
        sentMessageEvent:
          $ref: '#/components/schemas/api.commons.SentMessageEvent'
        sendStatusEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.SendStatusEvent'
          description: An event to indicate that the status has changed
        pauseEvent:
          $ref: '#/components/schemas/api.commons.PauseEvent'
        resumeEvent:
          $ref: '#/components/schemas/api.commons.ResumeEvent'
      description: this event will be depricated and asmevent will be used instead
    api.commons.Field:
      type: object
      properties:
        Field:
          type: string
        Content:
          type: string
    api.commons.FieldNamesMod:
      type: object
      properties:
        fieldNames:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Field'
    api.commons.FieldValueFilter:
      type: object
      properties:
        key:
          type: string
          description: key is a valid field mask
        value:
          type: string
          description: value is the stringified value at the field mask
      description: "FieldValueFilter resents a field mask and value to match on.\n
        For now we are only supporting string matching."
    api.commons.FilePattern:
      type: object
      properties:
        type:
          type: integer
          format: enum
        directory:
          type: string
        filename:
          type: string
          description: For GLOB type
        prefixes:
          type: array
          items:
            type: string
          description: For CONSTRUCTED type
        dateFormat:
          type: string
        suffix:
          type: string
        fileExtension:
          type: string
        datePrefix:
          type: boolean
          description: True if date string occurs at beginning of filename
        dayToUse:
          type: integer
          description: Day to use for date
          format: enum
      description: '::DEPRECATED FOR EXCHANGES::  use ConstructedFilename instead'
    api.commons.FilenamePart:
      type: object
      properties:
        type:
          type: integer
          description: type is the type of the filename part.
          format: enum
        staticText:
          type: string
          description: static_text is the static text for the filename part.
        dateParts:
          type: array
          items:
            type: string
          description: date_parts are the parts to format the date times.
      description: FilenamePart is a message for a part of the filename.
    api.commons.FlagExpr_Flag:
      type: object
      properties:
        flagSid:
          type: string
          description: Required. Filter sid.
      description: Filter defines a filter.
    api.commons.ForecastingParameters:
      type: object
      properties:
        intervalWidthInMinutes:
          type: integer
          description: number of minutes in which calls will be grouped together during
            for the duration of a forecast, must be a multiple of 5 ranging from 5
            to 60.
          format: int32
        historicalDataRangeInMonths:
          type: integer
          description: number of months back from the current datetime to look up
            history.
          format: int32
        historicalDataRangeStartDatetime:
          type: string
          description: start datetime to look up the history (end time will be the
            current datetime).
          format: date-time
        forecastTestRangeInWeeks:
          type: integer
          description: number of weeks of the training data from the current datetime
            to use as a forecast test range.
          format: int32
        forecastRangeInWeeks:
          type: integer
          description: number of weeks from the current datetime that forecast will
            be made.
          format: int32
        forecastDatetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: date range at which a forecasts will be made.
        trainingDataRangeInMonths:
          type: integer
          description: number of months in the past from the current datetime that
            the training data will be generated from.
          format: int32
        trainingDataDatetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: date range in which the training data will be generated.
        averagesCalculationRangeInMonths:
          type: integer
          description: "Number of months of training data to use when calculating
            averages.\n If set to 0, then all the training data will be used when
            calculating the averages,\n meaning that the start datetime of the training
            data to use will be the start datetime of the @training_data_range.\n
            Otherwise, it will subtract that many months from the @training_data_range
            end datetime and use it as the start time."
          format: int32
      description: Request message for the UpsertForecastingParameters RPC.
    api.commons.FormatOptions:
      type: object
      properties:
        reportFormat:
          type: integer
          description: report_format is the format of the report.
          format: enum
        filenameParts:
          type: array
          items:
            type: string
          description: filename_parts are the parts to build the filename.
      description: FormatOptions is a message for the format options of a report.
    api.commons.FrequencyExp:
      type: object
      properties:
        count:
          type: string
        duration:
          type: string
        results:
          $ref: '#/components/schemas/api.commons.ResultsMod'
        dispositions:
          $ref: '#/components/schemas/api.commons.DispositionMod'
        fieldNames:
          $ref: '#/components/schemas/api.commons.FieldNamesMod'
        checkingEntities:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.EntityExp'
        matching:
          $ref: '#/components/schemas/api.commons.MatchingMod'
    api.commons.GetQueuesDetailsRes:
      type: object
      properties:
        queueDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.GetQueuesDetailsRes_QueueDetails'
          description: the queue details
      description: GetQueuesDetailsRes - response for GetQueuesDetails
    api.commons.GetQueuesDetailsRes_QueueDetails:
      type: object
      properties:
        channelType:
          type: integer
          description: the channel type for the queue
          format: enum
        queueSize:
          type: string
          description: the size of the queue
      description: hold the details about a queue
    api.commons.GhostNotification:
      type: object
      properties:
        referenceId:
          type: string
          description: a structured id used to identify the given notification
        any:
          allOf:
          - $ref: '#/components/schemas/google.protobuf.Any'
          description: payload used when no other oneof type has been defined
        status:
          allOf:
          - $ref: '#/components/schemas/api.commons.Status'
          description: A way to return a message with a status code and message.
        omniConversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: An omni conversation
        backofficeMessage:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentBackofficeMessageAlert'
          description: an alert to an agent that a message from backoffice came in
        directedCallRinging:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentDirectedCallRingingAlert'
          description: alert that a direct agent call is ringing
        directedCallHangup:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentDirectedCallHangupAlert'
          description: alert that a direct agent call hungup
        agentQueuedCallsNotification:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentQueuedCallsNotification'
          description: notification about the current state of queued call for an
            agent
        authTokenExpirationNotification:
          allOf:
          - $ref: '#/components/schemas/api.commons.AuthTokenExpiration'
          description: notification that an auth token will soon expire
      description: "a notificaiton used to return a response for an asyncronous request
        or\n data for or about a backend initiated process that needs to be consumed
        by the user"
    api.commons.GlobalConfig:
      type: object
      properties:
        createRoom:
          type: integer
          format: enum
        joinExistingRoom:
          type: integer
          format: enum
        sendMessageToSupervisor:
          type: integer
          format: enum
        sendMessageToNonSupervisor:
          type: integer
          format: enum
      description: global configuration settings
    api.commons.HolidayExp:
      type: object
      properties:
        name:
          type: string
        country:
          type: string
        type:
          type: string
    api.commons.InitialSetupStatus:
      type: object
      properties:
        state:
          type: integer
          description: Current state that a client is at.
          format: enum
        progressPercentage:
          type: integer
          description: Progress percentage estimate of the setup process.
          format: int32
        message:
          type: string
          description: Any message that a service has in regards to their current
            state.
      description: Represents the status of a client's initial setup and progress
        to use WFM.
    api.commons.Int64Id:
      type: object
      properties:
        value:
          type: string
      description: "wraps int64 values so they can be null, but also adds the JS_STRING\n
        tag so that data isn't lost when using snowflake ids"
    api.commons.InvalidScrubListEntry:
      type: object
      properties:
        entry:
          type: string
        errorMessage:
          type: string
    api.commons.KeepAlive:
      type: object
      properties: {}
    api.commons.LearningOpportunity:
      type: object
      properties:
        learningOpportunityId:
          type: string
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        transcriptSid:
          type: string
        agentUserId:
          type: string
        startOffset:
          type: integer
          format: int32
        endOffset:
          type: integer
          format: int32
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        title:
          type: string
        status:
          type: integer
          format: enum
        origin:
          type: integer
          format: enum
        creatorUserId:
          type: string
        evaluationId:
          type: string
        autoEvaluationId:
          type: string
        smartEvaluationId:
          type: string
      description: LearningOpportunity represents a single learning opportunity entity.
    api.commons.ListTemplate:
      type: object
      properties:
        ticketTemplateId:
          type: string
        templateName:
          type: string
        projectId:
          type: string
        template:
          type: string
        templateEntityVersion:
          type: string
        isActive:
          type: boolean
        createdById:
          type: string
        createdDate:
          type: string
          format: date-time
        projectTitle:
          type: string
        assignedProject:
          type: array
          items:
            type: string
      description: Deprecated and will not be used
    api.commons.LocalePreferences:
      type: object
      properties:
        languageTag:
          type: string
          description: "Display language in Operator for users of the organization.\n
            Must be a valid language tag supported in Operator.\n IETF BCP 47 - https://en.wikipedia.org/wiki/IETF_language_tag\n
            DEPRECATED: use operator_display_language instead."
        useScriptDirectionRightToLeft:
          type: boolean
          description: "The direction of the script in Operator used in the organization.\n
            By default, it is set to false to indicate left-to-right.\n DEPRECATED:
            use language_direction_preference instead."
        defaultCurrency:
          type: string
          description: "The default currency used in the organization.\n Must be a
            valid currency code supported in Operator.\n ISO 4217 - https://en.wikipedia.org/wiki/ISO_4217."
        operatorDisplayLanguage:
          allOf:
          - $ref: '#/components/schemas/api.commons.OperatorDisplayLanguage'
          description: The display language in Operator for users of the organization.
        operatorLanguageDirection:
          type: integer
          description: The direction of the language used in the organization.
          format: enum
      description: LocalePreferences represents the organization's locale settings.
    api.commons.LocationExp:
      type: object
      properties:
        country:
          type: string
        state:
          type: string
        county:
          type: string
        city:
          type: string
        province:
          type: string
        postalCodes:
          type: array
          items:
            type: string
        areaCodes:
          type: array
          items:
            type: string
    api.commons.ManagerStreamAgentStateRes:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/api.commons.AgentState'
        heartBeat:
          $ref: '#/components/schemas/api.commons.KeepAlive'
    api.commons.MatchingEntity:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/api.commons.ResultsMod'
        dispositions:
          $ref: '#/components/schemas/api.commons.DispositionMod'
    api.commons.MatchingMod:
      type: object
      properties:
        and:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.MatchingMod'
        or:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.MatchingMod'
        mod:
          $ref: '#/components/schemas/api.commons.MatchingEntity'
    api.commons.Member:
      type: object
      properties:
        userSid:
          allOf:
          - $ref: '#/components/schemas/api.commons.UserSid'
          description: contains name and id of the member to add
        addedBy:
          allOf:
          - $ref: '#/components/schemas/api.commons.UserSid'
          description: contains the name and id of the person adding the member
        addedAt:
          type: string
          description: Unix timestamp for the time added
          format: date-time
        roomId:
          type: string
          description: Room Id for this member
        admin:
          type: boolean
          description: admin rights in the room
      description: Entity used in the member api service for room303.
    api.commons.Message:
      type: object
      properties:
        orgId:
          type: string
        messageId:
          type: string
        roomId:
          type: string
        fromUser:
          $ref: '#/components/schemas/api.commons.UserSid'
        status:
          type: integer
          format: enum
        receivedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        payload:
          type: string
        unread:
          type: boolean
        nonce:
          type: string
          description: "nonce  is set by UI and used to tell if the message coming
            through the message update stream was created by that client.\n this is
            so when the user is logged in on multiple clients (different device, tabs,
            browser) they can see their updated message on those clients."
    api.commons.MessageStat:
      type: object
      properties:
        roomId:
          type: string
        unreadMessages:
          type: integer
          format: int32
    api.commons.MetaFieldExp:
      type: object
      properties:
        field:
          type: string
    api.commons.Metadata:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      description: Metadata - Contains a key value pair of strings, Will have metadata
        of an agent conversations
    api.commons.MonthExp:
      type: object
      properties:
        month:
          type: integer
          format: enum
        text:
          type: string
    api.commons.OmniAssignConversation:
      type: object
      properties:
        userId:
          type: string
          description: agent user id
        userName:
          type: string
          description: "user name used to display in the UI. This field is only set
            by\n the backend when the payload is being sent to the UI"
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
      description: assign conversation to agent
    api.commons.OmniAttachment:
      type: object
      properties:
        omniAttachmentSid:
          type: string
          description: primary key or internal identifier for attachment
        name:
          type: string
          description: attachment file name
        fileType:
          type: string
          description: attachment file type
        fileSize:
          type: string
          description: attachment file size
        path:
          type: string
          description: attachment file path
        tempId:
          type: string
          description: temp id
        downloadUrl:
          type: string
          description: download attachment file url
        dateCreated:
          type: string
          description: time when the attachment was created
          format: date-time
        dateModified:
          type: string
          description: time when the attachment was last modified
          format: date-time
        contentId:
          type: string
          description: Optional. the id of the attachment in text if inline
        width:
          type: string
          description: Optional. the width of the inline attachment
        height:
          type: string
          description: Optional. the height of the inline attachment
      description: attachment details
    api.commons.OmniAttachmentUploadURL:
      type: object
      properties:
        uploadUrl:
          type: string
          description: attachment file upload url
        id:
          type: string
          description: attachment id
      description: attachment upload details
    api.commons.OmniCampaign:
      type: object
      properties:
        campaignSid:
          type: string
          description: the campaign identifier
        name:
          type: string
          description: the campaign name
        description:
          type: string
          description: the campaign description
        skills:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversationSkills'
          description: skills associated with the campaign
        startDate:
          type: string
          description: time the campaign should start; null == (not scheduled) ||
            (start now)
          format: date-time
        status:
          type: integer
          description: campaign status (i.e. running|stopped|paused|etc.)
          format: enum
        channelType:
          type: integer
          description: campaign channel type (chat|email|sms|whatsapp|etc.)
          format: enum
        dateCreated:
          type: string
          description: the time the campaign was created
          format: date-time
        dateModified:
          type: string
          description: the time the campaign was last modified
          format: date-time
        projectSid:
          type: string
          description: identifier of the project the campaign belongs to
        modules:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniCampaignModule'
          description: associated modules
        timeZone:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: the campaign timezone
        shortenUrl:
          type: boolean
          description: shorten URL
        complianceConfig:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniComplianceConfig'
          description: compliance configuration
      description: OmniCampaign -
    api.commons.OmniCampaignModule:
      type: object
      properties:
        campaignModuleSid:
          type: string
          description: the campaign module identifier
        campaignSid:
          type: string
          description: the campaign identifier
        moduleType:
          type: integer
          description: module type (inbound|outbound)
          format: enum
        status:
          type: integer
          description: campaign module status (running|stopped|etc.)
          format: enum
        config:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaignModuleConfig'
          description: config data specific to the module
        dateCreated:
          type: string
          description: date module was created
          format: date-time
        dateModified:
          type: string
          description: date module was last modified
          format: date-time
        scheduledStopDate:
          type: string
          description: when campaign is scheduled to stop; null == not a scheduled
            module
          format: date-time
        actualStopDate:
          type: string
          description: time campaign was actually stopped; null == not stopped yet
          format: date-time
        hoursOfOperation:
          allOf:
          - $ref: '#/components/schemas/api.commons.WeekdayTimeRange'
          description: campaign module operating time; nullable
        details:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaignModule_Details'
          description: read-only (i.e. only returned from the BE, never read, so setting
            this does nothing) selectable details when retrieving a module
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniAttachment'
          description: attachments
      description: OmniCampaign -
    api.commons.OmniCampaignModuleConfig:
      type: object
      properties:
        apiKeyPrimary:
          type: string
          description: primary api key for chat widget
        apiKeySecondary:
          type: string
          description: secondary api key for chat widget
        colorProperties:
          allOf:
          - $ref: '#/components/schemas/api.commons.ChatColorProperties'
          description: chat widget color properties
        connectedInboxSid:
          allOf:
          - $ref: '#/components/schemas/api.commons.Int64Id'
          description: identifier of the connected inbox associated to the CampaignModule
        dispositions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Disposition'
          description: list of dispositions associated to the CampaignModule
        email:
          type: string
          description: email associated to the CampaignModule
        messageBody:
          type: string
          description: message body
        emailSubject:
          type: string
          description: email subject
        smsNumber:
          allOf:
          - $ref: '#/components/schemas/api.commons.SmsNumber'
          description: sms number
        header:
          allOf:
          - $ref: '#/components/schemas/api.commons.ChatHeader'
          description: chat widget header
        slaTimeouts:
          allOf:
          - $ref: '#/components/schemas/api.commons.SLATimeouts'
          description: sla timeouts associated with the CampaignModule
        sendsPerHour:
          type: string
          description: maximum number of sends per hour for outbound CampaignModules
        unsubscribeLinkSid:
          allOf:
          - $ref: '#/components/schemas/api.commons.Int64Id'
          description: identifier of associated custom unsubscribe link
        verifiedEmailSid:
          allOf:
          - $ref: '#/components/schemas/api.commons.Int64Id'
          description: verified email identifier
        stopOnTaskDeplete:
          type: boolean
          description: stop module with all tasks are completed
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniAttachment'
          description: attachments
        complianceRuleSetId:
          type: string
          description: Optional. compliance rule set to use for this campaign
        paymentPortalIds:
          type: array
          items:
            type: string
          description: Payment Portal Ids
        flowId:
          allOf:
          - $ref: '#/components/schemas/api.commons.Int64Id'
          description: Flow Id
        skills:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversationSkills'
          description: skills
        whatsappNumber:
          allOf:
          - $ref: '#/components/schemas/api.commons.WhatsAppNumber'
          description: whatsapp number
        providerMetadata:
          type: object
          additionalProperties:
            type: string
          description: "ProviderMetadata\n  - SmartPing\n      content_id - the id
            of the premade message in the smartping system"
        countryCode:
          type: integer
          description: "The country code and postal code field together determine
            timezone for email time based compliance rulesets\n country code"
          format: int32
        postalCodeField:
          type: string
          description: postal code field
        timeoutMessageConfig:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConversationTimeoutMessageConfig'
          description: allows the user to configure a custom message for when a conversation
            times out, or to disable the message all together
      description: OmniCampaignModuleConfig -
    api.commons.OmniCampaignModule_Details:
      type: object
      properties:
        totalTaskCount:
          type: string
          description: the total number of tasks created by an outbound module
        completedTaskCount:
          type: string
          description: the total number of tasks that have successfully completed
            for an outbound module
        connectedInboxAddress:
          type: string
          description: the name of the associated connected_inbox for this module
        verifiedEmailAddress:
          type: string
          description: the name of the associated verified_email for this module
        pendingTaskCount:
          type: string
          description: the number of tasks pending
        failedTaskCount:
          type: string
          description: the number of tasks that failed
        canceledTaskCount:
          type: string
          description: the number of tasks that are canceled
      description: Details -
    api.commons.OmniCannedMessage:
      type: object
      properties:
        cannedMessageId:
          type: string
          description: canned message id
    api.commons.OmniCloseConversation:
      type: object
      properties:
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
    api.commons.OmniComplianceAction:
      type: object
      properties:
        keywords:
          type: array
          items:
            type: string
          description: a list of config keywords
        confirmationMessage:
          type: string
          description: confirmation for the config
        isFuzzyMatch:
          type: boolean
      description: OmniComplianceAction - configuration action for omni compliance
    api.commons.OmniComplianceConfig:
      type: object
      properties:
        optIn:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniComplianceAction'
          description: opting in to different compliance settings
        optOut:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniComplianceAction'
          description: opting out of different compliance settings
        help:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniComplianceAction'
          description: help regarding compliance settings
        information:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniComplianceAction'
          description: information regarding compliance settings
        scrubListId:
          type: string
          description: scrub list identifier
        ruleSetId:
          type: string
          description: rule set identifier
      description: OmniComplianceConfig -
    api.commons.OmniConversation:
      type: object
      properties:
        conversationSid:
          type: string
          description: primary key or internal identifier for conversation
        channelType:
          type: integer
          description: the conversation's channel type i.e. chat|email|sms|whatsapp|etc.
          format: enum
        skills:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversationSkills'
          description: the agent's skills
        dateCreated:
          type: string
          description: when the conversation was created
          format: date-time
        dateModified:
          type: string
          description: time the conversation was last modified
          format: date-time
        status:
          type: integer
          description: the current status of the conversation i.e. AwaitingAssignment
          format: enum
        customerEmailAddress:
          type: string
          description: the customer's email address
        customerPhoneNumber:
          type: string
          description: the customer's phone number
        customerName:
          type: string
          description: the customer's name
        campaignSid:
          type: string
          description: the identifier of the inbound campaign this conversation is
            a part of
        referenceId:
          type: string
          description: the identifier used to reference this conversation
        lastMessageTime:
          type: string
          description: time the last message was received
          format: date-time
        conversationCollectedData:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConversationCollectedData'
          description: information collected during the conversation
        slaTimeouts:
          allOf:
          - $ref: '#/components/schemas/api.commons.SLATimeouts'
          description: SLA timers
        conversationAssignments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniConversationAssignment'
          description: assignments list
        metadata:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation_ConversationDetails'
          description: conversation optional metadata
        endTime:
          type: string
          description: time the conversation was ended
          format: date-time
        campaignModuleSid:
          type: string
          description: the identifier of the campaign module this conversation is
            a part of
        lastMessageGroupTime:
          type: string
          description: "the time that the last group of message started. A message
            group is a\n continuous set of messages from the same type of sender"
          format: date-time
        lastMessageGroupType:
          type: integer
          description: the sender type of the last message group
          format: enum
        result:
          type: integer
          description: the result type of the conversation
          format: enum
        lastStateChangedTime:
          type: string
          description: time the status was changed
          format: date-time
      description: OmniConversation -
    api.commons.OmniConversationAssignment:
      type: object
      properties:
        conversationAssignmentSid:
          type: string
          description: primary key or internal identifier for conversation
        conversationSid:
          type: string
          description: conversation id
        isActive:
          type: boolean
          description: is an active
        assignmentType:
          type: integer
          description: type of assignment
          format: enum
        dateCreated:
          type: string
          description: date assignment was created
          format: date-time
        dateModified:
          type: string
          description: date assignment was last modified
          format: date-time
        userId:
          type: string
          description: user assigned to the conversation
        metadata:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversationAssignment_ConversationAssignmentDetails'
          description: conversation assignment optional metadata
        asmSessionSid:
          type: string
          description: asm conversations id
      description: OmniConversationAssignment -
    api.commons.OmniConversationAssignment_ConversationAssignmentDetails:
      type: object
      properties:
        userName:
          type: string
          description: the assigned user's name
      description: metadata details related to the conversation assignment
    api.commons.OmniConversationSkills:
      type: object
      properties:
        skills:
          type: object
          additionalProperties:
            type: boolean
          description: map of agent skills
      description: OmniConversationSkills -
    api.commons.OmniConversation_ConversationDetails:
      type: object
      properties:
        campaignName:
          type: string
          description: the associated campaign's name
        supportEmail:
          type: string
          description: support_email
        campaignShortenUrl:
          type: boolean
          description: campaign shorten url
        paymentPortalIds:
          type: array
          items:
            type: string
          description: payment portal ids
      description: metadata details related to the conversation
    api.commons.OmniCustomUnsubscribeLink:
      type: object
      properties:
        customUnsubscribeLinkSid:
          type: string
          description: unique identifier for the custom unsubscribe link
        linkName:
          type: string
          description: the name of the link
        linkUrl:
          type: string
          description: the link's url
        validated:
          type: boolean
          description: if the link has been validated
        dateCreated:
          type: string
          description: the time the link was created
          format: date-time
        dateModified:
          type: string
          description: the time the link was last modified
          format: date-time
        dateValidated:
          type: string
          description: the time the link was validated
          format: date-time
        description:
          type: string
          description: the link's description
        deleted:
          type: boolean
          description: if the link was deleted
      description: OmniCustomUnsubscribeLink -
    api.commons.OmniDataField:
      type: object
      properties:
        fieldSid:
          type: string
          description: the field identifier
        parentSid:
          type: string
          description: the identifier of the "parent" this field belongs to
        name:
          type: string
          description: the name of this field
        value:
          type: string
          description: the value of this field encoded as a string
        type:
          type: integer
          description: the type of value stored in this field (string|json|int|etc.)
          format: enum
      description: OmniDataField -
    api.commons.OmniDataMessage:
      type: object
      properties:
        message:
          type: string
          description: Data for flows, should always be json
        messageSid:
          type: string
          description: Message id of the html form this is in reply to
    api.commons.OmniFinishWrapUp:
      type: object
      properties:
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
    api.commons.OmniMessage:
      type: object
      properties:
        messageSid:
          type: string
          description: this is the primary key or internal tcn identifier for the
            message
        userId:
          type: string
          description: "this is the user id that sent the message - this can be not
            set which would\n be the case if it's not an agent message"
        sentFrom:
          type: string
          description: "this is who the message is from\n chat = if agent then user_id,
            if customer then name\n email = email address\n sms = phone number\n whatsapp
            = phone number"
        sentTo:
          type: string
          description: "this is who the message is to\n chat = if customer then name,
            otherwise leave as an empty string\n email = email address\n sms = phone
            number\n whatsapp = phone number"
        channelType:
          type: integer
          description: the message channel type
          format: enum
        referenceId:
          type: string
          description: "this is how the message is referenced by the outside world\n
            chat = not set\n email = email message header\n sms = not set\n whatsapp
            = not set"
        uiReferenceId:
          type: string
          description: this is an id that the UI generates so it's able to identify
            it when it sees it again
        payload:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessagePayload'
          description: this is the payload of the message
        conversationSid:
          allOf:
          - $ref: '#/components/schemas/api.commons.Int64Id'
          description: "the id of the conversation. This is not required to be set
            because the message could\n belong to a outbound campaign only"
        status:
          type: integer
          description: the current status of the message.
          format: enum
        dateCreated:
          type: string
          description: the time the message was created
          format: date-time
        dateModified:
          type: string
          description: the time the message was last modified
          format: date-time
        campaignSid:
          type: string
          description: identifier of the campaign the message belongs to
        subject:
          type: string
          description: "The subject of the conversation\n chat = not set\n email =
            the email subject line\n sms = not set\n whatsapp = not set"
        senderType:
          type: integer
          description: if this message is coming from omni boss is a manager message
          format: enum
        statusMessage:
          type: string
          description: status message
        messageFormat:
          type: integer
          description: the message format
          format: enum
    api.commons.OmniMessagePayload:
      type: object
      properties:
        textMessage:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniTextMessage'
          description: text message
        typingNotification:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniTypingNotification'
          description: typing notification
        reassignment:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniReassignmentNotification'
          description: reassignment notification
        requestAttachmentUploadUrl:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniRequestAttachmentUploadURL'
          description: requesting attachment upload url
        attachmentUploadUrl:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniAttachmentUploadURL'
          description: attachment upload url
        attachment:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniAttachment'
          description: attachment
        closeConversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCloseConversation'
          description: close conversation
        assignConversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniAssignConversation'
          description: assign conversation
        unassignConversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniUnassignConversation'
          description: unassign conversation
        finishWrapUp:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniFinishWrapUp'
          description: finished wrap up
        suspend:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniSuspend'
          description: suspend
        startWrapUp:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniStartWrapUp'
          description: start wrap up
        queueInformation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniQueueInformation'
          description: queue information
        requestQueueInformation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniRequestQueueInformation'
          description: request queue information
        offLoadedTextMessage:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniOffLoadedTextMessage'
          description: off loaded text message
        cannedMessage:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCannedMessage'
          description: canned message
        dataMessage:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniDataMessage'
          description: data message
    api.commons.OmniOffLoadedTextMessage:
      type: object
      properties:
        location:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniAttachment'
    api.commons.OmniProjectComplianceConfig:
      type: object
      properties:
        email:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniComplianceConfig'
          description: compliance configuration for an email
        sms:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniComplianceConfig'
          description: compliance configuration for sms
        whatsapp:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniComplianceConfig'
          description: compliance configuration for whatsapp
      description: OmniProjectComplianceConfig - compliance config for omni projects
    api.commons.OmniQueueInformation:
      type: object
      properties:
        position:
          type: string
    api.commons.OmniReassignmentNotification:
      type: object
      properties:
        currentUserId:
          type: string
          description: the id of the assigned user
        currentUserName:
          type: string
          description: "current user name used to display in the UI. This field is
            only set by\n the backend when the payload is being sent to the UI"
        newUserId:
          type: string
          description: the id of the user to be assigned
        newUserName:
          type: string
          description: "new user name used to display in the UI. This field is only
            set by\n the backend when the payload is being sent to the UI"
        newUserAsmSessionSid:
          type: string
          description: new user asm session sid
      description: OmniMessage payload for reassigning agents
    api.commons.OmniRequestAttachmentUploadURL:
      type: object
      properties: {}
    api.commons.OmniRequestQueueInformation:
      type: object
      properties:
        position:
          type: boolean
    api.commons.OmniStartWrapUp:
      type: object
      properties:
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
    api.commons.OmniSuspend:
      type: object
      properties:
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
    api.commons.OmniTask:
      type: object
      properties:
        taskSid:
          type: string
          description: the task identifier
        status:
          type: integer
          description: the task status
          format: enum
        dateCreated:
          type: string
          description: the time the task was created
          format: date-time
        dateModified:
          type: string
          description: the time the task was last updated
          format: date-time
        campaignModuleSid:
          type: string
          description: identifier of associated campaign module
        campaignSid:
          type: string
          description: identifier of associated campaign
        contactEntrySid:
          allOf:
          - $ref: '#/components/schemas/api.commons.Int64Id'
          description: identifier of associated contact entry
        state:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniTaskState'
          description: task state
        dataFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniDataField'
          description: 'list of fields associated to task (can contain different types
            of data: string|int64|etc.)'
        details:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniTask_Details'
          description: retrievable fields with field mask
        name:
          type: string
          description: the name of the task for easy identification of a task (this
            is generated by mapping contact entry fields as provided by the ui)
        statusMessage:
          type: string
          description: a message regarding the task's status, should be ignored if
            there is an associated OmniMessage
        scheduledTime:
          type: string
          description: scheduled time for task
          format: date-time
        taskConfig:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniTaskConfig'
          description: holds extra details about how a task should be processed
      description: OmniTask -
    api.commons.OmniTaskConfig:
      type: object
      properties:
        skills:
          $ref: '#/components/schemas/api.commons.OmniConversationSkills'
        absoluteTimeoutDuration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
        agentTimeoutDuration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
        subject:
          type: string
        message:
          $ref: '#/components/schemas/api.commons.OmniMessagePayload'
        userId:
          type: string
      description: TaskConfig -
    api.commons.OmniTaskState:
      type: object
      properties:
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniTaskState_Entry'
          description: list of destination addresses (should not include same destination
            twice)
        sources:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniTaskState_Entry'
          description: list of source addresses (should not include same source twice)
        ruleSet:
          allOf:
          - $ref: '#/components/schemas/api.commons.ComplianceRuleSet'
          description: "the rule set used with the task. This won't be set if a rule
            set didn't exist\n when the task ran."
        scrubListId:
          type: string
          description: scrub list id the task uses
      description: OmniTaskState -
    api.commons.OmniTaskState_Entry:
      type: object
      properties:
        address:
          type: string
          description: address (email_address|phone_number|etc.)
        timesUsed:
          type: string
          description: times address was used
        lastUsed:
          type: string
          description: the time this entry was last used
          format: date-time
    api.commons.OmniTask_Details:
      type: object
      properties:
        contactListName:
          type: string
          description: name of the contact list
    api.commons.OmniTextMessage:
      type: object
      properties:
        message:
          type: string
          description: message containing Urls
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniAttachment'
          description: attachments
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
    api.commons.OmniTypingNotification:
      type: object
      properties: {}
    api.commons.OmniUnassignConversation:
      type: object
      properties:
        userId:
          type: string
          description: the id of the user to unassign
        userName:
          type: string
          description: "user name used to display in the UI. This field is only set
            by\n the backend when the payload is being sent to the UI"
        all:
          type: boolean
          description: whether or not all users should be unassigned
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
      description: OmniMessage payload for unassigning an agent(s)
    api.commons.OperatorDisplayLanguage:
      type: object
      properties:
        value:
          type: string
          description: "Display language in Operator for users of the organization.\n
            If set, must be a valid language tag supported in Operator.\n IETF BCP
            47 - https://en.wikipedia.org/wiki/IETF_language_tag"
      description: "OperatorDisplayLanguage represents the language used in Operator.\n
        - Organization Preferences: must be set to a valid language tag supported
        in Operator.\n - User Preferences: If not set, the organization's default
        language is used."
    api.commons.OptionTypes:
      type: object
      properties:
        openTimesOption:
          type: integer
          description: Option used by OpenTime
          format: enum
        availabilityOption:
          type: integer
          description: Option used by Agent Availability
          format: enum
      description: Encapsulates the two kinds of options available so they can be
        interchangeably used.
    api.commons.PaginationTerminator:
      type: object
      properties:
        key:
          type: string
          description: the key we are checking
        negate:
          type: boolean
          description: "negate the results of the operation check.\n cases that we
            would have returned true, we instead return false, and vice versa"
        existsCheck:
          type: boolean
          description: "if true terminate if the key exists.\n if false terminate
            if the key does not exist."
        numGreaterThan:
          type: number
          description: terminate if the number value the key points to is greater
            than this
          format: double
        numLessThan:
          type: number
          description: terminate if the number value the key points to is less than
            this
          format: double
        numEquals:
          type: number
          description: terminate if the number value the key points to is equal to
            this
          format: double
        countLessThan:
          type: string
          description: "terminate if the number of records in the array key points
            is less than this.\n if key points to a non array, it has a count of 0"
        strEquals:
          type: string
          description: terminate if the str value the key points to equals this
        strContains:
          type: string
          description: terminate if the str value the key points to contains this
        boolEquals:
          type: boolean
          description: termintae if the bool value key points equals this
    api.commons.PauseEvent:
      type: object
      properties: {}
    api.commons.PhoneTypeExp:
      type: object
      properties:
        phoneType:
          type: integer
          format: enum
    api.commons.PluginExp:
      type: object
      properties:
        type:
          type: integer
          format: enum
        tcnStrict:
          type: boolean
        licenseId:
          type: string
          description: gryphon
        referenceKey:
          type: string
        fromNumber:
          type: string
        env:
          type: integer
          format: enum
        profileName:
          type: string
          description: tcn_consent
        contentField:
          type: string
        topic:
          type: string
        absentAction:
          type: integer
          format: enum
        dateLastContact:
          type: string
          description: rnd
        lu:
          type: string
          description: mrs compliance
        account:
          type: string
        master:
          type: string
        client:
          type: string
    api.commons.ProfileDOW:
      type: object
      properties:
        sunday:
          type: number
          format: float
        monday:
          type: number
          format: float
        tuesday:
          type: number
          format: float
        wednesday:
          type: number
          format: float
        thursday:
          type: number
          format: float
        friday:
          type: number
          format: float
        saturday:
          type: number
          format: float
      description: a profile each day of the week
    api.commons.ProfileMOY:
      type: object
      properties:
        january:
          type: number
          format: float
        february:
          type: number
          format: float
        march:
          type: number
          format: float
        april:
          type: number
          format: float
        may:
          type: number
          format: float
        june:
          type: number
          format: float
        july:
          type: number
          format: float
        august:
          type: number
          format: float
        september:
          type: number
          format: float
        october:
          type: number
          format: float
        november:
          type: number
          format: float
        december:
          type: number
          format: float
      description: a profile for each month of the year
    api.commons.ProfileTOD:
      type: object
      properties:
        sunday:
          type: array
          items:
            type: number
            format: float
        monday:
          type: array
          items:
            type: number
            format: float
        tuesday:
          type: array
          items:
            type: number
            format: float
        wednesday:
          type: array
          items:
            type: number
            format: float
        thursday:
          type: array
          items:
            type: number
            format: float
        friday:
          type: array
          items:
            type: number
            format: float
        saturday:
          type: array
          items:
            type: number
            format: float
      description: "----------------------- Message types used by BuildProfileForecastReq()
        ------------------\n a profile for time of day, for each day of the week"
    api.commons.ProfileWOMS:
      type: object
      properties:
        january:
          type: array
          items:
            type: number
            format: float
        february:
          type: array
          items:
            type: number
            format: float
        march:
          type: array
          items:
            type: number
            format: float
        april:
          type: array
          items:
            type: number
            format: float
        may:
          type: array
          items:
            type: number
            format: float
        june:
          type: array
          items:
            type: number
            format: float
        july:
          type: array
          items:
            type: number
            format: float
        august:
          type: array
          items:
            type: number
            format: float
        september:
          type: array
          items:
            type: number
            format: float
        october:
          type: array
          items:
            type: number
            format: float
        november:
          type: array
          items:
            type: number
            format: float
        december:
          type: array
          items:
            type: number
            format: float
      description: a profile for week of month, for each month of the year
    api.commons.ProjectDescription:
      type: object
      properties:
        projectId:
          type: string
          description: Project Id from Omni
        projectTitle:
          type: string
          description: Project Title From Omni
      description: Project Description
    api.commons.Question:
      type: object
      properties:
        questionId:
          type: string
        authorId:
          type: string
        question:
          type: string
        description:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Category'
        focus:
          type: integer
          format: enum
      description: "Question is a question in the Question Library.\n It is not to
        be confused with ScorecardQuestion, which represents\n a question inside of
        a scorecard."
    api.commons.QueueCallAdd:
      type: object
      properties:
        phoneNumber:
          type: string
          description: number dialed when the call was placed.
        callerId:
          type: string
          description: caller_id used when the call was placed.
        startDate:
          type: string
          description: timestamp indicating when the call started.
          format: date-time
        holdDate:
          type: string
          description: timestamp indicating when the call was put on hold (only set
            when call is a hold call).
          format: date-time
        formattedSkills:
          type: object
          additionalProperties:
            type: string
          description: formatted skills that the call requires.
        agentSpecific:
          type: boolean
          description: indicates if the call is specific to the agent (multi-hold)
            or it can be picked up by multiple agents (queued and HQM calls).
        queuedNotificationType:
          type: integer
          description: queued notification type of the call.
          format: enum
        callerSid:
          allOf:
          - $ref: '#/components/schemas/api.commons.CallerSid'
          description: callersid
        skills:
          type: object
          additionalProperties:
            type: boolean
          description: skills
    api.commons.QueueCallRemove:
      type: object
      properties:
        callerSid:
          $ref: '#/components/schemas/api.commons.CallerSid'
    api.commons.RGBColor:
      type: object
      properties:
        red:
          type: integer
          format: int32
        green:
          type: integer
          format: int32
        blue:
          type: integer
          format: int32
    api.commons.ReplyComment:
      type: object
      properties:
        commentSid:
          type: string
          description: The snowflake id of a comment row in ticket_comment.
        ticketSid:
          type: string
          description: The ticket reference where the comment was added.
        reply:
          type: string
          description: The comment text
        createdById:
          type: string
          description: commenter by id
        createdByDate:
          type: string
          format: date-time
        ticketCode:
          type: string
          description: ticket_code
      description: ReplyComment -
    api.commons.ResultsMod:
      type: object
      properties:
        results:
          type: array
          items:
            type: string
    api.commons.ResumeEvent:
      type: object
      properties: {}
    api.commons.Room:
      type: object
      properties:
        orgId:
          type: string
          description: organization id
        roomId:
          type: string
          description: 'TODO: WIP deprecate - unique room id'
        type:
          type: integer
          description: type - DIRECT, MULTI, SYSTEM
          format: enum
        createdAt:
          type: string
          description: unix timestamp for time created
          format: date-time
        updatedAt:
          type: string
          description: unix timestamp for time updated
          format: date-time
        status:
          type: integer
          description: status of the room
          format: enum
        id:
          type: string
          description: "Id's value will be a hash when room_type is DIRECT or the
            room name when MULTI.\n Used in ui for routing when room type is not available.\n
            Will replace room_id once it's fully deprecated"
        displayName:
          type: string
          description: display name for the room which is replacing the field "name".
        config:
          allOf:
          - $ref: '#/components/schemas/api.commons.RoomConfig'
          description: room configuration details
        permissionGroupId:
          type: string
          description: Optional id of the permission group assigned to this room.
    api.commons.RoomConfig:
      type: object
      properties:
        addUser:
          type: integer
          format: enum
        removeUser:
          type: integer
          format: enum
        promoteToAdmin:
          type: integer
          format: enum
        readMessages:
          type: integer
          format: enum
        sendMessage:
          type: integer
          format: enum
        archiveRoom:
          type: integer
          format: enum
      description: room confirmation settings
    api.commons.Rule:
      type: object
      properties:
        verb:
          type: integer
          format: enum
        entity:
          type: integer
          format: enum
        subEntity:
          type: integer
          format: enum
        selectors:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Selector'
        ruleText:
          type: string
    api.commons.RuleResponse:
      type: object
      properties:
        ruleText:
          type: string
          description: the rule text
        permit:
          type: boolean
          description: indicates if the rule allowed or denied the request
        pluginResponse:
          type: string
          description: the response from the plugin
    api.commons.SLATimeouts:
      type: object
      properties:
        t1:
          type: string
          description: max amount of time in seconds that it should take for an agent
            to respond to a customer message. Will reset after each customer response.
        t2:
          type: string
          description: amount of time in seconds the conversation takes space in an
            agent's queue waiting for a customer's response
        t3:
          type: string
          description: amount of time in seconds that the frontend system will wait
            for an agent response before a conversation gets reassigned
        t10:
          type: string
          description: amount of time in seconds that the backend system will wait
            for an agent response before a conversation gets reassigned
        t11:
          type: string
          description: amount of time in seconds that the backend system will wait
            for a customer response before a conversation gets closed
        t12:
          type: string
          description: amount of time in seconds that the backend system will wait
            until a unassigned conversation is closed timeout
    api.commons.ScenarioData:
      type: object
      properties:
        commType:
          $ref: '#/components/schemas/api.commons.CommType'
        phoneNumber:
          type: string
        countryCode:
          type: string
        email:
          type: string
        callMetadata:
          type: object
          additionalProperties:
            type: string
        timeOfCall:
          type: string
          format: date-time
        frequencyCount:
          type: string
        frequencyDuration:
          type: string
        dnclBlocks:
          type: boolean
        country:
          type: string
        state:
          type: string
        county:
          type: string
        city:
          type: string
        province:
          type: string
        phoneType:
          type: integer
          format: enum
        timeZone:
          type: string
          description: time_zone uses the iana timezone format. Defaults to utc
        holidays:
          type: array
          items:
            type: string
        countryCodeData:
          $ref: '#/components/schemas/api.commons.CountryCode'
    api.commons.ScenarioResult:
      type: object
      properties:
        passedValue:
          type: boolean
        shouldAllowResponses:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ScenarioRuleResponse'
        shouldDenyResponses:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ScenarioRuleResponse'
        scenarioName:
          type: string
    api.commons.ScenarioRuleResponse:
      type: object
      properties:
        ruleText:
          type: string
        permitValue:
          type: boolean
    api.commons.ScheduleSelector:
      type: object
      properties:
        scheduleSid:
          type: string
          description: ID of the schedule to select, not needed for Published schedules.
        scheduleType:
          type: integer
          description: Type of the schedule to select.
          format: enum
      description: Filter for schedule selection.
    api.commons.SchedulingResultMetric:
      type: object
      properties:
        totalInternalIntervals:
          type: integer
          description: The total number of minute-width intervals that were scheduled
            and measured.
          format: int32
        totalIntervalsWithFteRequired:
          type: integer
          description: The total number of minute-width intervals that had enough
            scheduled ftes to meet the predicted call FTEs.
          format: int32
        totalIntervalsWithFtesRemaining:
          type: integer
          description: The total number of intervals that have unmet predicted call
            FTEs (not enough scheduled FTEs).
          format: int32
        coverage:
          type: number
          description: "The average ratio of interval metrics (min(1,  scheduled/predicted)).
            A value of 1 means every interval\n    with predicted call FTEs has enough
            scheduled FTEs to meet requirements."
          format: float
        rootMeanSquare:
          type: number
          description: Root Mean Square metric for predicted - scheduled FTEs.
          format: float
        hasResult:
          type: boolean
          description: Set to TRUE if this object contains valid metrics.
        metricsBySkillCollection:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SchedulingResultMetricForSkillCollection'
          description: Per-skill metrics.
      description: "Defines a Scheduling Result Metric from the Scheduler.\n Wanted
        to define this in api.v1alpha1.wfm, but had a backwards compatibility error
        trying to move it there."
    api.commons.SchedulingResultMetricForSkillCollection:
      type: object
      properties:
        totalInternalIntervals:
          type: integer
          description: The total number of minute-width intervals that were scheduled
            and measured.
          format: int32
        totalIntervalsWithFteRequired:
          type: integer
          description: The total number of minute-width intervals that had enough
            scheduled ftes to meet the predicted call FTEs.
          format: int32
        totalIntervalsWithFtesRemaining:
          type: integer
          description: The total number of intervals that have unmet predicted call
            FTEs (not enough scheduled FTEs).
          format: int32
        coverage:
          type: number
          description: "The average ratio of interval metrics (min(1,  scheduled/predicted)).
            A value of 1 means every interval\n    with predicted call FTEs has enough
            scheduled FTEs to meet requirements."
          format: float
        rootMeanSquare:
          type: number
          description: Root Mean Square metric for predicted - scheduled FTEs.
          format: float
        hasResult:
          type: boolean
          description: Set to TRUE if this object contains valid metrics.
        skillCollection:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Pointer to skill collection.
      description: "Defines the per-skill metrics for SchedulingResultMetric from
        the Scheduler.\n Wanted to define this in api.v1alpha1.wfm, but had a backwards
        compatibility error trying to move SchedulingResultMetric.\n Not a top-level
        entity:\n * No primary-key field.\n * No org_id field.\n * No rpc endpoints,
        part of SchedulingResultMetric only."
    api.commons.Scorecard:
      type: object
      properties:
        scorecardId:
          type: string
        authorId:
          type: string
        title:
          type: string
        description:
          type: string
        passScore:
          type: number
          format: double
        scoreType:
          type: integer
          format: enum
        evaluationType:
          type: integer
          format: enum
        allowFeedback:
          type: boolean
        distributeWeights:
          type: boolean
        category:
          $ref: '#/components/schemas/api.commons.Category'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Section'
        version:
          type: integer
          format: int32
        state:
          type: integer
          format: enum
        isAdHoc:
          type: boolean
        customFieldKeys:
          type: array
          items:
            type: string
        callTypes:
          type: array
          items:
            type: integer
            format: enum
        updatedAt:
          type: string
          format: date-time
      description: "Scorecard represents a scorecard (template).\n A scorecard can
        be used to score a call."
    api.commons.ScorecardQuestion:
      type: object
      properties:
        scorecardQuestionId:
          type: string
        question:
          type: string
        description:
          type: string
        questionId:
          type: string
        allowSkip:
          type: boolean
        answers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ScorecardQuestion_Answer'
        multiSelect:
          $ref: '#/components/schemas/api.commons.ScorecardQuestion_MultiSelect'
        scorecardId:
          type: string
        sectionId:
          type: string
        version:
          type: integer
          format: int32
        sortOrder:
          type: integer
          format: int32
      description: ScorecardQuestion represents a question inside of a scorecard.
    api.commons.ScorecardQuestion_Answer:
      type: object
      properties:
        answerOption:
          type: string
        points:
          type: integer
          format: uint32
        failType:
          type: integer
          format: enum
        answerPoints:
          type: integer
          format: int32
      description: Answer are all the possible answers for a scorecard question.
    api.commons.ScorecardQuestion_MultiSelect:
      type: object
      properties:
        maxPoints:
          type: string
          description: "Maximum points to award to the question.\n If not set, maximum
            points is sum of all answer options."
      description: MultiSelect sets parameters for multi-select answer types.
    api.commons.ScrubEntryDetails:
      type: object
      properties:
        content:
          type: string
          description: entry content (phone number, sms, email ...)
        expirationDate:
          type: string
          description: date when entry should expire
          format: date-time
        notes:
          type: string
      description: Scrub entry details information
    api.commons.Section:
      type: object
      properties:
        sectionId:
          type: string
        scorecardId:
          type: string
        title:
          type: string
        description:
          type: string
        weight:
          type: integer
          format: uint32
        questions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ScorecardQuestion'
        version:
          type: integer
          format: int32
        sortOrder:
          type: integer
          format: int32
        autoQuestions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AutoQuestion'
        smartQuestions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SmartQuestion'
      description: Section represents a section of a scorecard (template).
    api.commons.Selector:
      type: object
      properties:
        time:
          $ref: '#/components/schemas/api.commons.TimeExp'
        week:
          $ref: '#/components/schemas/api.commons.WeekdayExp'
        dncl:
          $ref: '#/components/schemas/api.commons.DnclExp'
        frequency:
          $ref: '#/components/schemas/api.commons.FrequencyExp'
        location:
          $ref: '#/components/schemas/api.commons.LocationExp'
        phoneType:
          $ref: '#/components/schemas/api.commons.PhoneTypeExp'
        month:
          $ref: '#/components/schemas/api.commons.MonthExp'
        date:
          $ref: '#/components/schemas/api.commons.DateExp'
        holiday:
          $ref: '#/components/schemas/api.commons.HolidayExp'
        meta:
          $ref: '#/components/schemas/api.commons.MetaFieldExp'
        plugin:
          $ref: '#/components/schemas/api.commons.PluginExp'
    api.commons.SendStatusAsmEvent:
      type: object
      properties: {}
      description: Indicate that the status has changed
    api.commons.SendStatusEvent:
      type: object
      properties:
        status:
          type: integer
          description: the status to send
          format: enum
      description: Indicate that the status has changed
    api.commons.SentMessageAsmEvent:
      type: object
      properties:
        responseTimeSeconds:
          type: string
          description: "the time between the first customer message from the last
            set of customer messages and the current agent message\n this will be
            0 for subsequest agent messages. i.e. the agent sends more than one message
            before the customer respnds"
        isInitialAgentMessage:
          type: boolean
          description: if this is the first agent message in this set of agent messages
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: which conversation this message was sent in
    api.commons.SentMessageEvent:
      type: object
      properties:
        responseTimeSeconds:
          type: string
          description: "the time between the first customer message from the last
            set of customer messages and the current agent message\n this will be
            0 for subsequest agent messages. i.e. the agent sends more than one message
            before the customer respnds"
        isInitialAgentMessage:
          type: boolean
          description: if this is the first agent message in this set of agent messages
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: which conversation this message was sent in
    api.commons.Signature:
      type: object
      properties:
        signatureSid:
          type: string
          description: unique identifier for the signature
        signature:
          type: string
          description: the signature text
        dateCreated:
          type: string
          description: when the signature was created
          format: date-time
        dateModified:
          type: string
          description: when the signature was last updated
          format: date-time
        deletedOn:
          type: string
          description: when the signature was deleted (if ever)
          format: date-time
        name:
          type: string
          description: name for the signature
        description:
          type: string
          description: description for the signature
      description: Signature - a preset ending to outgoing messages
    api.commons.SimpleCallData:
      type: object
      properties:
        taskSid:
          type: string
        callSid:
          type: string
        taskGroupSid:
          type: string
        clientSid:
          type: string
        countrySid:
          type: string
        agentSid:
          type: string
        startTime:
          type: string
        callerId:
          type: string
        phoneNumber:
          type: string
        countryCode:
          type: string
        deliveryDuration:
          type: integer
          format: int32
        linkCallDuration:
          type: integer
          format: int32
        result:
          type: integer
          format: enum
        sipCode:
          type: integer
          format: int32
        doRecord:
          type: boolean
        recordingFileName:
          type: string
        isDialValidationOk:
          type: boolean
          description: "WARNING: don't delete these fields randomly, the frontend
            checks the inverse\n so reserved fields will trigger a false positive
            for the scrub. Most likely you\n will need to hardcode the value to True
            in matrix-api (like custom calling rules)"
        isTimeZoneScrubOk:
          type: boolean
        isCellPhoneScrubOk:
          type: boolean
        isCustomCallingRulesScrubOk:
          type: boolean
        isDnclScrubOk:
          type: boolean
        useGlobalTimeZoneScrub:
          type: boolean
        doCellPhoneScrub:
          type: boolean
        doDnclScrub:
          type: boolean
        callDataType:
          type: string
        callerIdCountryCode:
          type: string
        callerIdCountrySid:
          type: string
        zipCode:
          type: string
        isPreviewByRecord:
          type: boolean
        ruleSetName:
          type: string
        isNaturalComplianceOk:
          type: boolean
        simpleMetaData:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SimpleKeyValue'
        simpleResultMetaData:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SimpleKeyValue'
    api.commons.SimpleKeyValue:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    api.commons.SimpleRecordData:
      type: object
      properties:
        taskSid:
          type: string
        taskGroupSid:
          type: string
        agentSid:
          type: string
        startTime:
          type: string
          format: date-time
        stopTime:
          type: string
          format: date-time
    api.commons.SimpleSmsMamData:
      type: object
      properties:
        src:
          type: string
        dst:
          type: string
        msg:
          type: string
        smsGroupSid:
          type: string
        smsTaskSid:
          type: string
        isTollFree:
          type: string
        isTimeZone:
          type: string
        providerName:
          type: string
        huntGroupSid:
          type: string
        clientSid:
          type: string
        simpleSmsMamMetaData:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SimpleSmsMamKeyValue'
        dstCountryCode:
          type: string
    api.commons.SimpleSmsMamKeyValue:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    api.commons.SkillProfileCategory:
      type: object
      properties:
        skillProfileCategorySid:
          type: string
          description: ID of either a skill profile or a skill profile group determined
            by @skill_profile_category_type.
        skillProfileCategoryType:
          type: integer
          description: Category type for @skill_profile_category_sid.
          format: enum
      description: Indetifier for a skill profile category.
    api.commons.Skills:
      type: object
      properties:
        skillId:
          type: string
        isPreferred:
          type: boolean
          description: Mandatory = 0, Preferred = 1
      description: Skills - Field for a skill set assigned to a ticket
    api.commons.Sla:
      type: object
      properties:
        conditionSid:
          type: string
        slaSid:
          type: string
        slaMin:
          type: string
        slaDuration:
          $ref: '#/components/schemas/api.commons.Duration'
      description: Sla - Field for a sla set assigned to a ticket
    api.commons.SlaConditions:
      type: object
      properties:
        slaConditionSid:
          type: string
          description: The snowflake id of a comment row in ticket_comment.
        slaConditionName:
          type: string
          description: The name.
      description: SlaConditions - Condition Fields for sla on a ticket
    api.commons.SmartEvaluation:
      type: object
      properties:
        smartEvaluationId:
          type: string
        scorecardId:
          type: string
        transcriptSid:
          type: string
        agentUserId:
          type: string
        score:
          type: number
          format: double
        scoringVersion:
          type: integer
          format: int32
        scorecardVersion:
          type: integer
          format: int32
        completeTime:
          type: string
          format: date-time
        deleteTime:
          type: string
          format: date-time
        smartEvaluationSections:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SmartEvaluationSection'
      description: SmartEvaluation represents an evaluated transcript using a smart
        scorecard.
    api.commons.SmartEvaluationQuestion:
      type: object
      properties:
        smartQuestionId:
          type: string
        points:
          type: integer
          format: int32
        possiblePoints:
          type: integer
          format: int32
        answer:
          $ref: '#/components/schemas/api.commons.SmartEvaluationQuestion_Answer'
        createTime:
          type: string
          format: date-time
        deleteTime:
          type: string
          format: date-time
      description: SmartEvaluationQuestion represents the results of an evaluated
        smart question.
    api.commons.SmartEvaluationQuestion_Answer:
      type: object
      properties:
        answer:
          type: string
        points:
          type: integer
          format: uint32
        failType:
          type: integer
          format: enum
        answerPoints:
          type: integer
          format: int32
      description: Answer represents a single answer, including the associated score
        impact.
    api.commons.SmartEvaluationSection:
      type: object
      properties:
        sectionId:
          type: string
        points:
          type: integer
          format: int32
        possiblePoints:
          type: integer
          format: int32
        createTime:
          type: string
          format: date-time
        deleteTime:
          type: string
          format: date-time
        smartEvaluationQuestions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SmartEvaluationQuestion'
      description: SmartEvaluationSection represents a section of a smart evaluation
        containing question(s).
    api.commons.SmartQuestion:
      type: object
      properties:
        smartQuestionId:
          type: string
        scorecardId:
          type: string
        sectionId:
          type: string
        questionId:
          type: string
        description:
          type: string
        question:
          type: string
        answers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SmartQuestion_Answer'
        focus:
          type: integer
          format: enum
        sortOrder:
          type: integer
          format: int32
      description: SmartQuestion represents a question inside of a smart scorecard.
    api.commons.SmartQuestion_Answer:
      type: object
      properties:
        answer:
          type: string
        points:
          type: integer
          format: int32
        failType:
          type: integer
          format: enum
      description: Answer represents a single answer, including the associated score
        impact.
    api.commons.SmsNumber:
      type: object
      properties:
        number:
          type: string
          description: string representation of the sms number
        type:
          type: integer
          description: the type of sms number (Alphanumeric|Short Code|Number)
          format: enum
        provider:
          type: integer
          description: associated provider (Bandwidth|BurstSMS|etc.)
          format: enum
        countryCode:
          type: integer
          description: country code the sms number belongs to
          format: int32
      description: SmsNumber
    api.commons.SmsbackContext:
      type: object
      properties:
        contactName:
          type: string
        toSms:
          type: string
        fromSms:
          type: string
        toCountryCode:
          type: string
        fromCountryCode:
          type: string
      description: Message for SMS Callback Context
    api.commons.Status:
      type: object
      properties:
        code:
          type: integer
          description: The status code
          format: int32
        message:
          type: string
          description: A developer-facing error message, which should be in English
      description: This is based on googles status proto message
    api.commons.StreamAgentStateRes:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/api.commons.AgentState'
        heartBeat:
          $ref: '#/components/schemas/api.commons.KeepAlive'
        callQueueAdd:
          $ref: '#/components/schemas/api.commons.QueueCallAdd'
        callQueueRemove:
          $ref: '#/components/schemas/api.commons.QueueCallRemove'
    api.commons.StringArraySql:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    api.commons.TemplateDescription:
      type: object
      properties:
        ticketTemplateId:
          type: string
        templateName:
          type: string
    api.commons.Ticket:
      type: object
      properties:
        ticketSid:
          type: string
          description: The snowflake id of a ticket row
        projectSid:
          type: string
          description: The imported/enabled ticket_project project_sid from omni.project
        projectTitle:
          type: string
          description: project_title
        ticketCode:
          type: string
          description: A globally distributable, custom sequence generated per-project-per-month
            for a ticket row.
        title:
          type: string
          description: The title of the ticket
        description:
          type: string
          description: The description of the ticket
        orgId:
          type: string
          description: The org where the created was created
        createdById:
          type: string
          description: The userId (uuid) who created the ticket
        createdByName:
          type: string
          description: The created_by_name from omni.project
        createdByDate:
          type: string
          description: The created Date of the Ticket Object
          format: date-time
        dueDate:
          type: string
          description: due-date
          format: date-time
        assigneeList:
          type: string
          description: A list of users assigned to this ticket.
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Metadata'
          description: A list of conversation context meatadata
        ticketSkills:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Skills'
          description: A list of skills assotiated with a ticket
        status:
          type: string
          description: 'Status - Ticket status : 1 open, 2 doing, 3 close etc'
        ticketSla:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Sla'
          description: A list of sla  assotiated with a ticket
        assignee:
          type: string
          description: To be deprecated
        ticketAction:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.TicketAction'
          description: A set of Action associated with a Project
        ticketStatus:
          type: integer
          description: Status of the ticket - NEW,OPEN,CLOSED
          format: enum
        ticketAssignee:
          type: array
          items:
            type: string
          description: assignee list
        ticketParticipant:
          type: array
          items:
            type: string
          description: participant list - Any user who participates in the ticket
            life cycle
      description: Ticket - Fields for Ticket creation, List tickets and view ticket
    api.commons.TicketAction:
      type: object
      properties:
        ticketActionId:
          type: string
          description: snowflake id
        actionId:
          type: string
          description: action id from ACTION_MASTER table, Only callback for now
        callbackContext:
          allOf:
          - $ref: '#/components/schemas/api.commons.CallbackContext'
          description: "Attributes for a callback Action\n To be Deprecated Later"
        ticketId:
          type: string
          description: ticket id from ticket table
        startTs:
          type: string
          description: Start Date of the ACTION
          format: date-time
        expiryTs:
          type: string
          description: Expiry date of the ACTION
          format: date-time
        state:
          type: string
          description: Ticket action status can be 1 == AVAILABLE and 2 == NOT AVAILABLE
        actionSkills:
          type: array
          items:
            type: string
          description: "Skills needed for the action to be completed\n For action
            we need only skill id and not mandatory/optional"
        actionSlaId:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Sla'
          description: SLA Id for the ACTION
        workDoneBy:
          type: string
          description: work done by
        voiceContext:
          allOf:
          - $ref: '#/components/schemas/api.commons.CallbackContext'
          description: Voice Callback Context
        smsContext:
          allOf:
          - $ref: '#/components/schemas/api.commons.SmsbackContext'
          description: SMS Callback Context
        emailContext:
          allOf:
          - $ref: '#/components/schemas/api.commons.EmailbackContext'
          description: Email Callback Context
        actionType:
          allOf:
          - $ref: '#/components/schemas/api.commons.ActionType'
          description: Action Type
        ticketCode:
          type: string
          description: ticket_code
      description: TICKET_ACTION - New messgae have actions mapped to tickets
    api.commons.TicketProject:
      type: object
      properties:
        ticketProjectId:
          type: string
          description: Seq Id of project entry
        orgId:
          type: string
          description: Logged in user's Org
        projectSid:
          type: string
          description: Seq Id of Project from Omni
        projectCode:
          type: string
          description: 3 to 5 letter User entered Project Code
        projectTitle:
          type: string
          description: Project Title as in omni
        isActive:
          type: boolean
          description: Indicates if Project is enabled in ticketing system
        templateDesc:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.TemplateDescription'
          description: Added ticket template ID & add in DB too
      description: TicketProject - Fields for Project setting in ticketing system
    api.commons.TicketProjectTemplate:
      type: object
      properties:
        ticketTemplate:
          $ref: '#/components/schemas/api.commons.TicketTemplate'
        projectDescription:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ProjectDescription'
      description: "Mapping of Template to a Project\n Each Ticket Template Can be
        mapped to Multiple Projects - In ListTicketTemplateRequest we need all Template
        To\n Project Mapping"
    api.commons.TicketSla:
      type: object
      properties:
        slaSid:
          type: string
          description: The snowflake id of a comment row in ticket_comment.
        name:
          type: string
          description: The name.
        description:
          type: string
          description: The description text
        interval:
          type: string
          description: interval
        isActive:
          type: string
          description: Indicates sla is enable or disable
        ticketSlaDuration:
          $ref: '#/components/schemas/api.commons.Duration'
      description: TicketSla - Fields for sla on a ticket
    api.commons.TicketTemplate:
      type: object
      properties:
        ticketTemplateId:
          type: string
          description: Deprecated
        orgId:
          type: string
          description: Organization ID
        template:
          type: string
          description: A formatted string which the FE uses to retrieve all template
            related information
        templateEntityVersion:
          type: string
          description: Version of the Template
        templateName:
          type: string
          description: Name of the Template
        createdById:
          type: string
          description: Template created by user
        modifiedBy:
          type: string
          description: Template modified by user
        createdDate:
          type: string
          description: Template create date
          format: date-time
        modifiedDate:
          type: string
          description: Template modified date
          format: date-time
        isActive:
          type: boolean
          description: True/False Identifies if a template is active or inactive
        templateId:
          type: string
          description: Snowflake Id of Ticket Template
      description: Ticket Template
    api.commons.TimeExp:
      type: object
      properties:
        startHour:
          type: string
        endHour:
          type: string
    api.commons.TimeFilter:
      type: object
      properties:
        eq:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        lt:
          type: string
          format: date-time
      description: "TimeFilter allows optional filtering by timestamp\n Multple fields
        are ANDed together."
    api.commons.TimeZoneWrapper:
      type: object
      properties:
        value:
          type: integer
          format: enum
    api.commons.TransferMember:
      type: object
      properties:
        identifier:
          type: string
        displayLabel:
          type: string
        memberType:
          type: integer
          format: enum
        agentSession:
          $ref: '#/components/schemas/api.commons.AgentSession'
        callerSid:
          $ref: '#/components/schemas/api.commons.CallerSid'
        outboundId:
          type: string
    api.commons.TransferOptions:
      type: object
      properties:
        transferConfigSid:
          type: string
          description: transfer_config_sid is the delivery definition used to deliver
            reports.
        filenameParts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.FilenamePart'
          description: filename_parts are the parts to build the filename.
      description: TransferOptions is a message for the transfer options of a report.
    api.commons.UserSid:
      type: object
      properties:
        userId:
          type: string
          description: id of the user
        fullName:
          type: string
          description: name of the user
        displayName:
          type: string
          description: name of the user
    api.commons.VerifiedEmail:
      type: object
      properties:
        verifiedEmailSid:
          type: string
          description: verified email identifier
        emailAddress:
          type: string
          description: connected email address
        verified:
          type: boolean
          description: if the email has been verified
        createdOn:
          type: string
          description: when the verified email was created
          format: date-time
        verifiedOn:
          type: string
          description: when the email was verified
          format: date-time
        deleted:
          type: boolean
          description: if the email was deleted
        description:
          type: string
          description: description of the email
      description: VerifiedEmail -
    api.commons.WeekdayExp:
      type: object
      properties:
        day:
          type: integer
          format: enum
        text:
          type: string
    api.commons.WeekdayTimeRange:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.WeekdayTimeRangeEntry'
          description: the group of time ranges
      description: WeekdayTimeRange - a group of time range entries
    api.commons.WeekdayTimeRangeEntry:
      type: object
      properties:
        startDay:
          type: integer
          description: the day the span starts
          format: enum
        startHour:
          type: string
          description: the hour the range starts
        startMinute:
          type: string
          description: the minute the range starts
        endDay:
          type: integer
          description: the day the span ends
          format: enum
        endHour:
          type: string
          description: the hour the range ends
        endMinute:
          type: string
          description: the minute the range ends
      description: WeekdayTimeRangeEntry - an entry defining the same time range over
        a span of one or more days
    api.commons.WhatsAppNumber:
      type: object
      properties:
        number:
          type: string
          description: string representation of the whatsapp number
        provider:
          type: integer
          description: associated provider (whatsappsms)
          format: enum
        countryCode:
          type: integer
          description: country code the whatsapp number belongs to
          format: int32
        whatsappNumberSid:
          type: string
          description: the whatsapp number identifier
        displayName:
          type: string
          description: the display name
        dateCreated:
          type: string
          description: the time the whatsapp_number was created
          format: date-time
        dateModified:
          type: string
          description: the time the whatsapp_number was last modified
          format: date-time
      description: WhatsAppNumber
    api.commons.audit.AgentTrainingCreateLearningOpportunityEvent:
      type: object
      properties:
        learningOpportunity:
          $ref: '#/components/schemas/api.commons.LearningOpportunity'
      description: AgentTrainingCreateLearningOpportunityEvent - when a learning opportunity
        is created
    api.commons.audit.AsmActivateConversationEvent:
      type: object
      properties:
        userId:
          type: string
          description: the id of the agent
        asmSessionSid:
          type: string
          description: the session sid generated when the agent logged into asm
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: the conversation being activated
      description: AsmActivateConversationEvent - whenever an agent activates a conversation
    api.commons.audit.AsmAgentLoginEvent:
      type: object
      properties:
        userId:
          type: string
          description: the agent's ID
        asmSessionSid:
          type: string
          description: the asm session sid generated when the agent logged in
      description: AsmAgentLoginEvent - whenever an agent logs into asm
    api.commons.audit.AsmAgentLogoutEvent:
      type: object
      properties:
        userId:
          type: string
          description: the id of the agent
        asmSessionSid:
          type: string
          description: the session sid generated when the agent logged into asm
        reason:
          type: string
          description: the reason for logging out
      description: AsmAgentLogoutEvent - whenever an agent logs out of asm
    api.commons.audit.AsmAgentStateChangedEvent:
      type: object
      properties:
        userId:
          type: string
          description: the id of the agent
        asmSessionSid:
          type: string
          description: the session sid generated when the agent logged into asm
        newStatus:
          type: integer
          description: the agent's new status
          format: enum
        oldStatus:
          type: integer
          description: the agent's old status
          format: enum
        oldStatusDurationMilliseconds:
          type: string
          description: duration of old status in milliseconds
      description: AsmAgentStateChangedEvent - whenever an agent's state changes
    api.commons.audit.AsmConversationPulledEvent:
      type: object
      properties:
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: the conversation pulled
      description: AsmConversationPulledEvent -
    api.commons.audit.AsmDeactivateConversationEvent:
      type: object
      properties:
        userId:
          type: string
          description: the id of the agent
        asmSessionSid:
          type: string
          description: the session sid generated when the agent logged into asm
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: the conversation being deactivated
      description: AsmDeactivateConversationEvent - whenever agent deactivates a conversation
    api.commons.audit.AsmOpenOmniAgentEvent:
      type: object
      properties:
        userId:
          type: string
          description: the id of the agent
        asmSessionSid:
          type: string
          description: the session sid generated when the agent logged into asm
      description: AsmOpenOmniAgentEvent - whenever an agent logs into omni agent
    api.commons.audit.AsmOpenVoiceEvent:
      type: object
      properties:
        userId:
          type: string
          description: the id of the agent
        asmSessionSid:
          type: string
          description: the session sid generated when agent logged into asm
        voiceSessionSid:
          type: string
          description: the session sid generated when voice started
      description: AsmOpenVoiceEvent - whenever an agent opens voice
    api.commons.audit.AsmPauseEvent:
      type: object
      properties:
        userId:
          type: string
          description: the id of the agent
        asmSessionSid:
          type: string
          description: the session sid generated when the agent logged into asm
      description: AsmPauseEvent -
    api.commons.audit.AsmResumeEvent:
      type: object
      properties:
        userId:
          type: string
          description: the id of the agent
        asmSessionSid:
          type: string
          description: the session sid generated when the agent logged into asm
      description: AsmResumeEvent -
    api.commons.audit.AuditEvent:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID
        regionId:
          type: string
          description: Region ID
        clusterId:
          type: string
          description: Cluster ID
        eventTime:
          type: string
          description: Timestamp when this event has been generated
          format: date-time
        auditId:
          type: string
          description: this is an UUID so we can deduplicate at consumer side
        eventType:
          type: integer
          description: "Application-specific identifier.\n All aplications that generate
            audit events must have a unique numerical ID assigned within a specific
            event class\n Vana 200 Omni 300 Asm 400 ....\n for each event type. (see
            event_types.proto)"
          format: enum
        DummyEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.DummyEvent'
          description: / Dummy Event class 100
        vanaFlagEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.VanaFlagEvent'
          description: / Voice Analytics Events 200
        vanaFlagReviewEvent:
          $ref: '#/components/schemas/api.commons.audit.VanaFlagReviewEvent'
        vanaBillingReportEvent:
          $ref: '#/components/schemas/api.commons.audit.VanaBillingReportEvent'
        vanaFlagSummaryEvent:
          $ref: '#/components/schemas/api.commons.audit.VanaFlagSummaryEvent'
        vanaPhraseCorrectionEvent:
          $ref: '#/components/schemas/api.commons.audit.VanaPhraseCorrectionEvent'
        vanaCreateTranscriptEvent:
          $ref: '#/components/schemas/api.commons.audit.VanaCreateTranscriptEvent'
        omnichannelCreateProjectEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelCreateProjectEvent'
          description: / Omnichannel Events class 300
        omnichannelCreateCampaignEvent:
          $ref: '#/components/schemas/api.commons.audit.OmnichannelCreateCampaignEvent'
        omnichannelDailyProjectReportEvent:
          $ref: '#/components/schemas/api.commons.audit.OmnichannelDailyProjectReportEvent'
        omnichannelDailyConversationReportEvent:
          $ref: '#/components/schemas/api.commons.audit.OmnichannelDailyConversationReportEvent'
        omnichannelAgentAssignConversationEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelAgentAssignConversationEvent'
          description: agent assign conversation event
        omnichannelAgentUnassignConversationEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelAgentUnassignConversationEvent'
          description: agent unassign conversation event
        omnichannelAgentReassignConversationEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelAgentReassignConversationEvent'
          description: agent reassign conversation event
        omnichannelT10Event:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelT10Event'
          description: T10 event
        omnichannelCustomerTextMessageEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelCustomerTextMessageEvent'
          description: customer sent a text message event
        omnichannelAgentTextMessageEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelAgentTextMessageEvent'
          description: agent sent a text message event
        omnichannelFinishWrapUpEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelFinishWrapUpEvent'
          description: finish wrap up event
        omnichannelBeginWrapUpEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelBeginWrapUpEvent'
          description: conversation closes and moves to wrap up event
        omnichannelT11Event:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelT11Event'
          description: t11 timer went off event
        omnichannelCreateConversationEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelCreateConversationEvent'
          description: create conversation when customer sends initial message and
            T1 starts
        omnichannelAgentSuspendEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelAgentSuspendEvent'
          description: agent suspended the conversation event
        omnichannelCloseConversationEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelCloseConversationEvent'
          description: close conversation
        omnichannelManagerTextMessageEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelManagerTextMessageEvent'
          description: manager sent a text message event
        omnichannelUpdateCampaignEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelUpdateCampaignEvent'
          description: update campaign event
        omnichannelSetConversationCollectedDataEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelSetConversationCollectedDataEvent'
          description: set conversation collected data details
        omnichannelCompleteCampaignEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelCompleteCampaignEvent'
          description: complete campaign event
        omnichannelArchiveCampaignEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelArchiveCampaignEvent'
          description: archive campaign event
        omnichannelPauseCampaignEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelPauseCampaignEvent'
          description: pause campaign event
        omnichannelResumeCampaignEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelResumeCampaignEvent'
          description: resume campaign event
        omnichannelStartCampaignEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelStartCampaignEvent'
          description: start campaign event
        omnichannelScheduleModuleEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelScheduleModuleEvent'
          description: schedule module event
        omnichannelStartModuleEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelStartModuleEvent'
          description: start module event
        omnichannelPauseModuleEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelPauseModuleEvent'
          description: pause module event
        omnichannelResumeModuleEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelResumeModuleEvent'
          description: resume module event
        omnichannelErrorModuleEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelErrorModuleEvent'
          description: error module event
        omnichannelSuccessModuleEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelSuccessModuleEvent'
          description: success module event
        omnichannelFailModuleEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelFailModuleEvent'
          description: fail module event
        omnichannelCompleteModuleEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelCompleteModuleEvent'
          description: complete module event
        omnichannelArchiveModuleEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelArchiveModuleEvent'
          description: archive module event
        omnichannelUpdateModuleEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelUpdateModuleEvent'
          description: update module event
        omnichannelAddSmsMessageSentModuleEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelSmsMessageSentModuleEvent'
          description: SmsMessageSent module event
        omnichannelModuleInitialReplyEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelModuleInitialReplyEvent'
          description: ModuleInitialReply
        omnichannelTaskMessageSentEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelTaskMessageSentEvent'
          description: a task message was sent for a campaign
        omnichannelConnectedInboxPollEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelConnectedInboxPollEvent'
          description: a connected inbox poll event
        omnichannelConnectedInboxCreatedEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelConnectedInboxCreatedEvent'
          description: an event for when a connected inbox is created
        omnichannelAgentMessageUnitsEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelAgentMessageUnitsEvent'
          description: an event for when the message units for an agent omni message
            were calculated
        omnichannelManagerMessageUnitsEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelManagerMessageUnitsEvent'
          description: an event for when the message units for a manager omni message
            were calculated
        omnichannelCustomerMessageUnitsEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelCustomerMessageUnitsEvent'
          description: an event for when the message units for a customer omni message
            were calculated
        omnichannelSystemMessageUnitsEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelSystemMessageUnitsEvent'
          description: an event for when the message units for a system omni message
            were calculated
        omnichannelPaymentLinkSentEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelPaymentLinkSentEvent'
          description: an event for when a payment link is sent
        omnichannelManualApproveTaskAcceptedEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelManualApproveTaskAcceptedEvent'
          description: accepted manual approve task
        omnichannelManualApproveTaskRejectedEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelManualApproveTaskRejectedEvent'
          description: rejected manual approve task
        omnichannelManualApproveTaskTimeoutEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelManualApproveTaskTimeoutEvent'
          description: timeout of manual approve task
        omnichannelManualApproveTaskRequeueEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelManualApproveTaskRequeueEvent'
          description: requeue of manual approve task
        omnichannelTranscriptSavedEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.OmnichannelTranscriptSavedEvent'
          description: transcript saved
        asmAgentLoginEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.AsmAgentLoginEvent'
          description: "/ Asm events 400\n agent logged into asm event"
        asmOpenVoiceEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.AsmOpenVoiceEvent'
          description: agent opens voice event
        asmOpenOmniAgentEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.AsmOpenOmniAgentEvent'
          description: agent logs into omni event
        asmActivateConversationEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.AsmActivateConversationEvent'
          description: agent activates conversation event
        asmDeactivateConversationEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.AsmDeactivateConversationEvent'
          description: agent deactivates a conversation event
        asmAgentStateChangedEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.AsmAgentStateChangedEvent'
          description: agent's state changed event
        asmAgentLogoutEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.AsmAgentLogoutEvent'
          description: agent logged out of asm event
        asmPauseEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.AsmPauseEvent'
          description: asm pause event
        asmResumeEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.AsmResumeEvent'
          description: asm resume event
        asmConversationPulledEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.AsmConversationPulledEvent'
          description: asm conversation pulled event
        scorecardsCreateQuestionEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsCreateQuestionEvent'
          description: "Scorecards events class 500\n question library question created"
        scorecardsUpdateQuestionEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsUpdateQuestionEvent'
          description: question library question updated
        scorecardsDeleteQuestionEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsDeleteQuestionEvent'
          description: question library question deleted
        scorecardsCreateScorecardEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsCreateScorecardEvent'
          description: scorecard library scorecard created
        scorecardsUpdateScorecardEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsUpdateScorecardEvent'
          description: scorecard library scorecard updated
        scorecardsDeleteScorecardEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsDeleteScorecardEvent'
          description: scorecard library scorecard deleted
        scorecardsCloneScorecardEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsCloneScorecardEvent'
          description: scorecard library scorecard cloned
        scorecardsCreateEvaluationEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsCreateEvaluationEvent'
          description: evaluation library evaluation created
        scorecardsDeleteEvaluationEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsDeleteEvaluationEvent'
          description: evaluation library evaluation deleted
        scorecardsCreateSectionEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsCreateSectionEvent'
          description: section library section created
        scorecardsUpdateSectionEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsUpdateSectionEvent'
          description: section library section updated
        scorecardsDeleteSectionEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsDeleteSectionEvent'
          description: section library section deleted
        scorecardsCreateCategoryEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsCreateCategoryEvent'
          description: category library category created
        scorecardsUpdateCategoryEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsUpdateCategoryEvent'
          description: category library category updated
        scorecardsDeleteCategoryEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsDeleteCategoryEvent'
          description: category library category deleted
        scorecardsCreateEvaluationQuestionEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsCreateEvaluationQuestionEvent'
          description: evaluation question created
        scorecardsUpdateEvaluationQuestionEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent'
          description: evaluation question updated
        scorecardsDeleteEvaluationQuestionEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent'
          description: evaluation question deleted
        scorecardsCreateScorecardQuestionEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsCreateScorecardQuestionEvent'
          description: scorecard question library scorecard question created
        scorecardsUpdateScorecardQuestionEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsUpdateScorecardQuestionEvent'
          description: scorecard question library scorecard question updated
        scorecardsDeleteScorecardQuestionEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsDeleteScorecardQuestionEvent'
          description: scorecard question library scorecard question deleted
        scorecardsCreateAutoEvaluationEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsCreateAutoEvaluationEvent'
          description: auto evaluation library auto evaluation created
        scorecardsUpdateEvaluationEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ScorecardsUpdateEvaluationEvent'
          description: evaluation library evaluation updated
        ticketEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.TicketEvent'
          description: "Tickets Events\n EDIT update event"
        complianceRndQueryEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ComplianceRndQueryEvent'
          description: "Compliance events\n compliance rnd query event"
        complianceRndQueryCachedEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ComplianceRndQueryEvent'
          description: compliance rnd query cached event
        agentTrainingCreateLearningOpportunityEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.AgentTrainingCreateLearningOpportunityEvent'
          description: "Agent Training events class 800\n learning opportunity created
            event"
        lmsPipelineFailureEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.LMSPipelineFailureEvent'
          description: LMS Events class 900
        lmsPipelineNoOutputEvent:
          $ref: '#/components/schemas/api.commons.audit.LMSPipelineNoOutputEvent'
        lmsPipelineSuccessfulEvent:
          $ref: '#/components/schemas/api.commons.audit.LMSPipelineSuccessfulEvent'
        billingCommitBillingPlanEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.BillingCommitBillingPlanEvent'
          description: Billing Events class 1000
        billingCreateBillingPlanEvent:
          $ref: '#/components/schemas/api.commons.audit.BillingCreateBillingPlanEvent'
        billingCreateInvoiceEvent:
          $ref: '#/components/schemas/api.commons.audit.BillingCreateInvoiceEvent'
        billingCreateRateDefinitionEvent:
          $ref: '#/components/schemas/api.commons.audit.BillingCreateRateDefinitionEvent'
        billingDeleteBillingPlanEvent:
          $ref: '#/components/schemas/api.commons.audit.BillingDeleteBillingPlanEvent'
        billingDeleteInvoiceEvent:
          $ref: '#/components/schemas/api.commons.audit.BillingDeleteInvoiceEvent'
        billingDeleteRateDefinitionEvent:
          $ref: '#/components/schemas/api.commons.audit.BillingDeleteRateDefinitionEvent'
        billingExportInvoiceEvent:
          $ref: '#/components/schemas/api.commons.audit.BillingExportInvoiceEvent'
        billingUpdateBillingPlanEvent:
          $ref: '#/components/schemas/api.commons.audit.BillingUpdateBillingPlanEvent'
        billingUpdateInvoiceEvent:
          $ref: '#/components/schemas/api.commons.audit.BillingUpdateInvoiceEvent'
        billingUpdateRateDefinitionEvent:
          $ref: '#/components/schemas/api.commons.audit.BillingUpdateRateDefinitionEvent'
        billingRatedItemsGeneratedEvent:
          $ref: '#/components/schemas/api.commons.audit.BillingRatedItemsGeneratedEvent'
        deliveryFailureEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.DeliveryFailureEvent'
          description: Delivery Events class 1100
        deliverySuccessEvent:
          $ref: '#/components/schemas/api.commons.audit.DeliverySuccessEvent'
        contactManagerEntryAddEvent:
          allOf:
          - $ref: '#/components/schemas/api.commons.audit.ContactManagerEntryAddEvent'
          description: Contact Manager event
        contactManagerEntryGetEncEvent:
          $ref: '#/components/schemas/api.commons.audit.ContactManagerEntryGetEncEvent'
        contactManagerDeleteEvent:
          $ref: '#/components/schemas/api.commons.audit.ContactManagerDeleteEvent'
        contactManagerKycEvent:
          $ref: '#/components/schemas/api.commons.audit.ContactManagerKycEvent'
        contactManagerEntryEditEvent:
          $ref: '#/components/schemas/api.commons.audit.ContactManagerEntryEditEvent'
        contactManagerListUploadEvent:
          $ref: '#/components/schemas/api.commons.audit.ContactManagerListUploadEvent'
        contactManagerKycVerificationEvent:
          $ref: '#/components/schemas/api.commons.audit.ContactManagerKycEvent'
        contactManagerEntryDeleteEvent:
          $ref: '#/components/schemas/api.commons.audit.ContactManagerDeleteEvent'
      description: This represents a generic audit event that is sent to the audit
        service
    api.commons.audit.BillingCommitBillingPlanEvent:
      type: object
      properties:
        billingPlanId:
          type: string
        userId:
          type: string
      description: BillingCommitBillingPlanEvent is fired when a billing plan is committed
    api.commons.audit.BillingCreateBillingPlanEvent:
      type: object
      properties:
        billingPlan:
          type: string
        userId:
          type: string
      description: BillingCreateBillingPlanEvent is fired when a billing plan is created
    api.commons.audit.BillingCreateInvoiceEvent:
      type: object
      properties:
        invoice:
          type: string
        userId:
          type: string
      description: BillingCreateInvoiceEvent is fired when an invoice is created
    api.commons.audit.BillingCreateRateDefinitionEvent:
      type: object
      properties:
        rateDefinition:
          type: string
        userId:
          type: string
      description: BillingCreateRateDefinitionEvent is fired when a rate definition
        is created
    api.commons.audit.BillingDeleteBillingPlanEvent:
      type: object
      properties:
        billingPlanId:
          type: string
        userId:
          type: string
      description: BillingDeleteBillingPlanEvent is fired when a billing plan is deleted
    api.commons.audit.BillingDeleteInvoiceEvent:
      type: object
      properties:
        invoiceId:
          type: string
        userId:
          type: string
      description: BillingDeleteInvoiceEvent is fired when an invoice is deleted
    api.commons.audit.BillingDeleteRateDefinitionEvent:
      type: object
      properties:
        rateDefinitionId:
          type: string
        userId:
          type: string
      description: BillingDeleteRateDefinitionEvent is fired when a rate definition
        is deleted
    api.commons.audit.BillingExportInvoiceEvent:
      type: object
      properties:
        invoiceId:
          type: string
        userId:
          type: string
      description: BillingExportInvoiceEvent is fired when an invoice is exported
    api.commons.audit.BillingRatedItemsGeneratedEvent:
      type: object
      properties:
        ratedItems:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.audit.BillingRatedItemsGeneratedEvent_RatedItem'
    api.commons.audit.BillingRatedItemsGeneratedEvent_RatedItem:
      type: object
      properties:
        ratedItemId:
          type: string
        billingCycle:
          type: string
        eventLogId:
          type: string
        moduleName:
          type: string
        orgId:
          type: string
        rateDefinitionId:
          type: string
        skuId:
          type: string
    api.commons.audit.BillingUpdateBillingPlanEvent:
      type: object
      properties:
        billingPlan:
          type: string
        userId:
          type: string
      description: BillingUpdateBillingPlanEvent is fired when a billing plan is updated
    api.commons.audit.BillingUpdateInvoiceEvent:
      type: object
      properties:
        invoice:
          type: string
        userId:
          type: string
      description: BillingUpdateInvoiceEvent is fired when an invoice is updated
    api.commons.audit.BillingUpdateRateDefinitionEvent:
      type: object
      properties:
        rateDefinition:
          type: string
        userId:
          type: string
      description: BillingUpdateRateDefinitionEvent is fired when a rate definition
        is updated
    api.commons.audit.ComplianceRndQueryEvent:
      type: object
      properties:
        orgId:
          type: string
        phoneNumber:
          type: string
        result:
          type: string
        dateLastContact:
          type: string
          format: date-time
      description: ComplianceRndQueryEvent - whenever a call is made to the reassigned
        numbers database service
    api.commons.audit.ContactManagerDeleteEvent:
      type: object
      properties:
        deleteEvent:
          $ref: '#/components/schemas/api.commons.audit.ContactManagerEntryEvent'
    api.commons.audit.ContactManagerEntryAddEvent:
      type: object
      properties:
        addEvent:
          $ref: '#/components/schemas/api.commons.audit.ContactManagerEntryEvent'
      description: payload for CreateContactEntry(upload) and AddContactEntry
    api.commons.audit.ContactManagerEntryEditEvent:
      type: object
      properties:
        editEvent:
          $ref: '#/components/schemas/api.commons.audit.ContactManagerEntryEvent'
    api.commons.audit.ContactManagerEntryEvent:
      type: object
      properties:
        ContactManagerListId:
          type: string
        ContactManagerEntryId:
          type: string
        ContactManagerEntryListIds:
          type: array
          items:
            type: string
      description: payload for add/edit/decrypt
    api.commons.audit.ContactManagerEntryGetEncEvent:
      type: object
      properties:
        viewEvent:
          $ref: '#/components/schemas/api.commons.audit.ContactManagerEntryEvent'
    api.commons.audit.ContactManagerKycEvent:
      type: object
      properties:
        ContactManagerListId:
          type: string
        ContactManagerEntryId:
          type: string
        types:
          type: array
          items:
            type: string
        ContactManagerEntryListIds:
          type: array
          items:
            type: string
      description: payload for decrypt of ContactManagerEntry during KYC
    api.commons.audit.ContactManagerListUploadEvent:
      type: object
      properties:
        ContactManagerListId:
          type: string
        NumberOfContactsUploaded:
          type: string
        NumberOfSuccessfulContactsUploaded:
          type: string
        NumberOfFailedContacts:
          type: string
        NumberOfNewContacts:
          type: string
        NumberOfDuplicateContacts:
          type: string
        DeDupFieldType:
          type: integer
          format: enum
        DeDupMergeStrategy:
          type: integer
          format: enum
      description: payload for contact list upload
    api.commons.audit.DeliveryFailureEvent:
      type: object
      properties:
        deliveryDefinitionName:
          type: string
        orgId:
          type: string
        transactionSid:
          type: string
        attachmentNames:
          type: array
          items:
            type: string
        failureTime:
          type: string
          format: date-time
        failureErrorMessage:
          type: string
        definition:
          type: string
        originalPayload:
          type: string
    api.commons.audit.DeliverySuccessEvent:
      type: object
      properties:
        deliveryDefinitionName:
          type: string
        orgId:
          type: string
        transactionSid:
          type: string
        attachmentNames:
          type: array
          items:
            type: string
        successTime:
          type: string
          format: date-time
        successMessage:
          type: string
    api.commons.audit.DummyEvent:
      type: object
      properties:
        message:
          type: string
    api.commons.audit.LMSPipelineFailureEvent:
      type: object
      properties:
        elementId:
          type: string
        elementName:
          type: string
        fileName:
          type: string
        failureMessage:
          type: string
    api.commons.audit.LMSPipelineNoOutputEvent:
      type: object
      properties:
        elementId:
          type: string
        elementName:
          type: string
        fileName:
          type: string
        eventMessage:
          type: string
    api.commons.audit.LMSPipelineSuccessfulEvent:
      type: object
      properties:
        elementId:
          type: string
        elementName:
          type: string
        fileName:
          type: string
        eventMessage:
          type: string
    api.commons.audit.OmnichannelAgentAssignConversationEvent:
      type: object
      properties:
        conversationSid:
          type: string
          description: conversation id
        campaignSid:
          type: string
          description: campaign id
        channelType:
          type: integer
          description: channel type - chat|email|sms
          format: enum
        userId:
          type: string
          description: agent user id
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation this message belongs to
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent by the agent
        asmSessionSid:
          type: string
          description: the AsmSession Sid
      description: OmnichannelAgentAssignConversationEvent - handle agent assign conversation
        event
    api.commons.audit.OmnichannelAgentMessageUnitsEvent:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the omni message
        messageUnits:
          type: integer
          description: the total number of messages sent
          format: int32
      description: Omnichannel
    api.commons.audit.OmnichannelAgentReassignConversationEvent:
      type: object
      properties:
        conversationSid:
          type: string
          description: conversation id
        campaignSid:
          type: string
          description: campaign id
        channelType:
          type: integer
          description: channel type - chat|email|sms
          format: enum
        userId:
          type: string
          description: manager/agent who initiated reassign
        currentUserId:
          type: string
          description: current agent who is being unassigned
        newUserId:
          type: string
          description: new agent who who is being assigned to
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation this message belongs to
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent by the agent
        newUserAsmSessionSid:
          type: string
          description: the AsmSession Sid
      description: OmnichannelAgentReassignConversationEvent - handle agent reassign
        conversation event
    api.commons.audit.OmnichannelAgentSuspendEvent:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the suspend message
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation this message belongs to
        asmSessionSid:
          type: string
          description: asm Session sid
      description: OmnichannelAgentSuspendEvent - whenever agent suspends the conversation
    api.commons.audit.OmnichannelAgentTextMessageEvent:
      type: object
      properties:
        conversationSid:
          type: string
          description: the unique identifier for the conversation
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent by the agent
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation this message belongs to
        asmSessionSid:
          type: string
          description: the AsmSession Sid
        userId:
          type: string
          description: the id of the agent
      description: OmnichannelAgentTextMessageEvent - whenever an agent send a text
        message
    api.commons.audit.OmnichannelAgentUnassignConversationEvent:
      type: object
      properties:
        conversationSid:
          type: string
          description: conversation id
        campaignSid:
          type: string
          description: campaign id
        channelType:
          type: integer
          description: channel type - chat|email|sms
          format: enum
        userId:
          type: string
          description: agent user id
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation this message belongs to
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent by the agent
        asmSessionSid:
          type: string
          description: the AsmSession Sid
      description: OmnichannelAgentUnassignConversationEvent - handle agent unassign
        conversation event
    api.commons.audit.OmnichannelArchiveCampaignEvent:
      type: object
      properties:
        campaignSid:
          type: string
          description: campaign id
        name:
          type: string
          description: campaign name
        description:
          type: string
          description: campaign description
        channelType:
          type: integer
          description: campaign type
          format: enum
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelArchiveCampaignEvent - whenever a campaign is archived
    api.commons.audit.OmnichannelArchiveModuleEvent:
      type: object
      properties:
        moduleSid:
          type: string
          description: module id
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelArchiveModuleEvent - whenever a module is archive status
    api.commons.audit.OmnichannelBeginWrapUpEvent:
      type: object
      properties:
        conversationSid:
          type: string
          description: the unique identifier for the conversation
        campaignSid:
          type: string
          description: the campaign identifier this event is associated with
        channelType:
          type: integer
          description: the channel type i.e. chat|email|sms|etc.
          format: enum
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation this message belongs to
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent by the agent
        asmSessionSid:
          type: string
          description: the AsmSession Sid
        userId:
          type: string
          description: the id of the agent
      description: OmnichannelBeginWrapUpEvent - when a conversation closes and moves
        to wrap up
    api.commons.audit.OmnichannelCloseConversationEvent:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the close message
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation the message belongs to
        asmSessionSid:
          type: string
          description: the AsmSession Sid
        userId:
          type: string
          description: the id of the agent
      description: OmnichannelCloseConversationEvent - close conversation
    api.commons.audit.OmnichannelCompleteCampaignEvent:
      type: object
      properties:
        campaignSid:
          type: string
          description: campaign id
        name:
          type: string
          description: campaign name
        description:
          type: string
          description: campaign description
        channelType:
          type: integer
          description: campaign type
          format: enum
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelCompleteCampaignEvent - whenever a campaign is completed
    api.commons.audit.OmnichannelCompleteModuleEvent:
      type: object
      properties:
        moduleSid:
          type: string
          description: module id
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelCompleteModuleEvent - whenever a module is complete
        status
    api.commons.audit.OmnichannelConnectedInboxCreatedEvent:
      type: object
      properties:
        connectedInbox:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConnectedInbox'
          description: the created connected inbox
      description: OmnichannelConnectedInboxCreatedEvent -
    api.commons.audit.OmnichannelConnectedInboxPollEvent:
      type: object
      properties:
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: campaign
        campaignModuleSid:
          type: string
          description: campaign_module_sid
        connectedInbox:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConnectedInbox'
          description: connected inbox
      description: OmnichannelConnectedInboxPollEvent -
    api.commons.audit.OmnichannelCreateCampaignEvent:
      type: object
      properties:
        name:
          type: string
          description: campaign name
        description:
          type: string
          description: campaign description
        channelType:
          type: integer
          description: campaign type
          format: enum
        campaignDirection:
          type: integer
          description: campaign direction
          format: enum
        campaignSid:
          type: string
          description: generated campaign sid
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
        projectSid:
          type: string
          description: project identifier
      description: OmnichannelCreateCampaignEvent - whenever a campaign is created
    api.commons.audit.OmnichannelCreateConversationEvent:
      type: object
      properties:
        campaignSid:
          type: string
          description: campaign id
        channelType:
          type: integer
          description: channel type - chat|email|sms
          format: enum
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation this message belongs to
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent by the agent
      description: // create conversation when customer sends initial message and
        T1 starts
    api.commons.audit.OmnichannelCreateProjectEvent:
      type: object
      properties:
        clientSid:
          type: string
        name:
          type: string
        description:
          type: string
        complianceConfig:
          $ref: '#/components/schemas/api.commons.OmniProjectComplianceConfig'
      description: OmnichannelCreateProjectEvent - whenever a project is created
    api.commons.audit.OmnichannelCustomerMessageUnitsEvent:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the omni message
        messageUnits:
          type: integer
          description: the total number of messages sent
          format: int32
      description: OmniChannelCustomerMessageUnitsEvent -
    api.commons.audit.OmnichannelCustomerTextMessageEvent:
      type: object
      properties:
        conversationSid:
          type: string
          description: the unique identifier for the conversation
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent by the customer
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation this message belongs to
      description: OmnichannelCustomerTextMessageEvent - whenever a customer sends
        a text message
    api.commons.audit.OmnichannelDailyConversationReportEvent:
      type: object
      properties:
        downloadUrl:
          type: string
      description: OmnichannelDailyReportEvent - whenever a daily conversation report
        is generated
    api.commons.audit.OmnichannelDailyProjectReportEvent:
      type: object
      properties:
        downloadUrl:
          type: string
      description: OmnichannelDailyReportEvent - whenever a daily project report is
        generated
    api.commons.audit.OmnichannelErrorModuleEvent:
      type: object
      properties:
        moduleSid:
          type: string
          description: module id
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelErrorModuleEvent - whenever a module is error status
    api.commons.audit.OmnichannelFailModuleEvent:
      type: object
      properties:
        moduleSid:
          type: string
          description: module id
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelFailModuleEvent - whenever a module is fail status
    api.commons.audit.OmnichannelFinishWrapUpEvent:
      type: object
      properties:
        conversationSid:
          type: string
          description: the unique identifier for the conversation
        campaignSid:
          type: string
          description: the campaign identifier the event is associated with
        channelType:
          type: integer
          description: the channel type i.e. chat|email|sms|etc.
          format: enum
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation this message belongs to
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent by the agent
        asmSessionSid:
          type: string
          description: AsmSessionSid
      description: OmnichannelFinishWrapUpEvent - when an agent has finished wrap
        up
    api.commons.audit.OmnichannelManagerMessageUnitsEvent:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the omni message
        messageUnits:
          type: integer
          description: the total number of messages sent
          format: int32
      description: OmniChannelManagerMessageUnitsEvent -
    api.commons.audit.OmnichannelManagerTextMessageEvent:
      type: object
      properties:
        conversationSid:
          type: string
          description: the unique identifier for the conversation
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent by the agent
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation this message belongs to
        asmSessionSid:
          type: string
          description: the AsmSession Sid
        userId:
          type: string
          description: user id
      description: OmnichannelManagerTextMessageEvent - whenever an agent send a text
        message
    api.commons.audit.OmnichannelManualApproveTaskAcceptedEvent:
      type: object
      properties:
        task:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniTask'
          description: the task that sent the message
        userId:
          type: string
          description: the id of the agent
        asmSessionSid:
          type: string
          description: asm session sid
      description: OmnichannelManualApproveTaskAcceptedEvent -
    api.commons.audit.OmnichannelManualApproveTaskRejectedEvent:
      type: object
      properties:
        task:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniTask'
          description: the task that sent the message
        userId:
          type: string
          description: the id of the agent
        asmSessionSid:
          type: string
          description: asm session sid
      description: OmnichannelManualApproveTaskRejectedEvent -
    api.commons.audit.OmnichannelManualApproveTaskRequeueEvent:
      type: object
      properties:
        task:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniTask'
          description: the task that sent the message
        userId:
          type: string
          description: the id of the agent
        asmSessionSid:
          type: string
          description: asm session sid
      description: OmnichannelManualApproveTaskRequeueEvent -
    api.commons.audit.OmnichannelManualApproveTaskTimeoutEvent:
      type: object
      properties:
        task:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniTask'
          description: the task that sent the message
        userId:
          type: string
          description: the id of the agent
        asmSessionSid:
          type: string
          description: asm session sid
      description: OmnichannelManualApproveTaskTimeoutEvent -
    api.commons.audit.OmnichannelModuleInitialReplyEvent:
      type: object
      properties:
        orgId:
          type: string
          description: org id
        campaignSid:
          type: string
          description: campaign_sid
        campaignModuleSid:
          type: string
          description: campaign_module_sid
        conversationSid:
          type: string
          description: conversation_sid
        channelType:
          type: integer
          description: channel type
          format: enum
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: omnimessage
        campaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omnicampaign
      description: OmniChannelModuleInitialReplyEvent -
    api.commons.audit.OmnichannelPauseCampaignEvent:
      type: object
      properties:
        campaignSid:
          type: string
          description: campaign id
        name:
          type: string
          description: campaign name
        description:
          type: string
          description: campaign description
        channelType:
          type: integer
          description: campaign type
          format: enum
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelPauseCampaignEvent - whenever a campaign is paused
    api.commons.audit.OmnichannelPauseModuleEvent:
      type: object
      properties:
        moduleSid:
          type: string
          description: module id
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelPauseModuleEvent - whenever a module is pause status
    api.commons.audit.OmnichannelPaymentLinkSentEvent:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent
        link:
          type: string
          description: the payment link
      description: OmniChannelAgentMessageSentEvent -
    api.commons.audit.OmnichannelResumeCampaignEvent:
      type: object
      properties:
        campaignSid:
          type: string
          description: campaign id
        name:
          type: string
          description: campaign name
        description:
          type: string
          description: campaign description
        channelType:
          type: integer
          description: campaign type
          format: enum
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelResumeCampaignEvent - whenever a campaign is resumed
    api.commons.audit.OmnichannelResumeModuleEvent:
      type: object
      properties:
        moduleSid:
          type: string
          description: module id
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelResumeModuleEvent - whenever a module is resume status
    api.commons.audit.OmnichannelScheduleModuleEvent:
      type: object
      properties:
        moduleSid:
          type: string
          description: module id
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelScheduleModuleEvent - whenever a module is schedule
        status
    api.commons.audit.OmnichannelSetConversationCollectedDataEvent:
      type: object
      properties:
        conversationSid:
          type: string
          description: conversation id
        userId:
          type: string
          description: the id of the agent
        channelType:
          type: integer
          description: channel type - chat|email|sms
          format: enum
        campaignDirection:
          type: integer
          description: campaign direction
          format: enum
        collectedData:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConversationCollectedData'
          description: collected data
        asmSessionSid:
          type: string
          description: the AsmSession Sid
      description: OmnichannelSetConversationCollectedDataEvent - handle set conversation
        collected data event
    api.commons.audit.OmnichannelSmsMessageSentModuleEvent:
      type: object
      properties:
        moduleSid:
          type: string
          description: module id
        messageUnits:
          type: string
          description: messageunits
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent by the agent
      description: OmnichannelAddSmsMessageSentAuditEvent - handle omnimessage and
        messageunits
    api.commons.audit.OmnichannelStartCampaignEvent:
      type: object
      properties:
        campaignSid:
          type: string
          description: campaign id
        name:
          type: string
          description: campaign name
        description:
          type: string
          description: campaign description
        channelType:
          type: integer
          description: campaign type
          format: enum
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelStartCampaignEvent - whenever a campaign is completed
    api.commons.audit.OmnichannelStartModuleEvent:
      type: object
      properties:
        moduleSid:
          type: string
          description: module id
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelStartModuleEvent - whenever a module is start status
    api.commons.audit.OmnichannelSuccessModuleEvent:
      type: object
      properties:
        moduleSid:
          type: string
          description: module id
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelSuccessModuleEvent - whenever a module is success status
    api.commons.audit.OmnichannelSystemMessageUnitsEvent:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the omni message
        messageUnits:
          type: integer
          description: the total number of messages sent
          format: int32
      description: OmnichannelSystemMessageUnitsEvent -
    api.commons.audit.OmnichannelT10Event:
      type: object
      properties:
        conversationSid:
          type: string
          description: conversation_id
        campaignSid:
          type: string
          description: campaign_id
        channelType:
          type: integer
          description: channel_type
          format: enum
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation this message belongs to
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent by the agent
      description: OmnichannelT10Event - whenever a T10 is triggered
    api.commons.audit.OmnichannelT11Event:
      type: object
      properties:
        conversationSid:
          type: string
          description: the identifier of the conversation the timer is associated
            with
        campaignSid:
          type: string
          description: the identifier of the campaign the timer is associated with
        channelType:
          type: integer
          description: the channel type i.e. chat|sms|email|etc.
          format: enum
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: conversation this message belongs to
      description: OmnichannelT11Event - whenever the t11 timer went off
    api.commons.audit.OmnichannelTaskMessageSentEvent:
      type: object
      properties:
        taskSid:
          type: string
          description: task identifier
        campaignSid:
          type: string
          description: campaign identifier
        moduleSid:
          type: string
          description: module identifier
        messageUnits:
          type: string
          description: the number of individual messages sent out
        campaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: the campaign the task is a part of
        message:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessage'
          description: the message sent
        task:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniTask'
          description: the task that sent the message
      description: OmnichannelTaskMessageSentEvent -
    api.commons.audit.OmnichannelTranscriptSavedEvent:
      type: object
      properties:
        conversationSid:
          type: string
          description: the conversation sid of the transcript being saved
        transcriptPath:
          type: string
          description: the transcript path of the conversation
        conversation:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniConversation'
          description: the conversation of the transcript being saved.
    api.commons.audit.OmnichannelUpdateCampaignEvent:
      type: object
      properties:
        campaignSid:
          type: string
          description: campaign id
        name:
          type: string
          description: campaign name
        description:
          type: string
          description: campaign description
        channelType:
          type: integer
          description: campaign type
          format: enum
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelUpdateCampaignEvent - whenever a campaign is update
    api.commons.audit.OmnichannelUpdateModuleEvent:
      type: object
      properties:
        moduleSid:
          type: string
          description: module id
        omniCampaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: omni campaign
      description: OmnichannelUpdateModuleEvent - whenever a module is update status
    api.commons.audit.ScorecardsCloneScorecardEvent:
      type: object
      properties:
        authorId:
          type: string
        title:
          type: string
        description:
          type: string
        passScore:
          type: number
          format: double
        scoreType:
          type: integer
          format: enum
        evaluationType:
          type: integer
          format: enum
        scorecard:
          $ref: '#/components/schemas/api.commons.Scorecard'
      description: ScorecardsCloneScorecardEvent is event when a scorecard library
        scorecard is cloned
    api.commons.audit.ScorecardsCreateAutoEvaluationEvent:
      type: object
      properties:
        autoEvaluationId:
          type: string
        scorecardId:
          type: string
        agentUserId:
          type: string
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        transcriptSid:
          type: string
        riskLevel:
          type: integer
          format: enum
        autoEvaluation:
          $ref: '#/components/schemas/api.commons.AutoEvaluation'
      description: ScorecardsCreateAutoEvaluationEvent is event when an auto evaluation
        library auto evaluation is created
    api.commons.audit.ScorecardsCreateCategoryEvent:
      type: object
      properties:
        authorId:
          type: string
        title:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        category:
          $ref: '#/components/schemas/api.commons.Category'
      description: ScorecardsCreateCategoryEvent is event when a category library
        category is created
    api.commons.audit.ScorecardsCreateEvaluationEvent:
      type: object
      properties:
        evaluationId:
          type: string
        scorecardId:
          type: string
        scorerId:
          type: string
        agentUserId:
          type: string
        callSid:
          type: string
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
      description: ScorecardsCreateEvaluationEvent is event when an evaluation library
        evaluation is created
    api.commons.audit.ScorecardsCreateEvaluationQuestionEvent:
      type: object
      properties:
        evaluationQuestionId:
          type: string
        evaluationId:
          type: string
        scorecardQuestionId:
          type: string
        userId:
          type: string
        evaluationQuestion:
          $ref: '#/components/schemas/api.commons.EvaluationQuestion'
      description: ScorecardsCreateEvaluationQuestionEvent is event when an evaluation
        question is created
    api.commons.audit.ScorecardsCreateQuestionEvent:
      type: object
      properties:
        authorId:
          type: string
        questionText:
          type: string
        description:
          type: string
        question:
          $ref: '#/components/schemas/api.commons.Question'
      description: ScorecardsCreateQuestionEvent is event when a question library
        question is created
    api.commons.audit.ScorecardsCreateScorecardEvent:
      type: object
      properties:
        authorId:
          type: string
        title:
          type: string
        description:
          type: string
        passScore:
          type: number
          format: double
        scoreType:
          type: integer
          format: enum
        evaluationType:
          type: integer
          format: enum
        scorecard:
          $ref: '#/components/schemas/api.commons.Scorecard'
      description: ScorecardsCreateScorecardEvent is event when a scorecard library
        scorecard is created
    api.commons.audit.ScorecardsCreateScorecardQuestionEvent:
      type: object
      properties:
        userId:
          type: string
        question:
          type: string
        description:
          type: string
        allowSkip:
          type: boolean
        maxPoints:
          type: string
        allowMultiSelect:
          type: boolean
        scorecardQuestion:
          $ref: '#/components/schemas/api.commons.ScorecardQuestion'
      description: ScorecardsCreateScorecardQuestionEvent is event when a scorecard
        question library scorecard question is created
    api.commons.audit.ScorecardsCreateSectionEvent:
      type: object
      properties:
        userId:
          type: string
        title:
          type: string
        description:
          type: string
        weight:
          type: integer
          format: uint32
        section:
          $ref: '#/components/schemas/api.commons.Section'
      description: ScorecardsCreateSectionEvent is event when a section library section
        is created
    api.commons.audit.ScorecardsDeleteCategoryEvent:
      type: object
      properties:
        userId:
          type: string
        title:
          type: string
        description:
          type: string
        deletedAt:
          type: string
          format: date-time
        category:
          $ref: '#/components/schemas/api.commons.Category'
      description: ScorecardsDeleteCategoryEvent is event when a category library
        category is deleted
    api.commons.audit.ScorecardsDeleteEvaluationEvent:
      type: object
      properties:
        evaluationId:
          type: string
        scorecardId:
          type: string
        userId:
          type: string
        agentUserId:
          type: string
        callSid:
          type: string
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
      description: ScorecardsDeleteEvaluationEvent is event when an evaluation library
        evaluation is deleted
    api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent:
      type: object
      properties:
        evaluationQuestionId:
          type: string
        evaluationId:
          type: string
        scorecardQuestionId:
          type: string
        userId:
          type: string
        evaluationQuestions:
          $ref: '#/components/schemas/api.commons.EvaluationQuestion'
      description: ScorecardsDeleteEvaluationQuestionEvent is event when an evaluation
        question is deleted
    api.commons.audit.ScorecardsDeleteQuestionEvent:
      type: object
      properties:
        userId:
          type: string
        questionText:
          type: string
        description:
          type: string
        categoryIds:
          type: array
          items:
            type: string
        question:
          $ref: '#/components/schemas/api.commons.Question'
      description: ScorecardsDeleteQuestionEvent is event when a question library
        question is deleted
    api.commons.audit.ScorecardsDeleteScorecardEvent:
      type: object
      properties:
        userId:
          type: string
        title:
          type: string
        description:
          type: string
        passScore:
          type: number
          format: double
        scoreType:
          type: integer
          format: enum
        evaluationType:
          type: integer
          format: enum
        state:
          type: integer
          format: enum
        scorecard:
          $ref: '#/components/schemas/api.commons.Scorecard'
      description: ScorecardsDeleteScorecardEvent is event when a scorecard library
        scorecard is deleted
    api.commons.audit.ScorecardsDeleteScorecardQuestionEvent:
      type: object
      properties:
        userId:
          type: string
        question:
          type: string
        description:
          type: string
        allowSkip:
          type: boolean
        maxPoints:
          type: string
        allowMultiSelect:
          type: boolean
        scorecardQuestion:
          $ref: '#/components/schemas/api.commons.ScorecardQuestion'
      description: ScorecardsDeleteScorecardQuestionEvent is event when a scorecard
        question library scorecard question is deleted
    api.commons.audit.ScorecardsDeleteSectionEvent:
      type: object
      properties:
        userId:
          type: string
        title:
          type: string
        description:
          type: string
        weight:
          type: integer
          format: uint32
        section:
          $ref: '#/components/schemas/api.commons.Section'
      description: ScorecardsDeleteSectionEvent is event when a section library section
        is deleted
    api.commons.audit.ScorecardsUpdateCategoryEvent:
      type: object
      properties:
        userId:
          type: string
        title:
          type: string
        description:
          type: string
        updateMask:
          type: string
          format: field-mask
        category:
          $ref: '#/components/schemas/api.commons.Category'
      description: ScorecardsUpdateCategoryEvent is event when a category library
        category is updated
    api.commons.audit.ScorecardsUpdateEvaluationEvent:
      type: object
      properties:
        evaluationId:
          type: string
        scorecardId:
          type: string
        scorerId:
          type: string
        agentUserId:
          type: string
        callSid:
          type: string
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
      description: ScorecardsUpdateEvaluationEvent is event when an evaluation library
        evaluation is updated
    api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent:
      type: object
      properties:
        evaluationQuestionId:
          type: string
        evaluationId:
          type: string
        scorecardQuestionId:
          type: string
        userId:
          type: string
        skipped:
          type: boolean
        points:
          type: string
        updateMask:
          type: string
          format: field-mask
        evaluationQuestion:
          $ref: '#/components/schemas/api.commons.EvaluationQuestion'
      description: ScorecardsUpdateEvaluationQuestionEvent is event when an evaluation
        question is updated
    api.commons.audit.ScorecardsUpdateQuestionEvent:
      type: object
      properties:
        userId:
          type: string
        questionText:
          type: string
        description:
          type: string
        updateMask:
          type: string
          format: field-mask
        question:
          $ref: '#/components/schemas/api.commons.Question'
      description: ScorecardsUpdateQuestionEvent is event when a question library
        question is updated
    api.commons.audit.ScorecardsUpdateScorecardEvent:
      type: object
      properties:
        userId:
          type: string
        title:
          type: string
        description:
          type: string
        passScore:
          type: number
          format: double
        scoreType:
          type: integer
          format: enum
        evaluationType:
          type: integer
          format: enum
        allowFeedback:
          type: boolean
        state:
          type: integer
          format: enum
        updateMask:
          type: string
          format: field-mask
        scorecard:
          $ref: '#/components/schemas/api.commons.Scorecard'
      description: ScorecardsUpdateScorecardEvent is event when a scorecard library
        scorecard is updated
    api.commons.audit.ScorecardsUpdateScorecardQuestionEvent:
      type: object
      properties:
        userId:
          type: string
        question:
          type: string
        description:
          type: string
        allowSkip:
          type: boolean
        maxPoints:
          type: string
        allowMultiSelect:
          type: boolean
        sortOrder:
          type: integer
          format: int32
        updateMask:
          type: string
          format: field-mask
        scorecardQuestion:
          $ref: '#/components/schemas/api.commons.ScorecardQuestion'
      description: ScorecardsUpdateScorecardQuestionEvent is event when a scorecard
        question library scorecard question is updated
    api.commons.audit.ScorecardsUpdateSectionEvent:
      type: object
      properties:
        userId:
          type: string
        title:
          type: string
        description:
          type: string
        weight:
          type: integer
          format: uint32
        sortOrder:
          type: integer
          format: int32
        updateMask:
          type: string
          format: field-mask
        section:
          $ref: '#/components/schemas/api.commons.Section'
      description: ScorecardsUpdateSectionEvent is event when a section library section
        is updated
    api.commons.audit.TicketEvent:
      type: object
      properties:
        editticket:
          $ref: '#/components/schemas/api.commons.EditTicket'
        createdById:
          type: string
    api.commons.audit.VanaBillingReportEvent:
      type: object
      properties:
        startTime:
          type: string
          description: Required. Report data start time.
          format: date-time
        endTime:
          type: string
          description: Required. Report data end time.
          format: date-time
        url:
          type: string
          description: Required. Report download url.
      description: "VanaBillingReportEvent represents a billing report in voice analytics.\n
        It gives a csv to a billing report of transcripts that occured that billing
        period."
    api.commons.audit.VanaCreateTranscriptEvent:
      type: object
      properties:
        transcriptSid:
          type: string
        call:
          $ref: '#/components/schemas/api.commons.audit.VanaCreateTranscriptEvent_Call'
        sms:
          $ref: '#/components/schemas/api.commons.audit.VanaCreateTranscriptEvent_Sms'
      description: VanaCreateTranscriptEvent represents a newly created transcript.
    api.commons.audit.VanaCreateTranscriptEvent_Call:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        talkTime:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
        audioTime:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
    api.commons.audit.VanaCreateTranscriptEvent_Sms:
      type: object
      properties:
        conversationSid:
          type: string
    api.commons.audit.VanaFlagEvent:
      type: object
      properties:
        flagName:
          type: string
          description: Required. User is not allowed to see flag sid.
        flagSid:
          type: string
          description: Required. Used for matching user notification settings.
        url:
          type: string
          description: Required. Link to voice analytics page that shows reported
            transcripts.
        numTranscripts:
          type: string
          description: Required. Number of transcripts that were flagged.
        priority:
          type: integer
          description: Required. Flag priority.
          format: int32
      description: "VanaFlagEvent represents a flag occurrence in voice analytics.\n
        It summarizes a set of transcripts flagged over an interval."
    api.commons.audit.VanaFlagReviewEvent:
      type: object
      properties:
        flagName:
          type: string
          description: Required. User is not allowed to see flag sid.
        flagSid:
          type: string
          description: Required. Used for matching user notification settings.
        url:
          type: string
          description: Required. Link to voice analytics page that shows reported
            transcripts.
        numTranscripts:
          type: string
          description: Required. Number of transcripts that were flagged.
        priority:
          type: integer
          description: Required. Flag priority.
          format: int32
      description: "VanaFlagReviewEvent represents a flag that needs review in voice
        analytics.\n It summarizes a set of transcripts that need review."
    api.commons.audit.VanaFlagSummaryEvent:
      type: object
      properties:
        startTime:
          type: string
          description: Required. Report data start time.
          format: date-time
        endTime:
          type: string
          description: Required. Report data end time.
          format: date-time
        flagSummaries:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.audit.VanaFlagSummaryEvent_FlagSummary'
          description: Required. Flag Summaries
      description: "VanaFlagSummaryEvent is the summary of the flagging process.\n
        It shows what transcripts were flagged."
    api.commons.audit.VanaFlagSummaryEvent_FlagSummary:
      type: object
      properties:
        transcriptSid:
          type: string
        flagSids:
          type: array
          items:
            type: string
      description: FlagSummary is an overview of the flags in the transcript.
    api.commons.audit.VanaPhraseCorrectionEvent:
      type: object
      properties:
        startOffset:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Required. Start offset of the selected words in the transcript.
        endOffset:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Required. End offset of the selected words in the transcript.
        originalText:
          type: string
          description: Required. Original text that the transcript was translated
            to.
        proposedText:
          type: string
          description: Required. Proposed text of what the transcript text should
            be.
        url:
          type: string
          description: Required. Url of the call recording for the transcript.
        channel:
          type: integer
          description: Required. Channel that the words were spoken on.
          format: uint32
      description: "VanaPhraseCorrectionEvent is a user suggestion for what some words
        in a transcript\n should be changed to when the original translation is off."
    api.commons.auth.AuthClaims:
      type: object
      properties:
        auth0UserId:
          type: string
          description: AUTH0 user_id
        orgUserId:
          type: string
          description: ORG user_id
        orgId:
          type: string
          description: ORG ID
        apiKey:
          type: string
          description: API key used in this request for API-based endpoints
        regionId:
          type: string
          description: ORG Region ID
        name:
          type: string
          description: ??
        impersonate:
          type: string
          description: Impersonation information
        clientSid:
          type: string
          description: P3 Client SID from "client" table
        agentSid:
          type: string
          description: P3 Agent SID from "agent" table
        loginSid:
          type: string
          description: Mapped to agent_sid
        activeOrgId:
          type: string
          description: ActiveOrgId is the org being used in behalf of for the api
            call
      description: AuthClaims is a proto mapping of the JWT Claims
    api.commons.auth.AuthenticatedUser:
      type: object
      properties:
        claims:
          allOf:
          - $ref: '#/components/schemas/api.commons.auth.AuthClaims'
          description: JWT Claims
      description: AuthenticatedUser is a proto serialized version of AuthUser. It
        can be used to pass all AuthUser information towards the backends
    api.commons.billing.Detail:
      type: object
      properties:
        billingDetailSid:
          type: string
        eventType:
          type: integer
          format: enum
        configType:
          type: integer
          format: enum
        config:
          $ref: '#/components/schemas/api.commons.billing.DetailConfig'
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        deletedOn:
          type: string
          format: date-time
        billingPlanId:
          type: string
    api.commons.billing.DetailConfig:
      type: object
      properties:
        agentSeatsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        agentTextMessageChatConfig:
          allOf:
          - $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
          description: omni configs
        agentTextMessageEmailMessageConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        agentTextMessageEmailSizeConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicAmountConfig'
        agentTextMessageSmsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        taskMessageSentEmailMessageConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        taskMessageSentEmailSizeConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicAmountConfig'
        taskMessageSentSmsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        connectedInboxPollConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        managerTextMessageChatConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        managerTextMessageEmailMessageConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        managerTextMessageEmailSizeConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicAmountConfig'
        managerTextMessageSmsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        customerTextMessageChatConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        customerTextMessageEmailMessageConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        customerTextMessageEmailSizeConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicAmountConfig'
        customerTextMessageSmsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        agentTextMessageChatSizeConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicAmountConfig'
        managerTextMessageChatSizeConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicAmountConfig'
        customerTextMessageChatSizeConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicAmountConfig'
        connectedInboxCreatedConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        agentTextMessageSmsSizeConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicAmountConfig'
        managerTextMessageSmsSizeConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicAmountConfig'
        customerTextMessageSmsSizeConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicAmountConfig'
        taskMessageSentSmsSizeConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicAmountConfig'
        agentChatMessageUnitsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        agentEmailMessageUnitsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        agentSmsMessageUnitsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        managerChatMessageUnitsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        managerEmailMessageUnitsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        managerSmsMessageUnitsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        customerChatMessageUnitsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        customerEmailMessageUnitsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        customerSmsMessageUnitsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        systemChatMessageUnitsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        systemEmailMessageUnitsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        systemSmsMessageUnitsConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
        complianceRndQueryConfig:
          allOf:
          - $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
          description: compliance configs
        complianceRndQueryCachedConfig:
          $ref: '#/components/schemas/api.commons.billing.modules.BasicConfig'
    api.commons.billing.Invoice:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.billing.InvoiceItem'
        invoiceId:
          type: string
        billingCycle:
          type: string
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
    api.commons.billing.InvoiceItem:
      type: object
      properties:
        invoiceItemSid:
          type: string
        product:
          type: integer
          format: enum
        amount:
          type: number
          format: double
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        invoiceId:
          type: string
    api.commons.billing.Plan:
      type: object
      properties:
        details:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.billing.Detail'
        orgId:
          type: string
        billingPlanId:
          type: string
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    api.commons.billing.modules.BasicAmountConfig:
      type: object
      properties:
        amount:
          type: string
        rate:
          type: number
          format: double
        minIncrement:
          type: string
        maxIncrement:
          type: string
    api.commons.billing.modules.BasicConfig:
      type: object
      properties:
        rate:
          type: number
          format: double
    api.commons.integrations.ExacutePianoAddPayment:
      type: object
      properties: {}
    api.commons.integrations.ExacutePianoUpdatePayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAthenahealthCcPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAthenahealthGetPatients:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAthenahealthGetPatientsWithId:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAuthorizenetApplePayTransaction:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAuthorizenetChargeCreditCard:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAuthorizenetCreateCustomerPaymentProfile:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAuthorizenetDebitBankAccount:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAuthorizenetGooglePayTransaction:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAuthorizenetPayPalAuthCapture:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAuthorizenetPaypalTransaction:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAxiaSubmitSaleRequestByCc:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAxiaSubmitSaleRequestByCheck:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAxiamedfusionAchTransaction:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAxiamedfusionCardVerify:
      type: object
      properties: {}
    api.commons.integrations.ExecuteAxiamedfusionCcTransaction:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBamboraSubmitAchPayments:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBamboraSubmitCcPayments:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBillingtreeSubmitCardSaleRequest:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBraintreeBankSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBraintreeCreditSale:
      type: object
      properties: {}
      description: execute flows
    api.commons.integrations.ExecuteBrainworksGetCodesOrTypes:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBrainworksGetComplaints:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBrainworksGetCustomerByCustId:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBrainworksGetCustomerByCustIdV2:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBrainworksGetCustomersByPhone:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBrainworksGetSuspends:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBrainworksSendComplaint:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBrainworksStartSuspends:
      type: object
      properties: {}
    api.commons.integrations.ExecuteBrainworksStopSuspends:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproAccountInquiry:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproAccountInquiryWithTax:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproAccountInquiryWithTaxBundle:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproComplaintCodes:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproComplaintInquiry:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproComplaintUpdate:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproLawGetCustomers:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproLawGetPaymentTypes:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproLawImmediatePayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproLawUpdateDataWithPac:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproPhoneLookup:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproPhoneLookupWithBundle:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproRestartUpdate:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproVacationRestartInquiry:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCircproVacationUpdate:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCybersourceCreditPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteCybersourceEcheckPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsAchPaymentToken:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsAddComplaint:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsCcPaymentToken:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsCreateVacation:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsDeleteVacation:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsGetVacation:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsGetVacationDaysBetween:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsGetVacationWithCutoff:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsSearchBy:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsSearchByPhone:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsSearchByZipStreet:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsStopAccount:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDallasnewsUpdatePhoneNumber:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDebugEcho:
      type: object
      properties: {}
    api.commons.integrations.ExecuteDebugValidate:
      type: object
      properties: {}
    api.commons.integrations.ExecuteElavonAddInstallment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteElavonAddRecurring:
      type: object
      properties: {}
    api.commons.integrations.ExecuteElavonCreditCardSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteElavonDccResponse:
      type: object
      properties: {}
    api.commons.integrations.ExecuteElavonDeleteInstallment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteElavonDeleteRecurring:
      type: object
      properties: {}
    api.commons.integrations.ExecuteElavonHealthCareCCSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteElavonMccCreditCardSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteElavonUpdateInstallment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteElavonUpdateRecurring:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicBookAppointment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicCallPatient:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicFindAppointment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicGetAccount:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicGetAccountAccessIdentifiers:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicGetAccountBillingSummary:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicGetPatient:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicGetPatientBillingDetails:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicGetToken:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicHangupCall:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicMatchPatient:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicPostPatientMadePayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicReceiveCommunication2:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicReceiveCommunication3:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEpicSearchAppointment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianAchPaymentPlanRequest:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianAchPaymentRequest:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianBalancerequest:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianCcPaymentPlanRequest:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianCcPaymentRequest:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianStellaAchTokenization:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianStellaAddusaepaytoken:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianStellaAuth:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianStellaCardDeviceTokenization:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianStellaCardEntry:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianStellaCardEntryTokenization:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianStellaECheck:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianStellaPaymentPlans:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianStellaPaymentPlansByPatient:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExperianStellaTokenPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExpitransAchTransaction:
      type: object
      properties: {}
    api.commons.integrations.ExecuteExpitransCcTransaction:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEzidebitSubmitAchPayments:
      type: object
      properties: {}
    api.commons.integrations.ExecuteEzidebitSubmitCcPayments:
      type: object
      properties: {}
    api.commons.integrations.ExecuteFinviExileCreatePayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteFinviExileExecuteLogic:
      type: object
      properties: {}
    api.commons.integrations.ExecuteFinviExilePopAccount:
      type: object
      properties: {}
    api.commons.integrations.ExecuteFinviExileQueryRecords:
      type: object
      properties: {}
    api.commons.integrations.ExecuteFinviExileReadFields:
      type: object
      properties: {}
    api.commons.integrations.ExecuteFinviExileWriteFields:
      type: object
      properties: {}
    api.commons.integrations.ExecuteFlow:
      type: object
      properties:
        pluginInstanceId:
          type: string
        braintreeCreditSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBraintreeCreditSale'
        braintreeBankSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBraintreeBankSale'
        relatientGetPatientBalance:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRelatientGetPatientBalance'
        relatientGetPatientCcTokens:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRelatientGetPatientCcTokens'
        relatientPostPatientToken:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRelatientPostPatientToken'
        relatientPostPatientBalance:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRelatientPostPatientBalance'
        relatientGetPatient:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRelatientGetPatient'
        relatientPostBalanceById:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRelatientPostBalanceById'
        relatientCreateFortisAchtoken:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRelatientCreateFortisAchtoken'
        relatientCreateFortisCctoken:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRelatientCreateFortisCctoken'
        relatientFortisTokenAchDebitPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRelatientFortisTokenAchDebitPayment'
        relatientFortisTokenCcPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRelatientFortisTokenCcPayment'
        cybersourceCreditPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCybersourceCreditPayment'
        cybersourceEcheckPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCybersourceEcheckPayment'
        circproPhoneLookupWithBundle:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproPhoneLookupWithBundle'
        circproPhoneLookup:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproPhoneLookup'
        circproVacationRestartInquiry:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproVacationRestartInquiry'
        circproComplaintInquiry:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproComplaintInquiry'
        circproAccountInquiry:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproAccountInquiry'
        circproAccountInquiryWithTax:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproAccountInquiryWithTax'
        circproAccountInquiryWithTaxBundle:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproAccountInquiryWithTaxBundle'
        circproComplaintCodes:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproComplaintCodes'
        circproComplaintUpdate:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproComplaintUpdate'
        circproVacationUpdate:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproVacationUpdate'
        circproRestartUpdate:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproRestartUpdate'
        circproLawImmediatePayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproLawImmediatePayment'
        circproLawUpdateDataWithPac:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproLawUpdateDataWithPac'
        circproLawGetCustomers:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproLawGetCustomers'
        circproLawGetPaymentTypes:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteCircproLawGetPaymentTypes'
        authorizenetChargeCreditCard:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAuthorizenetChargeCreditCard'
        authorizenetDebitBankAccount:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAuthorizenetDebitBankAccount'
        authorizenetCreateCustomerPaymentProfile:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAuthorizenetCreateCustomerPaymentProfile'
        authorizenetPaypalTransaction:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAuthorizenetPaypalTransaction'
        authorizenetGooglePayTransaction:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAuthorizenetGooglePayTransaction'
        authorizenetApplePayTransaction:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAuthorizenetApplePayTransaction'
        authorizenetPayPalAuthCapture:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAuthorizenetPayPalAuthCapture'
        expitransCcTransaction:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExpitransCcTransaction'
        expitransAchTransaction:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExpitransAchTransaction'
        axiamedfusionCcTransaction:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAxiamedfusionCcTransaction'
        axiamedfusionAchTransaction:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAxiamedfusionAchTransaction'
        axiamedfusionCardVerify:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAxiamedfusionCardVerify'
        instamedPaymentSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteInstamedPaymentSale'
        instamedVoidPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteInstamedVoidPayment'
        usaepaySubmitCcPayments:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteUsaepaySubmitCcPayments'
        usaepaySubmitAchPayments:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteUsaepaySubmitAchPayments'
        usaepayGetCcToken:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteUsaepayGetCcToken'
        ezidebitSubmitCcPayments:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEzidebitSubmitCcPayments'
        ezidebitSubmitAchPayments:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEzidebitSubmitAchPayments'
        bamboraSubmitCcPayments:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBamboraSubmitCcPayments'
        bamboraSubmitAchPayments:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBamboraSubmitAchPayments'
        repayStoreCard:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRepayStoreCard'
        repayPaymentToken:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRepayPaymentToken'
        repayAchPaymentToken:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteRepayAchPaymentToken'
        axiaSubmitSaleRequestByCc:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAxiaSubmitSaleRequestByCc'
        axiaSubmitSaleRequestByCheck:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAxiaSubmitSaleRequestByCheck'
        securetradingSendPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSecuretradingSendPayment'
        paymentVisionSubmitCardSaleRequestByCc:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePaymentVisionSubmitCardSaleRequestByCc'
        paymentVisionSubmitCardSaleRequestByAch:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePaymentVisionSubmitCardSaleRequestByAch'
        interproseLookupAccount:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteInterproseLookupAccount'
        interproseSubmitCardSaleRequestByCc:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteInterproseSubmitCardSaleRequestByCc'
        interproseSubmitCardSaleRequestByAch:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteInterproseSubmitCardSaleRequestByAch'
        interproseLookupPaymentId:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteInterproseLookupPaymentId'
        interproseLookupAccountByFormId:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteInterproseLookupAccountByFormId'
        dallasnewsSearchByPhone:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsSearchByPhone'
        dallasnewsSearchByZipStreet:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsSearchByZipStreet'
        dallasnewsSearchBy:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsSearchBy'
        dallasnewsCreateVacation:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsCreateVacation'
        dallasnewsGetVacation:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsGetVacation'
        dallasnewsGetVacationDaysBetween:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsGetVacationDaysBetween'
        dallasnewsGetVacationWithCutoff:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsGetVacationWithCutoff'
        dallasnewsDeleteVacation:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsDeleteVacation'
        dallasnewsAddComplaint:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsAddComplaint'
        dallasnewsUpdatePhoneNumber:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsUpdatePhoneNumber'
        dallasnewsStopAccount:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsStopAccount'
        dallasnewsCcPaymentToken:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsCcPaymentToken'
        dallasnewsAchPaymentToken:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDallasnewsAchPaymentToken'
        paywaySubmitCardSaleRequest:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePaywaySubmitCardSaleRequest'
        paywayCreateTokenRequest:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePaywayCreateTokenRequest'
        paywaySubmitAchSaleRequest:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePaywaySubmitACHSaleRequest'
        billingtreeSubmitCardSaleRequest:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBillingtreeSubmitCardSaleRequest'
        experianCcPaymentRequest:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianCcPaymentRequest'
        experianCcPaymentPlanRequest:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianCcPaymentPlanRequest'
        experianBalancerequest:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianBalancerequest'
        experianAchPaymentRequest:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianAchPaymentRequest'
        experianAchPaymentPlanRequest:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianAchPaymentPlanRequest'
        experianStellaCardEntry:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianStellaCardEntry'
        experianStellaEcheck:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianStellaECheck'
        experianStellaCardDeviceTokenization:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianStellaCardDeviceTokenization'
        experianStellaTokenPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianStellaTokenPayment'
        experianStellaAchTokenization:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianStellaAchTokenization'
        experianStellaAddUsaEpayToken:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianStellaAddusaepaytoken'
        experianStellaPaymentPlans:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianStellaPaymentPlans'
        experianStellaAuth:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianStellaAuth'
        experianStellaCardEntryTokenization:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianStellaCardEntryTokenization'
        experianStellaPaymentPlansByPatient:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteExperianStellaPaymentPlansByPatient'
        newscycleLogin:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewscycleLogin'
        newscycleSearchPage:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewscycleSearchPage'
        newscycleBillingInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewscycleBillingInfo'
        newscycleServiceErrorInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewscycleServiceErrorInfo'
        newscycleServiceErrorTrans:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewscycleServiceErrorTrans'
        newscycleStopInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewscycleStopInfo'
        newscycleStopTrans:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewscycleStopTrans'
        newscycleRenewInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewscycleRenewInfo'
        newscycleAutoRenewInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewscycleAutoRenewInfo'
        newscycleAutoTran:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewscycleAutoTran'
        newscyclePayInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewscyclePayInfo'
        newscyclePayTran:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewscyclePayTran'
        trustcommerceCreditSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteTrustcommerceCreditSale'
        trustcommerceAchSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteTrustcommerceAchSale'
        vantivCreditSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteVantivCreditSale'
        vantivAchSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteVantivAchSale'
        journeyLatest:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteJourneyLatest'
        journeyList:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteJourneyList'
        journeyUpdate:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteJourneyUpdate'
        athenahealthGetPatients:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAthenahealthGetPatients'
        athenahealthGetPatientsWithId:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAthenahealthGetPatientsWithId'
        athenahealthCcPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteAthenahealthCcPayment'
        brainworksGetCustomersByPhone:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBrainworksGetCustomersByPhone'
        brainworksGetSuspends:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBrainworksGetSuspends'
        brainworksGetCustomerByCustIdV2:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBrainworksGetCustomerByCustIdV2'
        brainworksGetComplaints:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBrainworksGetComplaints'
        brainworksGetCodesOrTypes:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBrainworksGetCodesOrTypes'
        brainworksStopSuspends:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBrainworksStopSuspends'
        brainworksStartSuspends:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBrainworksStartSuspends'
        brainworksSendComplaint:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBrainworksSendComplaint'
        brainworksGetCustomerByCustId:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteBrainworksGetCustomerByCustId'
        osgconnectCcPayments:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteOsgconnectCcPayments'
        osgconnectAchPayments:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteOsgconnectAchPayments'
        osgconnectValidateAccountNo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteOsgconnectValidateAccountNo'
        ntvbCreditMissedDelivery:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbCreditMissedDelivery'
        ntvbCustomerSearch:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbCustomerSearch'
        ntvbEndCall:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbEndCall'
        ntvbIntegrationDefinition:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbIntegrationDefinition'
        ntvbMissedDelivery:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbMissedDelivery'
        ntvbRemoveAutorenewal:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbRemoveAutorenewal'
        ntvbRenewSubscription:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbRenewSubscription'
        ntvbRenewalOffers:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbRenewalOffers'
        ntvbSetAutorenewal:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbSetAutorenewal'
        ntvbStartIncomingCall:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbStartIncomingCall'
        ntvbStartOutgoingCall:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbStartOutgoingCall'
        ntvbSubscriptionInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbSubscriptionInfo'
        ntvbVacationStop:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbVacationStop'
        ntvbAuthtest:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbAuthtest'
        ntvbCompletePendingOrder:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbCompletePendingOrder'
        ntvbPlaceOrder:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNtvbPlaceOrder'
        elavonCreditCardSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteElavonCreditCardSale'
        elavonAddRecurring:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteElavonAddRecurring'
        elavonDccResponse:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteElavonDccResponse'
        elavonDeleteRecurring:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteElavonDeleteRecurring'
        elavonUpdateRecurring:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteElavonUpdateRecurring'
        elavonHealthCareCcSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteElavonHealthCareCCSale'
        elavonAddInstallment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteElavonAddInstallment'
        elavonUpdateInstallment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteElavonUpdateInstallment'
        elavonDeleteInstallment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteElavonDeleteInstallment'
        elavonMccCreditCardSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteElavonMccCreditCardSale'
        globalPaymentsCardSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteGlobalPaymentsCardSale'
        globalPaymentsGetTransactionById:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteGlobalPaymentsGetTransactionByID'
        globalPaymentsListTransactions:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteGlobalPaymentsListTransactions'
        globalPaymentsRefundSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteGlobalPaymentsRefundSale'
        globalPaymentsReverseSaleOrRefund:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteGlobalPaymentsReverseSaleOrRefund'
        payscoutCreditSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePayScoutCreditCardSale'
        payscoutEcheckSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePayScoutEcheckSale'
        i2cEcho:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteI2cEcho'
        i2cBalanceInquiry:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteI2cBalanceInquiry'
        i2cVerifyUser:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteI2cVerifyUser'
        i2cSearchCustomer:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteI2cSearchCustomer'
        i2cMakePayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteI2cMakePayment'
        i2cGetCardholderProfile:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteI2cGetCardholderProfile'
        i2cGetCardholderStatement:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteI2cGetCardholderStatement'
        i2cGetCardholderBalance:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteI2cGetCardholderBalance'
        i2cGetCreditpaymentInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteI2cGetCreditPaymentInfo'
        i2cTransactionHistory:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteI2cTransactionHistory'
        opayoCcPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteOpayoCcPayments'
        shift4CcPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteShift4CcPayments'
        shift4AccessToken:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteShift4CcPayments'
        poscorpAccesstoken:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePoscorpAccesstoken'
        poscorpLookupGuarantor:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePoscorpLookupGuarantor'
        poscorpUpdatePaymentStatus:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePoscorpUpdatePaymentStatus'
        PIANOGETUSER:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePianoGetUser'
        PIANOUPDATEUSER:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePianoUpdateUser'
        PIANOUPDATESUBSCRIPTION:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePianoUpdateSubscription'
        PIANOGETPAYMENT:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePianoGetPayment'
        PIANOLISTSUBSCRIPTION:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePianoListSubscription'
        PIANOLASTACCESSCONVERSION:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePianoLastAccessConversion'
        PIANOADDPAYMENT:
          $ref: '#/components/schemas/api.commons.integrations.ExacutePianoAddPayment'
        PIANOUPDATEPAYMENT:
          $ref: '#/components/schemas/api.commons.integrations.ExacutePianoUpdatePayment'
        epicGetToken:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicGetToken'
        epicGetPatient:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicGetPatient'
        epicMatchPatient:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicMatchPatient'
        epicSearchAppointment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicSearchAppointment'
        epicFindAppointment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicFindAppointment'
        epicBookAppointment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicBookAppointment'
        epicGetAccount:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicGetAccount'
        epicReceiveCommunication2:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicReceiveCommunication2'
        epicReceiveCommunication3:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicReceiveCommunication3'
        epicPostPatientMadePayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicPostPatientMadePayment'
        epicGetPatientBillingDetails:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicGetPatientBillingDetails'
        epicCallPatient:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicCallPatient'
        epicHangupCall:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicHangupCall'
        epicGetAccountAccessIdentifiers:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicGetAccountAccessIdentifiers'
        epicGetAccountBillingSummary:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteEpicGetAccountBillingSummary'
        newzwarePhoneLookup:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewzwarePhoneLookup'
        newzwareAccountInquiry:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewzwareAccountInquiry'
        newzwareCcPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewzwareCcPayment'
        newzwareAchPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewzwareAchPayment'
        newzwareComplaintHistory:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewzwareComplaintHistory'
        newzwareComplaintUpdate:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewzwareComplaintUpdate'
        newzwareVacationRestart:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewzwareVacationRestart'
        newzwareVacationUpdate:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewzwareVacationUpdate'
        newzwarePhoneLookupMulti:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewzwarePhoneLookupMulti'
        newzwareSubscriptionRestart:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNewzwareSubscriptionRestart'
        priocommerceAchPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePriocommerceAchPayment'
        priocommerceCcPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePriocommerceCcPayment'
        navigaCreatePayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaCreatePayment'
        navigaChangeBilling:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaChangeBilling'
        paynsecondsTokenizeCard:
          $ref: '#/components/schemas/api.commons.integrations.ExecutePaynsecondsTokenizeCard'
        sutherlandrevPaymentConnect:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSutherlandrevPaymentConnect'
        finviExileQueryRecords:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteFinviExileQueryRecords'
        finviExileReadFields:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteFinviExileReadFields'
        finviExileWriteFields:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteFinviExileWriteFields'
        finviExileExecuteLogic:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteFinviExileExecuteLogic'
        finviExileCreatePayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteFinviExileCreatePayment'
        finviExilePopAccount:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteFinviExilePopAccount'
        navigaDtiCircCreatePayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICircCreatePayment'
        navigaDtiCircChangeBilling:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICircChangeBilling'
        navigaDtiCsAutoRenewInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICSAutoRenewInfo'
        navigaDtiCsAutoTran:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICSAutoTran'
        navigaDtiCsBillingInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICSBillingInfo'
        navigaDtiCsLogin:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICSLogin'
        navigaDtiCsPayInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICSPayInfo'
        navigaDtiCsPayTran:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICSPayTran'
        navigaDtiCsRenewInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICSRenewInfo'
        navigaDtiCsSearchPage:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICSSearchPage'
        navigaDtiCsServiceErrorInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICSServiceErrorInfo'
        navigaDtiCsServiceErrorTrans:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICSServiceErrorTrans'
        navigaDtiCsStopInfo:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICSStopInfo'
        navigaDtiCsStopTrans:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteNavigaDTICSStopTrans'
        swervepayCreateCustomer:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayCreateCustomer'
        swervepayQueryCustomerDetails:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayQueryCustomerDetails'
        swervepayQueryCustomerTokenDetails:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayQueryCustomerTokenDetails'
        swervepayQueryCustomerTokens:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayQueryQueryCustomerTokens'
        swervepayQueryCustomerTransactions:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayQueryCustomerTransactions'
        swervepayQueryCustomers:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayQueryCustomers'
        swervepayQueryTransactionDetails:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayQueryQueryTransactionDetails'
        swervepayQueryTransactions:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayQueryTransactions'
        swervepayRemoveCustomerToken:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayRemoveCustomerToken'
        swervepayUpdateCustomer:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayUpdateCustomer'
        swervepayCreateTransactionAuth:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayCreateTransactionAuth'
        swervepayCreateTransactionCapture:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayCreateTransactionCapture'
        swervepayCreateTransactionCredit:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayCreateTransactionCredit'
        swervepayCreateTransactionRefund:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayCreateTransactionRefund'
        swervepayCreateTransactionSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayCreateTransactionSale'
        swervepayCreateTransactionValidate:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayCreateTransactionValidate'
        swervepayProcessNewTransactionAuth:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayProcessNewTransactionAuth'
        swervepayProcessNewTransactionCapture:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayProcessNewTransactionCapture'
        swervepayProcessNewTransactionCredit:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayProcessNewTransactionCredit'
        swervepayProcessNewTransactionRefund:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayProcessNewTransactionRefund'
        swervepayProcessNewTransactionSale:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayProcessNewTransactionSale'
        swervepayProcessNewTransactionValidate:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteSwervepayProcessNewTransactionValidate'
        veradigmGetLocations:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteVeradigmGetLocations'
        veradigmGetPatientAccountBalance:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteVeradigmGetPatientAccountBalance'
        veradigmGetPayments:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteVeradigmGetPayments'
        veradigmGetPlacesOfService:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteVeradigmGetPlacesOfService'
        veradigmSavePaymentTransaction:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteVeradigmSavePaymentTransaction'
        veradigmSaveRefundTransaction:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteVeradigmSaveRefundTransaction'
        veradigmSaveVoucherPayment:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteVeradigmSaveVoucherPayment'
        debugEcho:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDebugEcho'
        debugValidate:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteDebugValidate'
      description: "ExecuteFlows run exactly one integration method, and allow user
        submitted values to be merged with\n the plugin instance data (like payment
        flows). Unlike payment flows, there doesn't have to be an\n invoice step defined,
        and the amount paid can be anything.\n Each member of the oneof value must
        have a proto number that matches a RequestMethod number"
    api.commons.integrations.ExecuteGlobalPaymentsCardSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteGlobalPaymentsGetTransactionByID:
      type: object
      properties: {}
    api.commons.integrations.ExecuteGlobalPaymentsListTransactions:
      type: object
      properties: {}
    api.commons.integrations.ExecuteGlobalPaymentsRefundSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteGlobalPaymentsReverseSaleOrRefund:
      type: object
      properties: {}
    api.commons.integrations.ExecuteI2cBalanceInquiry:
      type: object
      properties: {}
    api.commons.integrations.ExecuteI2cEcho:
      type: object
      properties: {}
    api.commons.integrations.ExecuteI2cGetCardholderBalance:
      type: object
      properties: {}
    api.commons.integrations.ExecuteI2cGetCardholderProfile:
      type: object
      properties: {}
    api.commons.integrations.ExecuteI2cGetCardholderStatement:
      type: object
      properties: {}
    api.commons.integrations.ExecuteI2cGetCreditPaymentInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteI2cMakePayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteI2cSearchCustomer:
      type: object
      properties: {}
    api.commons.integrations.ExecuteI2cTransactionHistory:
      type: object
      properties: {}
    api.commons.integrations.ExecuteI2cVerifyUser:
      type: object
      properties: {}
    api.commons.integrations.ExecuteInstamedPaymentSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteInstamedVoidPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteInterproseLookupAccount:
      type: object
      properties: {}
    api.commons.integrations.ExecuteInterproseLookupAccountByFormId:
      type: object
      properties: {}
    api.commons.integrations.ExecuteInterproseLookupPaymentId:
      type: object
      properties: {}
    api.commons.integrations.ExecuteInterproseSubmitCardSaleRequestByAch:
      type: object
      properties: {}
    api.commons.integrations.ExecuteInterproseSubmitCardSaleRequestByCc:
      type: object
      properties: {}
    api.commons.integrations.ExecuteJourneyLatest:
      type: object
      properties: {}
    api.commons.integrations.ExecuteJourneyList:
      type: object
      properties: {}
    api.commons.integrations.ExecuteJourneyUpdate:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaChangeBilling:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaCreatePayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICSAutoRenewInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICSAutoTran:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICSBillingInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICSLogin:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICSPayInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICSPayTran:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICSRenewInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICSSearchPage:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICSServiceErrorInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICSServiceErrorTrans:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICSStopInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICSStopTrans:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICircChangeBilling:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNavigaDTICircCreatePayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewscycleAutoRenewInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewscycleAutoTran:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewscycleBillingInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewscycleLogin:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewscyclePayInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewscyclePayTran:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewscycleRenewInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewscycleSearchPage:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewscycleServiceErrorInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewscycleServiceErrorTrans:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewscycleStopInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewscycleStopTrans:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewzwareAccountInquiry:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewzwareAchPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewzwareCcPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewzwareComplaintHistory:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewzwareComplaintUpdate:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewzwarePhoneLookup:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewzwarePhoneLookupMulti:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewzwareSubscriptionRestart:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewzwareVacationRestart:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNewzwareVacationUpdate:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbAuthtest:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbCompletePendingOrder:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbCreditMissedDelivery:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbCustomerSearch:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbEndCall:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbIntegrationDefinition:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbMissedDelivery:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbPlaceOrder:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbRemoveAutorenewal:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbRenewSubscription:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbRenewalOffers:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbSetAutorenewal:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbStartIncomingCall:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbStartOutgoingCall:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbSubscriptionInfo:
      type: object
      properties: {}
    api.commons.integrations.ExecuteNtvbVacationStop:
      type: object
      properties: {}
    api.commons.integrations.ExecuteOpayoCcPayments:
      type: object
      properties: {}
    api.commons.integrations.ExecuteOsgconnectAchPayments:
      type: object
      properties: {}
    api.commons.integrations.ExecuteOsgconnectCcPayments:
      type: object
      properties: {}
    api.commons.integrations.ExecuteOsgconnectValidateAccountNo:
      type: object
      properties: {}
    api.commons.integrations.ExecutePayScoutCreditCardSale:
      type: object
      properties: {}
    api.commons.integrations.ExecutePayScoutEcheckSale:
      type: object
      properties: {}
    api.commons.integrations.ExecutePaymentVisionSubmitCardSaleRequestByAch:
      type: object
      properties: {}
    api.commons.integrations.ExecutePaymentVisionSubmitCardSaleRequestByCc:
      type: object
      properties: {}
    api.commons.integrations.ExecutePaynsecondsTokenizeCard:
      type: object
      properties: {}
    api.commons.integrations.ExecutePaywayCreateTokenRequest:
      type: object
      properties: {}
    api.commons.integrations.ExecutePaywaySubmitACHSaleRequest:
      type: object
      properties: {}
    api.commons.integrations.ExecutePaywaySubmitCardSaleRequest:
      type: object
      properties: {}
    api.commons.integrations.ExecutePianoGetPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecutePianoGetUser:
      type: object
      properties: {}
    api.commons.integrations.ExecutePianoLastAccessConversion:
      type: object
      properties: {}
    api.commons.integrations.ExecutePianoListSubscription:
      type: object
      properties: {}
    api.commons.integrations.ExecutePianoUpdateSubscription:
      type: object
      properties: {}
    api.commons.integrations.ExecutePianoUpdateUser:
      type: object
      properties: {}
    api.commons.integrations.ExecutePoscorpAccesstoken:
      type: object
      properties: {}
    api.commons.integrations.ExecutePoscorpLookupGuarantor:
      type: object
      properties: {}
    api.commons.integrations.ExecutePoscorpUpdatePaymentStatus:
      type: object
      properties: {}
    api.commons.integrations.ExecutePriocommerceAchPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecutePriocommerceCcPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRelatientCreateFortisAchtoken:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRelatientCreateFortisCctoken:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRelatientFortisTokenAchDebitPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRelatientFortisTokenCcPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRelatientGetPatient:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRelatientGetPatientBalance:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRelatientGetPatientCcTokens:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRelatientPostBalanceById:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRelatientPostPatientBalance:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRelatientPostPatientToken:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRepayAchPaymentToken:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRepayPaymentToken:
      type: object
      properties: {}
    api.commons.integrations.ExecuteRepayStoreCard:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSecuretradingSendPayment:
      type: object
      properties: {}
    api.commons.integrations.ExecuteShift4CcPayments:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSutherlandrevPaymentConnect:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayCreateCustomer:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayCreateTransactionAuth:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayCreateTransactionCapture:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayCreateTransactionCredit:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayCreateTransactionRefund:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayCreateTransactionSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayCreateTransactionValidate:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayProcessNewTransactionAuth:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayProcessNewTransactionCapture:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayProcessNewTransactionCredit:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayProcessNewTransactionRefund:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayProcessNewTransactionSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayProcessNewTransactionValidate:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayQueryCustomerDetails:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayQueryCustomerTokenDetails:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayQueryCustomerTransactions:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayQueryCustomers:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayQueryQueryCustomerTokens:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayQueryQueryTransactionDetails:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayQueryTransactions:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayRemoveCustomerToken:
      type: object
      properties: {}
    api.commons.integrations.ExecuteSwervepayUpdateCustomer:
      type: object
      properties: {}
    api.commons.integrations.ExecuteTrustcommerceAchSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteTrustcommerceCreditSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteUsaepayGetCcToken:
      type: object
      properties: {}
    api.commons.integrations.ExecuteUsaepaySubmitAchPayments:
      type: object
      properties: {}
    api.commons.integrations.ExecuteUsaepaySubmitCcPayments:
      type: object
      properties: {}
    api.commons.integrations.ExecuteVantivAchSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteVantivCreditSale:
      type: object
      properties: {}
    api.commons.integrations.ExecuteVeradigmGetLocations:
      type: object
      properties: {}
    api.commons.integrations.ExecuteVeradigmGetPatientAccountBalance:
      type: object
      properties: {}
    api.commons.integrations.ExecuteVeradigmGetPayments:
      type: object
      properties: {}
    api.commons.integrations.ExecuteVeradigmGetPlacesOfService:
      type: object
      properties: {}
    api.commons.integrations.ExecuteVeradigmSavePaymentTransaction:
      type: object
      properties: {}
    api.commons.integrations.ExecuteVeradigmSaveRefundTransaction:
      type: object
      properties: {}
    api.commons.integrations.ExecuteVeradigmSaveVoucherPayment:
      type: object
      properties: {}
    api.commons.integrations.FieldDefinition:
      type: object
      properties:
        name:
          type: string
          description: the name the backend and front end should when setting data
            about a field
        altName:
          type: string
          description: the name the backend server might use as the field name.
        displayName:
          type: string
          description: the name the front end should use on the form.
        fieldType:
          type: integer
          format: enum
        validationType:
          type: integer
          description: 'what the field should validate as,

            and how the front end should present the field to the user'
          format: enum
        formats:
          type: array
          items:
            type: string
          description: "The datetime formats allowed to use for date types.\n if left
            blank, a default set of formats will be accepted"
        invoiceType:
          type: integer
          description: if this field is used on an invoice, what type of item should
            it be?
          format: enum
        helperText:
          allOf:
          - $ref: '#/components/schemas/api.commons.integrations.HelperText'
          description: the helper text of the field. This is the text that helps explain
            the label name
        required:
          type: boolean
          description: if it needs to be filled out before run time
      description: "FieldDefinition defines a field name, and type that is used in
        integrations.\n This lets the UI make forms for the getting the field's value
        from the user"
    api.commons.integrations.Flow:
      type: object
      properties:
        invoiceFlow:
          $ref: '#/components/schemas/api.commons.integrations.InvoiceFlow'
        paymentFlow:
          $ref: '#/components/schemas/api.commons.integrations.PaymentFlow'
        verificationFlow:
          $ref: '#/components/schemas/api.commons.integrations.VerificationFlow'
        executeFlow:
          $ref: '#/components/schemas/api.commons.integrations.ExecuteFlow'
    api.commons.integrations.HelperText:
      type: object
      properties:
        text:
          type: string
      description: HelperText contains the text that explains a field definition on
        a form, and any other display options
    api.commons.integrations.Invoice:
      type: object
      properties:
        topLevelFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.InvoiceField'
        items:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.Item'
    api.commons.integrations.InvoiceAuthorizeNetCustomHttp:
      type: object
      properties: {}
    api.commons.integrations.InvoiceAuthorizeNetLinkData:
      type: object
      properties: {}
    api.commons.integrations.InvoiceDescription:
      type: object
      properties:
        invoiceDescriptionFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: "if this level contains repeated fields, then we have an account
            with multiple invoices.\n most often this will only contain non-repeated
            fields, and we will just have the one invoice.\n a repeated field is a
            field name that has a '#' in the name.\n example: \"detail.result.#._calculatedPatientResponsiblity\""
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.LineItemGroup'
          description: "the group of descriptions for each item in the invoice.\n
            this can be empty, or have multiple items in it."
    api.commons.integrations.InvoiceDynamicJourney:
      type: object
      properties:
        matchFields:
          type: array
          items:
            type: string
        totalField:
          type: string
        journeyFields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.commons.integrations.ListOfStrings'
    api.commons.integrations.InvoiceExperianQueryBalance:
      type: object
      properties: {}
      description: invoice flows
    api.commons.integrations.InvoiceField:
      type: object
      properties:
        itemType:
          type: integer
          format: enum
        name:
          type: string
        displayName:
          type: string
        value:
          type: string
        validationType:
          type: integer
          description: 'what the field should validate as,

            and how the front end should present the field to the user'
          format: enum
        format:
          type: string
          description: "The datetime format allowed to use for date types.\n if left
            blank, a default set of format will be accepted"
    api.commons.integrations.InvoiceFlow:
      type: object
      properties:
        pluginInstanceId:
          type: string
        experianQueryBalance:
          $ref: '#/components/schemas/api.commons.integrations.InvoiceExperianQueryBalance'
        authorizeNetLinkData:
          allOf:
          - $ref: '#/components/schemas/api.commons.integrations.InvoiceAuthorizeNetLinkData'
          description: InvoiceAuthorizeNetAuthorizedTransactionIdLookup authorize_net_authoirze_transaction_id_lookup
            = 9;
        authorizeNetCustomHttp:
          $ref: '#/components/schemas/api.commons.integrations.InvoiceAuthorizeNetCustomHttp'
        journey:
          $ref: '#/components/schemas/api.commons.integrations.InvoiceJourney'
        dynamicJourney:
          $ref: '#/components/schemas/api.commons.integrations.InvoiceDynamicJourney'
        newzwareAccountInquiry:
          $ref: '#/components/schemas/api.commons.integrations.InvoiceNewzwareAccountInquiry'
        invoiceTemplate:
          allOf:
          - $ref: '#/components/schemas/api.commons.integrations.InvoiceTemplate'
          description: the template of how the fields map on an invoice
    api.commons.integrations.InvoiceJourney:
      type: object
      properties: {}
    api.commons.integrations.InvoiceNewzwareAccountInquiry:
      type: object
      properties: {}
    api.commons.integrations.InvoiceTemplate:
      type: object
      properties:
        accountFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: top level of the invoice
        invoiceDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.InvoiceDescription'
          description: "if this level contains repeated fields, then we have an account
            with multiple invoices.\n most often this will only contain non-repeated
            fields, and we will just have the one invoice.\n a repeated field is a
            field name that has a '#' in the name.\n example: \"detail.result.#._calculatedPatientResponsiblity\"\n
            If there is only 1 invoice, this array will only have 1 item in it"
    api.commons.integrations.Invoices:
      type: object
      properties:
        topLevelFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.InvoiceField'
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.Invoice'
    api.commons.integrations.Item:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.InvoiceField'
    api.commons.integrations.LineItemGroup:
      type: object
      properties:
        lineItemFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: all fields reference a description of a single item on an invoice
    api.commons.integrations.ListOfStrings:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    api.commons.integrations.PaymentAuthorizeNetACH:
      type: object
      properties: {}
    api.commons.integrations.PaymentAuthorizeNetApplePay:
      type: object
      properties: {}
    api.commons.integrations.PaymentAuthorizeNetCC:
      type: object
      properties: {}
    api.commons.integrations.PaymentAuthorizeNetGooglePay:
      type: object
      properties: {}
    api.commons.integrations.PaymentAuthorizeNetPaypal:
      type: object
      properties: {}
    api.commons.integrations.PaymentExperianACH:
      type: object
      properties:
        useInvoiceAccountNumber:
          type: boolean
          description: "if true instead of using the account number uploaded to textpay,\n
            we send the payment with the account number returned on the invoice"
    api.commons.integrations.PaymentExperianCC:
      type: object
      properties:
        useInvoiceAccountNumber:
          type: boolean
          description: "if true instead of using the account number uploaded to textpay,\n
            we send the payment with the account number returned on the invoice"
      description: payment flows
    api.commons.integrations.PaymentFlow:
      type: object
      properties:
        pluginInstanceId:
          type: string
        experianCc:
          $ref: '#/components/schemas/api.commons.integrations.PaymentExperianCC'
        experianAch:
          $ref: '#/components/schemas/api.commons.integrations.PaymentExperianACH'
        authorizeNetCc:
          $ref: '#/components/schemas/api.commons.integrations.PaymentAuthorizeNetCC'
        authorizeNetAch:
          $ref: '#/components/schemas/api.commons.integrations.PaymentAuthorizeNetACH'
        authorizeNetPaypal:
          $ref: '#/components/schemas/api.commons.integrations.PaymentAuthorizeNetPaypal'
        authorizeNetApplePay:
          $ref: '#/components/schemas/api.commons.integrations.PaymentAuthorizeNetApplePay'
        authorizeNetGooglePay:
          $ref: '#/components/schemas/api.commons.integrations.PaymentAuthorizeNetGooglePay'
        paywaySubmitCardSaleRequest:
          $ref: '#/components/schemas/api.commons.integrations.PaymentPaywaySubmitCardSaleRequest'
        paywaySubmitAchAlertRequest:
          $ref: '#/components/schemas/api.commons.integrations.PaymentPaywaySubmitACHAlertRequest'
        newzwareCc:
          $ref: '#/components/schemas/api.commons.integrations.PaymentNewzwareCc'
        newzwareAch:
          $ref: '#/components/schemas/api.commons.integrations.PaymentNewzwareAch'
        priocommerceCc:
          $ref: '#/components/schemas/api.commons.integrations.PaymentPriocommerceCc'
        priocommerceAch:
          $ref: '#/components/schemas/api.commons.integrations.PaymentPriocommerceAch'
        paymentvisionCc:
          $ref: '#/components/schemas/api.commons.integrations.PaymentVisionCC'
        paymentvisionAch:
          $ref: '#/components/schemas/api.commons.integrations.PaymentVisionACH'
        paymentstellaCc:
          $ref: '#/components/schemas/api.commons.integrations.PaymentStellaCc'
        paymentstellaEcheck:
          $ref: '#/components/schemas/api.commons.integrations.PaymentStellaECheck'
        swervePayCc:
          $ref: '#/components/schemas/api.commons.integrations.PaymentSwervePayCC'
        swervePayAch:
          allOf:
          - $ref: '#/components/schemas/api.commons.integrations.PaymentSwervePayACH'
          description: Had to skip ID 20 here because it is already used for payment_fields
        paymentFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: "the fields the user will use for the payment form\n must be
            a subset of fields that is enough data to make the api call.\n These fields
            are provided to allow display name, and helper text to be edited.\n on
            the payment screen form."
    api.commons.integrations.PaymentNewzwareAch:
      type: object
      properties: {}
    api.commons.integrations.PaymentNewzwareCc:
      type: object
      properties: {}
    api.commons.integrations.PaymentPaywaySubmitACHAlertRequest:
      type: object
      properties: {}
    api.commons.integrations.PaymentPaywaySubmitCardSaleRequest:
      type: object
      properties: {}
    api.commons.integrations.PaymentPriocommerceAch:
      type: object
      properties: {}
    api.commons.integrations.PaymentPriocommerceCc:
      type: object
      properties: {}
    api.commons.integrations.PaymentStellaCc:
      type: object
      properties: {}
    api.commons.integrations.PaymentStellaECheck:
      type: object
      properties: {}
    api.commons.integrations.PaymentSwervePayACH:
      type: object
      properties: {}
    api.commons.integrations.PaymentSwervePayCC:
      type: object
      properties: {}
    api.commons.integrations.PaymentVisionACH:
      type: object
      properties: {}
    api.commons.integrations.PaymentVisionCC:
      type: object
      properties: {}
    api.commons.integrations.VerificationAuthorizeNetCustomerProfile:
      type: object
      properties: {}
    api.commons.integrations.VerificationAuthorizeNetLinkData:
      type: object
      properties: {}
    api.commons.integrations.VerificationExperianLinkData:
      type: object
      properties: {}
    api.commons.integrations.VerificationExperianQueryBalance:
      type: object
      properties: {}
      description: verification flows
    api.commons.integrations.VerificationExperianZipDob:
      type: object
      properties: {}
    api.commons.integrations.VerificationFlow:
      type: object
      properties:
        pluginInstanceId:
          type: string
        experianQueryBalance:
          $ref: '#/components/schemas/api.commons.integrations.VerificationExperianQueryBalance'
        experianLinkData:
          $ref: '#/components/schemas/api.commons.integrations.VerificationExperianLinkData'
        experianZipDob:
          $ref: '#/components/schemas/api.commons.integrations.VerificationExperianZipDob'
        authorizeNetCustomerProfile:
          $ref: '#/components/schemas/api.commons.integrations.VerificationAuthorizeNetCustomerProfile'
        authorizeNetLinkData:
          $ref: '#/components/schemas/api.commons.integrations.VerificationAuthorizeNetLinkData'
        journey:
          $ref: '#/components/schemas/api.commons.integrations.VerificationJourney'
        newzwareLookupPhone:
          $ref: '#/components/schemas/api.commons.integrations.VerificationNewzwareLookupPhone'
        newzwareAccountInquiry:
          $ref: '#/components/schemas/api.commons.integrations.VerificationNewzwareAccountInquiry'
        verificationFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: "the fields the user must verify for this flow.\n must conform
            to the list of fields returned from the flow"
    api.commons.integrations.VerificationJourney:
      type: object
      properties:
        dateOfBirthField:
          type: string
          description: "Deprecated\n only used if the VerificationFlow this belongs
            to is empty"
        lastNameField:
          type: string
          description: "Deprecated\n only used if the VerificationFlow this belongs
            to is empty"
        firstNameField:
          type: string
          description: "Deprecated\n only used if the VerificationFlow this belongs
            to is empty"
        zipField:
          type: string
          description: "Deprecated\n only used if the VerificationFlow this belongs
            to is empty"
        last4Ssn:
          type: string
          description: "Deprecated\n only used if the VerificationFlow this belongs
            to is empty"
    api.commons.integrations.VerificationNewzwareAccountInquiry:
      type: object
      properties: {}
    api.commons.integrations.VerificationNewzwareLookupPhone:
      type: object
      properties: {}
    api.commons.org.Act:
      type: object
      properties:
        dispositions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Disposition'
          description: A list of Dispositions for an Act
        verbiages:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Verbiage'
          description: A list of Verbiages for an Act
        conditionalNavigations:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.ConditionalNavigation'
          description: A list of Conditional Navigations for an act
        defaultConditionalNavigationTarget:
          type: string
          description: The default target act for a conditional navigation
        pageArrivalRecordingControl:
          type: string
          description: "Recording behavior when arriving to a specific page/act\n
            Can be 3 values -1 means stop recording, 1 means start recording\n 0 means
            no change on recording behavior"
        pageExitRecordingControl:
          type: string
          description: Recording behavior when exitig a specific page/act
      description: An act within a HuntGroupScript
    api.commons.org.AdminClientPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        useReservedCarrier:
          type: boolean
          description: Enable the use of reserved carriers.
        reservedCarriers:
          type: array
          items:
            type: string
          description: List of reserved carriers.
        emailKey:
          type: string
          description: Email sendgrid API key.
        emailId:
          type: string
          description: Email sendgrid API key ID.
        emailName:
          type: string
          description: Email sendgrid API key name.
        whitelistIps:
          type: array
          items:
            type: string
          description: Whitelisted IPs for the organization.
        whitelistDomains:
          type: array
          items:
            type: string
          description: Whitelisted domain names for the organization.
        callbacksServiceId:
          type: string
          description: Scheduled callbacks service ID.
        agentScreenRecording:
          type: boolean
          description: Whether agent screen recording is enabled.
        allowedCountries:
          type: array
          items:
            type: integer
            format: enum
          description: List of allowed countries for the organization.
      description: "Preferences for essential organization properties only to be used
        by\n account managers and customer support."
    api.commons.org.AgentPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        defaultAgentDialIn:
          type: string
          description: Default agent dial-in number.
        pbxExtensionLength:
          type: integer
          description: PBX dial extension length, between 3 to 9 digits long.
          format: int32
        defaultSoftphoneVolumeIn:
          type: integer
          description: Default agent softphone input volume, 0-100%.
          format: int32
        defaultSoftphoneVolumeOut:
          type: integer
          description: Default agent softphone output volume, 0-100%.
          format: int32
        configDialInNumbers:
          type: array
          items:
            type: string
          description: List of agent dial-in numbers defined by regional skunk config.
        clientDialInNumbers:
          type: array
          items:
            type: string
          description: List of customized client-defined dial-in numbers.
        manualDialCallerIdPrivacy:
          type: boolean
          description: Allows agent to use privacy headers on the manual dial caller
            ID.
        useManualDialCallerIdPrivacy:
          type: boolean
          description: The default/initial setting for caller ID privacy.
      description: Preferences controlling direct agent properties.
    api.commons.org.AgentProfileGroup:
      type: object
      properties:
        id:
          type: string
        orgId:
          type: string
        name:
          type: string
        priorityGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PriorityGroup'
        lastUpdated:
          type: string
          description: last time agent profile group was updated
          format: date-time
        defaultGroup:
          type: boolean
    api.commons.org.AgentResponseAutoRuleSet:
      type: object
      properties:
        rulesetSid:
          type: string
          description: The ID of the ruleset
        name:
          type: string
          description: The name of the ruleset
        description:
          type: string
          description: The description of the ruleset
        country:
          type: integer
          description: This country should be from the allowed list
          format: enum
        responses:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AutoResponseChoice'
          description: List of Agent Call Responses with comparitors and durations
      description: Sets of rules that manage automatically adding responses to the
        DNCL
    api.commons.org.AgentResponseComparitors:
      type: object
      properties:
        value:
          type: string
          description: Value is a string option that will compare against the agent
            response
        expiration:
          type: string
          description: Expiration is expressed in number of hours
      description: A list of agent entries and duration to use to determine addition
        to DNCL
    api.commons.org.AgentStatusOption:
      type: object
      properties:
        agentStatus:
          type: integer
          description: The status of the agent on which the trigger is based
          format: enum
        duration:
          type: string
          description: "The duration of the trigger (in seconds)\n Used for agent
            status: all but Logged In"
        pauseCode:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TriggerPauseCode'
          description: "The pause code to use for the trigger\n Use pause code only
            if either system_pause_code or custom_pause_code is set\n Used for agent
            status: Paused"
        callTypes:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TriggerCallTypes'
          description: "The call types to use for the trigger\n Used for agent status:
            On Call, Wrap Up"
        scheduledCallbackPresent:
          type: boolean
          description: "Whether to use the scheduled callback for the trigger\n Used
            for agent status: Manual Dial Call"
      description: 'DEPRECATED: Use services.org.hunt_groups.v1alpha1.AgentStatusOption
        instead'
    api.commons.org.AgentTrigger:
      type: object
      properties:
        agentTriggerSid:
          type: string
          description: The sid of the agent trigger
        description:
          type: string
          description: The description of the agent trigger
        agentStatusOption:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AgentStatusOption'
          description: The agent status option to use for the trigger
        triggerActionOption:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TriggerActionOption'
          description: The action option to use for the trigger
      description: "AgentTrigger is the entity for agent triggers.\n DEPRECATED: Use
        services.org.hunt_groups.v1alpha1.AgentTrigger instead"
    api.commons.org.AuthConnectionSettings:
      type: object
      properties:
        issuerUrl:
          type: string
          description: "issuer_url is the url provided by the identity provider\n
            used to get authorization tokens."
        tenantUrl:
          type: string
          description: "tenant_url is the url used to match user's emails so\n that
            the connection is used."
        clientId:
          type: string
          description: "client_id is the id of the application created from\n the
            auth provider."
        connectionId:
          type: string
          description: "connection_id is the id of the auth0 connection.\n This field
            will be populated automatically during\n the CreateAuthConnection rpc."
        secretExpiration:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AuthConnectionSettings_SecretExpiration'
          description: "secret_expiration is an optional field that is\n used to know
            when the connection's secret will\n expire. Some providers have secret's
            that don't expire."
        defaultGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GroupItem'
          description: "default_group defines settings used for all users for this
            connection\n regardless of their groups. Group name is ignored for the
            default. This\n field can be left nil if no default settings are desired."
        customGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.GroupItem'
          description: "custom_groups defines the settings that will be used if a
            user with\n this connection contains one or more of the matching group
            names.\n If a user has multiple matching groups the settings for the highest\n
            priority custom group will be used. Priority is determined by the custom\n
            groups position in the list."
        orgId:
          type: string
          description: org_id is the id of the organization the connection belongs
            too.
        name:
          type: string
          description: name is the name of the connection.
        type:
          type: integer
          description: type is what type of provider is used for the connection.
          format: enum
        resourceUrl:
          type: string
          description: "resource_url is used as an extra parameter on oidc requests.\n
            It may be required for certain ADFS configuration."
        useGovernmentAzure:
          type: boolean
          description: use_government_azure reflects whether or not an azure connection
            uses the government endpoints.
      description: AuthConnectionSettings is the entity for sso connection information.
    api.commons.org.AuthConnectionSettings_SecretExpiration:
      type: object
      properties:
        date:
          type: string
          format: date-time
    api.commons.org.AuthToken:
      type: object
      properties:
        token:
          type: string
          description: the raw token value
        userId:
          type: string
          description: user the token belongs to
        orgId:
          type: string
          description: org the user and token belong to
        expiration:
          type: string
          description: tokens expiration
          format: date-time
      description: AuthToken is an authentication token for a user
    api.commons.org.AuthenticationPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        authorizationViaIp:
          type: boolean
          description: Use IP based authorization.
        allowedIps:
          type: array
          items:
            type: string
          description: List of whitelisted IPs.
        agentApiKey:
          type: string
          description: Agent API key.
        enable2fa:
          type: boolean
          description: Whether or not two factor authentication is enabled.
        blockUnverifiedUsers:
          type: boolean
          description: "Whether or not to block login from users without a verified
            email.\n This option is only used if two factor authentication is enabled."
        emailMfaSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AuthenticationPreferences_EmailMfaSettings'
          description: Contains the settings needed to set up email mfa for an organization.
        duoMfaSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AuthenticationPreferences_DuoMfaSettings'
          description: "Contains the settings needed to set up a duo mfa client for
            an organization.\n The duo client secret is not included here - it only
            exists on the update api."
        allowForcePasswordResetInterval:
          type: boolean
          description: Org enables the ability to set the password reset interval
        passwordResetDayInterval:
          type: integer
          description: An interval in the form of days for users in the org to reset
            passwords
          format: int32
        userAuthorizationViaIp:
          type: boolean
          description: Use IP based authorization per user.
        forceSsoProvider:
          type: boolean
          description: Restrict sso users from logging in via username and password.
        enableTotp:
          type: boolean
          description: Whether or not to enable TOTP for 2FA.
      description: Preferences for controlling the organization's authentication properties.
    api.commons.org.AuthenticationPreferences_DuoMfaSettings:
      type: object
      properties:
        duoClientId:
          type: string
        duoApiHost:
          type: string
        enabled:
          type: boolean
      description: "A message containing the settings needed to set up a duo mfa client
        for an organization.\n The duo client secret is not included here - it only
        exists on the update api."
    api.commons.org.AuthenticationPreferences_EmailMfaSettings:
      type: object
      properties:
        enabled:
          type: boolean
      description: A message containing the settings needed for email mfa for an organization.
    api.commons.org.AutoResponseChoice:
      type: object
      properties:
        agentCallResponse:
          type: string
          description: The name of the agent call response
        comparitors:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AgentResponseComparitors'
          description: List of comparitors with duration
      description: An Agent Call Response with comparitors and duration
    api.commons.org.AutomateScrubListCallData_ScrubListDataField:
      type: object
      properties:
        scrubList:
          type: string
          description: Scrub list sid.
        callDataField:
          type: string
          description: Call data field sid.
      description: Scrub list data field properties.
    api.commons.org.BargeInFiltering:
      type: object
      properties:
        huntGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.BargeInFiltering_HuntGroup'
          description: Hunt group settings.
        agentStatus:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.BargeInFiltering_AgentStatus'
          description: Agent status.
      description: Barge-in filtering properties.
    api.commons.org.BargeInFiltering_AgentStatus:
      type: object
      properties:
        any:
          type: boolean
          description: Use any status (no filtering).
        waiting:
          type: boolean
          description: Agent waiting.
        onCall:
          type: boolean
          description: Agent on call.
        wrapUp:
          type: boolean
          description: Agent wrap-up.
        paused:
          type: boolean
          description: Agent paused.
        transfer:
          type: boolean
          description: Agent transferring call.
        preview:
          type: boolean
          description: Agent previewing call.
        manual:
          type: boolean
          description: Agent manual-dial.
        pbx:
          type: boolean
          description: Agent PBX.
        intercom:
          type: boolean
          description: Agent on intercom.
    api.commons.org.BargeInFiltering_HuntGroup:
      type: object
      properties:
        any:
          type: boolean
          description: Use any huntgroup (no filtering).
        huntGroupSid:
          type: string
          description: Specific hunt group SID.
    api.commons.org.BroadcastPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        displayListPenetrationStrategy:
          type: boolean
          description: "Whether the 'Dial List Penetration Strategy' property in templates
            and\n broadcast scheduling is displayed."
        dialListPenetrationStrategy:
          type: boolean
          description: "List penetration strategy to give priority to dialing each
            number in a\n single record before dialing from other records; false for
            depth first,\n true for breadth first search."
        displayFollowTheSun:
          type: boolean
          description: Display the 'Follow the Sun' property in templates and broadcasts.
        followTheSun:
          type: boolean
          description: Whether broadcasts follow the sun (prioritized east to west).
        sequenceTerminatorOverride:
          type: boolean
          description: "Whether to hide the terminator select menu in the standard
            template\n wizard and include only 'Connected, Live, and Machine' options
            in the\n layered template wizard."
        broadcastTemplateOrdering:
          type: integer
          description: Broadcast scheduling template ordering default value.
          format: enum
        startTimeEnabled:
          type: boolean
          description: Whether the default broadcast start time is used.
        defaultStartTime:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.BroadcastTime'
          description: Default broadcast start time.
        stopTimeEnabled:
          type: boolean
          description: Whether the default broadcast stop time is used.
        defaultStopTime:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.BroadcastTime'
          description: Default broadcast stop time.
      description: Preferences for editing templates and broadcast scheduling properties.
    api.commons.org.BroadcastTime:
      type: object
      properties:
        hours:
          type: integer
          description: Hour of the day (0-23).
          format: int32
        minutes:
          type: integer
          description: Minute of the hour (0-59).
          format: int32
        timezone:
          type: integer
          description: Time zone.
          format: enum
      description: Broadcast start/stop time properties.
    api.commons.org.BusinessHours:
      type: object
      properties:
        orgId:
          type: string
          description: The organization id of the BusinessHours object.
        description:
          type: string
          description: The description of the BusinessHours object.
        businessHoursId:
          type: string
          description: The id of the BusinessHours object.
        businessHoursName:
          type: string
          description: The name of the BusinessHours object.
        timezone:
          type: integer
          description: The timezone.
          format: enum
        dayIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.DayInterval'
          description: A list of time intervals of the BusinessHours object.
        lastUpdated:
          type: string
          description: A timestamp of when the BusinessHours object was last updated.
          format: date-time
      description: BusinessHours or operating hours.
    api.commons.org.BusinessPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        weeksOfData:
          type: integer
          description: Number of weeks of past data that are accessible.
          format: int32
        timeZone:
          type: integer
          description: Default time zone for business intelligence.
          format: enum
        multiClientAccess:
          type: boolean
          description: Whether to allow multi-client access.
        customVisualizations:
          type: boolean
          description: Enable/disable of custom visualizations in BI.
        timeFilter:
          type: string
          description: Time filter for custom dashboard and visualizations.
      description: Preferences for business intelligence settings/controls in analytics.
    api.commons.org.CallbackSettings:
      type: object
      properties:
        enableCallbackScheduling:
          type: boolean
          description: Enable callback scheduling. `Allow Callback Scheduling`
        defaultCallbackRouting:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CallbackSettings_DefaultRouting'
          description: Default callback routing. `Default Callback Routing`
        enableCallbackCalling:
          type: boolean
          description: Enable callback calling ` Allow Scheduled Callback Calling`
        enableAutomaticRetrieval:
          type: boolean
          description: Enable automatic callback retrieval `Callbacks Retrieval Mode`
        callbackRoutingDisallowed:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CallbackSettings_CallbackRoutingDisallowed'
          description: "Indicates whether and how to limit callback routing.\n `Callback
            Routing Disallowed`"
        enableCustomizableCallerId:
          type: boolean
          description: Enable caller ID customization. 'Scheduled Callback Editable
            Caller ID'
        defaultCallerId:
          type: string
          description: "Default scheduled callback caller ID.\n `Scheduled Callback
            Default Caller ID`"
        enableCallbackCalendar:
          type: boolean
          description: "Enable viewing the Scheduled Callback calendar.\n `Allow Scheduled
            Callback Calendar`"
      description: "CallbackSettings is an entity containing the hunt group settings
        for the\n scheduled callbacks section of the hunt group manager."
    api.commons.org.CallbackSettings_CallbackRoutingDisallowed:
      type: object
      properties:
        useRoutingLimiting:
          type: boolean
          description: Indicates whether callback routing should be limited.
        agentSids:
          type: array
          items:
            type: string
          description: Prohibited Agent Sids
        huntGroupSids:
          type: array
          items:
            type: string
          description: Prohibited Hunt Group Sids
        agentSkillSids:
          type: array
          items:
            type: string
          description: Prohibited agent skill sids
      description: Control which skills may be used when selecting routing.
    api.commons.org.CallbackSettings_DefaultRouting:
      type: object
      properties:
        routingMode:
          type: integer
          description: Default callback routing option (agent, skill set, none).
          format: enum
        agentSid:
          type: string
          description: Agent to callback to.
        agentSkillsets:
          type: array
          items:
            type: string
          description: Agent skillsets to callback to.
        huntGroupSids:
          type: array
          items:
            type: string
          description: Hunt Groups selected by default
      description: Default callback routing properties.
    api.commons.org.CallerIdBucketData:
      type: object
      properties:
        xmlClientPropertySid:
          type: string
          description: XML client property sid.
        bucketName:
          type: string
          description: Name of the caller ID bucket.
      description: Caller ID Bucket Data includes bucket name and the related XML
        property SID.
    api.commons.org.CertificateInfo:
      type: object
      properties:
        certificateInfoId:
          type: string
          description: The id of the certificate info.
        orgId:
          type: string
          description: The id of the organization.
        name:
          type: string
          description: The certificate name.
        description:
          type: string
          description: The certificate description.
        hash:
          type: string
          description: The certificate hash/fingerprint.
        expirationDate:
          type: string
          description: The certificate expiration date.
          format: date-time
        creationDate:
          type: string
          description: The certificate creation date.
          format: date-time
        requestBy:
          type: string
          description: The requestor of the certificate (user id or automated system)
        deleted:
          type: boolean
          description: Whether the certificate info is deleted.
        revoked:
          type: boolean
          description: Whether or not the certifcate has been revoked
      description: "CertificateInfo contains the organization's certificate information.\n
        DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.CertificateInfo
        instead."
    api.commons.org.ClientInfoDisplayTemplate:
      type: object
      properties:
        templateSid:
          type: string
          description: The template sid of the client info display template
        name:
          type: string
          description: The name of the client info display template
        description:
          type: string
          description: The description of the client info display template
        displayAllFields:
          type: boolean
          description: Bool used to determine whether to show all fields in a client
            info display template
        dialedNumberFieldStyle:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DialedNumberFieldStyle'
          description: The dialed number field style of a client info display template
        contactFieldStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.ContactFieldStyle'
          description: A list of Contact Field Styles for a client info display template
        templateCategory:
          type: integer
          description: The template type
          format: enum
        clientInfoDisplayTemplateSid:
          type: string
          description: The sid of the client info display template
        huntGroupSid:
          type: string
          description: The sid of the hunt group which the client info display template
            is associated with
      description: A template used to describe a client info display
    api.commons.org.CommunicationSettings:
      type: object
      properties:
        enableScrubListAdding:
          type: boolean
          description: "Enable the ability to add valuess from the compliance scrub
            list.\n `doAllowAddDncl`"
        scrubLists:
          type: array
          items:
            type: string
          description: Hunt group compliance scrub lists. `Hunt Group Compliance Scrub
            Lists`
        enableScrubListRemoval:
          type: boolean
          description: "Enable the ability to remove values from the compliance scrub
            lists.\n `doAllowRemoveDncl`"
        scrubListsRemovalAllowed:
          type: array
          items:
            type: string
          description: "List of compliance scrub lists which can be removed.\n `Hunt
            Group Compliance Scrub Lists Removal Allowed`"
        complianceDefaultCountry:
          type: integer
          description: Select compliance default country. `Default DNCL Country`
          format: enum
        displayOptionsInWrapup:
          type: boolean
          description: Display DNCL options in wrap up. `Display DNCL Options In Wrapup`
        inboundScrubListExpiration:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CommunicationSettings_ScrubListExpiration'
          description: Default inbound scrub list expiration. `defaultIBCallDnclExpiration`
        manualScrubListExpiration:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CommunicationSettings_ScrubListExpiration'
          description: Default manual scrub list expiration. `defaultMDCallDnclExpiration`
        outboundScrubListExpiration:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CommunicationSettings_ScrubListExpiration'
          description: Default outbound scrub list expiration. `defaultOBCallExpiration`
        previewScrubListExpiration:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CommunicationSettings_ScrubListExpiration'
          description: Default preview scrub list expiration. `defaultPRCallDnclExpiration`
        automateManuallyDialedScrubList:
          type: boolean
          description: Automate manually dialed number scrub list. `Manual Dial Auto
            Dncl Add`
        automatePreviewDialedScrubList:
          type: boolean
          description: Automate preview dialed number scrub list. `Preview Dial Auto
            Dncl Add`
        automateResponseRules:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CommunicationSettings_AutomateResponseRules'
          description: Automate response rules. `AgentDispositionConditionalDncl`
        automateScrubListCallData:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CommunicationSettings_AutomateScrubListCallData'
          description: "Enable automatic addition of call data to scrub lists.\n `Call
            Data Scrub Lists Info`"
      description: "CommunicationSettings is an entity containing the hunt group settings
        for the\n communication compliance section of the hunt group manager."
    api.commons.org.CommunicationSettings_AutomateResponseRules:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether automated response rules are enabled.
        ruleSid:
          type: string
          description: "Sid associated with response rule.\n xml_client_property_sid
            where property_key =\n 'AgentDispositionConditionalDncl'"
      description: Automate response rules properties.
    api.commons.org.CommunicationSettings_AutomateScrubListCallData:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether automatic additional of call data to scrub lists is
            enabled.
        scrubListDataFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AutomateScrubListCallData_ScrubListDataField'
          description: List of scrub list call data fields which will automatically
            be added.
      description: Automate response rules properties.
    api.commons.org.CommunicationSettings_ScrubListExpiration:
      type: object
      properties:
        defaultExpiration:
          type: integer
          description: Default call DNCL/scrub list expiration time.
          format: enum
        limitExpiration:
          type: boolean
          description: Enable limiting scrub list expiration choices.
        limitedExpirations:
          type: array
          items:
            type: integer
            format: enum
          description: List of possible expiration times to choose from.
      description: Scrub list expiration properties.
    api.commons.org.CompareExpressionList:
      type: object
      properties:
        simpleCompareExpression:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.SimpleCompareExpression'
          description: The list of simple compare expressions for a CompareExpressionList
      description: CompareExpressionList contains a list of simple compare expressions
    api.commons.org.ComplexBooleanExpression:
      type: object
      properties:
        compareExpressionList:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CompareExpressionList'
          description: The compare expression list for ComplexBooleanExpression
      description: ComplexBooleanExpression contains a compare expression list
    api.commons.org.ComplexBooleanExpressionList:
      type: object
      properties:
        complexBooleanExpressions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.ComplexBooleanExpression'
          description: The list of complex boolean expressions for ComplexBooleanExpressionList
      description: ComplexBooleanExpressionList contains a list of complex boolean
        expressions
    api.commons.org.CompliancePreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        displayAfterHoursCalls:
          type: boolean
          description: Whether after-hours calls are displayed in campaigns.
        afterHoursCalls:
          type: boolean
          description: Enable/disable after-hours calls in campaigns.
        displayNaturalCompliance:
          type: boolean
          description: Whether the default natural compliance rule set is displayed.
        useNaturalCompliance:
          type: boolean
          description: Enable using the default natural compliance rule set.
        defaultComplianceRuleSet:
          type: string
          description: Compliance rule set to use by default (UUID of set).
        displayCellPhoneScrub:
          type: boolean
          description: Whether cell phone scrub from campaign view.
        cellPhoneScrub:
          type: boolean
          description: Enable/disable to the ability scrub cell phone numbers.
        displayScheduleRules:
          type: boolean
          description: Whether schedule rules are displayed in campaigns.
        useScheduleRules:
          type: boolean
          description: Enable the use of the default schedule rules.
        defaultScheduleRule:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ScheduleRuleField'
          description: Schedule rule to use by default.
        doZipCodeScrub:
          type: boolean
          description: Whether ZIP code scrubbing is enabled.
        zipCodeScrub:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ZipCodeField'
          description: Field for ZIP/postal code scrubbing to use.
        defaultEmailComplianceList:
          type: string
          description: Default email compliance list.
        defaultSmsComplianceList:
          type: string
          description: Default sms compliance list.
      description: Preferences for natural language compliance campaign settings.
    api.commons.org.ConditionalNavigation:
      type: object
      properties:
        targetActIndex:
          type: string
          description: The target act/page index of the ConditionalNavigation
        complexBooleanExpressionList:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ComplexBooleanExpressionList'
          description: The ComplexBooleanExpressionList of the ConditionalNavigation
      description: A conditional navigation within an Act
    api.commons.org.ContactAreaCode:
      type: object
      properties:
        cfd:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ContactFieldDescription'
          description: Contact field description with ID and name.
        custom:
          type: integer
          description: Client-defined area code number.
          format: int32
      description: Contact area code type.
    api.commons.org.ContactFieldDescription:
      type: object
      properties:
        id:
          type: string
          description: Contact field description sid.
        fieldName:
          type: string
          description: Contact field name.
        isPhone:
          type: boolean
          description: Whether this field holds a phone number.
        displayFormatString:
          type: string
          description: Special formatting.
      description: Contact field description information.
    api.commons.org.ContactFieldStyle:
      type: object
      properties:
        descriptionId:
          type: string
          description: The description id of the contact field style
        fieldStyle:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.FieldStyle'
          description: The field style of the contact field
      description: "The ContactFieldStyle contains the description id\n and the field
        style for a particular contact field"
    api.commons.org.ContactPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        defaultContactImportFormat:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ImportFormat'
          description: Default import format, either custom of standardized.
        useContactImportFormat:
          type: boolean
          description: Whether the selected contact import format preference is used.
        defaultContactAreaCode:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ContactAreaCode'
          description: Default area code, either custom or predefined field.
        useContactAreaCode:
          type: boolean
          description: Whether the contact area code is enabled.
        discardRecordDefaultAbsentNumbersHandling:
          type: boolean
          description: "Default absent numbers handling; false to keep (default) or
            true to\n discard recording."
        defaultContactsImportRandomization:
          type: boolean
          description: Whether contacts import randomization is enabled.
        defaultEmailColumn:
          type: string
          description: The contact field to use as the default in emails.
        defaultDuplicateHandling:
          type: integer
          description: How duplicate contact numbers are handled by default.
          format: enum
      description: Preferences for contact lists.
    api.commons.org.CountryHoliday:
      type: object
      properties:
        holidayName:
          type: string
          description: The name.
        country:
          type: integer
          description: The country.  Deprecated.
          format: enum
        countryName:
          type: string
          description: The country name from holiday service.
        types:
          type: array
          items:
            type: string
          description: The type of holiday- eg. National, religious.
        states:
          type: array
          items:
            type: string
          description: The specific sub-regions of the country that celebrate the
            holiday.
      description: CountryHoliday holiday service name and country.
    api.commons.org.CustomDialOrder:
      type: object
      properties:
        dialOrderFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.DialOrderField'
          description: One or more contact field descriptions.
      description: "Custom dial order fields holds one or more contact field descriptions
        to\n indicate which fields in a contact record, and the order."
    api.commons.org.CustomImportFormat:
      type: object
      properties:
        id:
          type: string
          description: Contact import template sid.
        name:
          type: string
          description: Import format name.
      description: Contact import format properties.
    api.commons.org.DashboardPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        defaultInfoView:
          type: boolean
          description: Default agent info view; false for icon display, true for table
            view.
        defaultTableInclusion:
          type: boolean
          description: Default agent inclusion, true to include all agents.
        defaultInfoGrouping:
          type: boolean
          description: Default agent grouping, true to group by hunt groups.
        defaultSmallIcon:
          type: boolean
          description: Default agent icon size, false for large icons.
        defaultDescendingSort:
          type: boolean
          description: Default agent sort direction, false to sort by ascending.
        tableTemplateSid:
          type: string
          description: SID for the agent dashboard table template.
        defaultCallTypes:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.IncludedCallTypes'
          description: Which call types are enabled in the agents dashboard.
        defaultInfoSortByValue:
          type: integer
          description: Agent dashboard order-by parameter.
          format: enum
        defaultBargeInFiltering:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.BargeInFiltering'
          description: Controls hunt-group and agent barge-in status parameters.
      description: Preferences for agent dashboard controls.
    api.commons.org.DashboardQueuePreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        defaultInfoView:
          type: boolean
          description: Default queue/hold table view; false for icon view, true for
            table view.
        defaultInfoGrouping:
          type: boolean
          description: "Default queue/hold table grouping; false for no grouping,
            true for group\n by queue type."
        defaultSmallIcon:
          type: boolean
          description: Default table icon size; true for small, false for large.
        defaultDescendingSort:
          type: boolean
          description: Default table sort direction; false for descending, true for
            ascending.
        defaultAgentSkillsFilter:
          type: string
          description: "Default skills filter; holds a regional sid pointing to the
            filter in\n the xml_client_property table."
        defaultInfoTableTemplate:
          type: string
          description: "Default table template. holds a regional sid pointing to the
            filter in\n the xml_client_property table."
        defaultInfoSortByValue:
          type: integer
          description: Default queue/hold info sort-by value.
          format: enum
      description: Preferences for controlling agent queue and hold table settings.
    api.commons.org.DataDipConfig:
      type: object
      properties:
        configName:
          type: string
        configType:
          type: string
        remoteUrl:
          type: string
        paramTypeValueTuples:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.DataDipConfig_ParamTypeValueTuple'
        params:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.DataDipConfig_Param'
        data:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.DataDipConfig_ReturnData'
        requestMethod:
          type: string
        xmlClientPropertySid:
          type: string
        headers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.DataDipConfig_Header'
      description: DataDipConfig is a proto recreation of the XML structure.
    api.commons.org.DataDipConfig_Header:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        headerType:
          type: string
        paramTypeValueTuples:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.DataDipConfig_ParamTypeValueTuple'
    api.commons.org.DataDipConfig_Param:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        paramType:
          type: string
        compositeValue:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.DataDipConfig_ParamTypeValueTuple'
    api.commons.org.DataDipConfig_ParamTypeValueTuple:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    api.commons.org.DataDipConfig_ReturnData:
      type: object
      properties:
        name:
          type: string
        accessType:
          type: string
    api.commons.org.DayInterval:
      type: object
      properties:
        day:
          type: integer
          description: The specified day of the interval.
          format: enum
        start:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TimeOfDay'
          description: The starting time of the interval.
        end:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TimeOfDay'
          description: The ending time of the interval.
      description: DayInterval describes a time interval of a given day.
    api.commons.org.DialOrder:
      type: object
      properties:
        standard:
          type: integer
          description: "Standard order enum, (CUSTOM_DIAL_ORDER should not be set
            here but\n indicated by setting a CustomDialOrder below)."
          format: enum
        custom:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CustomDialOrder'
          description: "Defines a \"Custom Order\" using one or more contact field\n
            descriptions."
      description: "Dial order holds either a type enum, or one or more contact field\n
        description fields for custom order."
    api.commons.org.DialOrderField:
      type: object
      properties:
        cfdSid:
          type: string
          description: Contact field description SID.
        fieldName:
          type: string
          description: The field name, for display.
      description: "Dial order field holds the ID for saving into preferences and
        the name\n for display."
    api.commons.org.DialedNumberFieldStyle:
      type: object
      properties:
        fieldStyle:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.FieldStyle'
          description: The field style of the dialed number field
        displayToAgent:
          type: boolean
          description: Display the dialed number field to the agent
      description: The DialedNumberFieldStyle contains the field style for Dialed
        Number Field
    api.commons.org.Disposition:
      type: object
      properties:
        responseOptions:
          type: array
          items:
            type: string
          description: A list of response strings for a disposition
        header:
          type: string
          description: The header for the disposition
        prompt:
          type: string
          description: The prompt for the disposition
        order:
          type: string
          description: The order of the disposition
        required:
          type: boolean
          description: Required answer boolean for disposition
        defaultValue:
          type: string
          description: The default response value for a desposition
        bypassAutoScriptProgression:
          type: boolean
          description: Determines whether to bypass auto script progression
        responseType:
          type: integer
          description: The response type of the disposition
          format: enum
        responseEvaluator:
          type: string
          description: The response evaluator if regex is selected as a response_type
      description: A disposition within an Act
    api.commons.org.EmailSmsPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        useCustomLinks:
          type: boolean
          description: "Whether to use custom unsubscribe links (all email templates
            must contain\n one if enabled)."
        clientAcknowledgement:
          type: boolean
          description: Whether the client acknowledges that they are responsible for
            opt outs.
        emailFromAddresses:
          type: array
          items:
            type: string
          description: Return email addresses that will be available in broadcasts.
      description: Preferences for email and SMS management.
    api.commons.org.EndOfDayPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        eodMonday:
          type: integer
          description: Delivery time for reports on Monday.
          format: int32
        eodTuesday:
          type: integer
          description: Delivery time for reports on Tuesday.
          format: int32
        eodWednesday:
          type: integer
          description: Delivery time for reports on Wednesday.
          format: int32
        eodThursday:
          type: integer
          description: Delivery time for reports on Thursday.
          format: int32
        eodFriday:
          type: integer
          description: Delivery time for reports on Friday.
          format: int32
        eodSaturday:
          type: integer
          description: Delivery time for reports on Saturday.
          format: int32
        eodSunday:
          type: integer
          description: Delivery time for reports on Sunday.
          format: int32
      description: Preferences for automated report jobs end-of-day delivery times.
    api.commons.org.FieldStyle:
      type: object
      properties:
        textColor:
          type: string
          description: Text color of a field style
        backgroundColor:
          type: string
          description: Background color of a field style
        allowAgentCopy:
          type: boolean
          description: Allow the agent to copy this field style
      description: FieldStyle describes a particular field within a client info display
    api.commons.org.FileNameSegment:
      type: object
      properties:
        segmentType:
          type: string
          description: Segment type.
        formatPattern:
          type: string
          description: Format pattern.
        timeZoneId:
          type: string
          description: Time zone ID (only required for certain segment types).
      description: File name segment type and attributes.
    api.commons.org.FileNamingConvention:
      type: object
      properties:
        segments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.FileNameSegment'
          description: List of file name segments.
      description: File naming convention properties containing name segments.
    api.commons.org.FilterPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        defaultAutoReportFilter:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ReportFilter'
          description: Default filtering for automated reports.
        sendEmptyAutoReports:
          type: boolean
          description: Whether to send auto-reports even if they are empty.
        displayBroadcastResendFilter:
          type: boolean
          description: Whether or not to display the setting in the 'Resend' window.
        defaultBroadcastResendFilter:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ReportFilter'
          description: Determines which contact records will be included in the new
            broadcast.
      description: Preferences for filters in reports and broadcasts.
    api.commons.org.GeneralSettings:
      type: object
      properties:
        enableAgentGatewayTitleBar:
          type: boolean
          description: Displays browser window tab information. `UseAdvancedGatewayTitle`
        defaultAgentDialIn:
          type: string
          description: Default agent phone number dialing into IVR system. `AgentDialInNumber`
        requireEndCallConfirmation:
          type: boolean
          description: Requires secondary confirmation to end call. `DisconnectConvirmation`
        enableAuthorizationByIp:
          type: boolean
          description: Enables authorization and whitelist by IP. `UseIpBasedAuth`
        authorizedIpAddresses:
          type: array
          items:
            type: string
          description: Whitelisted IPs. `AllowedIps`
        initialAgentStatus:
          type: integer
          description: Initial agent status. `Initial Agent Status`
          format: enum
        enableAgentPause:
          type: boolean
          description: Enable agents to pause calls. `Allow Agent Pause`
        agentPauseOptionSet:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings_PauseOptionSet'
          description: Pause option sets per hunt group. `Use Agent Pause Codes`
        defaultAgentPauseOption:
          type: string
          description: Default agent pause code. `Default Agent Pause Code`
        enablePauseOptionReset:
          type: boolean
          description: Enable agents to switch between pause options. `Agent Pause
            Reset`
        displayRecordingIndicator:
          type: boolean
          description: Display recording indicator. `Display Recording Indicator`
        enableCallRecordingPause:
          type: boolean
          description: Enable pausing of agent call recording. `Enable Recording Pause`
        callRecordingPauseConfirmation:
          type: boolean
          description: Require call recording pause confirmation. `Recording Pause
            Confirmation`
        callRecordingDelay:
          type: string
          description: Call recording delay in seconds. `Recording Delay`
        enablePauseRecordingOnHold:
          type: boolean
          description: "Automatically pauses recording when starting hold.\n `Pause
            Recording on Hold`"
        enableEnvisionScreenRecording:
          type: boolean
          description: Enable envision agent screen recording. `Use Agent Screen Recording`
        agentScreenRecording:
          type: boolean
          description: Read only- shows if the Agent Screen Recording is enabled for
            the Org
        enableAgentSimpleHold:
          type: boolean
          description: Enable agent simple hold. `Allow Agent Hold`
        enableAgentMultiAccept:
          type: boolean
          description: Enable agent multi-accept hold. `Allow Agent Hold`
        pauseAgentAfterMultiAccept:
          type: boolean
          description: Automatically pause agent after multi-accept hold. `AutoPauseOnMultiHold`
        holdQueueMonitoring:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings_HoldQueueMonitoring'
          description: Agent hold queue monitoring.
        displayMachineDeliver:
          type: boolean
          description: Whether to display the machine-deliver button on the UI.
        displayLinkbackHuntGroup:
          type: boolean
          description: Whether to display the call's linkback Hunt Group in the data
            panel.
        displaySipHeaderData:
          type: boolean
          description: Whether to display SIP header data in the data panel.
        displayIvrNavigationKeys:
          type: boolean
          description: Whether to display the IVR navigation (Keys Pressed) in the
            data panel.
        displayDataCollectData:
          type: boolean
          description: Whether to display Data Collect data in the data panel.
        displayDataDippedData:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings_DataDipDataDisplay'
          description: Whether to display the Data Dip'ed data in the data panel.
        integrationDataDisplay:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings_IntegrationDataDisplay'
          description: Payment Integration data display
        journeyDataDisplay:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings_JourneyDataDisplay'
          description: Whether to display the Journey Integration returned data in
            the data panel.
        agentCallHistoryScope:
          type: integer
          description: Whether and what call history statistics to display in the
            UI.
          format: enum
        agentLoginGuiStatisticsDisplay:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings_AgentLoginGuiStatisticsDisplay'
          description: Agent Login Gui Statistics display and template
        phoneZipMetadataDisplay:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings_PhoneZipMetadataDisplay'
          description: Phone / Postal Metadata display
        displaySkills:
          type: boolean
          description: Whether to display the call and agent skills to the agent `
            Display Skills`
        displayWebLinks:
          type: boolean
          description: Whether to display Web Links to the agent ` Display Web Links`
        enableAgentHuntGroupReassignment:
          type: boolean
          description: Enable agent to reassign hunt groups. `Agent Skills Reassignment`
        disallowedHuntGroups:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings_DisallowedHuntGroups'
          description: Limited available hunt groups. `Hunt Group Reassignment Disallowed`
        enableManualApprovalOfCalls:
          type: boolean
          description: Enable manual approval of calls. `Allow Manual Approval`
        requireManualApprovalNumber:
          type: boolean
          description: Require manual approval number confirmation. `MAC Number Confirmation`
        enableManualApprovalOfSms:
          type: boolean
          description: Enable manual approval of SMS. `Allow Manual Approval For Messaging`
        requireManualApprovalNumberSms:
          type: boolean
          description: "Require manual approval number confirmation for SMS.\n `MAM
            Number Confirmation`"
        disableRejectOptionForApprovers:
          type: boolean
          description: Control whether the reject option is available to the approvers.
        alphanumericKeypad:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings_AlphanumericKeypad'
          description: Alphanumeric keypad properties. `Alphanumeric Keypad`
        enableCallDesktopNotifications:
          type: boolean
          description: Enable queued call desktop notifications. `Allow Queued Call
            Notifications`
        inboundComplianceMetadata:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings_InboundComplianceMetadata'
          description: "Inbound natural language compliance metadata.\n `Optional
            Inbound Compliance Metadata`\n `Required Inbound Compliance Metadata`"
        enableAgentIntercom:
          type: boolean
          description: "Whether to allow the agent to intercom with other agents.\n
            `AllowAgentIntercom`"
        prepareStateCallDelivery:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings_PrepareStateCallDelivery'
          description: "Enables the delivery of incoming calls to the agent\n depending
            on the dial status prior to them clicking \"Dial\"."
      description: "GeneralSettings is an entity containing a section of the hunt
        group settings\n for the hunt group manager."
    api.commons.org.GeneralSettings_AgentLoginGuiStatisticsDisplay:
      type: object
      properties:
        displayAgentLoginGuiStatistics:
          type: boolean
          description: Whether to allow the display of general agent statistics to
            the UI.
        agentLoginGuiStatisticsTemplate:
          type: string
          description: "The ID (XML Client Property Sid) of the agent login gui statistics\n
            template."
      description: Agent Login GUI Statistics display and template.
    api.commons.org.GeneralSettings_AlphanumericKeypad:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether keypad delimiting is enabled.
        delimiter:
          type: integer
          description: Character to delimit with.
          format: enum
      description: Alphanumeric keypad options.
    api.commons.org.GeneralSettings_DataDipDataDisplay:
      type: object
      properties:
        displayDataDipData:
          type: boolean
          description: Whether to display the Data Dipped data in the data panel.
        dataDipDisplayKeys:
          type: array
          items:
            type: string
          description: The keys of the Data Dipped data key/value pairs.
      description: Data Dip data display options.
    api.commons.org.GeneralSettings_DisallowedHuntGroups:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether to limit available hunt groups for agents.
        huntGroups:
          type: array
          items:
            type: string
          description: The list of hunt groups that are available to choose from.
      description: Available hunt group options.
    api.commons.org.GeneralSettings_HoldQueueMonitoring:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether hold queue monitoring is enabled. `Hold Queue Monitoring`
        agentRouting:
          type: integer
          description: Agent routing. `HQM Agent Routing`
          format: enum
        requiredHuntGroupRouting:
          type: string
          description: Hunt group required to route to. `HQM Required Hunt Group Routing`
        preferredHuntGroupRouting:
          type: string
          description: Hunt group preferred to route to. `HQM Preferred Hunt Group
            Routing`
      description: Hold queue monitoring options.
    api.commons.org.GeneralSettings_InboundComplianceMetadata:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether compliance metadata is used.
        optionalData:
          type: array
          items:
            type: string
          description: "List of optional contact field description metadata.\n List
            of contact_field_description_sids"
        requiredData:
          type: array
          items:
            type: string
          description: "List of required contact field description metadata.\n List
            of contact_field_description_sids"
      description: Inbound natural compiance metadata options.
    api.commons.org.GeneralSettings_IntegrationDataDisplay:
      type: object
      properties:
        displayIntegrationData:
          type: boolean
          description: "Whether to display the Payment Integration returned data in
            the\n data panel."
        integrationDisplayKeys:
          type: array
          items:
            type: string
          description: The keys of the Payment Integration data key/value pairs.
      description: Payment Integration data display options.
    api.commons.org.GeneralSettings_JourneyDataDisplay:
      type: object
      properties:
        displayJourneyData:
          type: boolean
          description: "Whether to display the Journey Integration returned data in
            the\n data panel."
        journeyDisplayKeys:
          type: array
          items:
            type: string
          description: The keys of the Journey Integration data key/value pairs.
      description: Journey Integration data display options.
    api.commons.org.GeneralSettings_PauseOptionSet:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether pause option sets will be enabled.
        setSid:
          type: string
          description: "The sid of the agent pause code set.\n xml_client_property_sid
            where property_key = 'Agent Pause Codes'"
      description: Pause option set properties.
    api.commons.org.GeneralSettings_PhoneZipMetadataDisplay:
      type: object
      properties:
        displayPhoneZipMetadata:
          type: boolean
          description: "Whether to display the Phone / Postal Metadata related to
            the call's\n phone number."
        phoneZipMetadataKeys:
          type: array
          items:
            type: integer
            format: enum
          description: The keys of the Phone / Postal Metadata for display in the
            UI.
      description: Phone / Postal Metadata display options.
    api.commons.org.GeneralSettings_PrepareStateCallDelivery:
      type: object
      properties:
        manualDial:
          type: boolean
        previewDial:
          type: boolean
      description: PrepareStateCallDelivery options (the dial modes).
    api.commons.org.GroupItem:
      type: object
      properties:
        groupName:
          type: string
          description: name of the group.
        huntGroupSid:
          type: string
          description: hunt group sid for the group.
        agentProfileGroupId:
          type: string
          description: agent profile group for the group.
        p3PermissionGroupId:
          type: string
          description: p3 permission group id for the group.
        permissionGroupIds:
          type: array
          items:
            type: string
          description: "list of permission group ids for the group. If a user belongs
            to multiple\n groups the list of permission group ids will be appended
            to the existing\n permissions the user contains. All other group settings
            will be overridden\n by the highest priority group."
      description: GroupItem defines settings mapped to a single group.
    api.commons.org.HuntGroupDetails:
      type: object
      properties:
        generalDetails:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.HuntGroupDetails_GeneralDetails'
          description: The hunt group general details.
        templateDetails:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.HuntGroupDetails_ClientInfoDisplayTemplateDetails'
          description: The hunt group client info display template details.
        webLinkDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.HuntGroupDetails_WebLinkDetails'
          description: A list of hunt group web link details.
        triggerDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.HuntGroupDetails_TriggerDetails'
          description: A list of hunt group trigger details.
        integrationLinkDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.HuntGroupDetails_IntegrationLinkDetails'
          description: A list of hunt group integration link details.
        scriptDetails:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.HuntGroupDetails_ScriptDetails'
          description: The assigned script details.
      description: HuntGroupDetails is the entity for hunt group details.
    api.commons.org.HuntGroupDetails_ClientInfoDisplayTemplateDetails:
      type: object
      properties:
        name:
          type: string
          description: The hunt group client info display template name.
        description:
          type: string
          description: The hunt group client info display template description.
        displayAllFields:
          type: boolean
          description: Whether to display all fields in the hunt group client info
            display template.
        definedFieldCount:
          type: string
          description: The number of contact fields in the hunt group client info
            display template.
      description: ClientInfoDisplayTemplateDetails is the entity for hunt group client
        info display template details.
    api.commons.org.HuntGroupDetails_GeneralDetails:
      type: object
      properties:
        name:
          type: string
          description: The hunt group name
        description:
          type: string
          description: The hunt group description.
        type:
          type: integer
          description: The hunt group type.
          format: enum
        modifyDate:
          type: string
          description: The hunt group last modified date.
          format: date-time
        agentCount:
          type: string
          description: The number of agents belong to the hunt group.
      description: GeneralDetails is the entity for hunt group general details.
    api.commons.org.HuntGroupDetails_IntegrationLinkDetails:
      type: object
      properties:
        name:
          type: string
          description: The hunt group integration link name.
        description:
          type: string
          description: The hunt group integration link description.
      description: IntegrationLinkDetails is the entity for hunt group integration
        link details.
    api.commons.org.HuntGroupDetails_ScriptDetails:
      type: object
      properties:
        scriptSid:
          type: string
          description: The sid of the script assigned to the hunt group.
        name:
          type: string
          description: The name of the script.
        description:
          type: string
          description: The desciption of the script.
        actCount:
          type: string
          description: The number of acts that the script contains.
        dispositionCount:
          type: string
          description: The number of dispositions that the script contains.
        verbiageCount:
          type: string
          description: The number of verbiages that the script contains.
      description: ScriptDetails is the entity to describe the features of a script
        assigned to the hunt group.
    api.commons.org.HuntGroupDetails_TriggerDetails:
      type: object
      properties:
        description:
          type: string
          description: The hunt group trigger description.
        status:
          type: integer
          description: The hunt group trigger agent status.
          format: enum
        duration:
          type: string
          description: The hunt group trigger duration.
        action:
          type: integer
          description: The hunt group trigger action.
          format: enum
      description: TriggerDetails is the entity for hunt group trigger details.
    api.commons.org.HuntGroupDetails_WebLinkDetails:
      type: object
      properties:
        name:
          type: string
          description: The hunt group web link name.
        description:
          type: string
          description: The hunt group web link description.
        baseUrl:
          type: string
          description: The hunt group web link base url.
        parameterCount:
          type: string
          description: The number of the hunt group web link parameters.
      description: WebLinkDetails is the entity for hunt group web link details.
    api.commons.org.HuntGroupScript:
      type: object
      properties:
        scriptSid:
          type: string
          description: The unique sid for the hunt group script
        name:
          type: string
          description: The name of the hunt group script
        description:
          type: string
          description: The description of the hunt group script
        autoScriptProgression:
          type: boolean
          description: Boolean describing whether or not to sue auto script progression
        scriptCategory:
          type: integer
          description: Categorizes between HuntGroup and Campaign scripts
          format: enum
        acts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Act'
          description: List of acts for a HuntGroupScript
      description: HuntGroupScript represents a hunt group script
    api.commons.org.HuntGroupWithClientInfoTemplateData:
      type: object
      properties:
        huntGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.HuntGroupWithClientInfoTemplateData_HuntGroup'
          description: The hunt group details.
        template:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ClientInfoDisplayTemplate'
          description: The hunt group client info display template details.
      description: HuntGroupWithClientInfoTemplateData is the entity for a hunt group
        with its client info display template data.
    api.commons.org.HuntGroupWithClientInfoTemplateData_HuntGroup:
      type: object
      properties:
        clientSid:
          type: string
          description: The hunt group sid.
        huntGroupSid:
          type: string
          description: The hunt group name.
        huntGroupName:
          type: string
          description: The hunt group name.
      description: HuntGroup is the entity for a simplified hunt group details.
    api.commons.org.IdpClient:
      type: object
      properties:
        idpClientId:
          type: string
          description: The id of the client.
        secret:
          type: string
          description: "The secret of the client.\n This field cannot be updated after
            creation."
        redirectUris:
          type: array
          items:
            type: string
          description: The clients allowed redirect uris.
        trustedPeers:
          type: array
          items:
            type: string
          description: The clients trusted peers
        name:
          type: string
          description: The name of the client.
      description: IdpClient represents an idp client.
    api.commons.org.ImportFormat:
      type: object
      properties:
        standard:
          type: integer
          description: Import format enum choice.
          format: enum
        custom:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CustomImportFormat'
          description: Client-defined import format.
      description: Contact import template type.
    api.commons.org.IncludedCallTypes:
      type: object
      properties:
        outbound:
          type: boolean
          description: Outbound calls.
        inbound:
          type: boolean
          description: Inbound calls.
        manualDial:
          type: boolean
          description: Manual-dial calls.
        previewDial:
          type: boolean
          description: Preview-dial calls.
      description: Included call types.
    api.commons.org.IntegrationLink:
      type: object
      properties:
        integrationId:
          type: string
          description: The ID of the integration.
        parameterSid:
          type: string
          description: The sid or the unique ID of the integration link stored in
            the database.
        name:
          type: string
          description: The display name of the integration link.
        description:
          type: string
          description: The description of the integration link.
        methodId:
          type: string
          description: The ID of the method to use for the integration link.
        order:
          type: string
          description: The order of the integration link, used for sorting.
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.IntegrationLinkParameter'
          description: The parameters used for the integration link.
        configurationName:
          type: string
          description: The configuration name of the integration link.
        huntGroupSid:
          type: string
          description: The sid of the hunt group which the integration link is associated
            with.
      description: IntegrationLink defines a link between a hunt group and an integration.
    api.commons.org.IntegrationLinkParameter:
      type: object
      properties:
        key:
          type: string
          description: The parameter key.
        subParameters:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.IntegrationLinkSubParameter'
          description: The sub parameters of the parameter.
      description: IntegrationLinkParameter defines a parameter for an integration
        link.
    api.commons.org.IntegrationLinkSubParameter:
      type: object
      properties:
        key:
          type: string
          description: The sub parameter key is the field name of the integration
            link.
        parts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.IntegrationLinkSubParameterPart'
          description: The parts of the sub parameter.
      description: IntegrationLinkSubParameter defines a sub parameter for an integration
        link.
    api.commons.org.IntegrationLinkSubParameterPart:
      type: object
      properties:
        contactFieldSid:
          type: string
          description: The ID for the contact field.
        helperValue:
          type: string
          description: The value of the sub parameter part.
        parameterSourceType:
          type: integer
          description: The source type of the sub parameter part.
          format: enum
      description: IntegrationLinkSubParameterPart defines a part of a sub parameter
        for an integration link.
    api.commons.org.Label:
      type: object
      properties:
        orgId:
          type: string
          description: "labels are owned by orgs. this\n could be nasty in regards
            to\n org trusts and groups."
        name:
          type: string
          description: "simply the name of the label.\n 'Team A', 'Medical', etc"
        description:
          type: string
          description: the description of the label.
        color:
          type: string
          description: Hex color code of the label.
        labelId:
          type: string
          description: Id of the label.
        deleted:
          type: boolean
          description: whether or not the label is deleted.
      description: Label is an entity message.
    api.commons.org.License:
      type: object
      properties:
        app:
          type: integer
          description: Application containing licenses.
          format: enum
        cards:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.License_Card'
          description: Individual cards for the application.
        name:
          type: string
          description: Name of the license (to be displayed in the UI)
      description: License defines the structure of organization license assignments.
    api.commons.org.License_Card:
      type: object
      properties:
        type:
          type: integer
          description: Card type.
          format: enum
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.License_Permission'
          description: List of permissions and features.
        name:
          type: string
          description: String version of the card/sub-section.
    api.commons.org.License_Permission:
      type: object
      properties:
        permission:
          type: integer
          format: enum
        enabled:
          type: boolean
          description: Whether this permission is enabled in the license.
        features:
          type: array
          items:
            type: string
          description: List of features granted by the permission.
        name:
          type: string
          description: String version of the permission.
    api.commons.org.ManualDialSettings:
      type: object
      properties:
        enableManualDial:
          type: boolean
          description: Allow the agent to make manual dial calls.
        queueConfigurationName:
          type: string
          description: ACD queue configuration folder name.
        defaultCallRecording:
          type: integer
          description: The default setting for recording manual dial calls.
          format: enum
        cellPhoneScrub:
          type: integer
          description: Determines whether to scrub cell phone calls.
          format: enum
        timeZoneRestriction:
          type: integer
          description: Determines whether to scrub calls by time zone.
          format: enum
        timeZoneValidationPostalCode:
          type: integer
          description: "Determines whether to allow or require collection of ZIP/postal\n
            for compliance."
          format: enum
        naturalComplianceScrub:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.NaturalLanguageComplianceScrub'
          description: Use Natural Language Compliance and rule set.
        scrubOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ManualDialSettings_ScrubOverride'
          description: Allow agent to override scrub options
        enableWhitelist:
          type: boolean
          description: Allow toll-free white list for manual dial calls.
        defaultOutboundCountry:
          type: integer
          description: The default selected country for outbound number.
          format: enum
        displayOutboundCountrySelection:
          type: boolean
          description: Determines whether to display the country select menu to the
            agent.
        displayOutboundNumberPhoneBook:
          type: boolean
          description: Determines whether to display the outbound number phone book
            to the agent.
        defaultCallerIdCountry:
          type: integer
          description: "Indicates the default Country to use with the caller ID number.\n
            `Manual Dial Default Caller ID Country`"
          format: enum
        displayCallerIdCountrySelection:
          type: boolean
          description: "Determines whether to display the caller ID country select
            menu to\n the agent.\n `Manual Dial Display Caller ID Country Select`"
        displayCallerIdPhoneBook:
          type: boolean
          description: "Determines whether to display the caller ID phone book to
            the agent.\n `Manual Dial Display Phone Book`"
        enableCustomizableCallerId:
          type: boolean
          description: "Determines whether the agent may customize/edit the caller
            ID.\n `Manual Dial Editable Caller ID`"
        defaultCallerId:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ManualDialSettings_DefaultCallerId'
          description: "Indicates the default number to use as the caller ID.\n `Manual
            Dial Default Caller ID`"
        enableCallerIdBucket:
          type: boolean
          description: "Determines whether to allow the use of caller ID buckets in
            the agent app.\n `Manual Dial Caller Id Bucket Enabled`"
        randomCallerIdBucket:
          type: string
          description: "Indicates which caller ID bucket to use.\n `Manual Dial Random
            Caller Id Bucket`"
        automateRandomCallerId:
          type: boolean
          description: "Determines whether to automatically select a random caller
            ID.\n `Manual Dial Random Caller Id Enabled`"
        enableMaskCallerId:
          type: boolean
          description: "Determines whether to mask the caller ID from the agent.\n
            `Mask Manual Dial Caller ID`"
        enableSipAddress:
          type: boolean
          description: "Determines whether to enable SIP addresses as an optional
            outbound\n number and/or caller ID format.\n `Enable SIP Address`"
        naturalLanguageComplianceMetadata:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.NaturalLanguageComplianceMetadata'
          description: "Manual Dial natural language compliance metadata.\n `Optional
            Inbound Compliance Metadata`\n `Required Inbound Compliance Metadata`"
        dataDipScope:
          type: integer
          description: Application scope; disabled, standard calls, scheduled callbacks
            or all.
          format: enum
        dataDipConfigSid:
          type: string
          description: The ID of the data dip config to execute.
        dataDipResultHandling:
          type: integer
          description: The action to take if data dip execution fails.
          format: enum
        dataDipIntegrationMappings:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.ManualDialSettings_DataDipIntegrationMapping'
          description: Map data dip values to manual dial call values.
        dataDipIntegrationHandling:
          type: integer
          description: The action to take if the integration mapping fails.
          format: enum
        enableRejectOptionForApprovers:
          type: boolean
          description: "Control whether the reject option is available to the approvers.\n
            Please use disable_reject_option_for_approvers under GeneralSettings."
      description: "ManualDialSettings is an entity containing the hunt group settings
        for the\n Manual Dial section of the hunt group settings manager."
    api.commons.org.ManualDialSettings_DataDipIntegrationMapping:
      type: object
      properties:
        mappingType:
          type: integer
          description: Mapping type; manual dial number, caller ID or field description.
          format: enum
        dataDipReturnKey:
          type: string
          description: The key of the data dipped data to map to the manual call data.
        contactFieldDescriptionSid:
          type: string
          description: The contact field description to map to when it is the type.
      description: Describes a mapping of return keys to manual dial values.
    api.commons.org.ManualDialSettings_DefaultCallerId:
      type: object
      properties:
        usage:
          type: integer
          description: Describes how the field is used; none, custom or agent caller
            ID.
          format: enum
        customCallerId:
          type: string
          description: The caller ID (if needed).
      description: 'DefaultCallerId: custom or "Agent Caller ID" and number (if needed).'
    api.commons.org.ManualDialSettings_ScrubOverride:
      type: object
      properties:
        enableDnclOverride:
          type: boolean
          description: Allow the agent to override DNCL scrubbing.
        enableCellScrubOverride:
          type: boolean
          description: Allow the agent to override cell phone scrubbing.
        enableTimeZoneScrubOverride:
          type: boolean
          description: Allow the agent to override the global time zone scrubbing.
        naturalComplianceOverride:
          type: boolean
          description: Allow the agent to override Natural Language Compliance scrubbing.
      description: Allow the agent to override scrub settings.
    api.commons.org.MfaInfo:
      type: object
      properties:
        orgId:
          type: string
          description: The org the user belongs to.
        userId:
          type: string
          description: The user that the MFA info belongs to.
        mfaEnabled:
          type: boolean
          description: Whether or not MFA is enabled for the user.
        none:
          $ref: '#/components/schemas/api.commons.org.MfaInfo_NoneSelected'
        otp:
          $ref: '#/components/schemas/api.commons.org.MfaInfo_OtpType'
        duo:
          $ref: '#/components/schemas/api.commons.org.MfaInfo_Duo'
        totp:
          $ref: '#/components/schemas/api.commons.org.MfaInfo_Totp'
      description: MFA/2FA Information
    api.commons.org.MfaInfo_Duo:
      type: object
      properties:
        duoUsername:
          type: string
    api.commons.org.MfaInfo_NoneSelected:
      type: object
      properties:
        timeout:
          type: string
          description: "The time by wich the user must setup MFA\n to avoid being
            locked out."
          format: date-time
    api.commons.org.MfaInfo_OtpType:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/api.commons.org.OtpType_EmailDeliveryMethod'
    api.commons.org.MfaInfo_Totp:
      type: object
      properties: {}
      description: Totp is the type of MFA that uses a time-based one-time password.
    api.commons.org.MonthDayDate:
      type: object
      properties:
        dateName:
          type: string
          description: A name for this date.
        month:
          type: integer
          description: Month of the year.
          format: enum
        dayOfMonth:
          type: integer
          description: Day of the month.
          format: int32
      description: MonthDayDate enables custom named dates.
    api.commons.org.NaturalLanguageComplianceMetadata:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether compliance metadata is used.
        optionalData:
          type: array
          items:
            type: string
          description: "List of optional contact field description metadata.\n List
            of contact_field_description_sids"
        requiredData:
          type: array
          items:
            type: string
          description: "List of required contact field description metadata.\n List
            of contact_field_description_sids"
      description: Manual Dial natural compiance metadata options.
    api.commons.org.NaturalLanguageComplianceScrub:
      type: object
      properties:
        complianceScrub:
          type: integer
          description: Org default or enabled or disabled.
          format: enum
        ruleSetId:
          type: string
          description: The ID of the Natural Language Compliance rule set.
      description: Use Natural Language Compliance and rule set ID.
    api.commons.org.NumberHistorySettings:
      type: object
      properties:
        enableSearch:
          type: boolean
          description: Allow the agent to access number history search.
        enableReportDownload:
          type: boolean
          description: Allow the export of the number history report.
        enableRecordingsDownload:
          type: boolean
          description: Allow the export of the number history related call recordings.
        enableAgentResponseEditing:
          type: boolean
          description: Allow the agent to edit number history related agent call responses.
      description: "NumberHistorySettings is an entity containing the hunt group settings
        for the\n Number History section of the hunt group settings manager."
    api.commons.org.ObservedHoliday:
      type: object
      properties:
        day:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MonthDayDate'
          description: Named date.
        holiday:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CountryHoliday'
          description: Holiday service holiday.
      description: ObservedHoliday may be a named date or a holiday.
    api.commons.org.ObservedHolidays:
      type: object
      properties:
        orgId:
          type: string
          description: ID of the Org related to this.
        observedHolidaysId:
          type: string
          description: Unique ID.
        observedHolidaysName:
          type: string
          description: Name of the list.
        description:
          type: string
          description: Description of the list.
        timezone:
          type: integer
          description: The timezone.
          format: enum
        days:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.ObservedHoliday'
          description: The list of dates or holidays.
        lastUpdated:
          type: string
          description: When the list was last updated.
          format: date-time
      description: ObservedHolidays a list of dates or holidays.
    api.commons.org.Organization:
      type: object
      properties:
        orgId:
          type: string
          description: An organization's globally unique identifier.
        enabledRegions:
          type: object
          additionalProperties:
            type: string
          description: Map of regionId to clientSid. Shows an org's enabled regions.
        regionId:
          type: string
          description: Default region org was first enbabled for.
        billingId:
          type: string
          description: Billing_prefix + clientSid. Used for integrations and billing.
        clientSid:
          type: string
          description: "First enabled region's clientSid; will be deprecated for\n
            enabled_regions map."
        name:
          type: string
          description: The organization name.
        addDate:
          type: string
          description: Date of organization creation.
          format: date-time
        isManualOnlyAccount:
          type: boolean
          description: Whether account is manual only.
        backofficeTheme:
          type: integer
          description: Backoffice UI theme/skin.
          format: enum
        archived:
          type: boolean
          description: Archived specifies this organization as no longer active.
        crmId:
          type: string
          description: Salesforce ID used for integrations.
        timeZone:
          type: integer
          description: Organization's time zone.
          format: enum
        callbacksServiceId:
          type: string
          description: Organization callbacks service ID.
        p3OwnerId:
          type: string
          description: Organization that is the parent.
      description: Organization contains the basic properties for an organization.
    api.commons.org.OrganizationPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        defaultCountry:
          type: integer
          description: Organization's default country.
          format: enum
        timeZone:
          type: integer
          description: Operating time zone of organization.
          format: enum
        displayLanguage:
          type: integer
          description: Display language in Backoffice for users of the organization.
          format: enum
        localePreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: Organization's locale preferences.
      description: General preferences controlling organization properties.
    api.commons.org.OtpType_EmailDeliveryMethod:
      type: object
      properties: {}
    api.commons.org.P3PermissionGroup:
      type: object
      properties:
        p3PermissionGroupId:
          type: string
          description: Unique Id for this entity.
        orgId:
          type: string
          description: Owning org.
        regionId:
          type: string
          description: Owning org region.
        name:
          type: string
          description: Display name for this group.
        description:
          type: string
          description: More detailed description for this group.
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: List of permissions associated with this group.
      description: "P3PermissionGroup entity.\n This was migrated from permissions_group
        from skunk\n and is requested by backoffice as the source of permissions."
    api.commons.org.PermissionGroup:
      type: object
      properties:
        permissionGroupId:
          type: string
          description: Unique id for this permission group.
        orgId:
          type: string
          description: Organization this permission group belongs to.
        name:
          type: string
          description: Name to identify by.
        description:
          type: string
          description: Brief description of this group of permissions.
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: List of permissions in this group.
        readOnly:
          type: boolean
          description: Restricts users from modifying this group.
        labelIds:
          type: array
          items:
            type: string
          description: A list of label ids that are assigned to this group.
      description: PermissionGroup defines the permission group entity.
    api.commons.org.PhonePreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        agentPreviewDialing:
          type: boolean
          description: Determines whether broadcasts may be sent as Preview Dial.
        defaultRingLengthThreshold:
          type: integer
          description: The number of seconds to allow ringing to a 3rd party.
          format: int32
        displayRingLengthThreshold:
          type: boolean
          description: Determines whether the setting may be changed while scheduling.
        showCallerId:
          type: boolean
          description: Determines wheter the setting may be show/edited while scheduling.
        defaultUseCallerId:
          type: boolean
          description: Determines whether to use Caller ID by default.
        overrideLinkbackRecording:
          type: boolean
          description: "Determines whether broadcast templates may set to record linkbacks\n
            individually."
        callerIdCfdSid:
          type: string
          description: The 'sid' of the Caller ID field description to use as default.
        defaultDialOrder:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DialOrder'
          description: The dial order of a contact record, default 'First Number Only'.
        answeringMachineDetection:
          type: integer
          description: Which type of answering machine detection to use.
          format: enum
        linkbackRecording:
          type: boolean
          description: Determines whether linkback recording is enabled.
      description: Preferences for phone dial options, call ID, and other call properties.
    api.commons.org.PreviewDialSettings:
      type: object
      properties:
        enablePreviewDialCancel:
          type: boolean
          description: Enable cancelling of Preview Dialing.  `AllowPreviewDialCancel`
        enableAutoPauseOnCancel:
          type: boolean
          description: "Enable automatic pausing when cancelling a Preview Dial call.\n
            `AutoPauseOnPreviewDial`"
        timeoutMinutes:
          type: string
          description: "Indicates when queued preview dial calls should no longer
            be presented\n to agents.\n `Preview Dial Call Time-out`"
        requireNumberConfirmation:
          type: boolean
          description: "Indicates if agents must confirm numbers before calling.\n
            `Preview Dial Confirmation`"
        previewQueueConfig:
          type: string
          description: "The name of the Call Queue Configuration (folder name).\n
            `PreviewQueueConfig`"
      description: "PreviewDialSettings is an entity containing the hunt group settings
        for the\n Preview Dial section of the hunt group manager."
    api.commons.org.PriorityGroup:
      type: object
      properties:
        threshold:
          type: integer
          description: threshold for the priority group
          format: int32
        channelType:
          type: integer
          description: channel type for the priority group
          format: enum
      description: PriorityGroup is a type and threshold in array for AgentProfileGroup
    api.commons.org.RecordingPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        conventionEnabled:
          type: boolean
          description: Whether to use custom recordings file name convention.
        fileNameConvention:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.RecordingsFileNamingConvention'
          description: File name convention for recording files.
        zipConventionEnabled:
          type: boolean
          description: Whether to use custom recordings file name convention for zip.
        zipFileNameConvention:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.RecordingsZipFileNamingConvention'
          description: File name convention for archived/compressed zip recording
            files.
        exportFileType:
          type: integer
          description: Recording export file type (.wav or .mp3).
          format: enum
      description: Preferences for audio recording properties.
    api.commons.org.RecordingsFileNamingConvention:
      type: object
      properties:
        xmlClientPropertySid:
          type: string
          description: XML client property SID.
        inbound:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.FileNamingConvention'
          description: Convention for inbound call recordings.
        manual:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.FileNamingConvention'
          description: Convention for manual-dial call recordings.
        outbound:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.FileNamingConvention'
          description: Convention for outbound call recordings.
        preview:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.FileNamingConvention'
          description: Convention for preview-dial call recordings.
      description: Recording file naming convention properties (per call type).
    api.commons.org.RecordingsZipFileNamingConvention:
      type: object
      properties:
        xmlClientPropertySid:
          type: string
          description: XML client property SID.
        inbound:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.FileNamingConvention'
          description: Convention for inbound call recordings.
        manual:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.FileNamingConvention'
          description: Convention for manual call recordings.
        outbound:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.FileNamingConvention'
          description: Convention for outbound call recordings.
        combined:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.FileNamingConvention'
          description: Convention for combined (all) call recordings.
      description: Recording file naming convention properties for compressed call
        recordings.
    api.commons.org.ReportFilter:
      type: object
      properties:
        standard:
          type: integer
          description: Standard report filter enum choice.
          format: enum
        custom:
          type: string
          description: Custom report filter xml property SID.
      description: Report filter properties.
    api.commons.org.ResponseEvaluator:
      type: object
      properties:
        responseEvaluatorId:
          type: string
          description: ID of the response evaluator.
        orgId:
          type: string
          description: Org ID the response evaluator is associated with.
        name:
          type: string
          description: Name of the evaluator.
        description:
          type: string
          description: The evaluator description, optional.
        regularExpression:
          type: string
          description: Regex pattern.
      description: ResponseEvalutor manages regex
    api.commons.org.SchedulePreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        displayScheduleByTimeZone:
          type: boolean
          description: Whether to display the 'Schedule By Time Zone' setting.
        useScheduleByTimeZone:
          type: boolean
          description: Whether to schedule by time zone.
        scheduleByTimeZoneScope:
          type: integer
          description: Scope to limit your time zone schedules by.
          format: enum
        displayScheduleAsPaused:
          type: boolean
          description: Whether to display the 'Schedule As Paused' setting.
        scheduleAsPaused:
          type: boolean
          description: Toggle for scheduling as running or schedule as paused.
        defaultCompletionThreshold:
          type: string
          description: Threshold percentage to trigger a linked broadcast.
        displayCampaignLinking:
          type: boolean
          description: Whether to display 'Campaign Linking' in campaign options.
        useCampaignLinking:
          type: boolean
          description: Whether to use campaign linking as the default.
        campaignLinks:
          type: object
          additionalProperties:
            type: string
          description: Campaign links map of properties, id/name as key, description
            as value.
        defaultCampaignLinkId:
          type: string
          description: Default campaign link ID.
        resendCancelledCampaigns:
          type: boolean
          description: Whether user canceled campaigns can be resent in the organization.
      description: Preferences for editing campaign scheduling properties.
    api.commons.org.ScheduleRuleField:
      type: object
      properties:
        ruleId:
          type: string
          description: The schdeulde rule SID.
        name:
          type: string
          description: The rule name.
      description: Compliance schedule rule field properties.
    api.commons.org.ScorecardsPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        callSamplePercentage:
          type: integer
          description: "The percentage of randomized calls shown to the user for evaluation.\n
            Must be between 1-100."
          format: uint32
        maxUserEvaluations:
          type: integer
          description: "Maximum number of evaluations per user, per category,\n over
            the given time interval"
          format: uint32
        evaluationInterval:
          type: integer
          description: The time interval over which calls are listed for scoring.
          format: enum
      description: Preferences for scorecards management and evaluation.
    api.commons.org.SimpleCompareExpression:
      type: object
      properties:
        operatorType:
          type: integer
          description: The operator type of SimpleCompareExpression
          format: enum
        actIndex:
          type: string
          description: The act index of the SimpleCompareExpression
        dispositionHeader:
          type: string
          description: The disposition header of the SimpleCompareExpression
        compareValue:
          type: string
          description: The compare value of the SimpleCompareExpression
      description: SimpleCompareExpression describes a simple compare expression
    api.commons.org.Skill:
      type: object
      properties:
        level:
          type: string
        name:
          type: string
        description:
          type: string
        skillSid:
          type: string
      description: Agent skill
    api.commons.org.SkillGroup:
      type: object
      properties:
        skillGroupId:
          type: string
          description: The ID of the skill group
        orgId:
          type: string
          description: The ID of the org the skill group belongs to.
        name:
          type: string
          description: The name of the skill group.
        description:
          type: string
          description: The description of the skill group.
        skillSets:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.SkillSet'
          description: The skills and proficiencies for the skill group.
      description: SkillGroup represents a skill group entity.
    api.commons.org.SkillSet:
      type: object
      properties:
        proficiency:
          type: integer
          description: The proficiency of the skill as a percent [1,100].
          format: int32
        skillSid:
          type: string
          description: The sid of the skill
      description: A set of a skill identifier and the proficiency in that skill
    api.commons.org.TimeOfDay:
      type: object
      properties:
        hour:
          type: integer
          description: The hour of the day.
          format: int32
        minute:
          type: integer
          description: The minute of the hour.
          format: int32
      description: TimeOfDay describes the time of day by hour and minute.
    api.commons.org.TransferCallSettings:
      type: object
      properties:
        enableTransfer:
          type: boolean
          description: Allow the agent to make transfer calls.
        handOffTypes:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TransferCallSettings_HandOffTypes'
          description: Allowed hand-off types for transfer calls.
        recordingStatus:
          type: integer
          description: Indicates start, stop or keep current recording status on transfer.
          format: enum
        transferTypes:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TransferCallSettings_TransferTypes'
          description: Indicates type of allowed transfer types.
        displayTransferNumberPhoneBook:
          type: boolean
          description: Indicates whether or not to display.
        enableTransferNumberEditing:
          type: boolean
          description: Indicates whether to allow the agent to edit the transfer number.
        defaultTransferNumber:
          type: string
          description: The default transfer number prepopulated in the text box.
        startRecordingNumbers:
          type: array
          items:
            type: string
          description: Transfer numbers which will initiate recording the call.
        stopRecordingNumbers:
          type: array
          items:
            type: string
          description: Transfer numbers which will stop recording the call.
        transferNumberCountry:
          type: integer
          description: The default country to use with the transfer number.
          format: enum
        displayTransferCountrySelection:
          type: boolean
          description: Indicate whether to display the country select menu.
        displayCallerIdPhoneBook:
          type: boolean
          description: Indicate whether to display the caller ID phone book.
        enableCallerIdEditing:
          type: boolean
          description: Indicates whether to allow the agent to edit the caller ID.
        defaultCallerId:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TransferCallSettings_DefaultCallerId'
          description: The default caller ID prepopulated in the text box.
        callerIdCountry:
          type: integer
          description: The default country to use with the caller ID.
          format: enum
        displayCallerIdCountrySelection:
          type: boolean
          description: Indicates whether to display the caller ID country select menu.
        displayAgentTransferFiltering:
          type: boolean
          description: Indicates whether to display agent transfer filtering to the
            agent.
        defaultAgentTransferFiltering:
          type: boolean
          description: Indicates whether to filter agents by default.
        enableHuntGroupFiltering:
          type: boolean
          description: Indicates whether to limit transferring to agents in the same
            hunt group.
        requeueQueueConfig:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TransferCallSettings_RequeueQueueConfiguration'
          description: The name of the Requeue Transfer Queue Configuration.
        requeueTransferDisallowed:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TransferCallSettings_RequeueTransferDisallowed'
          description: Disallow specific agent skills for requeue transfer routing.
        pbxTransferDisallowed:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TransferCallSettings_PbxTransferDisallowed'
          description: Disallow specific PBX extensions for PBX transfers.
        enableScrubOverride:
          type: boolean
          description: Allow agent to override scrub decisions.
        enableWhitelist:
          type: boolean
          description: Indicates whether to apply the whitelist to transfer call scrubbing.
        naturalComplianceScrub:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.NaturalLanguageComplianceScrub'
          description: Whether and what NLC compliance rule to apply.
        naturalLanguageComplianceMetadata:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.NaturalLanguageComplianceMetadata'
          description: "Transfer call natural language compliance metadata.\n `Optional
            Transfer Compliance Metadata`\n `Required Transfer Compliance Metadata`"
      description: "TransferCallSettings is an entity containing the hunt group settings
        for the\n Transfer Call section of the hunt group settings manager."
    api.commons.org.TransferCallSettings_DefaultCallerId:
      type: object
      properties:
        usage:
          type: integer
          format: enum
        customCallerId:
          type: string
      description: DefaultCallerId indicates custom or 3rd party and number (if needed).
    api.commons.org.TransferCallSettings_HandOffTypes:
      type: object
      properties:
        enableConference:
          type: boolean
        enableWarm:
          type: boolean
        enableCold:
          type: boolean
      description: HandOffTypes indicates which Hand-off types the agent may use.
    api.commons.org.TransferCallSettings_PbxTransferDisallowed:
      type: object
      properties:
        enable:
          type: boolean
        extensions:
          type: array
          items:
            type: string
      description: PbxTransferDisallowed if enabled, prohibits these extensions.
    api.commons.org.TransferCallSettings_RequeueQueueConfiguration:
      type: object
      properties:
        usage:
          type: integer
          format: enum
        customName:
          type: string
      description: RequeueQueueConfiguration indicates which config to use on transfer.
    api.commons.org.TransferCallSettings_RequeueTransferDisallowed:
      type: object
      properties:
        enable:
          type: boolean
        agentSkillSids:
          type: array
          items:
            type: string
        huntGroupSids:
          type: array
          items:
            type: string
      description: RequeueTransferDisallowed if enabled, prohibits skills/hunt groups.
    api.commons.org.TransferCallSettings_TransferTypes:
      type: object
      properties:
        enableAgentTransfer:
          type: boolean
        enableOpenTransfer:
          type: boolean
        enableRequeueTransfer:
          type: boolean
        enablePbxExtensionTransfer:
          type: boolean
        enableVoicemailTransfer:
          type: boolean
      description: TransferTypes indicates which transfer types the agent may use.
    api.commons.org.TriggerActionOption:
      type: object
      properties:
        action:
          type: integer
          description: The action to take when the trigger is activated
          format: enum
        displayMessage:
          type: string
          description: "The message to be displayed when the trigger is activated\n
            Used for action: Display Message"
        advanceToStatus:
          type: integer
          description: "The status to advance to when the trigger is activated\n Used
            for action: Advance Status\n Following are the valid status transitions:\n
            Waiting -> Paused\n Paused -> Waiting\n On Call -> Wrap Up\n Preview Call
            -> On Call, Waiting\n Manual Dial Call -> Waiting\n Wrap Up -> Waiting,
            Paused"
          format: enum
        webLinkSid:
          type: string
          description: "The sid of the web link to execute when the trigger is activated\n
            Used for action: Execute Web Link"
        integrationLinkSid:
          type: string
          description: "The sid of the integration link to execute when the trigger
            is activated\n Used for action: Execute Integration Link"
      description: 'DEPRECATED: Use services.org.hunt_groups.v1alpha1.TriggerActionOption
        instead'
    api.commons.org.TriggerCallTypes:
      type: object
      properties:
        outbound:
          type: boolean
          description: The call type for outbound calls
        inbound:
          type: boolean
          description: The call type for inbound calls
        manual:
          type: boolean
          description: The call type for internal calls
        preview:
          type: boolean
          description: The call type for preview calls
      description: "TriggerCallTypes is the call types to use for the trigger\n DEPRECATED:
        Use services.org.hunt_groups.v1alpha1.TriggerCallTypes instead"
    api.commons.org.TriggerPauseCode:
      type: object
      properties:
        systemPauseCode:
          type: integer
          description: The system pause code to use for the trigger
          format: enum
        customPauseCode:
          type: string
          description: "The custom pause code to use for the trigger\n It is name
            of a pause code from a pause code set"
      description: "TriggerPauseCode is the pause code to use for the trigger\n DEPRECATED:
        Use services.org.hunt_groups.v1alpha1.TriggerPauseCode instead"
    api.commons.org.Trust:
      type: object
      properties:
        trustId:
          type: string
          description: ID of the trust.
        grantor:
          type: string
          description: Org ID of the org giving out the trust.
        grantee:
          type: string
          description: Org ID of the org receiving the trust.
        name:
          type: string
          description: Name of the trust.
        description:
          type: string
          description: Description of the trust.
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: "Permissions the grantor allows users within the\n grantee
            org to have when assigned."
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: Labels associated with the trusted permissions.
        status:
          type: integer
          description: Status of the Trust.
          format: enum
        deleted:
          type: boolean
      description: Trust is the entity message for trusts.
    api.commons.org.User:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user
        orgId:
          type: string
          description: The ID of the org the user belongs to.
        username:
          type: string
          description: The Username of the user.
        p3PermissionGroupId:
          type: string
          description: The ID of the p3 permission group the user has.
        loginSid:
          type: string
          description: "The p3 login sid of the user.\n This is going to be deprecated,
            RegionSidMap should be used."
        agentSid:
          type: string
          description: "The p3 agent sid of the user.\n This is going to be deprecated,
            RegionSidMap should be used."
        regionId:
          type: string
          description: "The region the user belongs to.\n This is going to be deprecated,
            RegionSidMap should be used."
        partnerAgentId:
          type: string
          description: The User's partner agent id.
        clientSid:
          type: string
          description: The p3 client sid of the user.
        regionSidMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.commons.org.User_RegionSids'
          description: The user's regional sids. The key of the map is a region id.
        apiKey:
          type: string
          description: payload
        email:
          type: string
          description: The User's email.
        loginDisabled:
          type: boolean
          description: Whether or not the user is disabled.
        callerIds:
          type: array
          items:
            type: string
          description: login preferences
        linkbackNumbers:
          type: array
          items:
            type: string
        authUserId:
          type: string
        enableMfa:
          type: boolean
        firstName:
          type: string
          description: The user's first name.
        lastName:
          type: string
          description: THe user's last name.
        created:
          type: string
          description: The date/time the user was created.
          format: date-time
        lastUpdated:
          type: string
          description: The date/time the user was last updated.
          format: date-time
        passwordResetRequired:
          type: boolean
          description: Whether or not the user must reset their password on next login.
        connectionId:
          type: string
          description: "connection id is the id of the auth connection that the\n
            user is coming from if it is a delgated user. If the user\n is not delgated
            this will be nil."
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        permissionGroupIds:
          type: array
          items:
            type: string
          description: UserSettings
        trustIds:
          type: array
          items:
            type: string
          description: List of trust ids the user has been assigned.
        defaultRegion:
          type: string
          description: "List of regions for user\n repeated string regions = 201;\n
            region_id of a user entity"
        defaultApplication:
          type: integer
          description: default_app for a user
          format: enum
        userCallerId:
          type: string
          description: "P3 permission for user\n User caller id"
        agentProfileGroupId:
          type: string
          description: users assigned agent profile group
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Skill'
          description: The skills this user has as an agent, if any.
        agent:
          type: boolean
          description: a bool signalling whether or not the user is also an agent
        accountOwner:
          type: boolean
          description: a bool to determine whether or not user is account owner
        emailVerified:
          type: boolean
          description: Whether or not the user's email is verified.
        whitelistedIps:
          type: array
          items:
            type: string
          description: Whitelisted IPs for the user
      description: User represents a user of the system.
    api.commons.org.User_RegionSids:
      type: object
      properties:
        loginSid:
          type: string
          description: The login sid for the region.
        agentSid:
          type: string
          description: THe agent sid for the region.
        clientSid:
          type: string
          description: THe client sid for the region.
      description: The entity object used in the region_sid_map.
    api.commons.org.Verbiage:
      type: object
      properties:
        order:
          type: string
          description: The order of the verbiage
        header:
          type: string
          description: The header of the verbiage
        body:
          type: string
          description: the body of the verbiage
      description: A verbiage within an Act
    api.commons.org.VoiceAnalyticsPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        enabled:
          type: boolean
          description: "Optional. When enabled call recordings will be transcribed
            and archived\n by localmixer in voice analytics."
        redact:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.VoiceAnalytics_Redact'
          description: "Optional. List of redactions to be performed, when voice analytics
            is\n enabled, on each call recording and transcript."
        notify:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.VoiceAnalytics_Notify'
          description: Optional. Flagging transcript notification preferences.
        billingNotify:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.VoiceAnalytics_Notify'
          description: Optional. Billing report notification preferences.
        numberFormat:
          type: string
          description: Optional. Number format for transcript dispositions.
        redactAllDigits:
          type: boolean
          description: "Optional. Will eventually be deprecated. When voice analytics
            is enabled\n and this is true all cardinal numbers in each call recording
            and\n transcript will be redacted."
        silenceThreshold:
          type: integer
          description: "Required. Minimum milliseconds of silence to occur before
            considered to\n be silence by voice analytics."
          format: uint32
        talkOverThreshold:
          type: integer
          description: "Required. Minimum milliseconds of talk over to occur before
            considered\n to be talk over by voice analytics."
          format: uint32
      description: "Preferences for voice analytics. Primarily consumed and interpreted
        by\n localmixer when mixing and transcribing call recordings."
    api.commons.org.VoiceAnalytics_Notify:
      type: object
      properties:
        cron:
          type: string
          description: "Optional. Cron pattern determining notification frequency.
            Defaults\n to every 15 minutes when not specified."
    api.commons.org.VoiceAnalytics_Number:
      type: object
      properties:
        kind:
          type: integer
          description: Optional. The kind of number to redact.
          format: enum
        minConsecutive:
          type: integer
          description: "Optional. When value is non zero only numbers composed of
            at least\n `min_consecutive` digits will be redacted. For example, when
            the\n transcript contains the number `one two three four five six`\n redaction
            will not occur when `min_consecutive` is greater than 6."
          format: uint32
        maxConsecutive:
          type: integer
          description: "Optional. When value is non zero only numbers composed of
            at most\n `max_consecutive` digits will be redacted. For example, when
            the\n transcript contains the number `one two three four five six`\n redaction
            will not occur when `max_consecutive` is less than 6."
          format: uint32
        slop:
          type: integer
          description: "slop is the number of extra words that can be in between digits
            and\n still count as a number. For example: slop of 2 with min_consecutive\n
            3 would allow \"one uh two and three\" to count as a number."
          format: uint32
    api.commons.org.VoiceAnalytics_Redact:
      type: object
      properties:
        number:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.VoiceAnalytics_Number'
          description: Optional. Redact numbers.
    api.commons.org.WebLink:
      type: object
      properties:
        webLinkSid:
          type: string
          description: The unique sid of a web link
        name:
          type: string
          description: The name of the web link
        description:
          type: string
          description: The description of the web link
        linkType:
          type: integer
          description: The link type
          format: enum
        order:
          type: string
          description: The order position of the web link
        baseUrl:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.WebLinkComponent'
          description: The base url components of the web link
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.WebLinkParameter'
          description: The web link parameters
      description: A structure used for representing a web link
    api.commons.org.WebLinkComponent:
      type: object
      properties:
        keyType:
          type: integer
          description: The component key type of the web link component
          format: enum
        value:
          type: string
          description: The value of the web link component
      description: WebLinkComponent contains the key type and string of a web link
    api.commons.org.WebLinkParameter:
      type: object
      properties:
        key:
          type: string
          description: The key for a web link parameter
        components:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.WebLinkComponent'
          description: The web link components for a web link parameter
      description: WebLinkParameter contains a key and web link component
    api.commons.org.WebhookPreferences:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        pushUrlsEnabled:
          type: boolean
          description: Whether push URLs are enabled.
        callResultPushUrl:
          type: string
          description: Call result of the push URL.
        agentResponsePushUrl:
          type: string
          description: Agent response of the push URL.
      description: Preferences for web-hook push URLs.
    api.commons.org.ZipCodeField:
      type: object
      properties:
        cfdSid:
          type: string
          description: Contact field description SID.
        fieldName:
          type: string
          description: The name of the field.
      description: ZIP/postal code scrubbing properties.
    api.v0alpha.ACDGetAllAgentsStatusesReply:
      type: object
      properties:
        agentStatusDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDetails'
    api.v0alpha.ACDGetAllAgentsStatusesRequest:
      type: object
      properties:
        skills:
          type: array
          items:
            type: string
        allSkillsRequired:
          type: boolean
    api.v0alpha.AcceptLinkbackRecordingTermsRequest:
      type: object
      properties: {}
      description: Request for linkback recording terms agreement
    api.v0alpha.AcceptLinkbackRecordingTermsResponse:
      type: object
      properties: {}
      description: Response for linkback recording terms agreement
    api.v0alpha.AcceptSecureFormFieldReq:
      type: object
      properties:
        voiceSessionSid:
          type: string
    api.v0alpha.AcceptSecureFormFieldRes:
      type: object
      properties: {}
    api.v0alpha.AccountDataVisibility:
      type: object
      properties:
        viewer:
          type: string
        views:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.View'
    api.v0alpha.Act:
      type: object
      properties:
        disposition:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Disposition'
        verbiage:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Verbiage'
        defaultConditionalNavigationTarget:
          type: string
        conditionalNavigation:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ConditionalNavigation'
        pageArrivalRecordingControl:
          type: string
        pageExitRecordingControl:
          type: string
    api.v0alpha.ActiveReportJobsSummary:
      type: object
      properties:
        activeReportJobsCurrent:
          type: string
        processedReportJobs:
          type: string
        reportJobsActivator:
          type: string
        proStatus:
          type: boolean
    api.v0alpha.ActiveWatchersSummary:
      type: object
      properties:
        activeWatchersCurrent:
          type: string
        processedWatchers:
          type: string
        watchersActivator:
          type: string
        proStatus:
          type: boolean
    api.v0alpha.ActivityLog:
      type: object
      properties:
        userName:
          type: string
        originationIp:
          type: string
        actionDate:
          type: string
        action:
          type: string
        notes:
          type: string
    api.v0alpha.AddLoginToUserRequest:
      type: object
      properties:
        userId:
          type: string
    api.v0alpha.AddLoginToUserResponse:
      type: object
      properties: {}
    api.v0alpha.AddMyUserSubscriptionRequest:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.UserSubscription'
          description: "Required.\n All fields (except subscription id) must be set."
      description: Request to add a user subscription.
    api.v0alpha.AddMyUserSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v0alpha.UserSubscription'
      description: "Response to adding a user subscription.\n Contains a single user
        subscription."
    api.v0alpha.AddOrgBillingOverrideRequest:
      type: object
      properties:
        orgId:
          type: string
        region:
          type: string
        rates:
          $ref: '#/components/schemas/api.v0alpha.PhoneBillingRates'
        country:
          type: integer
          format: enum
      description: Request message for the AddOrgBillingOverride rpc.
    api.v0alpha.AddOrgBillingOverrideResponse:
      type: object
      properties: {}
      description: Response message for the AddOrgBillingOverride rpc.
    api.v0alpha.AddScrubListEntriesReq:
      type: object
      properties:
        listId:
          type: string
          description: scrub list id, this is can be obtained from a GetScrubLists
            method
        list:
          type: array
          items:
            type: string
          description: "@deprecated\n don't use it, it will be removed soon"
        contentType:
          type: integer
          description: content_type represents the type of entries are stored in scrub_entry_details
            field (phone number, sms, email ...)
          format: enum
        countryCode:
          type: string
          description: "country calling code defined by ITU-T in E.164 standard w/o
            the + sign in front\n this field is relevant if the scrub_entry_details
            list contains phone numbers"
        scrubEntryDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ScrubEntryDetails'
          description: the list of scrub entries that are sent in order to be added
      description: AddScrubListEntries request message
    api.v0alpha.AddUserRegionRequest:
      type: object
      properties:
        userId:
          type: string
        regionId:
          type: string
    api.v0alpha.AddUserRegionResponse:
      type: object
      properties: {}
    api.v0alpha.AddUserSubscriptionRequest:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.UserSubscription'
          description: "Required.\n All fields (except subscription id) must be set."
      description: Request to add a user subscription.
    api.v0alpha.AddUserSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v0alpha.UserSubscription'
      description: "Response to adding a user subscription.\n Contains a single user
        subscription."
    api.v0alpha.AdminClientPreferences:
      type: object
      properties:
        useReservedCarrier:
          type: boolean
        reservedCarriers:
          type: array
          items:
            type: string
        emailKey:
          type: string
        emailId:
          type: string
        emailName:
          type: string
        whitelistIps:
          type: array
          items:
            type: string
        whitelistDomains:
          type: array
          items:
            type: string
        callbacksServiceId:
          type: string
        agentScreenRecording:
          type: boolean
        allowedCountries:
          type: array
          items:
            type: integer
            format: enum
      description: Wrapper AdminClientPreferences object for get response and update
        request
    api.v0alpha.AdminGetUserDetailsRequest:
      type: object
      properties:
        userId:
          type: string
    api.v0alpha.AdminListUserDescriptionsRequest:
      type: object
      properties:
        regionId:
          type: string
          description: Optional. RegionId to filter by.
        orgIdFilter:
          type: string
          description: Optional. OrgId to filter by.
    api.v0alpha.AdminListUserDescriptionsResponse:
      type: object
      properties:
        userDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.UserDescription'
    api.v0alpha.Agent:
      type: object
      properties:
        agentSid:
          type: string
        clientSid:
          type: string
        agentProfileSid:
          type: string
        webLogin:
          type: string
        agentId:
          type: string
        agentPin:
          type: string
        addDate:
          type: string
          format: date-time
        modifyDate:
          type: string
          format: date-time
        callbackNumber:
          type: string
        callbackExtension:
          type: string
        huntGroupSid:
          type: string
        subscriberUsername:
          type: string
        partnerAgentId:
          type: string
        lastPasswordChangeDate:
          type: string
          format: date-time
    api.v0alpha.AgentBillingRates:
      type: object
      properties:
        agentTollFreePpi:
          type: number
          format: double
        agentSoftphonePpi:
          type: number
          format: double
        agentLocalPpi:
          type: number
          format: double
    api.v0alpha.AgentCallActivityDetails:
      type: object
      properties:
        agentSid:
          type: string
        agentName:
          type: string
        agentSessionSid:
          type: string
        huntGroupSid:
          type: string
        huntGroupName:
          type: string
        agentCallCost:
          type: number
          format: double
        agentWaitDuration:
          type: string
        callWaitDuration:
          type: string
        holdDuration:
          type: string
        manualDuration:
          type: string
        pauseDuration:
          type: string
        previewDuration:
          type: string
        suspendedDuration:
          type: string
        talkDuration:
          type: string
        transferDuration:
          type: string
        wrapUpDuration:
          type: string
        agentCallSid:
          type: string
        huntGroupType:
          type: integer
          format: enum
    api.v0alpha.AgentCallLog:
      type: object
      properties:
        agentCallLogSid:
          type: string
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        actionDate:
          type: string
          format: date-time
        actionKey:
          type: string
        actionValue:
          type: string
    api.v0alpha.AgentCallResponse:
      type: object
      properties:
        agentCallResponseSid:
          type: string
        agentCallSid:
          type: string
        key:
          type: string
        value:
          type: string
        order:
          type: integer
          format: int32
    api.v0alpha.AgentCallResponseDetails:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        order:
          type: string
    api.v0alpha.AgentDisconnectReply:
      type: object
      properties: {}
    api.v0alpha.AgentDisconnectRequest:
      type: object
      properties:
        reason:
          type: string
          description: 'TODO: reason - will need to be converted to use an ENUM.'
        sessionSid:
          type: string
    api.v0alpha.AgentDispositionConditionalDncl_DispositionExpirationTable:
      type: object
      properties:
        dispositionValue:
          type: string
        integer:
          type: string
    api.v0alpha.AgentDispositionConditionalDncl_DispositionRulesTable:
      type: object
      properties:
        dispositionKey:
          type: string
        dispositionExpirationTable:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentDispositionConditionalDncl_DispositionExpirationTable'
    api.v0alpha.AgentGUIBusyReply:
      type: object
      properties: {}
    api.v0alpha.AgentGUIBusyRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.AgentGetCallFromHoldReply:
      type: object
      properties: {}
    api.v0alpha.AgentGetCallFromHoldRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.AgentGetConnectedPartyReply:
      type: object
      properties:
        callId:
          type: string
        callType:
          type: integer
          format: enum
    api.v0alpha.AgentGetConnectedPartyRequest:
      type: object
      properties:
        sessionSid:
          type: string
        userId:
          type: string
    api.v0alpha.AgentGetSpecificCallFromHoldReply:
      type: object
      properties: {}
    api.v0alpha.AgentGetSpecificCallFromHoldRequest:
      type: object
      properties:
        callId:
          type: string
        callType:
          type: integer
          format: enum
        sessionSid:
          type: string
    api.v0alpha.AgentGetStatusReply:
      type: object
      properties:
        status:
          type: string
        statusDesc:
          type: integer
          format: enum
        paused:
          type: boolean
        queue:
          type: string
        currentSessionId:
          type: string
        lastStatusChange:
          type: string
        monitoring:
          type: boolean
        callsCount:
          type: string
        lastSipCode:
          type: string
        agentPeerIsLostCall:
          type: boolean
        disabled:
          type: boolean
        keepAliveSucceeded:
          type: boolean
        transferMembers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.TransferMember'
        agentIsMuted:
          type: boolean
    api.v0alpha.AgentGetStatusRequest:
      type: object
      properties:
        sessionSid:
          type: string
        performKeepAlive:
          type: boolean
    api.v0alpha.AgentHoldSettings:
      type: object
      properties:
        allowed:
          type: integer
          format: enum
        autoPauseOnMultiHold:
          type: boolean
    api.v0alpha.AgentIntercomAcceptReply:
      type: object
      properties: {}
    api.v0alpha.AgentIntercomAcceptRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.AgentIntercomCancelReply:
      type: object
      properties: {}
    api.v0alpha.AgentIntercomCancelRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.AgentIntercomRejectReply:
      type: object
      properties: {}
    api.v0alpha.AgentIntercomRejectRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.AgentIntercomReply:
      type: object
      properties: {}
    api.v0alpha.AgentIntercomRequest:
      type: object
      properties:
        targetAgentId:
          type: string
        sessionSid:
          type: string
    api.v0alpha.AgentInviteTransferCallerToConferenceReply:
      type: object
      properties: {}
    api.v0alpha.AgentInviteTransferCallerToConferenceRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.AgentLoggingData:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        actionValueSuffix:
          type: string
    api.v0alpha.AgentLoginGuiStatisticsTemplate:
      type: object
      properties:
        description:
          type: string
          description: Template description.
        genericStatisticFormatRule:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.GenericStatisticFormatRule'
          description: List of format rules.
        xmlClientPropertySid:
          type: string
          description: xml_client_property_sid for template.
        inclusionType:
          type: string
          description: Inclusion type.
        statisticTableId:
          type: string
          description: Statistics table id.
        name:
          type: string
          description: Template name.
      description: Agent login GUI statistics template properties.
    api.v0alpha.AgentMonitorCallsReply:
      type: object
      properties: {}
    api.v0alpha.AgentMonitorCallsRequest:
      type: object
      properties:
        monitor:
          type: boolean
        sessionSid:
          type: string
    api.v0alpha.AgentMuteReply:
      type: object
      properties: {}
    api.v0alpha.AgentMuteRequest:
      type: object
      properties:
        sessionSid:
          type: string
          description: the session sid for the agent
    api.v0alpha.AgentPBXApproveCallReply:
      type: object
      properties: {}
    api.v0alpha.AgentPBXApproveCallRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.AgentPBXRejectCallReply:
      type: object
      properties: {}
    api.v0alpha.AgentPBXRejectCallRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.AgentPauseReply:
      type: object
      properties: {}
    api.v0alpha.AgentPauseRequest:
      type: object
      properties:
        sessionSid:
          type: string
        reason:
          type: string
    api.v0alpha.AgentPreferences:
      type: object
      properties:
        defaultAgentDialIn:
          type: string
        pbxExtensionLength:
          type: integer
          format: int32
        defaultSoftphoneVolumeIn:
          type: integer
          format: int32
        defaultSoftphoneVolumeOut:
          type: integer
          format: int32
        configDialInNumbers:
          type: array
          items:
            type: string
        clientDialInNumbers:
          type: array
          items:
            type: string
        manualDialCallerIdPrivacy:
          type: boolean
        useManualDialCallerIdPrivacy:
          type: boolean
        messageNotificationsDisabled:
          type: boolean
      description: Wrapper AgentPreferences object for get response and update request
    api.v0alpha.AgentProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
      description: AgentProfile represents an agent profile.
    api.v0alpha.AgentPutCallOnHoldReply:
      type: object
      properties: {}
    api.v0alpha.AgentPutCallOnHoldRequest:
      type: object
      properties:
        holdType:
          type: integer
          format: enum
        sessionSid:
          type: string
    api.v0alpha.AgentReceiveMessageReply:
      type: object
      properties:
        message:
          type: string
        timestamp:
          type: string
    api.v0alpha.AgentReceiveMessageRequest:
      type: object
      properties:
        minimumTimestamp:
          type: string
        sessionSid:
          type: string
    api.v0alpha.AgentSession:
      type: object
      properties:
        agentSessionSid:
          type: string
        webLoginTime:
          type: string
          format: date-time
        webLogoutTime:
          type: string
          format: date-time
        ivrLoginTime:
          type: string
          format: date-time
        ivrLogoutTime:
          type: string
          format: date-time
        ivrDuration:
          type: integer
          format: int32
        ivrBilledDuration:
          type: integer
          format: int32
        cost:
          type: number
          format: double
        agentSid:
          type: string
        status:
          type: integer
          format: int32
        softphoneUser:
          type: boolean
        agentDialIn:
          type: integer
          format: enum
        agentCallerid:
          type: string
        agentDialedNumber:
          type: string
        worker:
          type: string
        huntGroupSid:
          type: string
        waitDuration:
          type: integer
          format: int32
        pauseDuration:
          type: integer
          format: int32
        transferDuration:
          type: integer
          format: int32
        wrapUpDuration:
          type: integer
          format: int32
        talkDuration:
          type: integer
          format: int32
        manualDuration:
          type: integer
          format: int32
        previewDuration:
          type: integer
          format: int32
        holdDuration:
          type: integer
          format: int32
    api.v0alpha.AgentSessionEventReq:
      type: object
      properties:
        agentSessionSid:
          type: string
        actionKey:
          type: integer
          format: enum
        actionValue:
          type: string
    api.v0alpha.AgentSessionEventRes:
      type: object
      properties: {}
    api.v0alpha.AgentSetReadyReply:
      type: object
      properties: {}
    api.v0alpha.AgentSetReadyRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.AgentSkill:
      type: object
      properties:
        agentSkillSid:
          type: string
        name:
          type: string
        description:
          type: string
    api.v0alpha.AgentSkillsFilter:
      type: object
      properties:
        xmlClientPropertySid:
          type: string
        name:
          type: string
      description: AgentSkillsFilter property
    api.v0alpha.AgentStatisticsSettings:
      type: object
      properties:
        showStatistics:
          type: boolean
        showCallHistory:
          type: boolean
        filterCallHistory:
          type: integer
          format: enum
    api.v0alpha.AgentStatusDetails:
      type: object
      properties:
        sid:
          type: string
        currentSessionId:
          type: string
        status:
          type: string
        statusDesc:
          type: integer
          format: enum
        userId:
          type: string
          description: The users id
    api.v0alpha.AgentStatusDisplayTemplate:
      type: object
      properties:
        readyStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
        inConferenceStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
        wrapUpStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
        pausedStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
        transferCallStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
        previewCallStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
        manualCallStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
        pbxCallStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
        agentIntercomStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
        xmlClientPropertySid:
          type: string
        callConnectingStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
        intercomSourceStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
        intercomDestinationStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
        transferLostStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle'
    api.v0alpha.AgentStatusDisplayTemplate_AgentStatusSinceStyle:
      type: object
      properties:
        bgRed:
          type: string
        bgGreen:
          type: string
        bgBlue:
          type: string
        fgRed:
          type: string
        fgGreen:
          type: string
        fgBlue:
          type: string
        agentGuiStatus:
          type: string
        durationInStatus:
          type: string
    api.v0alpha.AgentTriggerTemplate:
      type: object
      properties:
        description:
          type: string
        loggedIn:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_LoggedIn'
        waiting:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_Waiting'
        paused:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_Paused'
        onCall:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_OnCall'
        transferCall:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_TransferCall'
        transferLost:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_TransferLost'
        transferTargetLost:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_TransferTargetLost'
        previewCall:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_PreviewCall'
        manualDialCall:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_ManualDialCall'
        wrapUp:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_WrapUp'
        id:
          type: string
    api.v0alpha.AgentTriggerTemplate_AdvanceStatus:
      type: object
      properties:
        statusType:
          type: integer
          format: enum
    api.v0alpha.AgentTriggerTemplate_DisplayMessage:
      type: object
      properties:
        message:
          type: string
    api.v0alpha.AgentTriggerTemplate_EjectAgent:
      type: object
      properties: {}
    api.v0alpha.AgentTriggerTemplate_ExecuteWebLink:
      type: object
      properties:
        webLinkId:
          type: string
    api.v0alpha.AgentTriggerTemplate_LoggedIn:
      type: object
      properties:
        displayMessage:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_DisplayMessage'
        ejectAgent:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_EjectAgent'
        executeWebLink:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_ExecuteWebLink'
    api.v0alpha.AgentTriggerTemplate_ManualDialCall:
      type: object
      properties:
        duration:
          type: string
        scheduledCallbackPresent:
          type: boolean
        advanceStatus:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_AdvanceStatus'
          description: 'Valid AdvanceStatusType Values: WAITING'
        displayMessage:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_DisplayMessage'
        ejectAgent:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_EjectAgent'
        executeWebLink:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_ExecuteWebLink'
    api.v0alpha.AgentTriggerTemplate_OnCall:
      type: object
      properties:
        outbound:
          type: boolean
        inbound:
          type: boolean
        manual:
          type: boolean
        preview:
          type: boolean
        duration:
          type: string
        advanceStatus:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_AdvanceStatus'
          description: 'Valid AdvanceStatusType Values: WRAP_UP'
        displayMessage:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_DisplayMessage'
        ejectAgent:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_EjectAgent'
        executeWebLink:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_ExecuteWebLink'
    api.v0alpha.AgentTriggerTemplate_Paused:
      type: object
      properties:
        duration:
          type: string
        customPauseCodeSid:
          type: string
          description: this field is an xml_client_property_sid in skunk.
        automaticSystemCode:
          type: integer
          format: enum
        advanceStatus:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_AdvanceStatus'
          description: 'Valid AdvanceStatusType Values: WAITING'
        displayMessage:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_DisplayMessage'
        ejectAgent:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_EjectAgent'
        executeWebLink:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_ExecuteWebLink'
        pauseCode:
          $ref: '#/components/schemas/api.v0alpha.PauseCode'
    api.v0alpha.AgentTriggerTemplate_PreviewCall:
      type: object
      properties:
        duration:
          type: string
        advanceStatus:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_AdvanceStatus'
          description: 'Valid AdvanceStatusType Values: WAITING'
        displayMessage:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_DisplayMessage'
        ejectAgent:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_EjectAgent'
        executeWebLink:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_ExecuteWebLink'
    api.v0alpha.AgentTriggerTemplate_TransferCall:
      type: object
      properties:
        duration:
          type: string
        displayMessage:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_DisplayMessage'
        ejectAgent:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_EjectAgent'
        executeWebLink:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_ExecuteWebLink'
    api.v0alpha.AgentTriggerTemplate_TransferLost:
      type: object
      properties:
        duration:
          type: string
        displayMessage:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_DisplayMessage'
        ejectAgent:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_EjectAgent'
        executeWebLink:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_ExecuteWebLink'
    api.v0alpha.AgentTriggerTemplate_TransferTargetLost:
      type: object
      properties:
        duration:
          type: string
        displayMessage:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_DisplayMessage'
        ejectAgent:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_EjectAgent'
        executeWebLink:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_ExecuteWebLink'
    api.v0alpha.AgentTriggerTemplate_Waiting:
      type: object
      properties:
        duration:
          type: string
        advanceStatus:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_AdvanceStatus'
          description: 'Valid AdvanceStatusType Values: PAUSED'
        displayMessage:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_DisplayMessage'
        ejectAgent:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_EjectAgent'
        executeWebLink:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_ExecuteWebLink'
    api.v0alpha.AgentTriggerTemplate_WrapUp:
      type: object
      properties:
        outbound:
          type: boolean
        inbound:
          type: boolean
        manual:
          type: boolean
        preview:
          type: boolean
        duration:
          type: string
        advanceStatus:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_AdvanceStatus'
          description: 'Valid AdvanceStatusType Values: WAITING, PAUSED'
        displayMessage:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_DisplayMessage'
        ejectAgent:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_EjectAgent'
        executeWebLink:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate_ExecuteWebLink'
    api.v0alpha.AgentUnmuteReply:
      type: object
      properties: {}
    api.v0alpha.AgentUnmuteRequest:
      type: object
      properties:
        sessionSid:
          type: string
          description: the session sid for the agent
    api.v0alpha.AgentUser:
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
        userName:
          type: string
        huntGroupName:
          type: string
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Skill'
        partnerAgentId:
          type: string
        callbackExtension:
          type: string
        callbackNumber:
          type: string
        huntGroupSid:
          type: string
        agentSid:
          type: string
        userCallerId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        agentProfileGroupId:
          type: string
        delegated:
          type: boolean
          description: "Boolean for whether or not the user is a delegated login authenticated
            through a third party provider.\n Delegated login users are from connected
            login managements like Azure or Okta"
        agentProfileGroupName:
          type: string
          description: the name of the agent profile group assigned to the agent
        disabled:
          type: boolean
          description: whether or not the user is disabled.
        hasAgentPerm:
          type: boolean
          description: whether or not the user has the AGENT permission
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        email:
          type: string
          description: The email of the agent. Empty if none set.
        labelEntities:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Label'
          description: A list of labels assigned to the user
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PermissionGroup'
          description: PermissionGroups of the Agent
    api.v0alpha.AgentsByAgentSidShort:
      type: object
      properties:
        agentSid:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    api.v0alpha.AnaAccount:
      type: object
      properties:
        uuid:
          type: string
        p3ClientSid:
          type: string
        registrationDate:
          type: string
          format: date-time
        pricePerDoc:
          type: number
          format: double
        anaTimeZone:
          type: integer
          format: enum
        homeDashboard:
          type: string
        adoptable:
          type: boolean
        defaultTimeFilter:
          type: string
        neoHomeDashboard:
          type: string
        currentMonthMaxDocCount:
          type: string
        currentWeeks:
          type: string
    api.v0alpha.AnnouncementMixing_Config:
      type: object
      properties:
        option:
          type: integer
          format: enum
    api.v0alpha.ApiEntrypoint:
      type: object
      properties:
        ftsId:
          type: string
        fileTemplateId:
          type: string
          description: prefered/default template
        incremental:
          type: boolean
        encrypted:
          type: boolean
    api.v0alpha.AppendProcess:
      type: object
      properties:
        ftsId:
          type: string
      description: "this process downloads the records from the signed_url\n and writes
        them to the output"
    api.v0alpha.ApplicationDashboards:
      type: object
      properties:
        application:
          type: integer
          description: application dashboard id
          format: enum
        dashboardSummaries:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.DashboardSummary'
      description: ApplicationDashboards wraps a list of dashboards for a specific
        application
    api.v0alpha.ApproveTaskRequest:
      type: object
      properties:
        taskSid:
          type: string
    api.v0alpha.ApproveTaskResponse:
      type: object
      properties: {}
    api.v0alpha.ArchiveCampaignReq:
      type: object
      properties:
        campaignSid:
          type: string
          description: the campaign identifier
        channelType:
          type: integer
          description: the campaign's channel type
          format: enum
        campaignDirection:
          type: integer
          description: the campaign direction
          format: enum
      description: Request to archive a campaign
    api.v0alpha.ArchiveCampaignRes:
      type: object
      properties:
        referenceId:
          type: string
          description: send back ghost notifier referenceID
      description: Response to archive a campaign
    api.v0alpha.ArchiveOrganizationRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Required. Archives the specified organization
      description: The request for api.v0alpha.ArchiveOrganization
    api.v0alpha.ArchiveOrganizationResponse:
      type: object
      properties: {}
      description: The response for api.v0alpha.ArchiveOrganization
    api.v0alpha.AssignAgentProfileGroupsRequest:
      type: object
      properties:
        agentProfileGroupId:
          type: string
        userIds:
          type: array
          items:
            type: string
    api.v0alpha.AssignAgentProfileGroupsResponse:
      type: object
      properties: {}
    api.v0alpha.AssignRuleSetReq:
      type: object
      properties:
        commType:
          $ref: '#/components/schemas/api.commons.CommType'
        commId:
          type: string
        ruleSetId:
          type: string
    api.v0alpha.AssignRuleSetRes:
      type: object
      properties:
        cplRuleSetAssignmentId:
          type: string
    api.v0alpha.AssignScenarioReq:
      type: object
      properties:
        cplRuleSetId:
          type: string
        cplScenarioId:
          type: string
    api.v0alpha.AssignUserPermissionGroupRequest:
      type: object
      properties:
        permissionGroupId:
          type: string
          description: Required. The id of the permission group that is being assigned.
        assignUserId:
          type: string
          description: Required. The id of the user the permission group is being
            assigned to.
      description: The request for api.v0alpha.AssignUserPermissionGroup.
    api.v0alpha.AssignUserPermissionGroupResponse:
      type: object
      properties: {}
      description: The response for api.v0alpha.AssignUserPermissionGroup.
    api.v0alpha.AssignUserToAccountOwnerPermissionGroupRequest:
      type: object
      properties:
        userId:
          type: string
          description: User id of the user requesting permissions.
      description: The request for org.Org.AssignUserToAccountOwnerPermissionGroup.
    api.v0alpha.AssignUserToAccountOwnerPermissionGroupResponse:
      type: object
      properties: {}
      description: The response for org.Org.AssignUserToAccountOwnerPermissionGroup.
    api.v0alpha.AssignUsersP3PermissionGroupRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
        permissionGroupId:
          type: string
    api.v0alpha.AssignUsersP3PermissionGroupResponse:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
    api.v0alpha.AssignUsersPermissionGroupRequest:
      type: object
      properties:
        permissionGroupId:
          type: string
          description: Required. The id of the permission group that is being assigned.
        assignUserIds:
          type: array
          items:
            type: string
          description: Required. The ids of the users the permission group is being
            assigned to.
      description: The request for api.v0alpha.AssignUsersPermissionGroup.
    api.v0alpha.AssignUsersPermissionGroupResponse:
      type: object
      properties: {}
      description: The response for api.v0alpha.AssignUsersPermissionGroup.
    api.v0alpha.AssignedScenario:
      type: object
      properties:
        scenario:
          $ref: '#/components/schemas/api.v0alpha.Scenario'
        enabled:
          type: boolean
        lastExecutionResult:
          $ref: '#/components/schemas/api.commons.ScenarioResult'
    api.v0alpha.AttentionTones_Config:
      type: object
      properties:
        agentStatusPaused:
          type: boolean
          description: at least one of these statuses must be true.
        agentStatusWrapUp:
          type: boolean
        tones:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AttentionTones_Tones'
          description: 'NOTE: no more than 10 tones. pauses don''t count. pauses cannot
            be adjacent'
    api.v0alpha.AttentionTones_Disableable:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/api.v0alpha.AttentionTones_Config'
        disable:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Disable'
    api.v0alpha.AttentionTones_Tones:
      type: object
      properties:
        tone:
          type: string
        pause:
          type: number
          format: double
    api.v0alpha.AuthConnectionSettings:
      type: object
      properties:
        provider:
          type: integer
          description: "provider is the type of auth0 connection.\n NONE means the
            org doesn't have a connection setup."
          format: enum
        issuerUrl:
          type: string
          description: "issuer_url is the url provided by the identity provider\n
            used to get authorization tokens."
        tenantUrl:
          type: string
          description: "tenant_url is the url used to match user's emails so\n that
            the connection is used."
        clientId:
          type: string
          description: "client_id is the id of the application created from\n the
            auth provider."
        connectionId:
          type: string
          description: "connection_id is the id of the auth0 connection.\n This field
            will be populated automatically during\n the CreateAuthConnection rpc."
        secretExpiration:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AuthConnectionSettings_SecretExpiration'
          description: "secret_expiration is an optional field that is\n used to know
            when the connection's secret will\n expire. If the connection doesn't
            have a secret\n or the secret will never expire this will be nil."
        defaultGroup:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.GroupItem'
          description: "default_group defines settings used for all users for this
            connection\n regardless of their groups. Group name is ignored for the
            default. This\n field can be left nil if no default settings are desired."
        customGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.GroupItem'
          description: "custom_groups defines the settings that will be used if a
            user with\n this connection contains one or more of the matching group
            names.\n If a user has multiple matching groups the settings for the highest\n
            priority custom group will be used. Priority is determined by the custom\n
            groups position in the list."
      description: ConnectionSettings is the entity for auth 0 connection information.
    api.v0alpha.AuthConnectionSettings_SecretExpiration:
      type: object
      properties:
        date:
          type: string
          format: date-time
    api.v0alpha.AuthenticationPreferences:
      type: object
      properties:
        authorizationViaIp:
          type: boolean
        allowedIps:
          type: array
          items:
            type: string
        agentApiKey:
          type: string
      description: Wrapper AuthenticationPreferences object for get response and update
        request
    api.v0alpha.BargeInFiltering:
      type: object
      properties:
        huntGroup:
          $ref: '#/components/schemas/api.v0alpha.BargeInFiltering_HuntGroup'
        agentStatus:
          $ref: '#/components/schemas/api.v0alpha.BargeInFiltering_AgentStatus'
      description: Barge-in filtering
    api.v0alpha.BargeInFiltering_AgentStatus:
      type: object
      properties:
        any:
          type: boolean
        waiting:
          type: boolean
        onCall:
          type: boolean
        wrapUp:
          type: boolean
        paused:
          type: boolean
        transfer:
          type: boolean
        preview:
          type: boolean
        manual:
          type: boolean
        pbx:
          type: boolean
        intercom:
          type: boolean
    api.v0alpha.BargeInFiltering_HuntGroup:
      type: object
      properties:
        any:
          type: boolean
        huntGroupSid:
          type: string
    api.v0alpha.BillingRegionMap:
      type: object
      properties:
        regionRates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v0alpha.PhoneBillingRates'
          description: 'Key: region name'
    api.v0alpha.BillingSummary:
      type: object
      properties:
        clientSid:
          type: string
        clientName:
          type: string
        proStatus:
          type: boolean
        weeks:
          $ref: '#/components/schemas/api.v0alpha.WeeksSummary'
        customReports:
          $ref: '#/components/schemas/api.v0alpha.CustomReportsSummary'
        reportJobs:
          $ref: '#/components/schemas/api.v0alpha.ActiveReportJobsSummary'
        watchers:
          $ref: '#/components/schemas/api.v0alpha.ActiveWatchersSummary'
        multiClient:
          $ref: '#/components/schemas/api.v0alpha.MultiClientSummary'
    api.v0alpha.BroadcastPreferences:
      type: object
      properties:
        dialListPenetrationStrategy:
          type: boolean
        displayListPenetrationStrategy:
          type: boolean
        displayFollowTheSun:
          type: boolean
        followTheSun:
          type: boolean
        sequenceTerminatorOverride:
          type: boolean
        broadcastTemplateOrdering:
          type: integer
          format: enum
        emailFromAddresses:
          type: array
          items:
            type: string
        startTimeEnabled:
          type: boolean
        defaultStartTime:
          $ref: '#/components/schemas/api.v0alpha.BroadcastTime'
        stopTimeEnabled:
          type: boolean
        defaultStopTime:
          $ref: '#/components/schemas/api.v0alpha.BroadcastTime'
      description: Wrapper BroadcastPreferences object for get response and update
        request
    api.v0alpha.BroadcastTime:
      type: object
      properties:
        hours:
          type: integer
          format: int32
        minutes:
          type: integer
          format: int32
        timezone:
          type: integer
          format: enum
      description: Broadcast time specification
    api.v0alpha.BulkWebEntrypointProcess:
      type: object
      properties:
        preliminaryRequests:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.HttpReq'
          description: "the requests to make, in order, to access priliminary data
            needed\n to make the bulk data action part of the entrypoint.\n the user
            is expected to specify which values need to be saved\n in the HttpReq.named_response_values
            map."
        paginatedRequest:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.PaginatedHttpRequest'
          description: "this request is expected to return records that can be parsed
            by\n the file template each time it is called.\n if no termination case
            is specified, then we terminate after the first run."
        fileTemplateId:
          type: string
          description: the file template that can parse the paginated data
        name:
          type: string
          description: "The name of this process. -YYYYMMDD will be attached.\n If
            empty, defaults to web-entrypoint-<now>.\n If scheduled through the lms-api,
            the element name will be used if left\n blank"
        cron:
          type: string
          description: the cron string, just like sftp_import process
        timezone:
          type: string
          description: Specifies the timezone to be used by the cron
        enabled:
          type: boolean
          description: if false, the cron will not put events in the queue when triggered
        flushPageCount:
          type: string
          description: "how many pages we should save before aggregating the data
            and sending downstream\n default is 100. Max is 10000.\n If a termination
            state hasn't been reached, the event will be re-queued and continue\n
            where it left off."
        flushMinuteCount:
          type: string
          description: "how much total elapsed time (in minutes) we want to wait before
            flushing records.\n if total time spent aggregating the data goes over
            this many minutes, we will flush\n the current records downstream.\n default
            is 20. Max is 120. Min is 1.\n If a termination state hasn't been reached,
            the event will be re-queued and continue\n where it left off."
        flushDuringCheck:
          type: boolean
          description: "if true, we will switch to processing mode when we have enough
            records to flush\n even if we haven't downloaded all the pages yet.\n
            after the current records are flushed, we switch back to downloading the
            remaining records.\n If false (default), we download all the pages before
            we start processing any records."
      description: "BulkWebEntrypointProcess works like a WebEntrypointProcess, but
        allows\n user to specify a paginated request that is repeated till there are
        no\n more records to import. This should be used when we don't know how much\n
        data we are importing, or if we have a long running"
    api.v0alpha.BusinessPreferences:
      type: object
      properties:
        weeksOfData:
          type: integer
          format: int32
        timeZone:
          type: integer
          format: enum
        multiClientAccess:
          type: boolean
        customVisualizations:
          type: boolean
        timeFilter:
          type: string
      description: Wrapper BusinessPreferences object for get response and update
        request
    api.v0alpha.CFSExportConfig:
      type: object
      properties:
        type:
          type: integer
          format: enum
        value:
          type: string
    api.v0alpha.CFSExportProcess:
      type: object
      properties:
        exportHeader:
          $ref: '#/components/schemas/api.v0alpha.ExportHeader'
        configs:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CFSExportConfig'
    api.v0alpha.CallObject:
      type: object
      properties:
        oid:
          type: string
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        updated:
          type: string
        skills:
          type: object
          additionalProperties:
            type: boolean
        recordingFile:
          type: string
        updatedDate:
          type: string
          format: date-time
        srcNumber:
          type: string
        dstNumber:
          type: string
        callerIdName:
          type: string
        agentWorker:
          type: string
        events:
          type: array
          items:
            type: string
        callData:
          type: string
        agentResponseData:
          type: object
          additionalProperties:
            type: string
        recorded:
          type: boolean
        connected:
          type: boolean
        suspended:
          type: boolean
        disconnectReason:
          type: string
        voicemailed:
          type: boolean
        voicemailBox:
          type: string
        originated:
          type: string
        folder:
          type: string
        rtpInfo:
          type: string
    api.v0alpha.CallerEvent:
      type: object
      properties:
        skills:
          type: object
          additionalProperties:
            type: boolean
        allSkills:
          type: object
          additionalProperties:
            type: boolean
      description: This is the front end version of the caller event. If more data
        is needed we can add.
    api.v0alpha.CallerGetRawEventReply:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/api.v0alpha.CallerEvent'
    api.v0alpha.CallerGetRawEventRequest:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
    api.v0alpha.CallerIdInfo:
      type: object
      properties:
        number:
          type: string
        regionCode:
          type: string
    api.v0alpha.CallerRequeueReply:
      type: object
      properties: {}
    api.v0alpha.CallerRequeueRequest:
      type: object
      properties:
        newConfigFolder:
          type: string
        skills:
          type: object
          additionalProperties:
            type: boolean
        replaceSkills:
          type: boolean
        replaceConfig:
          type: integer
          format: enum
        sessionSid:
          type: string
        voicemailBox:
          type: string
          description: the voicemail extesion to use for the caller
    api.v0alpha.CallerSendToVoicemailReply:
      type: object
      properties: {}
    api.v0alpha.CallerSendToVoicemailRequest:
      type: object
      properties:
        mailbox:
          type: string
        sessionSid:
          type: string
    api.v0alpha.CancelPreviewDialCallReq:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
        agentSessionSid:
          type: string
        reportScrubOverride:
          type: boolean
    api.v0alpha.CancelPreviewDialCallRes:
      type: object
      properties: {}
    api.v0alpha.CannedMessage:
      type: object
      properties:
        cannedMessageId:
          type: string
          description: result of generated canned_message_id
        name:
          type: string
          description: / canned message name
        description:
          type: string
          description: description
        messageBody:
          type: string
          description: message details
        dateCreated:
          type: string
          description: creation date
          format: date-time
        lastUpdated:
          type: string
          description: last updated date
          format: date-time
        cannedMessageGroupId:
          type: string
          description: canned message group id
        allowsHtml:
          type: boolean
          description: allows html
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniAttachment'
          description: attachments
      description: canned message creation details
    api.v0alpha.CannedMessageGroup:
      type: object
      properties:
        cannedMessageGroupId:
          type: string
          description: result of generated canned_message_group_id
        name:
          type: string
          description: canned message group name
        description:
          type: string
          description: description
        dateCreated:
          type: string
          description: creation date
          format: date-time
        lastUpdated:
          type: string
          description: last updated date
          format: date-time
      description: canned message group creation details
    api.v0alpha.CannedMessageWithGroup:
      type: object
      properties:
        cannedMessageId:
          type: string
          description: result of generated canned_message_id
        name:
          type: string
          description: / canned message name
        description:
          type: string
          description: description
        messageBody:
          type: string
          description: message details
        dateCreated:
          type: string
          description: creation date
          format: date-time
        lastUpdated:
          type: string
          description: last updated date
          format: date-time
        cannedMessageGroupId:
          type: string
          description: canned message group id
        groupName:
          type: string
          description: canned message group name
        groupDescription:
          type: string
          description: group description
        groupDateCreated:
          type: string
          description: group creation date
          format: date-time
        groupLastUpdated:
          type: string
          description: group last updated date
          format: date-time
        allowsHtml:
          type: boolean
          description: allows html
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniAttachment'
          description: attachments
      description: canned message with group details
    api.v0alpha.CheckRuleSetReq:
      type: object
      properties:
        phrase:
          type: string
    api.v0alpha.CheckRuleSetRes:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Rule'
        warnings:
          type: array
          items:
            type: string
    api.v0alpha.CjsEnrichmentProcess:
      type: object
      properties:
        cjsCollectionId:
          type: string
          description: "Specifies the Journey collection to be used\n Available options
            can be obtained\n from Journey"
        keyField:
          type: string
          description: "Specifies the LMS list field\n to be used as the key when\n
            doing search in CJS list"
        enrichType:
          type: integer
          description: "Specifies how to enrich the LMS list\n OR - Acjs all records,
            merging any matches\n XOR - Keep records that are only in one of the lists
            (exclude those in both)\n AND - Keep only records that are in both lists,
            merge the records\n JOIN - Keep all of the primary source and merge in
            matches from the\n        secondary source"
          format: enum
        primarySource:
          type: integer
          description: "Specifies the primary list (LMS or CJS)\n When merging records,
            all the fields from the primary\n source will be used, and only the extra
            fields (if any)\n will be added to the record"
          format: enum
        cjsKeyFieldName:
          type: string
          description: "Specifies the Journey collection field\n to be matched against.\n
            Available options can be obtained\n from Journey"
        columnOverwrite:
          type: boolean
          description: "Specifies if the primary list columns\n should be overwritten
            by the secondary\n on matching column names"
        dedupKeyPolicy:
          type: integer
          description: "Specifies what to do when there\n is a duplicate match for
            the key in the collection"
          format: enum
    api.v0alpha.CjsExecuteSearchField:
      type: object
      properties:
        fieldName:
          type: string
        fieldType:
          type: integer
          format: enum
        fieldValue:
          type: string
    api.v0alpha.CjsExportProcess:
      type: object
      properties:
        cjsCollectionId:
          type: string
          description: "If creating a new list, generate\n a random UUID for `cjs_collection_id`"
        header:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ExportHeader'
          description: Specifies which fields should be exported
        runType:
          type: integer
          description: To Disable, or run as a test
          format: enum
        cjsCollectionName:
          type: string
          description: "Specifies the name of the CJS list\n to be created"
        overwrite:
          type: boolean
          description: "If true it will overwrite the current\n collection instead
            of appending"
        update:
          type: boolean
          description: "If true the collection will update existing\n entries matched
            with the key field"
        updateKeyField:
          type: string
          description: Field to use for updating
    api.v0alpha.CjsImportProcess:
      type: object
      properties:
        cjsCollectionId:
          type: string
          description: Specifies which CJS List to import from
        enabled:
          type: boolean
          description: Enable/Disable the process
        cron:
          type: string
          description: "Should be a valid Cron expression\n based on https://en.wikipedia.org/wiki/Cron"
        timezone:
          type: string
          description: "Timezone to be used with the cron,\n if left blank it will
            default to the\n local time of whatever server it is on.\n e.g. \"America/Denver\",
            \"America/New_York\"\n Must exist in TZ database\n https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"
        dedup:
          type: boolean
          description: Specifies if a dedup should be performed when importing
    api.v0alpha.CjsSearchDefinition:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/api.v0alpha.CjsSearchDefinitionMetadata'
        searchFields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CjsSearchField'
        whitelistedReturnFields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CjsSearchField'
        blacklistedReturnFields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CjsSearchField'
        uniqueIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CjsSearchField'
          description: field(s) used to identify a unique individual within a collection
            (ex. account_number)
    api.v0alpha.CjsSearchDefinitionMetadata:
      type: object
      properties:
        cjsSearchDefinitionId:
          type: string
        name:
          type: string
        description:
          type: string
        deleted:
          type: boolean
        execCount:
          type: string
        execSuccess:
          type: string
        execFail:
          type: string
        createdDate:
          type: string
          format: date-time
        lastEdited:
          type: string
          format: date-time
    api.v0alpha.CjsSearchField:
      type: object
      properties:
        cjsSearchFieldId:
          type: string
        cjsSearchDefinitionId:
          type: string
        fieldName:
          type: string
        fieldType:
          type: integer
          format: enum
        fieldValue:
          type: string
    api.v0alpha.CjsSecureSearchCriteria:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/api.v0alpha.CjsSecureSearchCriteriaMetadata'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CjsSecureSearchCriteriaField'
    api.v0alpha.CjsSecureSearchCriteriaField:
      type: object
      properties:
        cjsSecureSearchCriteriaFieldId:
          type: string
        cjsSecureSearchCriteriaId:
          type: string
        fieldType:
          type: integer
          format: enum
    api.v0alpha.CjsSecureSearchCriteriaMetadata:
      type: object
      properties:
        cjsSecureSearchCriteriaId:
          type: string
        deleted:
          type: boolean
        createdOn:
          type: string
          description: auditing
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    api.v0alpha.ClearEmailUnsubscribeAcknowledgementRequest:
      type: object
      properties: {}
      description: Request for clearing email unsubscribe acknowledgement.
    api.v0alpha.ClearEmailUnsubscribeAcknowledgementResponse:
      type: object
      properties: {}
      description: Response for clearing email unsubscribe acknowledgement.
    api.v0alpha.ClearManualDialQueueReq:
      type: object
      properties: {}
    api.v0alpha.ClearManualDialQueueRes:
      type: object
      properties: {}
    api.v0alpha.ClearPreviewRecordReturnQueueReq:
      type: object
      properties: {}
    api.v0alpha.ClearPreviewRecordReturnQueueRes:
      type: object
      properties: {}
    api.v0alpha.ClientGroup:
      type: object
      properties:
        campaignType:
          type: string
          description: groups doc count by campaign type
        processedCallCount:
          type: string
          description: count of calls loaded into elasticsearch
        baselineCallCount:
          type: string
          description: count of calls expected to be loaded
      description: "ClientGroup represents the data status\n of elastic search data
        per client"
    api.v0alpha.ClientInfoDisplayTemplate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        displayAllFields:
          type: boolean
        dialedNumberFieldStyle:
          $ref: '#/components/schemas/api.v0alpha.DialedNumberFieldStyle'
        contactFieldStyles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ContactFieldStyle'
        id:
          type: string
    api.v0alpha.CloseProjectByIdReq:
      type: object
      properties:
        projectSid:
          type: string
          description: project id
      description: request to closing an omni project project id
    api.v0alpha.CloseProjectByIdRes:
      type: object
      properties: {}
      description: response to closing an omni project project id
    api.v0alpha.CollectSecureFormFieldReq:
      type: object
      properties:
        fieldName:
          type: string
        voiceSessionSid:
          type: string
    api.v0alpha.CollectSecureFormFieldRes:
      type: object
      properties: {}
    api.v0alpha.CollectionEntries:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/api.v0alpha.CollectionMetadata'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CollectionEntry'
    api.v0alpha.CollectionEntry:
      type: object
      properties:
        collectionId:
          type: string
        entryId:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CollectionField'
        lastUpdated:
          type: string
          format: date-time
    api.v0alpha.CollectionField:
      type: object
      properties:
        fieldName:
          type: string
        fieldValue:
          type: string
    api.v0alpha.CollectionFieldMetadata:
      type: object
      properties:
        fieldName:
          type: string
        fieldType:
          type: integer
          format: enum
        fieldFormat:
          type: string
          description: "Optional field\n Specifies formating for the field\n e.g.
            for a datetime it might be\n something like \"MM/DD/YYYY hh:mm:ss\""
      description: Metadata associated with a field
    api.v0alpha.CollectionMetadata:
      type: object
      properties:
        collectionId:
          type: string
          description: Name and ID of the collection
        collectionName:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CollectionFieldMetadata'
          description: Describes the fields used by the collection
        deleted:
          type: boolean
        createdBy:
          type: string
        createdOn:
          type: string
          format: date-time
        lastQueried:
          type: string
          format: date-time
        queryCount:
          type: string
        entryCount:
          type: string
        lastUpdated:
          type: string
          format: date-time
        searchCount:
          type: string
        lastSearched:
          type: string
          format: date-time
    api.v0alpha.Color:
      type: object
      properties:
        red:
          type: string
        green:
          type: string
        blue:
          type: string
    api.v0alpha.CompareExprList:
      type: object
      properties:
        simpleCompareExpression:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SimpleCompareExpression'
      description: Compare expression list
    api.v0alpha.CompareExpression:
      type: object
      properties:
        operatorType:
          type: string
        valueKey:
          type: string
        compareValue:
          type: string
    api.v0alpha.CompareExpressionList:
      type: object
      properties:
        simpleCompareExpression:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CompareExpression'
    api.v0alpha.ComplProcess:
      type: object
      properties: {}
      description: DEPRECATED
    api.v0alpha.ComplexBooleanExpr:
      type: object
      properties:
        compareExpressionList:
          $ref: '#/components/schemas/api.v0alpha.CompareExprList'
      description: Complex boolean expression
    api.v0alpha.ComplexBooleanExpression:
      type: object
      properties:
        compareExpressionList:
          $ref: '#/components/schemas/api.v0alpha.CompareExpressionList'
    api.v0alpha.ComplexBooleanExpressionList:
      type: object
      properties:
        complexBooleanExpression:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ComplexBooleanExpression'
    api.v0alpha.ComplianceExportProcess:
      type: object
      properties:
        listName:
          type: string
        field:
          type: string
        expirationField:
          type: string
        countryCode:
          type: string
        runType:
          type: integer
          format: enum
        complianceListType:
          type: integer
          format: enum
      description: "Describes an export process to compliance list/DNCL\n Expiration
        is optional\n CountryCode is required only if the field type is phone/sms"
    api.v0alpha.ComplianceMetadata:
      type: object
      properties:
        name:
          type: string
        required:
          type: boolean
    api.v0alpha.CompliancePreferences:
      type: object
      properties:
        displayAfterHoursCalls:
          type: boolean
        afterHoursCalls:
          type: boolean
        displayNaturalCompliance:
          type: boolean
        useNaturalCompliance:
          type: boolean
        defaultComplianceRuleSet:
          type: string
        displayCellPhoneScrub:
          type: boolean
        cellPhoneScrub:
          type: boolean
        displayScheduleRules:
          type: boolean
        useScheduleRules:
          type: boolean
        defaultScheduleRule:
          $ref: '#/components/schemas/api.v0alpha.ScheduleRuleField'
        doZipCodeScrub:
          type: boolean
        zipCodeScrub:
          $ref: '#/components/schemas/api.v0alpha.ZipCodeField'
        defaultEmailComplianceList:
          type: string
        defaultSmsComplianceList:
          type: string
      description: Wrapper CompliancePreferences object for get response and update
        request
    api.v0alpha.ComplianceProcessor:
      type: object
      properties:
        ruleSetId:
          type: string
          description: ID for the rulset to run against
        commType:
          allOf:
          - $ref: '#/components/schemas/api.commons.CommType'
          description: Comm type we are using (phone, email, sms)
        callType:
          type: string
          description: "call type we are checking (inbound, outbound, preview, mac)\n
            or field containing the call type"
        phoneNumberField:
          type: string
          description: Field containing the phone number (optional)
        emailField:
          type: string
          description: Field containing the email (optional)
        zipCodeField:
          type: string
          description: Field containing the zip code
        callMetadata:
          type: object
          additionalProperties:
            type: string
          description: "The Key is the metadata field name\n The value is the record
            field that\n contains the value"
        countryCode:
          type: string
          description: "Country code, or field containing\n the country code"
    api.v0alpha.ConditionalNavigation:
      type: object
      properties:
        complexBooleanExpressionList:
          $ref: '#/components/schemas/api.v0alpha.ComplexBooleanExpressionList'
        targetActIndex:
          type: string
    api.v0alpha.Consent:
      type: object
      properties:
        consentId:
          type: string
        consentProfileId:
          type: string
        deleted:
          type: boolean
        deletedOn:
          type: string
          format: date-time
        content:
          type: string
          description: payload
        recorded:
          type: string
          description: date consent granted
          format: date-time
        revoked:
          type: string
          description: date consent revoked
          format: date-time
        expire:
          type: string
          description: expiration of consent
          format: date-time
        referringUrl:
          type: string
        channel:
          allOf:
          - $ref: '#/components/schemas/api.commons.CommType'
          description: channel (email, sms, phone, etc)
        topic:
          type: string
          description: topic (future payment vs payment reminder vs account reminders
            vs receipts)
        revokedReason:
          type: string
          description: notate revocation (reason)
        grantedReason:
          type: string
          description: notate grant reason
        proof:
          type: string
          description: proof of consent (pdf, voice recording etc) this will be filename
            which can be retrieved via matrix-fts
        conditionDaysOfTheWeek:
          type: array
          items:
            type: integer
            format: enum
          description: consent conditions
        conditionTimeOfDayFrom:
          type: string
        conditionTimeOfDayTo:
          type: string
        conditionFrom:
          type: string
          format: date-time
        conditionTo:
          type: string
          format: date-time
        notes:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ConsentCondition'
          description: Consent Conditions
        contentType:
          type: integer
          description: content_type (call, email, sms, account number)
          format: enum
        channelType:
          type: integer
          format: enum
    api.v0alpha.ConsentByContent:
      type: object
      properties:
        orgId:
          type: string
        profileId:
          type: string
        profileName:
          type: string
        consentId:
          type: string
        content:
          type: string
          description: consent content (phone number, email address, account number,
            etc.)
        revoked:
          type: string
          format: date-time
        expire:
          type: string
          format: date-time
        disabled:
          type: boolean
        channel:
          allOf:
          - $ref: '#/components/schemas/api.commons.CommType'
          description: channel (email, sms, phone, etc)
        topic:
          type: string
          description: topic (future payment vs payment reminder vs account reminders
            vs receipts)
        conditionDaysOfTheWeek:
          type: array
          items:
            type: integer
            format: enum
          description: consent conditions
        conditionTimeOfDayFrom:
          type: string
        conditionTimeOfDayTo:
          type: string
        conditionFrom:
          type: string
          format: date-time
        conditionTo:
          type: string
          format: date-time
        notes:
          type: string
        contentType:
          type: integer
          description: content_type (call, email, sms, account number)
          format: enum
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ConsentCondition'
          description: Consent Conditions
        channelType:
          type: integer
          format: enum
    api.v0alpha.ConsentEnrichmentProcess:
      type: object
      properties:
        contentField:
          type: string
          description: Specifies which record field contains the content
        consentProfile:
          type: string
          description: Profile to use
        consentProfileId:
          type: string
          description: Profile Id
    api.v0alpha.ConsentEntrypointProcess:
      type: object
      properties:
        consentProfileId:
          type: string
          description: Profile Id to get consent records from
      description: sources the LMS list with consent records
    api.v0alpha.ConsentExportProcess:
      type: object
      properties:
        contentField:
          type: string
          description: Specifies which record field is the content
        consentProfile:
          type: string
          description: Profile to use
        consentProfileId:
          type: string
          description: Profile ID of profile to use
        runType:
          type: integer
          description: Run as test, disabled, or normal
          format: enum
        action:
          type: integer
          description: 'Type of consent action to do: ADD/REVOKE'
          format: enum
        referringUrl:
          type: string
          description: Field name or literal value for referring url when creating
            consent
        topic:
          type: string
          description: Field name or literal value for topic when creating consent
        revokedReason:
          type: string
          description: Field name or literal value for revoked reason when creating
            consent
        grantedReason:
          type: string
          description: Field name or literal value for granted reason when creating
            consent
        proof:
          type: string
          description: Field name or literal value for proof when creating consent
        conditionTimeOfDayFrom:
          type: string
          description: Field name or literal value for "condition time of day from"
            when creating consent
        conditionTimeOfDayTo:
          type: string
          description: Field name or literal value for "condition time of day to"
            when creating consent
        notes:
          type: string
          description: Field name or literal value for notes when creating consent
        expire:
          type: string
          description: "Field name for expire timestamp when creating consent\n replaced
            by expiration"
        conditionFrom:
          type: string
          description: Field name for "condition from" timestamp when creating consent
        conditionTo:
          type: string
          description: Field name for "condition to" timestamp when creating consent
        contentTypeVal:
          type: integer
          format: enum
        contentTypeFieldName:
          type: string
        channelTypeVal:
          type: integer
          format: enum
        channelTypeFieldName:
          type: string
        expirationDate:
          type: string
          description: the static time that consent will expire at
          format: date-time
        expirationFieldName:
          type: string
          description: the field name that holds info about the static time consent
            will expire at
        expirationAfterDuration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: the relative time consent will expire at
    api.v0alpha.ConsentListDownloadRequest:
      type: object
      properties:
        consentProfileId:
          type: string
    api.v0alpha.ConsentProfile:
      type: object
      properties:
        consentProfileId:
          type: string
        profileName:
          type: string
          description: payload
        disabled:
          type: boolean
        consents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Consent'
        channel:
          allOf:
          - $ref: '#/components/schemas/api.commons.CommType'
          description: channel (email, sms, phone, etc)
        createdOn:
          type: string
          description: auditing
          format: date-time
        createdBy:
          type: string
    api.v0alpha.ConsentTopic:
      type: object
      properties:
        topic:
          type: string
        orgId:
          type: string
        deleted:
          type: boolean
    api.v0alpha.ContactAreaCode:
      type: object
      properties:
        custom:
          type: integer
          format: int32
        contactField:
          $ref: '#/components/schemas/api.v0alpha.ContactFieldDesc'
      description: Contact Area Code type used for default_contact_area_code preference
    api.v0alpha.ContactFieldDataRow:
      type: object
      properties:
        fieldLabel:
          type: string
        fieldValue:
          type: string
        isPhone:
          type: boolean
    api.v0alpha.ContactFieldDesc:
      type: object
      properties:
        id:
          type: string
        fieldName:
          type: string
      description: Contact field description
    api.v0alpha.ContactFieldDescription:
      type: object
      properties:
        contactFieldDescriptionSid:
          type: integer
          format: int32
        fieldName:
          type: string
        isPhone:
          type: boolean
        displayFormatString:
          type: string
    api.v0alpha.ContactFieldStyle:
      type: object
      properties:
        contactFieldDescriptionSid:
          type: string
        textColor:
          $ref: '#/components/schemas/api.v0alpha.Color'
        backgroundColor:
          $ref: '#/components/schemas/api.v0alpha.Color'
    api.v0alpha.ContactGroup:
      type: object
      properties:
        contactGroupSid:
          type: string
        name:
          type: string
        countrySid:
          type: string
        lastUpdated:
          type: string
          format: date-time
        shaDigest:
          type: string
    api.v0alpha.ContactImportTemplate:
      type: object
      properties:
        contactImportTemplateSid:
          type: string
          description: column not null
        name:
          type: string
        description:
          type: string
        delimiter:
          type: string
        quote:
          type: string
        isFixedWidth:
          type: boolean
        dfcSid01:
          type: integer
          format: int32
        dfcSid02:
          type: integer
          format: int32
        dfcSid03:
          type: integer
          format: int32
        dfcSid04:
          type: integer
          format: int32
        dfcSid05:
          type: integer
          format: int32
        dfcSid06:
          type: integer
          format: int32
        dfcSid07:
          type: integer
          format: int32
        dfcSid08:
          type: integer
          format: int32
        dfcSid09:
          type: integer
          format: int32
        dfcSid10:
          type: integer
          format: int32
        dfcSid11:
          type: integer
          format: int32
        dfcSid12:
          type: integer
          format: int32
        dfcSid13:
          type: integer
          format: int32
        dfcSid14:
          type: integer
          format: int32
        dfcSid15:
          type: integer
          format: int32
        dfcSid16:
          type: integer
          format: int32
        dfcSid17:
          type: integer
          format: int32
        dfcSid18:
          type: integer
          format: int32
        dfcSid19:
          type: integer
          format: int32
        dfcSid20:
          type: integer
          format: int32
        dfcSid21:
          type: integer
          format: int32
        dfcSid22:
          type: integer
          format: int32
        dfcSid23:
          type: integer
          format: int32
        dfcSid24:
          type: integer
          format: int32
        dfcSid25:
          type: integer
          format: int32
        dfcSid26:
          type: integer
          format: int32
        dfcSid27:
          type: integer
          format: int32
        dfcSid28:
          type: integer
          format: int32
        dfcSid29:
          type: integer
          format: int32
        dfcSid30:
          type: integer
          format: int32
        fieldLength01:
          type: integer
          format: int32
        fieldLength02:
          type: integer
          format: int32
        fieldLength03:
          type: integer
          format: int32
        fieldLength04:
          type: integer
          format: int32
        fieldLength05:
          type: integer
          format: int32
        fieldLength06:
          type: integer
          format: int32
        fieldLength07:
          type: integer
          format: int32
        fieldLength08:
          type: integer
          format: int32
        fieldLength09:
          type: integer
          format: int32
        fieldLength10:
          type: integer
          format: int32
        fieldLength11:
          type: integer
          format: int32
        fieldLength12:
          type: integer
          format: int32
        fieldLength13:
          type: integer
          format: int32
        fieldLength14:
          type: integer
          format: int32
        fieldLength15:
          type: integer
          format: int32
        fieldLength16:
          type: integer
          format: int32
        fieldLength17:
          type: integer
          format: int32
        fieldLength18:
          type: integer
          format: int32
        fieldLength19:
          type: integer
          format: int32
        fieldLength20:
          type: integer
          format: int32
        fieldLength21:
          type: integer
          format: int32
        fieldLength22:
          type: integer
          format: int32
        fieldLength23:
          type: integer
          format: int32
        fieldLength24:
          type: integer
          format: int32
        fieldLength25:
          type: integer
          format: int32
        fieldLength26:
          type: integer
          format: int32
        fieldLength27:
          type: integer
          format: int32
        fieldLength28:
          type: integer
          format: int32
        fieldLength29:
          type: integer
          format: int32
        fieldLength30:
          type: integer
          format: int32
        templateNumber:
          type: integer
          format: int32
        excludeFirstRow:
          type: boolean
    api.v0alpha.ContactListDataSource:
      type: object
      properties:
        contactListSid:
          type: string
          description: the contact list identifier
      description: ContactListDataSource  - contains information to retrieve data
        from a contact list
    api.v0alpha.ContactListsDataSource:
      type: object
      properties:
        contactListsDataSource:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ContactListDataSource'
          description: 'the contact lists to retrieve contacts from TODO: rename contact_lists'
      description: ContactListsDataSource - data source for getting contacts from
        one or more contact lists
    api.v0alpha.ContactManagerSink:
      type: object
      properties:
        projectId:
          type: string
          description: project id snet to Conatactmanager when sink is ran
        contactListName:
          type: string
          description: name sent to ContactManager when the sink is ran
        contactListDescription:
          type: string
          description: "description to use for this contact list.\n Sent to contact
            manager when ran."
        fields:
          type: array
          items:
            type: string
          description: "if blank we export all fields.\n if provided, we export only
            the fields listed here"
        ttl:
          type: string
        lifetime:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: "how long the data uploaded to this list lives for\n if nil
            we default to the duration for 30 days"
    api.v0alpha.ContactPreferences:
      type: object
      properties:
        defaultContactImportFormat:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ImportFormat'
          description: DefaultContactImportFormat sets the DefaultContactImportFormat
            oneof
        useContactImportFormat:
          type: boolean
          description: UseContactImportFormat controls whether the default import
            format is enabled
        defaultContactAreaCode:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ContactAreaCode'
          description: DefaultContactAreaCode sets the DefaultContactAreaCodeOor oneof
        useContactAreaCode:
          type: boolean
          description: UseContactAreaCode controls whether the default area code is
            enabled
        discardRecordDefaultAbsentNumbersHandling:
          type: boolean
          description: 'DefaultAbsentNumbersHandling False: Keep Record, True: Discard
            Record'
        defaultContactsImportRandomization:
          type: boolean
          description: ContactsImportRandomization if true randomize the imported
            contact list default false
        defaultEmailColumn:
          type: string
          description: DefaultEmailColumn sets the DefaultEmailColumn oneof
        defaultDuplicateHandling:
          type: integer
          description: DefaultDuplicateHandling sets a string choice for duplicate
            numbers
          format: enum
      description: "Will Replace ContactList's contents\n ContactPreferences is an
        object containing all fields relating to an Org's Contact preferences"
    api.v0alpha.ContactSchema:
      type: object
      properties:
        contactSchemaSid:
          type: string
        contactGroupSid:
          type: string
        dfcSid01:
          type: integer
          format: int32
        dfcSid02:
          type: integer
          format: int32
        dfcSid03:
          type: integer
          format: int32
        dfcSid04:
          type: integer
          format: int32
        dfcSid05:
          type: integer
          format: int32
        dfcSid06:
          type: integer
          format: int32
        dfcSid07:
          type: integer
          format: int32
        dfcSid08:
          type: integer
          format: int32
        dfcSid09:
          type: integer
          format: int32
        dfcSid10:
          type: integer
          format: int32
        dfcSid11:
          type: integer
          format: int32
        dfcSid12:
          type: integer
          format: int32
        dfcSid13:
          type: integer
          format: int32
        dfcSid14:
          type: integer
          format: int32
        dfcSid15:
          type: integer
          format: int32
        dfcSid16:
          type: integer
          format: int32
        dfcSid17:
          type: integer
          format: int32
        dfcSid18:
          type: integer
          format: int32
        dfcSid19:
          type: integer
          format: int32
        dfcSid20:
          type: integer
          format: int32
        dfcSid21:
          type: integer
          format: int32
        dfcSid22:
          type: integer
          format: int32
        dfcSid23:
          type: integer
          format: int32
        dfcSid24:
          type: integer
          format: int32
        dfcSid25:
          type: integer
          format: int32
        dfcSid26:
          type: integer
          format: int32
        dfcSid27:
          type: integer
          format: int32
        dfcSid28:
          type: integer
          format: int32
        dfcSid29:
          type: integer
          format: int32
        dfcSid30:
          type: integer
          format: int32
    api.v0alpha.ContentByVersionReq:
      type: object
      properties:
        url:
          type: string
        locale:
          type: string
        version:
          type: string
          description: by version
      description: request to retrieve learning pages content from the url by version
    api.v0alpha.ContentEditorDataReq:
      type: object
      properties:
        url:
          type: string
        locale:
          type: string
      description: request to retreive last user edited learning pages content
    api.v0alpha.ContentEditorDataRes:
      type: object
      properties:
        lastEditedUser:
          type: string
          description: The user who edited the content last. This is only visible
            to users with the Permission_PERMISSION_LEARN_EDIT permission.
      description: response to retreive last user edited learning pages content
    api.v0alpha.ContentReq:
      type: object
      properties:
        url:
          type: string
        locale:
          type: string
      description: request to retreive learning pages content from the url
    api.v0alpha.ContentRes:
      type: object
      properties:
        content:
          type: string
        lastEditedTimestamp:
          type: string
          description: The last time this learning content was edited.
          format: date-time
        images:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.LearnImage'
          description: List containing static file links from parsing markdown
        title:
          type: string
          description: title of the article
        totalViewCount:
          type: string
          description: view total count
        lastEditedUser:
          type: string
          description: The user who edited the content last
      description: response to retreive learning pages content
    api.v0alpha.ConvertOrgToManualRequest:
      type: object
      properties:
        orgId:
          type: string
    api.v0alpha.ConvertOrgToManualResponse:
      type: object
      properties: {}
    api.v0alpha.CopyDashVizConflict:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
    api.v0alpha.CopyDashVizReq:
      type: object
      properties:
        dashboardIds:
          type: array
          items:
            type: string
        visualizationIds:
          type: array
          items:
            type: string
        orgId:
          type: string
          description: org Id to copy visualizations and dashboards to
    api.v0alpha.CopyDashVizRes:
      type: object
      properties:
        conflicts:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CopyDashVizConflict'
    api.v0alpha.CopyQueueConfigReq:
      type: object
      properties:
        fromOrgId:
          type: string
        toOrgId:
          type: string
        fromName:
          type: string
          description: "from_name is the name of the config that will be copied\n
            from the given from_org_id."
        toName:
          type: string
          description: "to_name is the name that the copied config will have for\n
            the given to_org_id."
    api.v0alpha.CopyQueueConfigRes:
      type: object
      properties: {}
    api.v0alpha.Country:
      type: object
      properties:
        countryId:
          type: string
        countrySid:
          type: string
        countryName:
          type: string
        phoneDigits:
          type: string
        regionDigits:
          type: string
        totalDigits:
          type: string
        countryCode:
          type: string
        regionCodes:
          type: array
          items:
            type: string
        country:
          type: integer
          description: The enum value associated with the country.
          format: enum
    api.v0alpha.CreateAgentPauseCodeRequest:
      type: object
      properties:
        pauseCode:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.PauseCode'
          description: "the pause_code.xml_client_property_sid field is\n NOT used
            in this context. The pause code will\n be created with a default xml_client_property
            sid."
      description: Request message for the CreateAgentPauseCode RPC.
    api.v0alpha.CreateAgentPauseCodeResponse:
      type: object
      properties: {}
      description: Response message for the CreateAgentPauseCode RPC.
    api.v0alpha.CreateAgentProfileGroupRequest:
      type: object
      properties:
        agentProfileGroup:
          $ref: '#/components/schemas/api.commons.org.AgentProfileGroup'
    api.v0alpha.CreateAgentProfileGroupResponse:
      type: object
      properties:
        agentProfileGroupId:
          type: string
    api.v0alpha.CreateAgentSkillReq:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    api.v0alpha.CreateAgentSkillRes:
      type: object
      properties: {}
    api.v0alpha.CreateAgentStatisticsTemplateRequest:
      type: object
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AgentLoginGuiStatisticsTemplate'
          description: Agent statistics template to create.
      description: Request message for the CreateAgentStatisticsTemplate RPC.
    api.v0alpha.CreateAgentStatisticsTemplateResponse:
      type: object
      properties: {}
      description: Response message for the CreateAgentStatisticsTemplate RPC.
    api.v0alpha.CreateAgentTriggerTemplateRequest:
      type: object
      properties:
        agentTriggerTemplate:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate'
    api.v0alpha.CreateAgentTriggerTemplateResponse:
      type: object
      properties: {}
    api.v0alpha.CreateApplicationDashboardRequest:
      type: object
      properties:
        dashboardResourceId:
          type: string
        orgId:
          type: string
        application:
          type: integer
          format: enum
      description: CreateApplicationDashboardRequest assigns a dashboard to an application
    api.v0alpha.CreateApplicationDashboardResponse:
      type: object
      properties: {}
      description: CreateApplicationDashboardResponse is idempotent
    api.v0alpha.CreateAuthConnectionRequest:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/api.v0alpha.AuthConnectionSettings'
        clientSecret:
          type: string
          description: "client_secret is an optional field.\n some providers require
            a secret to create a connection.\n If the connection uses a secret that
            expires the\n settings.secret_expiration field should be properly\n set.\n
            This field is not part of the ConnectionSettings message\n because it
            should never be stored."
      description: Request message for the CreateAuthConnection rpc.
    api.v0alpha.CreateAuthConnectionResponse:
      type: object
      properties: {}
      description: Response message for the CreateAuthConnection rpc.
    api.v0alpha.CreateCallbackWithDetailsReq:
      type: object
      properties:
        callback:
          $ref: '#/components/schemas/api.v0alpha.ScheduledCallback'
        callbackDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ScheduledCallbackDetail'
        name:
          type: string
        formerCallType:
          type: integer
          format: enum
        formerCallSid:
          type: string
        countrySid:
          type: string
        managerLogin:
          type: boolean
    api.v0alpha.CreateCallbackWithDetailsRes:
      type: object
      properties:
        scheduledCallbackId:
          type: string
    api.v0alpha.CreateCampaignReq:
      type: object
      properties:
        campaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: the campaign to create
        modules:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CreateCampaignReq_CampaignModule'
          description: the modules to create on the campaign
      description: CreateCampaignReq - request to create an omni campaign
    api.v0alpha.CreateCampaignReq_CampaignModule:
      type: object
      properties:
        module:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaignModule'
          description: the module to create
        omniContactList:
          $ref: '#/components/schemas/api.v0alpha.ContactListsDataSource'
      description: CampaignModule - information required to create an omni campaign
        module
    api.v0alpha.CreateCannedMessageGroupReq:
      type: object
      properties:
        name:
          type: string
          description: canned message name
        description:
          type: string
          description: description
      description: request to create canned message group
    api.v0alpha.CreateCannedMessageReq:
      type: object
      properties:
        name:
          type: string
          description: canned message name
        description:
          type: string
          description: description
        messageBody:
          type: string
          description: message details
        cannedMessageGroupId:
          type: string
          description: canned message group id
        allowsHtml:
          type: boolean
          description: allows html
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniAttachment'
          description: attachments
      description: request to create canned message
    api.v0alpha.CreateClientInfoDisplayTemplateRequest:
      type: object
      properties:
        clientInfoDisplayTemplate:
          $ref: '#/components/schemas/api.v0alpha.ClientInfoDisplayTemplate'
    api.v0alpha.CreateClientInfoDisplayTemplateResponse:
      type: object
      properties: {}
    api.v0alpha.CreateConnectedInboxRes:
      type: object
      properties:
        connectedInboxSid:
          type: string
          description: the generated connected inbox identifier
      description: CreateConnectedInboxRes - result of creating a new connected inbox
    api.v0alpha.CreateConsentProfileReq:
      type: object
      properties:
        consentProfileId:
          type: string
        profileName:
          type: string
          description: payload
        disabled:
          type: boolean
        channel:
          allOf:
          - $ref: '#/components/schemas/api.commons.CommType'
          description: channel (email, sms, phone, etc)
        createdBy:
          type: string
          description: auditing
    api.v0alpha.CreateConsentProfileRes:
      type: object
      properties:
        consentProfileId:
          type: string
    api.v0alpha.CreateConsentReq:
      type: object
      properties:
        consentProfileId:
          type: string
        content:
          type: string
          description: payload
        recorded:
          type: string
          format: date-time
        expire:
          type: string
          format: date-time
        referringUrl:
          type: string
        channel:
          allOf:
          - $ref: '#/components/schemas/api.commons.CommType'
          description: channel (email, sms, phone, etc)
        topic:
          type: string
          description: topic (future payment vs payment reminder vs account reminders
            vs receipts)
        revokedReason:
          type: string
          description: notate revocation (reason)
        grantedReason:
          type: string
          description: notate grant reason
        proof:
          type: string
          description: proof of consent (pdf, voice recording etc) this will be filename
            which can be retrieved via matrix-fts
        conditionDaysOfTheWeek:
          type: array
          items:
            type: integer
            format: enum
          description: consent conditions
        conditionTimeOfDayFrom:
          type: string
        conditionTimeOfDayTo:
          type: string
        conditionFrom:
          type: string
          format: date-time
        conditionTo:
          type: string
          format: date-time
        notes:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ConsentCondition'
          description: Consent Conditions
        contentType:
          type: integer
          description: content_type (call, email, sms, account number)
          format: enum
        channelType:
          type: integer
          format: enum
    api.v0alpha.CreateConsentRes:
      type: object
      properties:
        consentId:
          type: string
    api.v0alpha.CreateContactFieldDescriptionReq:
      type: object
      properties:
        fieldName:
          type: string
        isPhone:
          type: boolean
        displayFormatString:
          type: string
    api.v0alpha.CreateContactFieldDescriptionRes:
      type: object
      properties: {}
    api.v0alpha.CreateCustomDataKeyReq:
      type: object
      properties:
        dataKey:
          $ref: '#/components/schemas/api.v0alpha.CustomDataKey'
      description: Request message for the CreateCustomDataKey RPC
    api.v0alpha.CreateCustomDataKeyRes:
      type: object
      properties: {}
      description: Response message for the CreateCustomDataKey RPC
    api.v0alpha.CreateCustomReportFilterRequest:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/api.v0alpha.CustomReportFilter'
      description: Request message for CreateCustomReportFilter
    api.v0alpha.CreateCustomReportFilterResponse:
      type: object
      properties: {}
      description: Response message for CreateCustomReportFilterSet
    api.v0alpha.CreateCustomUnsubscribeLinkRes:
      type: object
      properties:
        customUnsubscribeLinkSid:
          type: string
          description: custom unsubscribe link sid
        validated:
          type: boolean
          description: validation of link url
      description: CreateUnsubscribeLinkRes - result to creating unsubscribe link
    api.v0alpha.CreateDNCLNumbersReq:
      type: object
      properties:
        dncls:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.DNCL'
        agentLoggingData:
          $ref: '#/components/schemas/api.v0alpha.AgentLoggingData'
    api.v0alpha.CreateDNCLNumbersRes:
      type: object
      properties:
        successCount:
          type: string
        invalidCount:
          type: string
        failureCount:
          type: string
    api.v0alpha.CreateDashboardRequest:
      type: object
      properties:
        title:
          type: string
          description: required dashboard title
        description:
          type: string
          description: optional dashboard description
        layout:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DashboardLayout'
          description: layout of associated dashboard panels
        view:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DashboardView'
          description: the dashboards viewing params
        type:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DashboardType'
          description: the type of dashboard, with type specific components
      description: CreateDashboardRequest used in the CreateDashboard rpc
    api.v0alpha.CreateDashboardResponse:
      type: object
      properties:
        dashboardId:
          type: string
          description: unique ID of the dashboard created
        resourceId:
          type: string
          description: resource id of the dashboard created
      description: CreateDashboardResponse used in the CreateDashboard rpc
    api.v0alpha.CreateDelegatedUserRequest:
      type: object
      properties:
        userId:
          type: string
          description: the user id provided by the auth connection.
        orgId:
          type: string
          description: the org id the user will belong to.
        email:
          type: string
          description: the user's email provided by the auth connection.
        userName:
          type: string
          description: the user name provided by the auth connection.
        firstName:
          type: string
          description: the user's first name.
        lastName:
          type: string
          description: the user's last name.
        groups:
          type: array
          items:
            type: string
          description: the user's groups provided by the auth connection.
        connectionId:
          type: string
          description: the id of the auth connection the user is coming from.
      description: Request message for the CreateDelegatedUser RPC.
    api.v0alpha.CreateDelegatedUserResponse:
      type: object
      properties:
        userId:
          type: string
          description: the internal id of the created user.
      description: Response message for the CreateDelegatedUser RPC>
    api.v0alpha.CreateDispositionReq:
      type: object
      properties:
        disposition:
          type: string
          description: the string of the disposition to create
      description: CreateDispositionReq - request to create a disposition
    api.v0alpha.CreateDispositionRes:
      type: object
      properties:
        dispositionSid:
          type: string
          description: the unique id of the created disposition
      description: CreateDispositionRes - result of creating a disposition
    api.v0alpha.CreateEditVersionReq:
      type: object
      properties:
        srcVersion:
          type: string
          description: src version
        destVersion:
          type: string
          description: dest version
        destVersionName:
          type: string
          description: dest version name
      description: request to create edit version
    api.v0alpha.CreateEditVersionRes:
      type: object
      properties:
        versionDetails:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.VersionDetails'
          description: details about version
      description: response to create edit version
    api.v0alpha.CreateExtensionReq:
      type: object
      properties:
        extensionMessage:
          $ref: '#/components/schemas/api.v0alpha.Extension'
    api.v0alpha.CreateExtensionRes:
      type: object
      properties: {}
    api.v0alpha.CreateInboundSmsGroupReq:
      type: object
      properties:
        smsNumberSid:
          type: string
        name:
          type: string
        status:
          type: integer
          format: enum
        startTime:
          type: string
          format: date-time
        stopTime:
          type: string
          format: date-time
        totalCost:
          type: number
          format: double
        inboundSmsTemplateId:
          type: string
        reportSettings:
          $ref: '#/components/schemas/api.v0alpha.ReportSettings'
    api.v0alpha.CreateInboundSmsGroupRes:
      type: object
      properties:
        inboundSmsGroupId:
          type: string
    api.v0alpha.CreateInboundSmsTemplateReq:
      type: object
      properties:
        smsNumberSid:
          type: string
        name:
          type: string
        smsIntentTemplateSid:
          type: array
          items:
            type: string
        reportSettings:
          $ref: '#/components/schemas/api.v0alpha.ReportSettings'
    api.v0alpha.CreateInboundSmsTemplateRes:
      type: object
      properties:
        inboundSmsTemplateId:
          type: string
    api.v0alpha.CreateManualTaskReq:
      type: object
      properties:
        campaignSid:
          type: string
          description: campaign identifier
        campaignModuleSid:
          type: string
          description: campaign module identifier
        taskData:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniTask'
          description: task data
      description: CreateManualTaskReq - create a manual task
    api.v0alpha.CreateManualTaskRes:
      type: object
      properties:
        referenceId:
          type: string
          description: ghost notifier reference identifier
      description: CreateManualTaskRes -
    api.v0alpha.CreateP3PermissionGroupRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            type: integer
            format: enum
    api.v0alpha.CreateP3PermissionGroupResponse:
      type: object
      properties:
        p3PermissionGroup:
          $ref: '#/components/schemas/api.v0alpha.P3PermissionGroup'
    api.v0alpha.CreatePermissionGroupRequest:
      type: object
      properties:
        name:
          type: string
          description: Name to identify this permission group.
        description:
          type: string
          description: Short description about this permission group.
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: List of permissions included in the group.
      description: The request for api.v0alpha.CreatePermissionGroup.
    api.v0alpha.CreatePermissionGroupResponse:
      type: object
      properties:
        permissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.PermissionGroup'
          description: The newly created PermissionGroup is returned.
      description: The response for api.v0alpha.CreatePermissionGroup.
    api.v0alpha.CreatePhoneBookEntryReq:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: "Entry type will be 'Hunt Group' if this field is set.\n Otherwise
            the entry type will be 'Client'."
        entryName:
          type: string
          description: The entry name
        standard:
          $ref: '#/components/schemas/api.v0alpha.PhoneBookStandardNumber'
        sipUri:
          $ref: '#/components/schemas/api.v0alpha.PhoneBookSIPURI'
        phoneNumberHidden:
          type: boolean
          description: Whether the phone number is displayed to the agent or not.
            The entry name will always be displayed.
      description: Request message for the CreatePhoneBookEntry RPC
    api.v0alpha.CreatePhoneBookEntryRes:
      type: object
      properties: {}
      description: Response message for the CreatePhoneBookEntry RPC
    api.v0alpha.CreateProjectReq:
      type: object
      properties:
        name:
          type: string
          description: project name
        description:
          type: string
          description: project description
        complianceConfig:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniProjectComplianceConfig'
          description: compliance configuration
      description: CreateProjectReq -
    api.v0alpha.CreateProjectRes:
      type: object
      properties:
        project:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.Project'
          description: the created project
        referenceId:
          type: string
          description: the ghost notifier id
      description: CreateProjectRes -
    api.v0alpha.CreateQueueConfigReq:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig'
    api.v0alpha.CreateQueueConfigRes:
      type: object
      properties: {}
    api.v0alpha.CreateRuleSetReq:
      type: object
      properties:
        ruleSetId:
          type: string
        name:
          type: string
        rulesText:
          type: string
        rules:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Rule'
    api.v0alpha.CreateScenarioReq:
      type: object
      properties:
        shouldAllow:
          $ref: '#/components/schemas/api.commons.ScenarioData'
        shouldDeny:
          $ref: '#/components/schemas/api.commons.ScenarioData'
        name:
          type: string
    api.v0alpha.CreateScenarioRes:
      type: object
      properties:
        scenario:
          $ref: '#/components/schemas/api.v0alpha.Scenario'
    api.v0alpha.CreateScrubListReq:
      type: object
      properties:
        listId:
          type: string
        list:
          type: array
          items:
            type: string
          description: payload
        contentType:
          type: integer
          format: enum
        countryCode:
          type: string
        scrubEntryDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ScrubEntryDetails'
        durable:
          type: boolean
    api.v0alpha.CreateServiceIdReq:
      type: object
      properties: {}
    api.v0alpha.CreateServiceIdRes:
      type: object
      properties:
        serviceId:
          type: string
    api.v0alpha.CreateSignatureReq:
      type: object
      properties:
        signature:
          type: string
          description: the signature text to create
        name:
          type: string
          description: the name for the signature
        description:
          type: string
          description: the description for the signature
      description: CreateSignatureReq - request to create a new message signature
    api.v0alpha.CreateSignatureRes:
      type: object
      properties:
        signature:
          allOf:
          - $ref: '#/components/schemas/api.commons.Signature'
          description: the created signature object
      description: CreateSignatureRes - the result of creating a new signature
    api.v0alpha.CreateSmsConversationAssignedAgentRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.CreateSmsConversationAuditRes:
      type: object
      properties:
        smsConversationAuditId:
          type: string
    api.v0alpha.CreateSmsConversationReq:
      type: object
      properties:
        inboundSmsGroupId:
          type: string
        smsTaskParent:
          type: string
    api.v0alpha.CreateSmsConversationRes:
      type: object
      properties:
        smsConversationId:
          type: string
    api.v0alpha.CreateSmsIntentTemplateRes:
      type: object
      properties:
        smsIntentTemplateSid:
          type: string
    api.v0alpha.CreateSmsSourceNumberReq:
      type: object
      properties:
        countrySid:
          type: string
        number:
          type: string
        providerName:
          type: string
        notes:
          type: string
        ivrReference:
          type: string
        srcNumberType:
          type: string
    api.v0alpha.CreateSmsSourceNumberRes:
      type: object
      properties:
        smsNumberSid:
          type: string
    api.v0alpha.CreateSmsTemplateReq:
      type: object
      properties:
        message:
          type: string
        smsIntentTemplateSid:
          type: array
          items:
            type: string
    api.v0alpha.CreateSmsTemplateRes:
      type: object
      properties:
        smsTemplateSid:
          type: string
    api.v0alpha.CreateTasksReq:
      type: object
      properties:
        campaignSid:
          type: string
          description: campaign identifier
        campaignModuleSid:
          type: string
          description: campaign module identifier
        contactListDataSource:
          $ref: '#/components/schemas/api.v0alpha.ContactListDataSource'
      description: CreateTasksReq - create tasks per a contact list
    api.v0alpha.CreateTasksRes:
      type: object
      properties:
        referenceId:
          type: string
          description: ghost notifier reference identifier
      description: CreateTasksRes -
    api.v0alpha.CreateTtsVoiceReq:
      type: object
      properties:
        actualName:
          type: string
        displayName:
          type: string
        port:
          type: string
      description: Request message for the CreateTtsVoice RPC.
    api.v0alpha.CreateTtsVoiceRes:
      type: object
      properties: {}
      description: Response message for the CreateTtsVoice RPC.
    api.v0alpha.CreateUserByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        userName:
          type: string
        password:
          type: string
        permissionGroupIds:
          type: array
          items:
            type: string
        huntGroupSid:
          type: string
        partnerAgentId:
          type: string
        p3PermissionGroupId:
          type: string
        linkbackNumbers:
          type: array
          items:
            type: string
        callerIds:
          type: array
          items:
            type: string
        defaultApp:
          type: integer
          description: Default app the user starts on
          format: enum
        userCallerId:
          type: string
        agentProfileGroupId:
          type: string
        labels:
          type: array
          items:
            type: string
          description: A list of labels to assign to the user
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
    api.v0alpha.CreateUserByOrgIdResponse:
      type: object
      properties:
        userId:
          type: string
    api.v0alpha.CreateUserRequest:
      type: object
      properties:
        orgId:
          type: string
          description: "DEPRECATED: org_id was previously optional,\n if org_id needs
            to be provided, use CreateUserByOrgId rpc"
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        userName:
          type: string
        password:
          type: string
        permissionGroupIds:
          type: array
          items:
            type: string
        huntGroupSid:
          type: string
        partnerAgentId:
          type: string
        p3PermissionGroupId:
          type: string
        linkbackNumbers:
          type: array
          items:
            type: string
        callerIds:
          type: array
          items:
            type: string
        defaultApp:
          type: integer
          description: Default app the user starts on
          format: enum
        userCallerId:
          type: string
        agentProfileGroupId:
          type: string
        labels:
          type: array
          items:
            type: string
          description: A list of labels to assign to the user
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        localePreferencesOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: The override for the users locale preferences
    api.v0alpha.CreateUserResponse:
      type: object
      properties:
        userId:
          type: string
    api.v0alpha.CreateVerifiedEmailRes:
      type: object
      properties:
        verifiedEmailSid:
          type: string
          description: generated identifier field
      description: creates verified email
    api.v0alpha.CreateWarmOutboundTransferMemberReply:
      type: object
      properties: {}
      description: request to add a new outbound transfer member
    api.v0alpha.CreateWarmOutboundTransferMemberRequest:
      type: object
      properties:
        callerId:
          type: string
          description: where the call should look like it comming from
        destination:
          type: string
          description: where the call should go to
        reservedCarriers:
          type: array
          items:
            type: string
          description: specific carriers to use
        sessionSid:
          type: string
          description: the session sid for the agent
      description: request to add a new outbound transfer member
    api.v0alpha.CreateWebLinkTemplateRequest:
      type: object
      properties:
        webLinkTemplate:
          $ref: '#/components/schemas/api.v0alpha.WebLinkTemplate'
    api.v0alpha.CreateWebLinkTemplateResponse:
      type: object
      properties: {}
    api.v0alpha.CreateWhatsAppNumberRequest:
      type: object
      properties:
        whatsappNumber:
          allOf:
          - $ref: '#/components/schemas/api.commons.WhatsAppNumber'
          description: whatsapp number details
      description: Request message for create whatsapp number
    api.v0alpha.CreateWhatsAppNumberResponse:
      type: object
      properties:
        whatsappNumber:
          allOf:
          - $ref: '#/components/schemas/api.commons.WhatsAppNumber'
          description: whatsapp number details
      description: Response message for listing whatsapp number
    api.v0alpha.Currency:
      type: object
      properties:
        symbol:
          type: string
        rawValue:
          type: string
        value:
          type: number
          format: double
        name:
          type: string
        invalid:
          type: boolean
    api.v0alpha.CustomDashboardsSummary:
      type: object
      properties:
        dashboardsCurrent:
          type: string
        dashboardsPeak:
          type: string
        customDashboardsEditor:
          type: string
    api.v0alpha.CustomDataKey:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        clientPropertiesSid:
          type: string
          description: client_properties_sid is generated from CreateCustomDataKey
            RPC
      description: Entitiy message for ListCustomDataKeys
    api.v0alpha.CustomDialOrder:
      type: object
      properties:
        dialOrderFields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.DialOrderField'
      description: Custom Dial Order Fields holds one or more Contact Field Descriptions
        to indicate which fields in a contact record, and the order.
    api.v0alpha.CustomImportFormat:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
      description: Contact import template
    api.v0alpha.CustomReportFilter:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        conjunction:
          type: integer
          format: enum
        callResultsFilterList:
          type: array
          items:
            type: string
        dtmfExpressionList:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ComplexBooleanExpr'
        agentResponseExpressionList:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ComplexBooleanExpr'
        lastTemplateElementExpressionList:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ComplexBooleanExpr'
        excludeDtmfExpressionList:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ComplexBooleanExpr'
        huntGroupSidIncludeList:
          type: array
          items:
            type: string
        huntGroupSidExcludeList:
          type: array
          items:
            type: string
        xmlClientPropertySid:
          type: string
      description: Custom report filter type
    api.v0alpha.CustomReportFilterProperty:
      type: object
      properties:
        xmlClientPropertySid:
          type: string
        name:
          type: string
      description: CustomReportFilter property
    api.v0alpha.CustomReportsEnabledSummary:
      type: object
      properties:
        customReportsEnabledCurrent:
          type: boolean
        customReportsEnabledPeak:
          type: boolean
        customReportsEnabledEditor:
          type: string
        proStatus:
          type: boolean
    api.v0alpha.CustomReportsSummary:
      type: object
      properties:
        enabled:
          $ref: '#/components/schemas/api.v0alpha.CustomReportsEnabledSummary'
        visualizations:
          $ref: '#/components/schemas/api.v0alpha.CustomVisualizationsSummary'
        dashboards:
          $ref: '#/components/schemas/api.v0alpha.CustomDashboardsSummary'
        proStatus:
          type: boolean
    api.v0alpha.CustomVisualizationsSummary:
      type: object
      properties:
        visualizationsCurrent:
          type: string
        visualizationsPeak:
          type: string
        customVisualizationsEditor:
          type: string
    api.v0alpha.DNCL:
      type: object
      properties:
        countrySid:
          type: string
        dnclNotes:
          type: string
        dnclNumber:
          type: string
        expirationDate:
          type: string
          format: date-time
    api.v0alpha.Dashboard:
      type: object
      properties:
        dashboardId:
          type: string
          description: unique ID for this dashboard
        title:
          type: string
          description: required dashboard title
        description:
          type: string
          description: optional dashboard description
        layout:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DashboardLayout'
          description: layout of associated panels
        view:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DashboardView'
          description: viewing params of dashboard
        type:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DashboardType'
          description: dashboard type, with type specific components
        resourceId:
          type: string
          description: resource id of the dashboard
        standardDashboard:
          type: boolean
          description: standard dashboard flag
      description: Dashboard contains all fields for a dashboard
    api.v0alpha.DashboardLayout:
      type: object
      properties:
        panels:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.DashboardPanel'
          description: location information for each panel
      description: DashboardLayout contains location information for a dashboards
        panels
    api.v0alpha.DashboardPanel:
      type: object
      properties:
        panelSource:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.PanelSource'
          description: "panel_source determines the fields needed to\n retrieve the
            panel data and is used to determine\n who to pull the data from"
        rowLength:
          type: string
          description: height of panel
        columnLength:
          type: string
          description: length of panel
        rowStart:
          type: string
          description: absolute x position of panel
        columnStart:
          type: string
          description: absoulute y position of panel
      description: location fields subject to change
    api.v0alpha.DashboardPreferences:
      type: object
      properties:
        defaultInfoView:
          type: boolean
        defaultTableInclusion:
          type: boolean
        defaultInfoGrouping:
          type: boolean
        defaultSmallIcon:
          type: boolean
        defaultDescendingSort:
          type: boolean
        tableTemplateSid:
          type: string
        defaultCallTypes:
          $ref: '#/components/schemas/api.v0alpha.IncludedCallTypes'
        defaultInfoSortByValue:
          type: integer
          format: enum
        defaultBargeInFiltering:
          $ref: '#/components/schemas/api.v0alpha.BargeInFiltering'
      description: Wrapper DashboardGeneralPreferences object for get response and
        update request
    api.v0alpha.DashboardQueuePreferences:
      type: object
      properties:
        defaultInfoView:
          type: boolean
        defaultInfoGrouping:
          type: boolean
        defaultSmallIcon:
          type: boolean
        defaultDescendingSort:
          type: boolean
        defaultAgentSkillsFilter:
          type: string
        defaultInfoTableTemplate:
          type: string
        defaultInfoSortByValue:
          type: integer
          format: enum
      description: Wrapper DashboardQueuePreferences object for get response and update
        request
    api.v0alpha.DashboardSummary:
      type: object
      properties:
        dashboardId:
          type: string
          description: unique ID for this dashboard
        title:
          type: string
          description: required dashboard title
        description:
          type: string
          description: optional dashboard description
        panelCount:
          type: integer
          description: number of associated panels
          format: int32
        resourceId:
          type: string
          description: resource id of the dashboard
        standardDashboard:
          type: boolean
          description: standard dashboard flag
      description: Dashboard summary
    api.v0alpha.DashboardType:
      type: object
      properties:
        historic:
          $ref: '#/components/schemas/api.v0alpha.HistoricConfig'
        realTime:
          $ref: '#/components/schemas/api.v0alpha.RealTimeConfig'
      description: DashboardType, specifies what type of dashboard we are dealing
        with
    api.v0alpha.DashboardView:
      type: object
      properties:
        orgIds:
          type: array
          items:
            type: string
          description: list of clients whose data will be viewed
      description: DashboardView contains the viewing parameters that make up the
        view of a dashboard
    api.v0alpha.DataVisibility:
      type: object
      properties:
        visibilities:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AccountDataVisibility'
    api.v0alpha.DateTime:
      type: object
      properties:
        rawValue:
          type: string
          description: the raw string given when parsing the datetime obj
        format:
          type: string
          description: the format string used to create this datetime object
        precision:
          type: integer
          description: our date value ordered from most specific to least
          format: enum
        modifier:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DateTimeModifier'
          description: modifier to apply to our value when comparing
    api.v0alpha.DateTimeModifier:
      type: object
      properties:
        years:
          type: integer
          format: int32
        weeks:
          type: integer
          format: int32
        days:
          type: integer
          format: int32
        hours:
          type: integer
          format: int32
        minutes:
          type: integer
          format: int32
        seconds:
          type: integer
          format: int32
      description: modifies a DateTime by specific amount
    api.v0alpha.DeDupCriteria:
      type: object
      properties:
        action:
          type: integer
          format: enum
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.FieldIndex'
        unless:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.FilterCheck'
          description: skip record if expression results in true
        disjunctKeys:
          type: boolean
          description: whether to treat the fields as a disjunct set or composite
            value
    api.v0alpha.DeleteAgentPauseCodeRequest:
      type: object
      properties:
        xmlClientPropertySid:
          type: string
      description: Request message for the DeleteAgentPauseCode RPC.
    api.v0alpha.DeleteAgentPauseCodeResponse:
      type: object
      properties: {}
      description: Response message for the DeleteAgentPauseCode RPC.
    api.v0alpha.DeleteAgentProfileGroupRequest:
      type: object
      properties:
        agentProfileGroupId:
          type: string
    api.v0alpha.DeleteAgentProfileGroupResponse:
      type: object
      properties: {}
    api.v0alpha.DeleteAgentSkillReq:
      type: object
      properties:
        agentSkillSid:
          type: string
    api.v0alpha.DeleteAgentSkillRes:
      type: object
      properties: {}
    api.v0alpha.DeleteAgentStatisticsTemplateRequest:
      type: object
      properties:
        xmlClientPropertySid:
          type: string
          description: xml client property sid of the statistics template to delete.
      description: Request message for the DeleteAgentStatisticsTemplate RPC.
    api.v0alpha.DeleteAgentStatisticsTemplateResponse:
      type: object
      properties: {}
      description: Response message for the DeleteAgentStatisticsTemplate RPC.
    api.v0alpha.DeleteAgentTriggerTemplateRequest:
      type: object
      properties:
        id:
          type: string
    api.v0alpha.DeleteAgentTriggerTemplateResponse:
      type: object
      properties: {}
    api.v0alpha.DeleteApplicationDashboardRequest:
      type: object
      properties:
        application:
          type: integer
          description: application dashboard id
          format: enum
        dashboardResourceId:
          type: string
        orgId:
          type: string
      description: DeleteApplicationDashboardRequest used in DeleteApplicationDashboard
        rpc
    api.v0alpha.DeleteApplicationDashboardResponse:
      type: object
      properties: {}
      description: DeleteApplicationDashboardResponse used in DeleteApplicationDashboard
        rpc
    api.v0alpha.DeleteAuthConnectionRequest:
      type: object
      properties: {}
      description: Request message for the DeleteAuthConnection rpc.
    api.v0alpha.DeleteAuthConnectionResponse:
      type: object
      properties: {}
      description: Response message for the DeleteAuthConnection rpc.
    api.v0alpha.DeleteCannedMessageByIdReq:
      type: object
      properties:
        cannedMessageId:
          type: string
          description: canned_message_id
      description: request to delete canned message by id
    api.v0alpha.DeleteCannedMessageByIdRes:
      type: object
      properties:
        Result:
          type: boolean
      description: response to delete canned message by id
    api.v0alpha.DeleteCannedMessageGroupReq:
      type: object
      properties:
        cannedMessageGroupId:
          type: string
          description: canned_message_group_id
      description: request to delete canned message group
    api.v0alpha.DeleteCannedMessageGroupRes:
      type: object
      properties: {}
      description: response to delete canned message group
    api.v0alpha.DeleteCjsSearchDefinitionReq:
      type: object
      properties:
        cjsSearchDefinitionId:
          type: string
    api.v0alpha.DeleteClientInfoDisplayTemplateRequest:
      type: object
      properties:
        id:
          type: string
    api.v0alpha.DeleteClientInfoDisplayTemplateResponse:
      type: object
      properties: {}
    api.v0alpha.DeleteCollectionEntryReq:
      type: object
      properties:
        collectionId:
          type: string
        entryId:
          type: string
    api.v0alpha.DeleteCollectionReq:
      type: object
      properties:
        collectionId:
          type: string
    api.v0alpha.DeleteConnectedInboxBySidReq:
      type: object
      properties:
        connectedInboxSid:
          type: string
          description: connected inbox identifier
      description: DeleteConnectedInboxBySidReq - request to delete a connected inbox
    api.v0alpha.DeleteConsentReq:
      type: object
      properties:
        consentId:
          type: string
    api.v0alpha.DeleteContactFieldDescriptionReq:
      type: object
      properties:
        contactFieldDescriptionSid:
          type: integer
          format: int32
    api.v0alpha.DeleteContactFieldDescriptionRes:
      type: object
      properties: {}
    api.v0alpha.DeleteCustomDataKeyReq:
      type: object
      properties:
        clientPropertiesSid:
          type: string
      description: Request message for DeleteCustomDataKey RPC
    api.v0alpha.DeleteCustomDataKeyRes:
      type: object
      properties: {}
      description: Response message for DeleteCustomDataKey RPC
    api.v0alpha.DeleteCustomReportFilterRequest:
      type: object
      properties:
        xmlClientPropertySid:
          type: string
      description: Request message for DeleteCustomReportFilter
    api.v0alpha.DeleteCustomReportFilterResponse:
      type: object
      properties: {}
      description: Response message for DeleteCustomReportFilter
    api.v0alpha.DeleteCustomUnsubscribeLinkReq:
      type: object
      properties:
        customUnsubscribeLinkSid:
          type: string
          description: custom unsubscribe link sid
      description: Request to delete unsubscribe link details
    api.v0alpha.DeleteDashboardRequest:
      type: object
      properties:
        dashboardId:
          type: string
          description: unique ID of dashboard to be deleted
        resourceId:
          type: string
          description: resource id of the dashboard
      description: DeleteDashboardRequest used in DeleteDashboard rpc
    api.v0alpha.DeleteDispositionReq:
      type: object
      properties:
        disposition:
          allOf:
          - $ref: '#/components/schemas/api.commons.Disposition'
          description: the disposition to delete
      description: DeleteDispositionReq - request to delete a disposition
    api.v0alpha.DeleteExtensionReq:
      type: object
      properties:
        pbxExtensionSid:
          type: string
    api.v0alpha.DeleteExtensionRes:
      type: object
      properties: {}
    api.v0alpha.DeleteGreetingReq:
      type: object
      properties:
        filename:
          type: string
    api.v0alpha.DeleteGreetingRes:
      type: object
      properties: {}
    api.v0alpha.DeleteInboundSmsGroupReq:
      type: object
      properties:
        inboundSmsGroupId:
          type: string
    api.v0alpha.DeleteInboundSmsGroupRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.DeleteInboundSmsTemplateReq:
      type: object
      properties:
        inboundSmsTemplateId:
          type: string
    api.v0alpha.DeleteInboundSmsTemplateRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.DeleteLearnPagesReq:
      type: object
      properties:
        locale:
          type: string
          description: locale used for the markdown contents
        url:
          type: array
          items:
            type: string
          description: list of learning urls to be deleted
        version:
          type: string
          description: version
      description: request to delete learn pages
    api.v0alpha.DeleteLearnPagesRes:
      type: object
      properties: {}
      description: response to delete learn pages
    api.v0alpha.DeleteP3PermissionGroupRequest:
      type: object
      properties:
        permissionGroupId:
          type: string
    api.v0alpha.DeleteP3PermissionGroupResponse:
      type: object
      properties:
        permissionGroupId:
          type: string
    api.v0alpha.DeletePermissionGroupRequest:
      type: object
      properties:
        permissionGroupId:
          type: string
          description: id of PermissionGroup being deleted.
      description: The request for api.v0alpha.DeletePermissionGroup.
    api.v0alpha.DeletePermissionGroupResponse:
      type: object
      properties: {}
      description: The response for api.v0alpha.DeletePermissionGroup.
    api.v0alpha.DeletePhoneBookEntryReq:
      type: object
      properties:
        phoneBookSid:
          type: string
          description: The sid that matches this phone book entry to a specific phone
            book.
      description: Request message for the DeletePhoneBookEntry RPC
    api.v0alpha.DeletePhoneBookEntryRes:
      type: object
      properties: {}
      description: Response message for the DeletePhoneBookEntry RPC
    api.v0alpha.DeleteQueueConfigReq:
      type: object
      properties:
        configName:
          type: string
          description: "config_name is the name of the custom queue config that will
            be\n deleted."
    api.v0alpha.DeleteQueueConfigRes:
      type: object
      properties: {}
    api.v0alpha.DeleteScenarioReq:
      type: object
      properties:
        cplScenarioId:
          type: string
    api.v0alpha.DeleteScenarioRes:
      type: object
      properties: {}
    api.v0alpha.DeleteScrubEntriesProcess:
      type: object
      properties:
        listId:
          type: string
          description: '''list_id'' is the id of the scrub list in compliance to delete
            from'
        field:
          type: string
          description: "'field' is which column on an lms record that contains the
            data we want to delete\n from the scrub list in compliance.\n ex: if field
            is \"first\"  all records that contain a record field named \"first\"
            will have their contents\n collected, and sent to compliance to be deleted
            from scrub list."
      description: "This process collects data from a specific fields in all the records
        in the lms list\n and calls Compliance.DeleteScrubListEntries() on them."
    api.v0alpha.DeleteScrubListEntriesReq:
      type: object
      properties:
        listId:
          type: string
        list:
          type: array
          items:
            type: string
          description: payload
    api.v0alpha.DeleteScrubListReq:
      type: object
      properties:
        listId:
          type: string
    api.v0alpha.DeleteSignatureReq:
      type: object
      properties:
        signatureSid:
          type: string
          description: identifier of the signature to delete
      description: DeleteSignatureReq - request to delete message signature
    api.v0alpha.DeleteSignatureRes:
      type: object
      properties: {}
      description: DeleteSignatureReq - result of deleting message signature
    api.v0alpha.DeleteSmsConversationReq:
      type: object
      properties:
        smsConversationId:
          type: string
    api.v0alpha.DeleteSmsConversationRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.DeleteSmsIntentTemplateReq:
      type: object
      properties:
        smsIntentTemplateSid:
          type: string
    api.v0alpha.DeleteSmsIntentTemplateRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.DeleteSmsSourceNumberReq:
      type: object
      properties:
        smsNumberSid:
          type: string
    api.v0alpha.DeleteSmsSourceNumberRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.DeleteSmsTemplateReq:
      type: object
      properties:
        smsTemplateSid:
          type: string
    api.v0alpha.DeleteSmsTemplateRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.DeleteStandaloneReq:
      type: object
      properties:
        locale:
          type: string
          description: locale used for the markdown contents
        articleNames:
          type: array
          items:
            type: string
          description: list of article names
        version:
          type: string
          description: version
      description: request to delete standalone articles
    api.v0alpha.DeleteStandaloneRes:
      type: object
      properties: {}
      description: response to delete standalone articles
    api.v0alpha.DeleteTtsVoiceReq:
      type: object
      properties:
        ttsVoiceSid:
          type: string
      description: Request message for the DeleteTtsVoice RPC.
    api.v0alpha.DeleteTtsVoiceRes:
      type: object
      properties: {}
      description: Response message for the DeleteTtsVoice RPC.
    api.v0alpha.DeleteVerifiedEmailReq:
      type: object
      properties:
        verifiedEmailSid:
          type: string
          description: verified email identifier
      description: DeleteVerifiedEmailReq - request to delete verified email
    api.v0alpha.DeleteVersionReq:
      type: object
      properties:
        locale:
          type: string
          description: locale used for the markdown contents
        version:
          type: string
          description: version
      description: request to delete version
    api.v0alpha.DeleteVersionRes:
      type: object
      properties: {}
      description: response to delete version
    api.v0alpha.DeleteVoicemailReq:
      type: object
      properties:
        mailBox:
          type: string
        callerSid:
          type: string
        callerType:
          type: integer
          format: enum
    api.v0alpha.DeleteVoicemailRes:
      type: object
      properties: {}
    api.v0alpha.DeleteWebLinkTemplateRequest:
      type: object
      properties:
        webLinkTemplateId:
          type: string
    api.v0alpha.DeleteWebLinkTemplateResponse:
      type: object
      properties: {}
    api.v0alpha.DequeueCallForManualApprovalReq:
      type: object
      properties:
        huntGroupSid:
          type: string
        agentSessionSid:
          type: string
        timeoutMinutes:
          type: integer
          format: int32
    api.v0alpha.DequeueCallForManualApprovalRes:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
        queue:
          type: string
        clientInfo:
          $ref: '#/components/schemas/api.v0alpha.GetClientInfoDataRes'
        clientInfoTemplate:
          $ref: '#/components/schemas/api.v0alpha.GetClientInfoDisplayTemplateRes'
    api.v0alpha.DequeuePreviewRecordOrCallReq:
      type: object
      properties:
        timeoutMinutes:
          type: integer
          format: int32
        agentSessionSid:
          type: string
    api.v0alpha.DequeuePreviewRecordOrCallRes:
      type: object
      properties:
        queueName:
          type: string
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
        record:
          $ref: '#/components/schemas/api.commons.SimpleRecordData'
    api.v0alpha.DequeueScrubbedCallForPreviewRecordReq:
      type: object
      properties:
        huntGroupSid:
          type: string
        phoneNumber:
          type: string
        phoneNumIndex:
          type: integer
          format: int32
        taskGroupSid:
          type: string
        taskSid:
          type: string
    api.v0alpha.DequeueScrubbedCallForPreviewRecordRes:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
    api.v0alpha.DequeueSmsMamForManualApprovalReq:
      type: object
      properties:
        huntGroupSid:
          type: string
    api.v0alpha.DequeueSmsMamForManualApprovalRes:
      type: object
      properties:
        sms:
          $ref: '#/components/schemas/api.commons.SimpleSmsMamData'
        queue:
          type: string
    api.v0alpha.DialManualCancelReply:
      type: object
      properties: {}
    api.v0alpha.DialManualCancelRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.DialManualPrepareReply:
      type: object
      properties: {}
    api.v0alpha.DialManualPrepareRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.DialOrder:
      type: object
      properties:
        standardOrder:
          type: integer
          format: enum
        customOrder:
          $ref: '#/components/schemas/api.v0alpha.CustomDialOrder'
      description: Dial Order holds either a type enum, or one or more Contact Field
        Description fields for custom order.
    api.v0alpha.DialOrderField:
      type: object
      properties:
        cfdSid:
          type: string
        fieldName:
          type: string
      description: Dial Order Field holds the ID for saving into preferences and the
        name for display.
    api.v0alpha.DialPreviewPrepareReply:
      type: object
      properties: {}
    api.v0alpha.DialPreviewPrepareRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.DialedNumberFieldStyle:
      type: object
      properties:
        textColor:
          $ref: '#/components/schemas/api.v0alpha.Color'
        backgroundColor:
          $ref: '#/components/schemas/api.v0alpha.Color'
    api.v0alpha.DisableConsentProfileReq:
      type: object
      properties:
        consentProfileId:
          type: string
    api.v0alpha.DisableRuleSetReq:
      type: object
      properties:
        ruleSetId:
          type: string
        ruleSetSha:
          type: string
    api.v0alpha.DisableRuleSetRes:
      type: object
      properties: {}
    api.v0alpha.DisableScenarioReq:
      type: object
      properties:
        cplRuleSetId:
          type: string
        cplScenarioId:
          type: string
    api.v0alpha.DisplayDataSettings:
      type: object
      properties:
        displayDataDip:
          type: integer
          format: enum
        displayDataDipKeys:
          type: array
          items:
            type: string
        displayDataCollect:
          type: boolean
        displayIvrNavigation:
          type: boolean
        displaySipHeaderData:
          type: boolean
    api.v0alpha.Disposition:
      type: object
      properties:
        required:
          type: boolean
        order:
          type: string
        type:
          type: string
        header:
          type: string
        prompt:
          type: string
        defaultValue:
          type: string
        responseOptions:
          type: array
          items:
            type: string
        bypassAutoScriptProgression:
          type: boolean
    api.v0alpha.DispositionPair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
          description: "Value is optional.\n If left blank, we will just\n check for
            existence of `key`."
    api.v0alpha.DispositionSet:
      type: object
      properties:
        dispositions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.DispositionPair'
          description: A set of disposition pairs.
    api.v0alpha.DnclSettings:
      type: object
      properties:
        allowDnclAdd:
          type: boolean
        manualDialAutoDnclAdd:
          type: boolean
        previewDialAutoDnclAdd:
          type: boolean
        agentResponsesAutoDnclAdd:
          type: boolean
        defaultManualDnclExpireHours:
          type: string
        defaultPreviewDnclExpireHours:
          type: string
        defaultDnclCountry:
          type: string
        defaultOutboundDnclExpireHours:
          type: string
        defaultInboundDnclExpireHours:
          type: string
        huntGroupComplianceScrubLists:
          type: array
          items:
            type: string
          description: list of scrub lists to add dncls to
        scrubListsAutoAddOptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ScrubListsAutoAdd'
          description: scrub list ids and field values used in lookup
        displayDnclOptionsInWrapup:
          type: boolean
          description: Should Show DNCL Options in Agent Voice Wrapup state
        allowDnclRemove:
          type: boolean
          description: allows agent to remove scrub list entries
        huntGroupComplianceScrubListsRemovalAllowed:
          type: array
          items:
            type: string
          description: scrub list ids used in lookup for allowed entry removal
        scrubListsExpirationLimits:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ScrubListsExpirationLimits'
          description: expiration time options when adding  entry to scrub list
    api.v0alpha.DownloadCallRecordingReq:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
    api.v0alpha.DownloadCallRecordingsReq:
      type: object
      properties:
        callParams:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.DownloadCallRecordingsReq_CallParams'
          description: The CallParams, repeated for each call
        htmlFileName:
          type: string
          description: The htmlFileName (Name of the file that shows the html of a
            call recording and gets downloaded with every recording).
        htmlFileContent:
          type: string
          description: The content that goes inside the htmlFileName file.
        groupSid:
          type: string
          description: GroupSid is an int if there is only one call recording in the
            zip file. Otherwise it is nil.
        startDate:
          type: string
          description: "StartDate is the chosen Timescale value (1 day, 2 days, etc.)
            as a time stamp based on the current date.\n For example, if today is
            05/13/22 and the Timescale value is 7 days, it will be the time stamp
            value of 05/06/22."
          format: date-time
      description: The request when multiple call recordings are downloaded.
    api.v0alpha.DownloadCallRecordingsReq_CallParams:
      type: object
      properties:
        callSid:
          type: string
          description: The callSid
        callType:
          type: integer
          description: The callType, based on the CallType enum.
          format: enum
      description: The CallParams for a call recording.
    api.v0alpha.DownloadGreetingForExtensionReq:
      type: object
      properties:
        mailBox:
          type: string
    api.v0alpha.DownloadGreetingForExtensionRes:
      type: object
      properties:
        url:
          type: string
    api.v0alpha.DownloadGreetingReq:
      type: object
      properties:
        filename:
          type: string
    api.v0alpha.DownloadGreetingRes:
      type: object
      properties:
        url:
          type: string
    api.v0alpha.DownloadMessageReq:
      type: object
      properties:
        mailBox:
          type: string
        callerSid:
          type: string
        callerType:
          type: integer
          format: enum
    api.v0alpha.DownloadMessageRes:
      type: object
      properties:
        url:
          type: string
    api.v0alpha.DownloadMessagesReq:
      type: object
      properties:
        mailBoxes:
          type: array
          items:
            type: string
        unheardOnly:
          type: boolean
    api.v0alpha.DownloadMessagesRes:
      type: object
      properties:
        url:
          type: string
    api.v0alpha.DownloadRecordingRes:
      type: object
      properties:
        url:
          type: string
          description: The url of the recording
        filename:
          type: string
          description: The filename of the recording
      description: The response when a recording is downloaded.
    api.v0alpha.EHREntityType:
      type: object
      properties:
        epicEntity:
          type: integer
          format: enum
    api.v0alpha.EditAgentQuickViewPreferencesRequest:
      type: object
      properties:
        agentStatusDisplayTemplate:
          $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate'
      description: Edit AGENT QUICK VIEW PREFERENCES
    api.v0alpha.EditAgentQuickViewPreferencesResponse:
      type: object
      properties: {}
    api.v0alpha.EditBackofficeThemePreferenceRequest:
      type: object
      properties:
        orgId:
          type: string
        backofficeTheme:
          type: integer
          format: enum
      description: Request for EditBackofficeThemePreference
    api.v0alpha.EditBackofficeThemePreferenceResponse:
      type: object
      properties: {}
      description: Response for EditBackofficeThemePreference
    api.v0alpha.EditProjectByIdReq:
      type: object
      properties:
        project:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.Project'
          description: project
        fieldMask:
          type: string
          description: field mask
          format: field-mask
      description: request to update omni project details by project id
    api.v0alpha.EditProjectByIdRes:
      type: object
      properties:
        project:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.Project'
          description: the created project
        referenceId:
          type: string
          description: the ghost notifier id
      description: EditProjectByIdRes - result of editing a project
    api.v0alpha.Element:
      type: object
      properties:
        elementId:
          type: string
        name:
          type: string
        inputs:
          type: array
          items:
            type: string
        inputIsDiscard:
          type: array
          items:
            type: boolean
        transform:
          $ref: '#/components/schemas/api.v0alpha.Process'
        lastStatus:
          type: integer
          format: enum
        labels:
          type: array
          items:
            type: string
        createdDate:
          type: string
          format: date-time
        lastEdited:
          type: string
          format: date-time
        description:
          type: string
      description: REPLACES PipelineElement and List
    api.v0alpha.ElementError:
      type: object
      properties:
        invalidExpression:
          $ref: '#/components/schemas/api.v0alpha.ElementError_InvalidExpression'
        missingField:
          $ref: '#/components/schemas/api.v0alpha.ElementError_MissingField'
        badFieldType:
          $ref: '#/components/schemas/api.v0alpha.ElementError_BadFieldType'
    api.v0alpha.ElementError_BadFieldType:
      type: object
      properties:
        fieldName:
          type: string
      description: "this element is doing an operation that will always fail.\n Examples:\n
        \  - Enrichment with fields that are not phone or zip type\n   - reshape Add/Subtract
        functions on non number types\n   - Filter using datetime math with non datetime
        fields\n this will be possible to determine all cases after https://git.tcncloud.net/m/neo/-/issues/6924"
    api.v0alpha.ElementError_InvalidExpression:
      type: object
      properties:
        expression:
          type: string
    api.v0alpha.ElementError_MissingField:
      type: object
      properties:
        fieldName:
          type: string
    api.v0alpha.ElementPK:
      type: object
      properties:
        elementId:
          type: string
    api.v0alpha.ElementSummary:
      type: object
      properties:
        elementId:
          type: string
        elementName:
          type: string
        error:
          $ref: '#/components/schemas/api.v0alpha.ElementError'
    api.v0alpha.Email:
      type: object
      properties:
        localPart:
          type: string
        domain:
          type: string
        fullAddress:
          type: string
        invalid:
          type: boolean
    api.v0alpha.EmailResponse:
      type: object
      properties:
        subject:
          type: string
        body:
          type: string
        addresses:
          type: array
          items:
            type: string
    api.v0alpha.EmailSettings:
      type: object
      properties:
        reportType:
          type: string
        emailAddresses:
          type: array
          items:
            type: string
        reportFormat:
          type: string
        fromEmailAddress:
          type: string
    api.v0alpha.EmailSmsPreferences:
      type: object
      properties:
        useCustomLinks:
          type: boolean
        clientAcknowledgement:
          type: boolean
        emailFromAddresses:
          type: array
          items:
            type: string
      description: Wrapper EmailSmsPreferences object for get response and update
        request
    api.v0alpha.Empty:
      type: object
      properties: {}
    api.v0alpha.EnableConsentProfileReq:
      type: object
      properties:
        consentProfileId:
          type: string
    api.v0alpha.EnableRuleSetReq:
      type: object
      properties:
        ruleSetId:
          type: string
        ruleSetSha:
          type: string
    api.v0alpha.EnableRuleSetRes:
      type: object
      properties: {}
    api.v0alpha.EnableScenarioReq:
      type: object
      properties:
        cplRuleSetId:
          type: string
        cplScenarioId:
          type: string
    api.v0alpha.EndOfDayPreferences:
      type: object
      properties:
        eodMonday:
          type: integer
          format: int32
        eodTuesday:
          type: integer
          format: int32
        eodWednesday:
          type: integer
          format: int32
        eodThursday:
          type: integer
          format: int32
        eodFriday:
          type: integer
          format: int32
        eodSaturday:
          type: integer
          format: int32
        eodSunday:
          type: integer
          format: int32
      description: Wrapper EndOfDayPreferences object for get response and update
        request
    api.v0alpha.EnqueueManuallyApprovedCallReq:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
    api.v0alpha.EnqueueManuallyApprovedCallRes:
      type: object
      properties: {}
    api.v0alpha.EnqueueManuallyApprovedSmsReq:
      type: object
      properties:
        sms:
          $ref: '#/components/schemas/api.commons.SimpleSmsMamData'
    api.v0alpha.EnqueueManuallyApprovedSmsRes:
      type: object
      properties: {}
    api.v0alpha.EnqueueManuallyRejectedCallReq:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
    api.v0alpha.EnqueueManuallyRejectedCallRes:
      type: object
      properties: {}
    api.v0alpha.EnqueueManuallyRejectedSmsReq:
      type: object
      properties:
        sms:
          $ref: '#/components/schemas/api.commons.SimpleSmsMamData'
    api.v0alpha.EnqueueManuallyRejectedSmsRes:
      type: object
      properties: {}
    api.v0alpha.EnqueuePreviewDialCallReq:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
        queueName:
          type: string
    api.v0alpha.EnqueuePreviewDialCallRes:
      type: object
      properties: {}
    api.v0alpha.EnqueuePreviewRecordReq:
      type: object
      properties:
        record:
          $ref: '#/components/schemas/api.commons.SimpleRecordData'
        queueName:
          type: string
    api.v0alpha.EnqueuePreviewRecordRes:
      type: object
      properties: {}
    api.v0alpha.EnrichedPhone:
      type: object
      properties:
        areaCode:
          type: string
        blockId:
          type: string
        carrier:
          type: string
        cc:
          type: string
        ccnsn:
          type: string
        cellPrefix:
          type: string
        city:
          type: string
        cocType:
          type: string
        dst:
          type: boolean
        internationalPrefix:
          type: string
        iso2:
          type: string
        language:
          type: string
        max:
          type: string
          description: Location location = 13;
        min:
          type: string
        nationalPrefix:
          type: string
        ndc:
          type: string
        prefix:
          type: string
        regionCode:
          type: string
        regionName:
          type: string
        ssc1:
          type: string
        ssc2:
          type: string
        ssc3:
          type: string
        ssc4:
          type: string
        source:
          type: string
        timeZone:
          type: string
        type:
          type: string
        usesNdc:
          type: boolean
        utc:
          type: number
          format: float
    api.v0alpha.EnrichedZip:
      type: object
      properties:
        accuracy:
          type: integer
          format: int32
        adminCode1:
          type: string
        adminCode2:
          type: string
        adminCode3:
          type: string
        adminName1:
          type: string
        adminName2:
          type: string
        adminName3:
          type: string
        areaCode:
          type: string
        cityName:
          type: string
        cityType:
          type: string
        countryCode:
          type: string
        countyFips:
          type: string
        countyName:
          type: string
        dst:
          type: boolean
        iso2:
          type: string
        msaCode:
          type: string
          description: Location location = 16;
        placeName:
          type: string
        postalCode:
          type: string
        postalCodeKey:
          type: string
        postalType:
          type: string
        provinceAbbr:
          type: string
        provinceName:
          type: string
        source:
          type: string
        stateFips:
          type: string
        timeZone:
          type: string
        utc:
          type: number
          format: float
    api.v0alpha.EntityURL:
      type: object
      properties:
        entityType:
          type: integer
          format: enum
        url:
          type: string
    api.v0alpha.EntrypointProcess:
      type: object
      properties: {}
      description: split into ApiEntrypoint and SftpImport
    api.v0alpha.EpicEntrypoint:
      type: object
      properties:
        cron:
          type: string
          description: "how often this event needs to run.\n this cron string will
            be restricted differently depending\n on the specific operation being
            run. For example, Epic\n only allows calls once per 24 hours."
        maxWaitTime:
          type: number
          description: "how long in minutes we will wait with the entrypoint\n in
            the CHECK state. 0 is interpreted as wait indefinitely."
          format: double
        entityTypes:
          type: array
          items:
            type: integer
            format: enum
          description: the types of entities we want retrieved
        groupBaseUrl:
          type: string
          description: "the base url that points to the group of entites we are querying.\n
            Each group can be contacted once every 24 hours max.\n Example: https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4"
        groupFhirId:
          type: string
          description: "the id for the group we are matching.\n Example: eIscQb2HmqkT.aPxBKDR1mIj3721CpVk1suC7rlu3yX83"
        runtimeValues:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.RuntimeValues'
          description: "values during event processing.\n Not visible to user."
        flushPageCount:
          type: string
          description: "how many pages we should save before aggregating the data
            and sending downstream\n default is 100. Max is 10000.\n If a termination
            state hasn't been reached, the event will be re-queued and continue\n
            where it left off."
        flushMinuteCount:
          type: string
          description: "how much total elapsed time (in minutes) we want to wait before
            flushing records.\n if total time spent aggregating the data goes over
            this many minutes, we will flush\n the current records downstream.\n default
            is 20. Max is 120. Min is 1.\n If a termination state hasn't been reached,
            the event will be re-queued and continue\n where it left off."
        flushDuringCheck:
          type: boolean
          description: "if true, we will switch to processing mode when we have enough
            records to flush\n even if we haven't downloaded all the pages yet.\n
            after the current records are flushed, we switch back to downloading the
            remaining records.\n If false (default), we download all the pages before
            we start processing any records."
        timezone:
          type: string
          description: Specifies the timezone to be used by the cron
        enabled:
          type: boolean
          description: If process is enabled
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Field'
          description: The fields the user wants retrieved from the raw json response
        rawJson:
          type: boolean
          description: If we should return one column as raw json and not any specified
            fields for file template
        nonProd:
          type: boolean
          description: non prod specifies which key, and which client id we are going
            to use.
        authServer:
          type: string
          description: auth server urls can be different from the group base url
      description: EHR EPIC
    api.v0alpha.Error:
      type: object
      properties:
        error:
          type: string
        rawValue:
          type: string
    api.v0alpha.Event:
      type: object
      properties:
        eventId:
          type: string
          description: pk
        parentId:
          type: string
          description: element_id that created this event (nil if its an upload, or
            sftp_import)
        inputIds:
          allOf:
          - $ref: '#/components/schemas/api.commons.StringArraySql'
          description: other inputs to this event
        elementId:
          type: string
        process:
          $ref: '#/components/schemas/api.v0alpha.Process'
        uploadTs:
          type: string
          description: when this event got to the database
          format: date-time
        startedTs:
          type: string
          description: when the scheduler started processing (could be nil if not
            started)
          format: date-time
        finishedTs:
          type: string
          description: processing finished (could be nil if not finished)
          format: date-time
        backoffTill:
          type: string
          description: (not used yet, so always nil) event wont be attempted till
            after this time
          format: date-time
        attempts:
          type: integer
          description: how many attempts this event is taking
          format: int32
        latestHistory:
          type: string
          description: "which hisotry record this event maps to. (only populated if
            finished_ts is\n not nil)"
    api.v0alpha.Events:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Event'
    api.v0alpha.ExecuteCjsSearchDefinitionReq:
      type: object
      properties:
        searchDefinitionId:
          type: string
        searchFields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CjsExecuteSearchField'
    api.v0alpha.ExecuteCjsSearchDefinitionRes:
      type: object
      properties:
        collectionEntries:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CollectionEntries'
    api.v0alpha.ExistReq:
      type: object
      properties:
        url:
          type: string
        locale:
          type: string
      description: request to check if learning page url exists
    api.v0alpha.ExistRes:
      type: object
      properties:
        exist:
          type: boolean
      description: response for checking if learning page  url exists
    api.v0alpha.Expiration:
      type: object
      properties:
        units:
          type: integer
          description: units can be weeks, days, or hours
          format: enum
        quantity:
          type: string
          description: max 1 year
    api.v0alpha.ExpireConsentReq:
      type: object
      properties:
        consentId:
          type: string
        expire:
          type: string
          format: date-time
    api.v0alpha.ExportConsentListRequest:
      type: object
      properties:
        consentProfileId:
          type: string
    api.v0alpha.ExportConsentListResponse:
      type: object
      properties:
        url:
          type: string
    api.v0alpha.ExportHeader:
      type: object
      properties:
        names:
          type: array
          items:
            type: string
    api.v0alpha.ExportManyReq:
      type: object
      properties:
        url:
          type: array
          items:
            type: string
          description: url identifiers for the whole book containing all the pages
        locale:
          type: string
          description: locale used for the markdown contents
        content:
          type: string
          description: header image content
      description: request to export multiple pages of the learning center markdown
        to PDF
    api.v0alpha.ExportRes:
      type: object
      properties:
        downloadUrl:
          type: string
          description: generated pdf contents to be downloaded from url
      description: response to export the pages of the learning center markdown to
        PDF
    api.v0alpha.ExportScrubListReq:
      type: object
      properties:
        listId:
          type: string
    api.v0alpha.ExportScrubListRes:
      type: object
      properties:
        url:
          type: string
    api.v0alpha.Extension:
      type: object
      properties:
        pbxExtensionSid:
          type: string
        extensionNumber:
          type: string
        agent:
          $ref: '#/components/schemas/api.v0alpha.Extension_Agent'
        huntGroup:
          $ref: '#/components/schemas/api.v0alpha.Extension_HuntGroup'
        agentAccess:
          type: boolean
        email:
          $ref: '#/components/schemas/api.v0alpha.Extension_Email'
        greeting:
          type: string
        hasGreeting:
          type: boolean
        unheardMessages:
          type: integer
          description: "unheard_messages is the count of all of the unheard\n voicemail
            messages for the extension."
          format: int32
        totalMessages:
          type: integer
          description: "total_messages is the count of every voicemail message\n for
            the extension (heard + unheard)."
          format: int32
    api.v0alpha.Extension_Agent:
      type: object
      properties:
        firstName:
          type: string
          description: "The first_name & last_name fields will be set during\n CreateExtension
            and UpdateExtension. If these fields are\n set for those calls they will
            be overwritten."
        lastName:
          type: string
        userId:
          type: string
        archived:
          type: boolean
          description: Whether the agent associated with this extension is archived.
    api.v0alpha.Extension_Email:
      type: object
      properties:
        subject:
          type: string
        body:
          type: string
        addresses:
          type: array
          items:
            type: string
        attachVm:
          type: boolean
    api.v0alpha.Extension_HuntGroup:
      type: object
      properties:
        huntGroupSid:
          type: string
        huntGroupName:
          type: string
          description: "The hunt_group_name field will be set during CreateExtension\n
            and UpdateExtension. If this field is set for those calls it\n will be
            overwritten."
        archived:
          type: boolean
          description: Whether the hunt group associated with this extension is archived.
    api.v0alpha.Extract_Index:
      type: object
      properties:
        position:
          type: integer
          description: the base 0 index of the string
          format: int32
        match:
          type: string
          description: an index matching the substring. Starting at the beginning
            of the substring
      description: represents an index. can be a string or a number
    api.v0alpha.Extract_Slice:
      type: object
      properties:
        startIsExclusive:
          type: boolean
          description: "the default inclusivity is [start, end)\n this marks whether
            to not include the start_index marker in the slice"
        endIsInclusive:
          type: boolean
          description: this marks whether to include the end_index marker in the slice
        startIndex:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Extract_Index'
          description: "start index marks where to start the slice at. can be a string
            or number\n subsequent indexes are backup indexes incase the first doesn't
            exist"
        endIndex:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Extract_Index'
          description: "end index marks where to start the slice at. can be a string
            or number\n subsequent indexes are backup indexes incase the first doesn't
            exist"
      description: "Slice represents a part of a string. think of a python or golang
        slice operator\n where the new substring starts at the starting index and
        ends at the ending index exclusively"
    api.v0alpha.Family:
      type: object
      properties:
        clientSid:
          type: string
        clientName:
          type: string
        parents:
          $ref: '#/components/schemas/api.v0alpha.Relations'
        children:
          $ref: '#/components/schemas/api.v0alpha.Relations'
    api.v0alpha.Field:
      type: object
      properties:
        name:
          type: string
        type:
          type: integer
          format: enum
        dateModified:
          type: string
          format: date-time
        metadata:
          $ref: '#/components/schemas/api.v0alpha.FieldMetadata'
        description:
          type: string
    api.v0alpha.FieldIndex:
      type: object
      properties:
        index:
          type: array
          items:
            type: string
        datetime:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DateTimeModifier'
          description: modifies the fetched field if it is a datetime field
      description: "first value is the field_name in the record.\n additional values
        are nested fields on record field looked up from index[0]"
    api.v0alpha.FieldMetadata:
      type: object
      properties:
        timeFormat:
          type: string
        precision:
          type: integer
          format: enum
        removeCharacters:
          type: string
          description: "3-10 are Parsing Options\n Remove any characters that are
            in this string\n `remove_characters` will override leave_characters"
        replaceEmpty:
          type: string
          description: "If the parsed value is empty\n it will be replaced with this
            value"
        replaceError:
          type: string
          description: "If an error is encountered with parsing\n then the field will
            be replaced with this value"
        removeLetters:
          type: boolean
          description: Remove any letters (a-zA-Z) from the field
        removeNumbers:
          type: boolean
          description: Remove any numbers (digits 0-9) from the field
        removeSymbols:
          type: boolean
          description: Removes any symbols or punctuation from the field
        leaveCharacters:
          type: string
          description: "Any characters in this string will not be remove\n can be
            overridden by remove_characters"
        removeString:
          type: string
          description: Remove any matches of this entire string
        jsonDotPath:
          type: string
          description: "'json_dot_path' holds the json path that will fetch the  value
            for this field by walking path\n over a json object via:\n https://github.com/tidwall/gjson\n
            ex: dot_path = a.b.0.firstName\n Values must resolve to one thing, not
            a range of things. If a range is retrieved, the first value is taken\n
            the rest are ignored.\n If string is empty, we just use the field name
            for the path"
        jsonForceTypeMatch:
          type: boolean
          description: "If true value retrieved from json *must* match the field definition,
            or error.\n If true, the value if a string, will be 'parsed' into the
            correct type.\n If false, the value will be used as is, meaning time_strings,
            number_strings and the like will remain as strings."
        startingPosition:
          type: integer
          description: "for fixed width files indicates the starting position of the
            data.\n if it is -1, starting position is one character after the previous
            fields starting position + length.\n if this is the first field and it
            is -1, starting position is 0"
          format: int32
        fieldLength:
          type: integer
          description: "for fixed width files indicates how many characters to the
            right of starting position we will read.\n this field is required to be
            greater than 0."
          format: int32
    api.v0alpha.FieldNames:
      type: object
      properties:
        names:
          type: array
          items:
            type: string
    api.v0alpha.Fields:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Field'
    api.v0alpha.FileFormatParams:
      type: object
      properties:
        skipFirstNoLines:
          type: integer
          description: use skip_first_lines
          format: int32
        skipLinesMatchRegex:
          type: string
        trimSpaces:
          type: boolean
        customDelimiter:
          type: string
        skipFirstLine:
          type: boolean
        jsonDotPath:
          type: string
          description: "for json file formats:\n if non-empty represents that the
            file is one large json object,\n and that this is the json path to the
            root that contains all the records.\n example: { response: { records:
            [...] } }\n to get to the records stored at [...], we would use\n json_dot_path=\"response.records\"\n
            If left blank, we are expected each json object to be on its own line:
            (jsonl)"
    api.v0alpha.FileNameSegment:
      type: object
      properties:
        segmentType:
          type: string
        formatPattern:
          type: string
        timeZoneId:
          type: string
      description: File name segment
    api.v0alpha.FileNamingConvention:
      type: object
      properties:
        segments:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.FileNameSegment'
      description: File name convention properties
    api.v0alpha.FileTemplate:
      type: object
      properties:
        fileTemplateId:
          type: string
        name:
          type: string
        description:
          type: string
        fieldNames:
          type: array
          items:
            type: string
        fileFormatParams:
          $ref: '#/components/schemas/api.v0alpha.FileFormatParams'
        fileFormat:
          type: integer
          format: enum
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Field'
    api.v0alpha.FilterCheck:
      type: object
      properties:
        valComp:
          $ref: '#/components/schemas/api.v0alpha.FilterCheck_ValueComparison'
        typeComp:
          $ref: '#/components/schemas/api.v0alpha.FilterCheck_TypeComparison'
        listComp:
          $ref: '#/components/schemas/api.v0alpha.FilterCheck_ListComparison'
      description: "Describes a lookup of a field on a record, checking its value
        or type against\n another value. Each FilterCheck must boil down to a bool
        value."
    api.v0alpha.FilterCheck_ListComparison:
      type: object
      properties:
        fieldName:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.FieldIndex'
          description: name of the field to lookup in record. This field's value will
            be used
        data:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ListComparison_FieldOrVal'
        negate:
          type: boolean
          description: if "negate" is true, we negate the result of this comparison
      description: list comparison of a list of fields vs list of values
    api.v0alpha.FilterCheck_TypeComparison:
      type: object
      properties:
        fieldName:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.FieldIndex'
          description: name of the field to lookup in record. This field's type will
            be used
        matchesFieldType:
          type: integer
          description: the type we must match to report true
          format: enum
        negate:
          type: boolean
          description: if "negate" is true, we negate the result of this comparison
      description: bool comparison saying the field matches a specific type or not
    api.v0alpha.FilterCheck_Value:
      type: object
      properties:
        stringVal:
          type: string
          description: compare against the provided static string
        numberVal:
          type: number
          description: compare against the provided static double
          format: double
        boolVal:
          type: boolean
        fieldName:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.FieldIndex'
          description: compare against the value looked up from the record by field_name
        dateTime:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DateTime'
          description: compare against the datetime value
      description: a value to compare against.
    api.v0alpha.FilterCheck_ValueComparison:
      type: object
      properties:
        fieldName:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.FieldIndex'
          description: name of the field to lookup in record. This field's value will
            be used
        op:
          type: integer
          description: operation we are performing
          format: enum
        value:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.FilterCheck_Value'
          description: other value to compare against
        negate:
          type: boolean
          description: if "negate" is true, we negate the result of this comparison
        exists:
          type: boolean
          description: if "exists" is true, we check for field existence
      description: A bool comparison of a field vs some other value
    api.v0alpha.FilterOperation:
      type: object
      properties:
        checks:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.FilterCheck'
          description: "sequence of checks taken on a record that all must reduce
            to a boolean.\n All results are then either AND-ed or OR-ed together.
            The resulting bool is\n returned."
        operator:
          type: integer
          format: enum
    api.v0alpha.FilterPreferences:
      type: object
      properties:
        defaultAutoReportFilter:
          $ref: '#/components/schemas/api.v0alpha.ReportFilter'
        sendEmptyAutoReports:
          type: boolean
        displayBroadcastResendFilter:
          type: boolean
        defaultBroadcastResendFilter:
          $ref: '#/components/schemas/api.v0alpha.ReportFilter'
        customReportFilters:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CustomReportFilter'
      description: Wrapper FilterPreferences object for get response and update request
    api.v0alpha.FilterProcess:
      type: object
      properties:
        expression:
          type: string
        operations:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.FilterOperation'
        negate:
          type: boolean
    api.v0alpha.FindFieldUsagesReq:
      type: object
      properties:
        fieldName:
          type: string
    api.v0alpha.FindFieldUsagesRes:
      type: object
      properties:
        fieldName:
          type: string
        fileTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.NameAndId'
          description: contains the name, and id of all the file templates that use
            field_name.
        elements:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.NameAndId'
          description: contains the name, and id of all the elements that use field_name
    api.v0alpha.FindInvalidElementsReq:
      type: object
      properties:
        orgId:
          type: string
        regionId:
          type: string
    api.v0alpha.FindInvalidElementsRes:
      type: object
      properties:
        invalidElements:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ElementSummary'
    api.v0alpha.FinishSecureFormHandlingReq:
      type: object
      properties:
        reason:
          type: string
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
        voiceSessionSid:
          type: string
    api.v0alpha.FinishSecureFormHandlingRes:
      type: object
      properties: {}
    api.v0alpha.FinviEntrypoint:
      type: object
      properties:
        poolId:
          type: string
          description: the pool we are going to pull into the lms pipeline
        cronInterval:
          type: string
          description: how often we attempt to pull in data if the pool is OK status,
            and we don't have a  pull in progress
        disabled:
          type: boolean
          description: if true we do not do anything when cron rings
        timezone:
          type: string
          description: Specifies the timezone to be used by the cron
    api.v0alpha.FrequencyProcess:
      type: object
      properties:
        field:
          type: string
          description: LMS field from the list to be used
        days:
          type: string
          description: Duration to check frequency
        countryCode:
          type: string
          description: Country code needed if `field` is a phone number
        metaField:
          type: string
          description: "Field we are checking against in frequency\n e.g. Account
            Number\n Will default to \"phone_number\""
        dispositions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.DispositionPair'
          description: "Option for dispositions given in key\n value pairs. Value
            is optional, it will\n just check for existence of key if left out."
        results:
          type: array
          items:
            type: string
          description: "Different result types\n e.g. Answered,Answered Machine,Busy,
            etc."
        dispositionSets:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.DispositionSet'
          description: "Options for dispositions given in key/value\n pair sets. Values
            are optional. Must have\n at least one match in each set."
    api.v0alpha.FtpSettings:
      type: object
      properties:
        passwd:
          type: string
        username:
          type: string
        reportFormat:
          type: string
        path:
          type: string
        url:
          type: string
    api.v0alpha.GSExportProcess:
      type: object
      properties:
        bucket:
          type: string
        file:
          type: string
    api.v0alpha.GenerateMonthlyBillingReq:
      type: object
      properties:
        month:
          type: string
        year:
          type: string
    api.v0alpha.GenerateMonthlyBillingRes:
      type: object
      properties:
        month:
          type: string
        year:
          type: string
        url:
          type: string
    api.v0alpha.GenerateVizDataByIdReq:
      type: object
      properties:
        visualizationId:
          type: string
        timeFrom:
          type: string
        timeTo:
          type: string
        timeZone:
          type: string
        includedOrgIds:
          type: array
          items:
            type: string
          description: list of org ids to get data for
    api.v0alpha.GenerateVizDataByIdRes:
      type: object
      properties:
        jsonString:
          type: string
    api.v0alpha.GenericStatisticFormatRule:
      type: object
      properties:
        statisticId:
          type: string
          description: Statistic id.
        databaseFieldName:
          type: string
          description: Database field name.
        headerText:
          type: string
          description: Header field text.
        headerTooltipText:
          type: string
          description: Header tool-tip text.
        simpleDateFormatString:
          type: string
          description: Date format string.
        timezoneIdString:
          type: string
          description: Timezone id.
        timeZoneEnum:
          type: integer
          description: Time Zone Enum
          format: enum
      description: Generic statistics format rule properties.
    api.v0alpha.GetAccessibleClientsReq:
      type: object
      properties: {}
    api.v0alpha.GetAccountReq:
      type: object
      properties: {}
    api.v0alpha.GetActivityLogHistoryReq:
      type: object
      properties:
        dayFilter:
          type: integer
          format: int32
        userName:
          type: string
        orgId:
          type: string
    api.v0alpha.GetActivityLogHistoryRes:
      type: object
      properties:
        activityLogs:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ActivityLog'
    api.v0alpha.GetAdminClientPreferencesRequest:
      type: object
      properties:
        orgId:
          type: string
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetAdminClientPreferences
    api.v0alpha.GetAdminClientPreferencesResponse:
      type: object
      properties:
        adminClientPreferences:
          $ref: '#/components/schemas/api.v0alpha.AdminClientPreferences'
      description: Response for GetAdminClientPreferences
    api.v0alpha.GetAgentCallCountsReq:
      type: object
      properties:
        agentSkills:
          type: array
          items:
            type: string
        agentPbxExtensions:
          type: array
          items:
            type: string
    api.v0alpha.GetAgentCallCountsRes:
      type: object
      properties:
        agentCalls:
          type: string
        skillCalls:
          type: string
        onHoldCalls:
          type: string
    api.v0alpha.GetAgentHuntGroupReq:
      type: object
      properties:
        huntGroupSid:
          type: string
    api.v0alpha.GetAgentPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetAgentPreferences
    api.v0alpha.GetAgentPreferencesResponse:
      type: object
      properties:
        agentPreferences:
          $ref: '#/components/schemas/api.v0alpha.AgentPreferences'
      description: Response for GetAgentPreferences
    api.v0alpha.GetAgentProfileGroupRequest:
      type: object
      properties:
        agentProfileGroupId:
          type: string
    api.v0alpha.GetAgentProfileGroupResponse:
      type: object
      properties:
        agentProfileGroup:
          $ref: '#/components/schemas/api.commons.org.AgentProfileGroup'
    api.v0alpha.GetAgentProfileReq:
      type: object
      properties:
        agentSid:
          type: string
    api.v0alpha.GetAgentQuickViewPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: GET AGENT QUICK VIEW PREFERENCES
    api.v0alpha.GetAgentQuickViewPreferencesResponse:
      type: object
      properties:
        agentStatusDisplayTemplate:
          $ref: '#/components/schemas/api.v0alpha.AgentStatusDisplayTemplate'
    api.v0alpha.GetAgentResponseDataReq:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
    api.v0alpha.GetAgentResponseDataRes:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        responses:
          type: object
          additionalProperties:
            type: string
    api.v0alpha.GetAgentSessionReq:
      type: object
      properties:
        agentSessionSid:
          type: string
    api.v0alpha.GetAgentSettingsRequest:
      type: object
      properties: {}
      description: Request for GetAgentSettings
    api.v0alpha.GetAgentSettingsResponse:
      type: object
      properties:
        userCallerId:
          type: string
        priorityGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PriorityGroup'
        reservedCarriers:
          type: array
          items:
            type: string
      description: Response for GetAgentSettings
    api.v0alpha.GetAgentSkillsReq:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: id of the hunt group that will be used to get the hunt group
            skills (including PBX skills).
    api.v0alpha.GetAgentSkillsRes:
      type: object
      properties:
        skills:
          type: object
          additionalProperties:
            type: string
          description: skills found for the given parameters, will be value pairs
            (name, level).
    api.v0alpha.GetAgentTriggerTemplateRequest:
      type: object
      properties:
        id:
          type: string
    api.v0alpha.GetAgentTriggerTemplateResponse:
      type: object
      properties:
        agentTriggerTemplate:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate'
    api.v0alpha.GetAgentUsersRequest:
      type: object
      properties: {}
    api.v0alpha.GetAgentUsersResponse:
      type: object
      properties:
        agentUsers:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentUser'
    api.v0alpha.GetAllQueueConfigSoundsReq:
      type: object
      properties:
        configName:
          type: string
    api.v0alpha.GetAllQueueConfigSoundsRes:
      type: object
      properties:
        url:
          type: string
    api.v0alpha.GetAuthConnectionSettingsRequest:
      type: object
      properties: {}
      description: Request message for the GetAuthConnectionSettings rpc.
    api.v0alpha.GetAuthConnectionSettingsResponse:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/api.v0alpha.AuthConnectionSettings'
      description: Response message for the GetConnectionSettings rpc.
    api.v0alpha.GetAuthenticationPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetAuthenticationPreferences
    api.v0alpha.GetAuthenticationPreferencesResponse:
      type: object
      properties:
        authenticationPreferences:
          $ref: '#/components/schemas/api.v0alpha.AuthenticationPreferences'
      description: Response for GetAuthenticationPreferences
    api.v0alpha.GetAuthorizedAnalyticsLinkReq:
      type: object
      properties: {}
    api.v0alpha.GetAuthorizedAnalyticsLinkRes:
      type: object
      properties:
        link:
          type: string
    api.v0alpha.GetAvailableHeadersReq:
      type: object
      properties: {}
      description: GetAvailableHeadersReq - request to retrieve all available headers
        for contact lists
    api.v0alpha.GetAvailableHeadersRes:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.HeaderGroup'
          description: the available contact list headers
      description: GetAvailableHeadersRes - response containing all available contact
        list headers
    api.v0alpha.GetBackofficeThemePreferenceRequest:
      type: object
      properties:
        orgId:
          type: string
      description: Request for GetBackofficeThemePreference
    api.v0alpha.GetBackofficeThemePreferenceResponse:
      type: object
      properties:
        backofficeTheme:
          type: integer
          format: enum
      description: Response for GetBackofficeThemePreference
    api.v0alpha.GetBillingSummaryReq:
      type: object
      properties:
        ts:
          type: string
          format: date-time
    api.v0alpha.GetBroadcastPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetBroadcastPreferences
    api.v0alpha.GetBroadcastPreferencesResponse:
      type: object
      properties:
        broadcastPreferences:
          $ref: '#/components/schemas/api.v0alpha.BroadcastPreferences'
      description: Response for GetBroadcastPreferences
    api.v0alpha.GetBusinessPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetBusinessPreferences
    api.v0alpha.GetBusinessPreferencesResponse:
      type: object
      properties:
        businessPreferences:
          $ref: '#/components/schemas/api.v0alpha.BusinessPreferences'
      description: Response for GetBusinessPreferences
    api.v0alpha.GetCallDataReq:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
    api.v0alpha.GetCallDataRes:
      type: object
      properties:
        ivrData:
          type: object
          additionalProperties:
            type: string
        phoneEnhancedData:
          type: object
          additionalProperties:
            type: string
        dataCollectData:
          type: object
          additionalProperties:
            type: string
        dataDipData:
          type: object
          additionalProperties:
            type: string
        callerIdName:
          type: string
        linkbackHuntGroup:
          type: string
        sipHeaderData:
          type: object
          additionalProperties:
            type: string
        queuedCallbackData:
          type: object
          additionalProperties:
            type: string
        journeyRetrievedData:
          type: object
          additionalProperties:
            type: string
        integrationData:
          type: object
          additionalProperties:
            type: string
    api.v0alpha.GetCallDetailsRes:
      type: object
      properties:
        contactFieldData:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ContactFieldDataRow'
        agentCallActivityDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentCallActivityDetails'
        agentCallResponses:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentCallResponse'
    api.v0alpha.GetCallReq:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
    api.v0alpha.GetCallerLostPeerReply:
      type: object
      properties:
        huntGroupSid:
          type: string
    api.v0alpha.GetCallerLostPeerRequest:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
    api.v0alpha.GetCampaignByIdReq:
      type: object
      properties:
        campaignSid:
          type: string
          description: the campaign id
      description: Request to get a campaign by it's id
    api.v0alpha.GetCampaignCompletionStatusReq:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: hunt group id that the requesting agent is assigned to, used
            to check for task groups running for that hunt group.
    api.v0alpha.GetCampaignCompletionStatusRes:
      type: object
      properties:
        broadcastsExist:
          type: boolean
          description: indicates if any running task groups (broadcasts) were found.
        percentComplete:
          type: integer
          description: percentage of completion of tasks for found matching task groups.
          format: int32
        completionStatus:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v0alpha.GetCampaignCompletionStatusRes_TaskGroupCompletionStatus'
          description: info of all the matching running task groups.
        totalTasks:
          type: integer
          description: total tasks for all task groups
          format: int32
        totalTasksCompleted:
          type: integer
          description: total tasks completed for all task groups
          format: int32
    api.v0alpha.GetCampaignCompletionStatusRes_TaskGroupCompletionStatus:
      type: object
      properties:
        taskGroupSid:
          type: string
          description: id of the running task group.
        name:
          type: string
          description: name of the running task group.
        percentComplete:
          type: integer
          description: percentage of task completed for the given task group.
          format: int32
        totalTasks:
          type: integer
          description: total tasks for a single task group
          format: int32
        totalTasksCompleted:
          type: integer
          description: total tasks completed for a single task group
          format: int32
    api.v0alpha.GetCannedMessageByIdReq:
      type: object
      properties:
        cannedMessageId:
          type: string
          description: canned_message_id
      description: request to get canned message by id
    api.v0alpha.GetCannedMessageGroupByIdReq:
      type: object
      properties:
        cannedMessageGroupId:
          type: string
          description: canned_message_group_id
      description: request to get canned message group details by id
    api.v0alpha.GetCjsSearchDefinitionReq:
      type: object
      properties:
        cjsSearchDefinitionId:
          type: string
    api.v0alpha.GetCjsSecureSearchCriteriaReq:
      type: object
      properties: {}
    api.v0alpha.GetClientInfoDataReq:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        taskSid:
          type: string
    api.v0alpha.GetClientInfoDataRes:
      type: object
      properties:
        phoneNumber:
          type: string
        callerId:
          type: string
        rows:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ClientInfoDataRow'
        countrySid:
          type: string
    api.v0alpha.GetClientInfoDisplayTemplateReq:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        huntGroupSid:
          type: string
    api.v0alpha.GetClientInfoDisplayTemplateRequest:
      type: object
      properties:
        id:
          type: string
    api.v0alpha.GetClientInfoDisplayTemplateRes:
      type: object
      properties:
        displayAllFields:
          type: boolean
        dialedNumberSettings:
          $ref: '#/components/schemas/api.commons.DialedNumberFieldSettings'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ClientInfoDisplayTemplateRow'
    api.v0alpha.GetClientInfoDisplayTemplateResponse:
      type: object
      properties:
        clientInfoDisplayTemplate:
          $ref: '#/components/schemas/api.v0alpha.ClientInfoDisplayTemplate'
    api.v0alpha.GetClientStatusReq:
      type: object
      properties:
        startTime:
          type: string
          description: "specify the window of time to check for data load completion\n
            the end time is assumed to be the present"
          format: date-time
        orgId:
          type: string
          description: development operations can specify org
      description: GetClientStatus request message
    api.v0alpha.GetClientStatusResp:
      type: object
      properties:
        clientGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ClientGroup'
          description: list of ClientGroups, one group for each campaign type
      description: GetClientStatus response message
    api.v0alpha.GetCollectionEntriesReq:
      type: object
      properties:
        collectionId:
          type: string
        from:
          type: string
        pageSize:
          type: string
        searchAfterId:
          type: string
    api.v0alpha.GetCollectionEntriesRes:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/api.v0alpha.CollectionMetadata'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CollectionEntry'
    api.v0alpha.GetCollectionReq:
      type: object
      properties:
        collectionId:
          type: string
    api.v0alpha.GetCompliancePreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetCompliancePreferences
    api.v0alpha.GetCompliancePreferencesResponse:
      type: object
      properties:
        compliancePreferences:
          $ref: '#/components/schemas/api.v0alpha.CompliancePreferences'
      description: Response for GetCompliancePreferences
    api.v0alpha.GetComplianceScrubListsReq:
      type: object
      properties: {}
    api.v0alpha.GetComplianceScrubListsRes:
      type: object
      properties:
        scrubLists:
          type: array
          items:
            type: string
    api.v0alpha.GetConditionalDNCLRulesReq:
      type: object
      properties: {}
    api.v0alpha.GetConditionalDNCLRulesRes:
      type: object
      properties:
        dispositionRules:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentDispositionConditionalDncl_DispositionRulesTable'
    api.v0alpha.GetConfigReq:
      type: object
      properties:
        regionId:
          type: string
    api.v0alpha.GetConnectedInboxBySidReq:
      type: object
      properties:
        connectedInboxSid:
          type: string
          description: connected inbox identifier
      description: GetConnectedInboxBySid - request to retrieve a connected inbox
    api.v0alpha.GetConsentByContentReq:
      type: object
      properties:
        profileName:
          type: string
          description: name of consent profile
        content:
          type: string
          description: consent content (phone_number, email, account number, etc.)
        profileId:
          type: string
          description: id of consent profile
        channelType:
          type: integer
          description: consent channel
          format: enum
    api.v0alpha.GetConsentByContentRes:
      type: object
      properties:
        orgId:
          type: string
          description: id of assigned org
        profileName:
          type: string
          description: name of consent profile
        consent:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.Consent'
          description: consent entity
        disabled:
          type: boolean
          description: consent profile disabled
    api.v0alpha.GetConsentByProfileAndContentReq:
      type: object
      properties:
        profileName:
          type: string
        content:
          type: string
        profileId:
          type: string
        contentType:
          type: integer
          format: enum
        channelType:
          type: integer
          format: enum
    api.v0alpha.GetConsentByProfileAndContentRes:
      type: object
      properties:
        orgId:
          type: string
        profileId:
          type: string
        profileName:
          type: string
        consentId:
          type: string
          description: id of consent
        revoked:
          type: string
          format: date-time
        expire:
          type: string
          format: date-time
        disabled:
          type: boolean
        channel:
          allOf:
          - $ref: '#/components/schemas/api.commons.CommType'
          description: channel (email, sms, phone, etc)
        topic:
          type: string
          description: topic (future payment vs payment reminder vs account reminders
            vs receipts)
        conditionDaysOfTheWeek:
          type: array
          items:
            type: integer
            format: enum
          description: consent conditions
        conditionTimeOfDayFrom:
          type: string
        conditionTimeOfDayTo:
          type: string
        conditionFrom:
          type: string
          format: date-time
        conditionTo:
          type: string
          format: date-time
        notes:
          type: string
        contentType:
          type: integer
          description: content_type (call, email, sms, account number)
          format: enum
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ConsentCondition'
          description: Consent Conditions
        channelType:
          type: integer
          format: enum
        revokedReason:
          type: string
          description: notate revocation (reason)
        grantedReason:
          type: string
          description: notate grant reason
        proof:
          type: string
          description: proof of consent (pdf, voice recording etc) this will be filename
            which can be retrieved via matrix-fts
    api.v0alpha.GetConsentProfileReq:
      type: object
      properties:
        consentProfileId:
          type: string
    api.v0alpha.GetConsentReq:
      type: object
      properties:
        consentId:
          type: string
    api.v0alpha.GetConsentTopicReq:
      type: object
      properties:
        topic:
          type: string
    api.v0alpha.GetConsentUploadUrlReq:
      type: object
      properties: {}
    api.v0alpha.GetConsentUploadUrlRes:
      type: object
      properties:
        url:
          type: string
        filename:
          type: string
        bucket:
          type: string
    api.v0alpha.GetContactGroupReq:
      type: object
      properties:
        contactGroupSid:
          type: string
    api.v0alpha.GetContactGroupSizeRes:
      type: object
      properties:
        contactGroupSize:
          type: string
    api.v0alpha.GetContactPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: field mask to select which fields to update
          format: field-mask
      description: Request message for the GetContactPreferences rpc.
    api.v0alpha.GetContactPreferencesResponse:
      type: object
      properties:
        contactPreferences:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ContactPreferences'
          description: Contact preferences object
      description: Response message for the GetContactPreferences rpc.
    api.v0alpha.GetContactSchemaByContactGroupReq:
      type: object
      properties:
        contactGroupSid:
          type: string
    api.v0alpha.GetCountriesListRequest:
      type: object
      properties: {}
    api.v0alpha.GetCountriesListResponse:
      type: object
      properties:
        countries:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Country'
    api.v0alpha.GetCurrentAgentReq:
      type: object
      properties: {}
    api.v0alpha.GetDashboardGeneralPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetDashboardGeneralPreferences
    api.v0alpha.GetDashboardGeneralPreferencesResponse:
      type: object
      properties:
        dashboardPreferences:
          $ref: '#/components/schemas/api.v0alpha.DashboardPreferences'
      description: Response for GetDashboardGeneralPreferences
    api.v0alpha.GetDashboardQueuePreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetDashboardQueuePreferences
    api.v0alpha.GetDashboardQueuePreferencesResponse:
      type: object
      properties:
        dashboardQueuePreferences:
          $ref: '#/components/schemas/api.v0alpha.DashboardQueuePreferences'
      description: Response for GetDashboardQueuePreferences
    api.v0alpha.GetDashboardRequest:
      type: object
      properties:
        dashboardId:
          type: string
          description: unique ID of dashboard to retrieve
        resourceId:
          type: string
          description: resource id of the dashboard
        application:
          type: integer
          description: application retrieving the dashboard
          format: enum
      description: GetDashboardRequest used in GetDashboard rpc
    api.v0alpha.GetDefaultDashboardRequest:
      type: object
      properties: {}
      description: GetDefaultDashboardRequest used in GetDefaultDashboard rpc
    api.v0alpha.GetDefaultRulesRes:
      type: object
      properties:
        rules:
          type: array
          items:
            type: string
    api.v0alpha.GetDispositionKeysReq:
      type: object
      properties: {}
    api.v0alpha.GetDispositionKeysRes:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    api.v0alpha.GetEmailSmsPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetEmailSmsPreferences
    api.v0alpha.GetEmailSmsPreferencesResponse:
      type: object
      properties:
        emailSmsPreferences:
          $ref: '#/components/schemas/api.v0alpha.EmailSmsPreferences'
      description: Response for GetEmailSmsPreferences
    api.v0alpha.GetEndOfDayPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetEndOfDayPreferences
    api.v0alpha.GetEndOfDayPreferencesResponse:
      type: object
      properties:
        endOfDayPreferences:
          $ref: '#/components/schemas/api.v0alpha.EndOfDayPreferences'
      description: Response for GetEndOfDayPreferences
    api.v0alpha.GetFamilyReq:
      type: object
      properties:
        orgId:
          type: string
          description: get family for requested org
    api.v0alpha.GetFieldNamesReq:
      type: object
      properties:
        phoneOnly:
          type: boolean
    api.v0alpha.GetFieldsForElementRequest:
      type: object
      properties:
        exchange:
          $ref: '#/components/schemas/api.v0alpha.OmniExchange'
      description: GetFieldsForElementRequest request to retrieve all fields for an
        omni exchange
    api.v0alpha.GetFieldsForElementResult:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Header'
    api.v0alpha.GetFileTemplatesReq:
      type: object
      properties: {}
    api.v0alpha.GetFilterPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetFilterPreferences
    api.v0alpha.GetFilterPreferencesResponse:
      type: object
      properties:
        filterPreferences:
          $ref: '#/components/schemas/api.v0alpha.FilterPreferences'
      description: Response for GetFilterPreferences
    api.v0alpha.GetHistoryReq:
      type: object
      properties:
        elementId:
          type: string
        count:
          type: integer
          format: int32
        startingId:
          type: string
    api.v0alpha.GetHistoryRes:
      type: object
      properties:
        elementId:
          type: string
        commits:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.HistoryAndCount'
    api.v0alpha.GetHuntGroupAgentSettingsReq:
      type: object
      properties:
        huntGroupSid:
          type: string
    api.v0alpha.GetHuntGroupPauseCodesReq:
      type: object
      properties:
        huntGroupSid:
          type: string
    api.v0alpha.GetHuntGroupPauseCodesRes:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        pauseCodes:
          type: array
          items:
            type: string
    api.v0alpha.GetInboundSmsGroupByIdReq:
      type: object
      properties:
        inboundSmsGroupId:
          type: string
    api.v0alpha.GetInboundSmsGroupByIdRes:
      type: object
      properties:
        inboundSmsGroupWithIntents:
          $ref: '#/components/schemas/api.v0alpha.InboundSmsGroupWithIntents'
    api.v0alpha.GetInboundSmsTemplateByIdReq:
      type: object
      properties:
        inboundSmsTemplateId:
          type: string
    api.v0alpha.GetInboundSmsTemplateByIdRes:
      type: object
      properties:
        inboundSmsTemplate:
          $ref: '#/components/schemas/api.v0alpha.InboundSmsTemplate'
        smsIntentTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsIntentTemplate'
    api.v0alpha.GetIntercomPeerInfoReq:
      type: object
      properties:
        agentSessionSid:
          type: string
    api.v0alpha.GetIntercomPeerInfoRes:
      type: object
      properties:
        peerSid:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    api.v0alpha.GetLostPeerInfoReq:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
    api.v0alpha.GetLostPeerInfoRes:
      type: object
      properties:
        formerAgentSid:
          type: string
        formerAgentName:
          type: string
        formerHuntGroupName:
          type: string
        huntGroups:
          type: array
          items:
            type: string
        agents:
          type: array
          items:
            type: string
        agentSkills:
          type: array
          items:
            type: string
        pbxExtensions:
          type: array
          items:
            type: string
    api.v0alpha.GetMailMergeReq:
      type: object
      properties:
        clientSid:
          type: string
        agentSid:
          type: string
        data:
          $ref: '#/components/schemas/api.v0alpha.MailMergeData'
        huntGroupSid:
          type: string
    api.v0alpha.GetMailMergeRes:
      type: object
      properties:
        agentInfo:
          type: object
          additionalProperties:
            type: string
        customData:
          type: object
          additionalProperties:
            type: string
        dataCollect:
          type: object
          additionalProperties:
            type: string
        dataDip:
          type: object
          additionalProperties:
            type: string
        ivr:
          type: object
          additionalProperties:
            type: string
        scheduledCall:
          type: object
          additionalProperties:
            type: string
        tts:
          type: object
          additionalProperties:
            type: string
        zipPhoneMetadata:
          type: object
          additionalProperties:
            type: string
        journeyRetrievedData:
          type: object
          additionalProperties:
            type: string
        integrationData:
          type: object
          additionalProperties:
            type: string
    api.v0alpha.GetMyUserDetailsRequest:
      type: object
      properties: {}
    api.v0alpha.GetMyUserPasswordResetLinkRequest:
      type: object
      properties:
        ttl:
          type: string
          description: The time to live (in seconds) of the generated link. This will
            default to 180 if set to 0.
      description: Request message for the GetUserPasswordReset rpc.
    api.v0alpha.GetMyUserPasswordResetLinkResponse:
      type: object
      properties:
        url:
          type: string
          description: the generated link url.
      description: Response message for the GetUserPasswordReset rpc.
    api.v0alpha.GetMyUserSubscriptionRequest:
      type: object
      properties:
        subscriptionId:
          type: string
          description: Required.
      description: Request for getting a user subscription.
    api.v0alpha.GetMyUserSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v0alpha.UserSubscription'
      description: "Response for getting a user subscription.\n Contains a single
        user subscription."
    api.v0alpha.GetNextQueuedTaskRequest:
      type: object
      properties:
        skills:
          $ref: '#/components/schemas/api.commons.OmniConversationSkills'
        agentSkills:
          type: object
          additionalProperties:
            type: string
    api.v0alpha.GetNextQueuedTaskResponse:
      type: object
      properties:
        task:
          $ref: '#/components/schemas/api.commons.OmniTask'
    api.v0alpha.GetNextScheduledCallbackWithDetailsReq:
      type: object
      properties:
        serviceId:
          type: string
          description: service id that the callback will belong to.
        agentSkills:
          type: array
          items:
            type: string
          description: list of agent_skills (skill names) that will be used to find
            a matching callback.
    api.v0alpha.GetNextScheduledCallbackWithDetailsRes:
      type: object
      properties:
        scheduledCallback:
          $ref: '#/components/schemas/api.v0alpha.ScheduledCallbackWithDetails'
    api.v0alpha.GetOmniAttachmentReq:
      type: object
      properties:
        includeDownloadUrl:
          type: boolean
          description: flag to include attachment download url or not
        byOmniAttachmentSid:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.GetOmniAttachmentReq_ByOmniAttachmentSid'
          description: filter by attachment sid
      description: request to get attachment details
    api.v0alpha.GetOmniAttachmentReq_ByOmniAttachmentSid:
      type: object
      properties:
        omniAttachmentSid:
          type: string
          description: the attachment file identifier
      description: ByOmniAttachmentSid - filter to get attachment details by sid
    api.v0alpha.GetOmniExchangeElementsRequest:
      type: object
      properties: {}
      description: GetOmniExchangeElementsRequest - request to retrieve all omni exchange
        elements for contact lists
    api.v0alpha.GetOmniExchangeElementsResult:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.OmniExchange'
          description: the available contact list headers
      description: GetOmniExchangeElementsResult
    api.v0alpha.GetOrgAgentSettingsReq:
      type: object
      properties: {}
    api.v0alpha.GetOrgAgentSettingsRes:
      type: object
      properties:
        defaultTimeZone:
          type: string
        defaultSoftphoneVolumeIn:
          type: string
        defaultSoftphoneVolumeOut:
          type: string
        linkbackRecording:
          type: boolean
    api.v0alpha.GetOrgBillingSettingsByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
      description: Request message for the GetOrgBillingSettingsByOrgId rpc.
    api.v0alpha.GetOrgBillingSettingsByOrgIdResponse:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/api.v0alpha.OrgBillingSettings'
        countryDefaultRegions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v0alpha.BillingRegionMap'
          description: "country_default_regions contains the billing data for regions\n
            that belong to the orgs allowed countries that don't\n have custom overrides.\n
            Key: api.commons.Country as int32"
      description: Response message for the GetOrgBillingSettingsByOrgId rpc.
    api.v0alpha.GetOrgBillingSettingsRequest:
      type: object
      properties:
        orgId:
          type: string
          description: "DEPRECATED: org_id was previously optional,\n if org_id needs
            to be provided, use GetOrgBillingSettingsByOrgId rpc"
      description: Request message for the GetOrgBillingSettings rpc.
    api.v0alpha.GetOrgBillingSettingsResponse:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/api.v0alpha.OrgBillingSettings'
        countryDefaultRegions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v0alpha.BillingRegionMap'
          description: "country_default_regions contains the billing data for regions\n
            that belong to the orgs allowed countries that don't\n have custom overrides.\n
            Key: api.commons.Country as int32"
      description: Response message for the GetOrgBillingSettings rpc.
    api.v0alpha.GetOrganizationNamesReq:
      type: object
      properties: {}
    api.v0alpha.GetOrganizationNamesRes:
      type: object
      properties:
        names:
          type: object
          additionalProperties:
            type: string
    api.v0alpha.GetOrganizationPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetOrganizationPreferences
    api.v0alpha.GetOrganizationPreferencesResponse:
      type: object
      properties:
        organizationPreferences:
          $ref: '#/components/schemas/api.v0alpha.OrganizationPreferences'
      description: Response for GetOrganizationPreferences
    api.v0alpha.GetOrganizationProfileByIdRequest:
      type: object
      properties:
        orgId:
          type: string
    api.v0alpha.GetOrganizationProfileRequest:
      type: object
      properties: {}
    api.v0alpha.GetOrganizationProfileResponse:
      type: object
      properties:
        orgId:
          type: string
        name:
          type: string
        isManualOnlyAccount:
          type: boolean
        regionId:
          type: string
        CRMID:
          type: string
        billingId:
          type: string
        timezone:
          type: integer
          format: enum
        addDate:
          type: string
          format: date-time
        allowedRegions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v0alpha.RegionUrls'
          description: map of region_id to array of api_endpoints
    api.v0alpha.GetP3OwningOrgRequest:
      type: object
      properties:
        orgId:
          type: string
    api.v0alpha.GetP3OwningOrgResponse:
      type: object
      properties:
        id:
          type: string
    api.v0alpha.GetPendingGoogleXOAuth2DataReq:
      type: object
      properties:
        identificationToken:
          type: string
          description: token identifying the GoogleXOAuth2 data
      description: GetPendingGoogleXOAuth2DataReq - request to get pending GoogleXOAuth2
        data
    api.v0alpha.GetPendingGoogleXOAuth2DataRes:
      type: object
      properties:
        emailAddress:
          type: string
          description: the GoogleXOAuth2 email address
      description: GetPendingGoogleXOAuth2DataRes - result of getting pending GoogleXOAuth2
        data
    api.v0alpha.GetPermissionsRequest:
      type: object
      properties: {}
      description: Request for GetPermissions
    api.v0alpha.GetPermissionsResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/api.v0alpha.User'
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: List of permissions this user has.
        uiLogLevel:
          type: string
        orgName:
          type: string
        logLevel:
          type: integer
          format: enum
        p3Permissions:
          type: array
          items:
            type: integer
            format: enum
          description: List of legacy permissions.
        orgDefaultRegionId:
          type: string
        defaultApp:
          type: integer
          description: Default app the user starts on
          format: enum
      description: Reponse for GetPermissions
    api.v0alpha.GetPhonePreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetPhonePreferences
    api.v0alpha.GetPhonePreferencesResponse:
      type: object
      properties:
        phonePreferences:
          $ref: '#/components/schemas/api.v0alpha.PhonePreferences'
      description: Response for GetPhonePreferences
    api.v0alpha.GetProjectByIdReq:
      type: object
      properties:
        projectSid:
          type: string
          description: project id
      description: request to get omni project details by project id
    api.v0alpha.GetPublicKeyReq:
      type: object
      properties: {}
    api.v0alpha.GetQueueConfigReq:
      type: object
      properties:
        name:
          type: string
        merge:
          type: boolean
          description: "if merge is true, default config values will\n be merged with
            the custom config data."
    api.v0alpha.GetQueueConfigRes:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig'
    api.v0alpha.GetQueueConfigSoundReq:
      type: object
      properties:
        config:
          type: string
        sound:
          type: integer
          format: enum
    api.v0alpha.GetQueueConfigSoundRes:
      type: object
      properties:
        url:
          type: string
    api.v0alpha.GetQueueConfigurationOptionsArrayReq:
      type: object
      properties:
        localizedAccountDefaultString:
          type: string
    api.v0alpha.GetQueueConfigurationOptionsArrayRes:
      type: object
      properties:
        filenames:
          type: array
          items:
            type: string
    api.v0alpha.GetReadyAgentsReq:
      type: object
      properties: {}
    api.v0alpha.GetReadyAgentsRes:
      type: object
      properties:
        readyAgents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentsByAgentSidShort'
    api.v0alpha.GetRecordingPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetRecordingPreferences
    api.v0alpha.GetRecordingPreferencesResponse:
      type: object
      properties:
        recordingPreferences:
          $ref: '#/components/schemas/api.v0alpha.RecordingPreferences'
        callRecordingRedaction:
          type: boolean
      description: Response for GetRecordingPreferences
    api.v0alpha.GetRegionsRequest:
      type: object
      properties: {}
    api.v0alpha.GetRegionsResponse:
      type: object
      properties:
        regionNames:
          type: array
          items:
            type: string
    api.v0alpha.GetResultDescriptionsReq:
      type: object
      properties: {}
    api.v0alpha.GetRuleSetByNameReq:
      type: object
      properties:
        name:
          type: string
    api.v0alpha.GetRuleSetReq:
      type: object
      properties:
        ruleSetId:
          type: string
        ruleSetSha:
          type: string
    api.v0alpha.GetScenarioRes:
      type: object
      properties:
        scenario:
          $ref: '#/components/schemas/api.v0alpha.Scenario'
    api.v0alpha.GetSchedulePreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetSchedulePreferences
    api.v0alpha.GetSchedulePreferencesResponse:
      type: object
      properties:
        schedulePreferences:
          $ref: '#/components/schemas/api.v0alpha.SchedulePreferences'
      description: Response for GetSchedulePreferences
    api.v0alpha.GetScheduledCallbackWithDetailsReq:
      type: object
      properties:
        serviceId:
          type: string
        scheduledCallbackId:
          type: string
    api.v0alpha.GetScheduledCallbackWithDetailsRes:
      type: object
      properties:
        callback:
          $ref: '#/components/schemas/api.v0alpha.ScheduledCallbackWithDetails'
    api.v0alpha.GetScorecardsPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetScorecardsPreferences
    api.v0alpha.GetScorecardsPreferencesResponse:
      type: object
      properties:
        scorecardsPreferences:
          $ref: '#/components/schemas/api.v0alpha.ScorecardsPreferences'
      description: Response for GetScorecardsPreferences
    api.v0alpha.GetScriptOrResponsesReq:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/api.v0alpha.MailMergeData'
    api.v0alpha.GetScriptOrResponsesRes:
      type: object
      properties:
        scripts:
          $ref: '#/components/schemas/api.v0alpha.HuntGroupScript'
        responses:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.HuntGroupResponse'
    api.v0alpha.GetScrubListReq:
      type: object
      properties:
        listId:
          type: string
    api.v0alpha.GetScrubListUploadUrlReq:
      type: object
      properties:
        orgId:
          type: string
    api.v0alpha.GetScrubListUploadUrlRes:
      type: object
      properties:
        url:
          type: string
        filename:
          type: string
        bucket:
          type: string
    api.v0alpha.GetScrubListsReq:
      type: object
      properties: {}
    api.v0alpha.GetSmsConversationAssignedAgentByIdReq:
      type: object
      properties:
        smsConversationId:
          type: string
        assignedAgentId:
          type: string
    api.v0alpha.GetSmsConversationAssignedAgentByIdRes:
      type: object
      properties:
        smsConversationAssignedAgent:
          $ref: '#/components/schemas/api.v0alpha.SmsConversationAssignedAgent'
    api.v0alpha.GetSmsConversationAuditByIdReq:
      type: object
      properties:
        smsConversationAuditId:
          type: string
    api.v0alpha.GetSmsConversationAuditByIdRes:
      type: object
      properties:
        smsConversationAudit:
          $ref: '#/components/schemas/api.v0alpha.SmsConversationAudit'
    api.v0alpha.GetSmsConversationByIdReq:
      type: object
      properties:
        smsConversationId:
          type: string
    api.v0alpha.GetSmsConversationByIdRes:
      type: object
      properties:
        smsConversation:
          $ref: '#/components/schemas/api.v0alpha.SmsConversation'
    api.v0alpha.GetSmsIntentTemplateBySidReq:
      type: object
      properties:
        smsIntentTemplateSid:
          type: string
    api.v0alpha.GetSmsMessageReq:
      type: object
      properties:
        smsMessageSid:
          type: string
    api.v0alpha.GetSmsMessageRes:
      type: object
      properties:
        smsMessage:
          $ref: '#/components/schemas/api.v0alpha.SmsMessage'
    api.v0alpha.GetSmsSourceNumberBySidReq:
      type: object
      properties:
        smsNumberSid:
          type: string
    api.v0alpha.GetSmsTemplateBySidReq:
      type: object
      properties:
        smsTemplateSid:
          type: string
    api.v0alpha.GetSmsTemplateBySidRes:
      type: object
      properties:
        smsTemplate:
          $ref: '#/components/schemas/api.v0alpha.SmsTemplate'
        smsIntentTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsIntentTemplate'
    api.v0alpha.GetSpecifiedAccountReq:
      type: object
      properties:
        orgId:
          type: string
          description: Specified org id tto get account information from
    api.v0alpha.GetSpecifiedBillingSummaryReq:
      type: object
      properties:
        ts:
          type: string
          format: date-time
        orgId:
          type: string
    api.v0alpha.GetSpecifiedVisualizationsReq:
      type: object
      properties:
        orgId:
          type: string
    api.v0alpha.GetSystemDefaultBillingRatesRequest:
      type: object
      properties: {}
      description: Request message for the GetSystemDefaultBillingRates RPC.
    api.v0alpha.GetSystemDefaultBillingRatesResponse:
      type: object
      properties:
        emailPricePerMessage:
          type: number
          description: default email rate
          format: float
        phoneRates:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.PhoneBillingRates'
          description: default phone rates
        agentRates:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AgentBillingRates'
          description: default agent rates
      description: Response message for the GetSystemDefaultRatesSettings RPC.
    api.v0alpha.GetSystemEnvironmentDetailsRequest:
      type: object
      properties: {}
      description: Request used to get system environment details
    api.v0alpha.GetSystemEnvironmentDetailsResponse:
      type: object
      properties:
        regionId:
          type: string
          description: the region id for the backend that answered this request
        clusterId:
          type: string
          description: the cluster id for the backend that answered this request
      description: Response used to return system environment details
    api.v0alpha.GetTaskReq:
      type: object
      properties:
        fieldMask:
          type: string
          description: field mask for selecting optional details
          format: field-mask
        byConversation:
          $ref: '#/components/schemas/api.v0alpha.GetTaskReq_ByConversation'
      description: GetTaskReq - request to retrieve a task
    api.v0alpha.GetTaskReq_ByConversation:
      type: object
      properties:
        conversationSid:
          type: string
          description: the conversation identifier
      description: ByConversation - retrieves the task the conversation was created
        from
    api.v0alpha.GetTempUserTokenByUserIdReq:
      type: object
      properties:
        userId:
          type: string
          description: UserId that token is being created for
    api.v0alpha.GetTempUserTokenByUserIdRes:
      type: object
      properties:
        regionId:
          type: string
        token:
          type: string
          description: Temporary token generated for user
    api.v0alpha.GetTempUserTokenReq:
      type: object
      properties:
        userId:
          type: string
          description: "DEPRECATED: user_id was previously optional,\n if user_id
            needs to be provided, use GetTempUserTokenByUserId rpc"
    api.v0alpha.GetTempUserTokenRes:
      type: object
      properties:
        regionId:
          type: string
        token:
          type: string
          description: Temporary token generated for user
    api.v0alpha.GetTimeZoneReq:
      type: object
      properties: {}
    api.v0alpha.GetUploadFileUrlReq:
      type: object
      properties:
        prefix:
          type: string
          description: the optional prefix that will be first part of the generated
            id on the response
    api.v0alpha.GetUploadFileUrlRes:
      type: object
      properties:
        url:
          type: string
        id:
          type: string
          description: "\"bucket\" is not safe to provide to the front end\n string
            bucket = 2;\n\n identifier so we can get this file back at a later point"
    api.v0alpha.GetUploadGreetingUrlReq:
      type: object
      properties:
        pbxExtension:
          type: string
        filename:
          type: string
    api.v0alpha.GetUploadGreetingUrlRes:
      type: object
      properties:
        url:
          type: string
    api.v0alpha.GetUserBlockedRequest:
      type: object
      properties:
        userId:
          type: string
    api.v0alpha.GetUserBlockedResponse:
      type: object
      properties:
        blocked:
          type: boolean
        lastIp:
          type: string
        lastLogin:
          type: string
          format: date-time
        lastPasswordReset:
          type: string
          format: date-time
        loginsCount:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        hasBlockedIps:
          type: boolean
    api.v0alpha.GetUserDetailsRequest:
      type: object
      properties:
        userId:
          type: string
    api.v0alpha.GetUserDirectoryRequest:
      type: object
      properties:
        agentsOnly:
          type: boolean
    api.v0alpha.GetUserDirectoryResponse:
      type: object
      properties:
        userDirectory:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.UserDirectoryEntry'
    api.v0alpha.GetUserEmailVerifiedByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: Required. The ID of the user.
        orgId:
          type: string
          description: Required. The ID of the org the user belongs to.
      description: Request for the GetUserEmailVerifiedByOrgId RPC.
    api.v0alpha.GetUserEmailVerifiedByOrgIdResponse:
      type: object
      properties:
        verified:
          type: boolean
          description: Whether or not the user's email is verified.
      description: Response for GetUserEmailVerifiedByOrgId RPC.
    api.v0alpha.GetUserEmailVerifiedRequest:
      type: object
      properties:
        userId:
          type: string
          description: Required. The ID of the user.
        orgId:
          type: string
          description: "DEPRECATED. the org_id was previously optional,\n if org_id
            needs to be provided, use GetUserEmailVerifiedByOrgId rpc"
      description: Request for the GetUserEmailVerified RPC.
    api.v0alpha.GetUserEmailVerifiedResponse:
      type: object
      properties:
        verified:
          type: boolean
          description: Whether or not the user's email is verified.
      description: Response for GetUserEmailVerified RPC.
    api.v0alpha.GetUserPasswordResetLinkByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user in the same org as the current user.
        orgId:
          type: string
          description: The ID of the org.
        ttl:
          type: string
          description: The time to live (in seconds) of the generated link. This will
            default to 180 if set to 0.
      description: Request message for the GetUserPasswordResetLinkByOrgIdRequest
        rpc.
    api.v0alpha.GetUserPasswordResetLinkByOrgIdResponse:
      type: object
      properties:
        url:
          type: string
          description: the generated link url.
      description: Response message for the GetUserPasswordResetLinkByOrgIdRequest
        rpc.
    api.v0alpha.GetUserPasswordResetLinkRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user in the same org as the current user.
        orgId:
          type: string
          description: "DEPRECATED: org_id was previously optional,\n if org_id needs
            to be provided, use GetUserPasswordResetLinkByOrgId rpc"
        ttl:
          type: string
          description: The time to live (in seconds) of the generated link. This will
            default to 180 if set to 0.
      description: Request message for the GetUserPasswordResetLinkRequest rpc.
    api.v0alpha.GetUserPasswordResetLinkResponse:
      type: object
      properties:
        url:
          type: string
          description: the generated link url.
      description: Response message for the GetUserPasswordResetLinkRequest rpc.
    api.v0alpha.GetUserSubscriptionRequest:
      type: object
      properties:
        userId:
          type: string
          description: Required.
        subscriptionId:
          type: string
          description: Required.
      description: Request for getting a user subscription.
    api.v0alpha.GetUserSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v0alpha.UserSubscription'
      description: "Response for getting a user subscription.\n Contains a single
        user subscription."
    api.v0alpha.GetVerifiedEmailBySidReq:
      type: object
      properties:
        verifiedEmailSid:
          type: string
          description: verified_email_id
      description: "request to delete verified email\n GetVerifiedEmailBySidReq -"
    api.v0alpha.GetVisibilityReq:
      type: object
      properties: {}
    api.v0alpha.GetVoiceAnalyticsPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetVoiceAnalyticsPreferences
    api.v0alpha.GetVoiceAnalyticsPreferencesResponse:
      type: object
      properties:
        voiceAnalyticsPreferences:
          $ref: '#/components/schemas/api.v0alpha.VoiceAnalyticsPreferences'
      description: Response for GetVoiceAnalyticsPreferences
    api.v0alpha.GetVoicemailCountReq:
      type: object
      properties:
        mailBoxes:
          type: array
          items:
            type: string
    api.v0alpha.GetVoicemailCountRes:
      type: object
      properties:
        total:
          type: integer
          format: int32
        unheard:
          type: integer
          format: int32
    api.v0alpha.GetVoicemailMetadataReq:
      type: object
      properties:
        mailBoxes:
          type: array
          items:
            type: string
    api.v0alpha.GetVoicemailMetadataRes:
      type: object
      properties:
        callerId:
          type: string
        callerSid:
          type: string
        callerType:
          type: integer
          format: enum
        dialedNumber:
          type: string
        durationSeconds:
          type: integer
          format: int32
        flagRead:
          type: boolean
        mailBox:
          type: string
        recordingFilename:
          type: string
        recordingStart:
          type: integer
          format: int32
    api.v0alpha.GetWebLinkTemplateRequest:
      type: object
      properties:
        webLinkTemplateId:
          type: string
    api.v0alpha.GetWebLinkTemplateResponse:
      type: object
      properties:
        webLinkTemplate:
          $ref: '#/components/schemas/api.v0alpha.WebLinkTemplate'
    api.v0alpha.GetWebhookPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          format: field-mask
      description: Request for GetWebhookPreferences
    api.v0alpha.GetWebhookPreferencesResponse:
      type: object
      properties:
        webhookPreferences:
          $ref: '#/components/schemas/api.v0alpha.WebhookPreferences'
      description: Response for GetWebhookPreferences
    api.v0alpha.GroupBy:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
          description: fields to group data by
    api.v0alpha.GroupItem:
      type: object
      properties:
        groupName:
          type: string
          description: name of the group.
        huntGroupSid:
          type: string
          description: hunt group sid for the group.
        agentProfileGroupId:
          type: string
          description: agent profile group for the group.
        p3PermissionGroupId:
          type: string
          description: p3 permission group id for the group.
        permissionGroupIds:
          type: array
          items:
            type: string
          description: "list of permission group ids for the group. If a user belongs
            to multiple\n groups the list of permission group ids will be appended
            to the existing\n permissions the user contains. All other group settings
            will be overridden\n by the highest priority group."
      description: GroupItem defines settings mapped to a single group.
    api.v0alpha.HandleRecordingDelayReq:
      type: object
      properties:
        huntGroupSid:
          type: string
        agentSessionSid:
          type: string
    api.v0alpha.HandleRecordingDelayRes:
      type: object
      properties: {}
    api.v0alpha.Header:
      type: object
      properties:
        name:
          type: string
        type:
          type: integer
          format: enum
      description: Header - represents a header for a contact list
    api.v0alpha.HeaderGroup:
      type: object
      properties:
        name:
          type: string
          description: the name of this group
        headers:
          type: array
          items:
            type: string
        listHeaders:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Header'
          description: the headers provided by this group
      description: HeaderGroup - represents a group of headers for a contact list
    api.v0alpha.HistoricConfig:
      type: object
      properties:
        timeSpanSimple:
          type: integer
          format: enum
        timeSpanRange:
          $ref: '#/components/schemas/api.v0alpha.TimeSpan_Range'
        timeZone:
          type: integer
          description: The default time zone to view the historic data by
          format: enum
      description: Historic Dashboard type
    api.v0alpha.HistoryAndCount:
      type: object
      properties:
        elementId:
          type: string
        historyId:
          type: string
          description: history_id of the element that started getting the duplicate
            error message
        endingHistoryId:
          type: string
          description: history_id of where we stopped getting the duplicate error
            message
        process:
          $ref: '#/components/schemas/api.v0alpha.Process'
        failed:
          type: boolean
          description: whether the pipeline process was successful, or a failure.  Success
            = false
        attemptNumber:
          type: integer
          format: int32
        reason:
          type: string
        uploadTs:
          type: string
          format: date-time
        startedTs:
          type: string
          format: date-time
        finishedTs:
          type: string
          format: date-time
        eventId:
          type: string
          description: "will only match a valid event in the event queue as long as
            it isn't\n emptied"
        parentElementId:
          type: string
        metrics:
          $ref: '#/components/schemas/api.v0alpha.ListMetrics'
        discardMetrics:
          $ref: '#/components/schemas/api.v0alpha.ListMetrics'
        count:
          type: string
          description: how many messages encountered a similar 'reason' field
      description: "since its possible to get a load of history events that all look
        the same\n this keeps track of the range. history_id and ending_history_id\n
        are the range of data where 'failed', and 'reason' were the same.\n The rest
        of the fields point to the history_id's record\n 'count' is the field that
        keeps track of how many messages in a row were\n similar"
    api.v0alpha.HoldQueueMonitorSettings:
      type: object
      properties:
        monitor:
          type: boolean
        requiredGroup:
          type: string
        preferredGroup:
          type: string
        agentRouting:
          type: integer
          format: enum
    api.v0alpha.HoldTransferMemberReq:
      type: object
      properties:
        sessionSid:
          type: string
        memberIdentifier:
          type: string
    api.v0alpha.HoldTransferMemberRes:
      type: object
      properties: {}
    api.v0alpha.HolidayData:
      type: object
      properties:
        date:
          type: string
        name:
          type: string
        year:
          type: string
        month:
          type: string
        day:
          type: string
        weekday:
          type: string
        types:
          type: array
          items:
            type: string
        isObserved:
          type: string
        country:
          type: string
        states:
          type: array
          items:
            type: string
    api.v0alpha.HttpReq:
      type: object
      properties:
        url:
          type: string
          description: "what url to hit. First url in the group Must be able to be
            used as is, it\n won't be parsed or messed with. Just passed directly
            to an http client.\n every additional url instead of being a simple string
            can use values\n retrieved from the previous response body, or headers.
            Examples: url =\n \"https://{{header.nextUrl}}\" url = \"{{body.path.toThe.1.nextUrl}}/search?\n
            country={{body.country}}\" to restate in english the examples: we will\n
            replace the contents between {{ }} with the values retrieved from the\n
            previous response body or headers the last url must always contain records\n
            that can be parsed by the specified file template. templated values must\n
            always be:\n - wrapped in {{ }},\n - first word be either \"header.\"
            or \"body.\"\n   followed by a json dot path to the value to be looked
            up, or\n - a named starting with $ ex. {{$token}} referencing a previous
            saved value.\n - a special field: <TODAY> <NOW>  <TODAY.UNIX>\n if one
            of these template values is found, it is assumed the previous\n response
            is json, otherwise the lookups will fail, and the entrypoint will\n error."
        headers:
          type: object
          additionalProperties:
            type: string
          description: "initial headers must have static values for all the key value
            pairs.\n every headers field after the first can contain template wrappers
            to\n specify looking up the value from the previous response body, or
            headers\n example:\n { \"key\": \"value\", \"{{header.nextKey}}\": \"{{body.somePath.to.a.str}}\"}"
        body:
          type: string
          description: "same as url, and headers fields, it is possible to use templated
            values to\n construct the body often, body is either empty, or a json
            string"
        method:
          type: integer
          description: what type of request to make  GET by default
          format: enum
        namedResponseValues:
          type: object
          additionalProperties:
            type: string
          description: "the values to save from this response.\n saved values can
            be referenced on *all* future requests.\n so things like auth tokens need
            to be declared here so they can be\n referenced by name later.\n ex:\n
            putting { \"token\": \"body.response.authToken\" } in the map\n will allow
            us to use {{$token}} in all future http requests"
      description: HttpReq is what we will use to construct a GET or POST request
        to the server.
    api.v0alpha.HuntGroup:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group.
        clientSid:
          type: string
          description: The client sid of the hunt group.
        name:
          type: string
          description: The name of the hunt group.
        description:
          type: string
          description: The description of the hunt group.
        modifyDate:
          type: string
          description: The last time the hunt group was modified.
          format: date-time
        type:
          type: integer
          description: The type of hunt group, connected or softphone.
          format: enum
        agentCount:
          type: string
          description: The number of agents in the hunt group.
        huntGroupSkillAgentCount:
          type: string
          description: The number of agents that have this hunt group's skill.
      description: HuntGroup describes a hunt group in an organization.
    api.v0alpha.HuntGroupAgentSettings:
      type: object
      properties:
        keypadEnabled:
          type: boolean
        keypadDelimiter:
          type: string
        statistics:
          $ref: '#/components/schemas/api.v0alpha.AgentStatisticsSettings'
        endCallConfirmation:
          type: boolean
        pause:
          $ref: '#/components/schemas/api.v0alpha.PauseSettings'
        hqm:
          $ref: '#/components/schemas/api.v0alpha.HoldQueueMonitorSettings'
        manualDial:
          $ref: '#/components/schemas/api.v0alpha.ManualDialSettings'
        transfer:
          $ref: '#/components/schemas/api.v0alpha.TransferSettings'
        previewDial:
          $ref: '#/components/schemas/api.v0alpha.PreviewDialSettings'
        phoneNumberActivity:
          $ref: '#/components/schemas/api.v0alpha.PhoneNumberActivitySettings'
        dncl:
          $ref: '#/components/schemas/api.v0alpha.DnclSettings'
        hold:
          $ref: '#/components/schemas/api.v0alpha.AgentHoldSettings'
        manualApproval:
          $ref: '#/components/schemas/api.v0alpha.ManualApprovalSettings'
        displayLinkbackHuntgroup:
          type: boolean
        scheduleCallback:
          $ref: '#/components/schemas/api.v0alpha.ScheduleCallBackSettings'
        recording:
          $ref: '#/components/schemas/api.v0alpha.RecordingSettings'
        displayPhoneZipMetadata:
          type: boolean
        phoneZipMetadataKeys:
          type: array
          items:
            type: string
        displayMachineDeliver:
          type: boolean
        allowAgentIntercom:
          type: boolean
        displayDataSettings:
          $ref: '#/components/schemas/api.v0alpha.DisplayDataSettings'
        allowChangeHuntGroup:
          type: boolean
        agentScreenRecording:
          type: boolean
        inboundComplianceMetadata:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ComplianceMetadata'
        notifyQueuedCalls:
          type: boolean
        displayJourneyRetrievedData:
          type: boolean
        limitJourneyRetrievedData:
          type: array
          items:
            type: string
        initialAgentStatus:
          type: string
          description: initial agent status
        displayWebLinks:
          type: boolean
        displaySkills:
          type: boolean
        interruptPeering:
          type: array
          items:
            type: integer
            format: enum
          description: Array of interruptable call states (manual, preview, both manual
            and preview)
        displayIntegrationDataMap:
          type: boolean
        limitIntegrationDataMap:
          type: array
          items:
            type: string
    api.v0alpha.HuntGroupResponse:
      type: object
      properties:
        huntGroupResponseSid:
          type: string
        huntGroupSid:
          type: string
        type:
          type: string
        options:
          type: array
          items:
            type: string
        name:
          type: string
        description:
          type: string
        order:
          type: integer
          format: int32
        required:
          type: boolean
        defaultValue:
          type: string
        manualDial:
          $ref: '#/components/schemas/api.v0alpha.ManualDialSettings'
    api.v0alpha.HuntGroupScript:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        autoScriptProgression:
          type: boolean
        scriptCategory:
          type: string
        act:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Act'
    api.v0alpha.ImportFormat:
      type: object
      properties:
        custom:
          $ref: '#/components/schemas/api.v0alpha.CustomImportFormat'
        standard:
          type: integer
          format: enum
      description: Contact Import Template type used for default_contact_import_format
        preference
    api.v0alpha.InQueueConditions_Action:
      type: object
      properties:
        afterSeconds:
          type: string
          description: "NOTE: actions for the same Condition.Config cannot\n share
            the same after_seconds value."
        hangUp:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
        voicemail:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
        queuedCallback:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
        triggerIvr:
          allOf:
          - $ref: '#/components/schemas/api.commons.DigitWrapper'
          description: the value of this field is the IVR/Script event.
        addSkills:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Skills'
        dropSkills:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Skills'
    api.v0alpha.InQueueConditions_Condition:
      type: object
      properties:
        inbound:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.InQueueConditions_Config'
          description: nil fields will use default config settings.
        outbound:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_Config'
        manual:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_Config'
        preview:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_Config'
        any:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.InQueueConditions_Config'
          description: any can only be created/edited for the account default config
    api.v0alpha.InQueueConditions_Config:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.InQueueConditions_Action'
    api.v0alpha.InQueueConditions_LimitedAction:
      type: object
      properties:
        afterSeconds:
          type: string
        hangUp:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
        voicemail:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
        queuedCallback:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
        triggerIvr:
          allOf:
          - $ref: '#/components/schemas/api.commons.DigitWrapper'
          description: the value of this field is the IVR/Script event.
    api.v0alpha.InQueueConditions_LimitedCondition:
      type: object
      properties:
        inbound:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.InQueueConditions_LimitedConfig'
          description: nil fields will use default config settings.
        outbound:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_LimitedConfig'
        manual:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_LimitedConfig'
        preview:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_LimitedConfig'
        any:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.InQueueConditions_LimitedConfig'
          description: any can only be created/edited for the account default config
    api.v0alpha.InQueueConditions_LimitedConfig:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.InQueueConditions_LimitedAction'
    api.v0alpha.InboundSmsGroup:
      type: object
      properties:
        inboundSmsGroupId:
          type: string
        smsNumberSid:
          type: string
        name:
          type: string
        status:
          type: integer
          format: enum
        startTime:
          type: string
          format: date-time
        stopTime:
          type: string
          format: date-time
        totalCost:
          type: number
          format: double
        inboundSmsTemplateId:
          type: string
        messageCount:
          type: integer
          format: int32
        todaysMessageCount:
          type: integer
          format: int32
        reportSettings:
          $ref: '#/components/schemas/api.v0alpha.ReportSettings'
        dateCreated:
          type: string
          format: date-time
    api.v0alpha.InboundSmsGroupWithIntents:
      type: object
      properties:
        inboundSmsGroup:
          $ref: '#/components/schemas/api.v0alpha.InboundSmsGroup'
        smsIntentTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsIntentTemplate'
    api.v0alpha.InboundSmsTask:
      type: object
      properties:
        smsReceivedRepliesId:
          type: string
        srcNumber:
          type: string
        dstNumber:
          type: string
        msgId:
          type: string
        receivedReply:
          type: string
        receivedTime:
          type: string
          format: date-time
        inboundSmsGroupId:
          type: string
        cost:
          type: number
          format: double
        status:
          type: integer
          format: enum
        analysisReport:
          type: string
        units:
          type: string
    api.v0alpha.InboundSmsTemplate:
      type: object
      properties:
        inboundSmsTemplateId:
          type: string
        smsNumberSid:
          type: string
        name:
          type: string
        reportSettings:
          $ref: '#/components/schemas/api.v0alpha.ReportSettings'
        lastUpdated:
          type: string
          format: date-time
    api.v0alpha.InboundSmsTemplateWithIntents:
      type: object
      properties:
        inboundSmsTemplate:
          $ref: '#/components/schemas/api.v0alpha.InboundSmsTemplate'
        smsIntentTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsIntentTemplate'
    api.v0alpha.IncludedCallTypes:
      type: object
      properties:
        outbound:
          type: boolean
        inbound:
          type: boolean
        manualDial:
          type: boolean
        previewDial:
          type: boolean
      description: Possible included call types, for agent included call types
    api.v0alpha.IndexVisibility:
      type: object
      properties:
        clientSid:
          type: string
        year:
          type: string
        week:
          type: string
        viewers:
          type: array
          items:
            type: string
    api.v0alpha.IndicesVisibility:
      type: object
      properties:
        visibilities:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.IndexVisibility'
    api.v0alpha.InitDefaultPermissionGroupsRequest:
      type: object
      properties:
        orgId:
          type: string
          description: id of the organization to initialize
      description: The request for api.v0alpha.InitDefaultPermissionGroups.
    api.v0alpha.InitDefaultPermissionGroupsResponse:
      type: object
      properties:
        defaultPermissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PermissionGroup'
          description: The list of default permission groups.
      description: The response for api.v0alpha.InitDefaultPermissionGroups.
    api.v0alpha.KeyPressEvents_Action:
      type: object
      properties:
        inbound:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Config'
          description: nil fields will use default config settings.
        outbound:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Config'
        manual:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Config'
        preview:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Config'
        any:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Config'
          description: any can only be created/edited for the account default config.
    api.v0alpha.KeyPressEvents_Config:
      type: object
      properties:
        hangUp:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
        triggerIvr:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
          description: 'NOTE: trigger_ivr is only available for inbound & outbound.'
        voicemail:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
        queuedCallback:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
        addSkills:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Skills'
        dropSkills:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Skills'
    api.v0alpha.Label:
      type: object
      properties:
        name:
          type: string
          description: "simply the name of the label.\n 'Team A', 'Medical', etc"
        description:
          type: string
          description: the description of the label.
        color:
          type: string
          description: Hex color code of the label.
        labelId:
          type: string
          description: Id of the label.
        deleted:
          type: boolean
          description: whether or not the label is deleted.
      description: Label is an entity message.
    api.v0alpha.LearnImage:
      type: object
      properties:
        uuid:
          type: string
          description: unique name of the image
        content:
          type: string
          description: image content
        downloadUrl:
          type: string
          description: download image url
        tempId:
          type: string
          description: temp id for the image
      description: request for LearnImage
    api.v0alpha.LearnSearchDetails:
      type: object
      properties:
        name:
          type: string
          description: matched storage bucket
        content:
          type: string
          description: matched markdown content
      description: search response details
    api.v0alpha.LearnSnippetDetails:
      type: object
      properties:
        name:
          type: string
          description: storage bucket
        content:
          type: string
          description: markdown content
        lastEditedTimestamp:
          type: string
          description: The last time this learning content was edited.
          format: date-time
        title:
          type: string
          description: title of the article
      description: snippet details
    api.v0alpha.LearnStandaloneDetails:
      type: object
      properties:
        name:
          type: string
          description: storage bucket
        content:
          type: string
          description: deprecated
        lastEditedTimestamp:
          type: string
          description: deprecated
          format: date-time
        title:
          type: string
          description: title of the article
      description: response to get standalone articles
    api.v0alpha.Link:
      type: object
      properties:
        xmlClientPropSid:
          type: string
        name:
          type: string
        description:
          type: string
    api.v0alpha.LinkbackUpdateBroadcastTemplatesRequest:
      type: object
      properties:
        value:
          type: boolean
      description: Request for updating broadcast template properties
    api.v0alpha.LinkbackUpdateBroadcastTemplatesResponse:
      type: object
      properties: {}
      description: Response for updating broadcast template properties
    api.v0alpha.ListActiveInboundSmsGroupsReq:
      type: object
      properties: {}
    api.v0alpha.ListActiveInboundSmsGroupsRes:
      type: object
      properties:
        inboundSmsGroupWithIntents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.InboundSmsGroupWithIntents'
    api.v0alpha.ListAgentCallHistoryReq:
      type: object
      properties:
        sessionSid:
          type: string
        historyFilter:
          type: integer
          format: enum
    api.v0alpha.ListAgentCallHistoryRes:
      type: object
      properties:
        history:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ListAgentCallHistoryRes_Entry'
    api.v0alpha.ListAgentCallHistoryRes_Entry:
      type: object
      properties:
        callSid:
          type: string
        scheduleTime:
          type: string
        callType:
          type: integer
          format: enum
        phoneNumber:
          type: string
        callerId:
          type: string
        result:
          type: integer
          format: int32
        duration:
          type: integer
          format: int32
    api.v0alpha.ListAgentCallLogsByCallSidAndTypeReq:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
    api.v0alpha.ListAgentCallLogsByCallSidAndTypeRes:
      type: object
      properties:
        agentCallLogs:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentCallLog'
    api.v0alpha.ListAgentCallResponseValuesReq:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
    api.v0alpha.ListAgentCallResponseValuesRes:
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ListAgentCallResponseValuesRes_Response'
    api.v0alpha.ListAgentCallResponseValuesRes_Response:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    api.v0alpha.ListAgentExtensionsReq:
      type: object
      properties: {}
    api.v0alpha.ListAgentExtensionsRes:
      type: object
      properties:
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Extension'
    api.v0alpha.ListAgentPauseCodesRequest:
      type: object
      properties: {}
      description: Request message for the ListAgentPauseCodes RPC.
    api.v0alpha.ListAgentPauseCodesResponse:
      type: object
      properties:
        pauseCodes:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PauseCode'
      description: Response message for the ListAgentPauseCodes RPC.
    api.v0alpha.ListAgentProfileGroupsRequest:
      type: object
      properties: {}
    api.v0alpha.ListAgentProfileGroupsResponse:
      type: object
      properties:
        agentProfileGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AgentProfileGroup'
    api.v0alpha.ListAgentQueueAndOnHoldCallDataReq:
      type: object
      properties:
        agentSessionSid:
          type: string
          description: current session id of the requesting agent.
        agentSkills:
          type: array
          items:
            type: string
          description: list of skills (skill names) to use for matching queued calls,
            only calls that require a matching subset of agent_skills will be returned.
    api.v0alpha.ListAgentQueueAndOnHoldCallDataRes:
      type: object
      properties:
        agentQueueCalls:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ListAgentQueueAndOnHoldCallDataRes_CallData'
          description: calls that were queued and have a matching subset of the agent_skills
            from the request.
        onHoldCalls:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ListAgentQueueAndOnHoldCallDataRes_CallData'
          description: calls that were placed on multi-hold by the requesting agent.
        hqmCalls:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ListAgentQueueAndOnHoldCallDataRes_CallData'
          description: calls that were placed in the Hold Queue Monitor, are still
            on hold by the destination (hold music is being played by the other party)
            and have a matching subset of the agent_skills from the request.
    api.v0alpha.ListAgentQueueAndOnHoldCallDataRes_CallData:
      type: object
      properties:
        callSid:
          type: string
          description: id of the found call.
        phoneNumber:
          type: string
          description: number dialed when the call was placed.
        callerId:
          type: string
          description: caller_id used when the call was placed.
        callType:
          type: integer
          description: call type of the found call.
          format: enum
        startDate:
          type: string
          description: timestamp indicating when the call started.
          format: date-time
        holdDate:
          type: string
          description: timestamp indicating when the call was put on hold (only set
            when call is a hold call).
          format: date-time
        skills:
          type: array
          items:
            type: string
          description: formatted skills that the call requires.
        agentSpecific:
          type: boolean
          description: indicates if the call is specific to the agent (multi-hold)
            or it can be picked up by multiple agents (queued and HQM calls).
        queuedNotificationType:
          type: integer
          description: queued notification type of the call.
          format: enum
    api.v0alpha.ListAgentResponseGroupsRequest:
      type: object
      properties: {}
      description: Request message for ListAgentResponseGroups
    api.v0alpha.ListAgentResponseGroupsResponse:
      type: object
      properties:
        agentResponses:
          type: array
          items:
            type: string
      description: Response message for ListAgentResponseGroups
    api.v0alpha.ListAgentSkillsFiltersReq:
      type: object
      properties: {}
      description: Request for ListAgentSkillsFilters
    api.v0alpha.ListAgentSkillsFiltersRes:
      type: object
      properties:
        agentSkillsFilters:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentSkillsFilter'
      description: Response for ListAgentSkillsFilters
    api.v0alpha.ListAgentSkillsReq:
      type: object
      properties: {}
    api.v0alpha.ListAgentSkillsRes:
      type: object
      properties:
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentSkill'
    api.v0alpha.ListAgentStatisticsDataReq:
      type: object
      properties:
        huntGroupSid:
          type: string
        sessionSid:
          type: string
    api.v0alpha.ListAgentStatisticsDataRes:
      type: object
      properties:
        statisticsData:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.StatisticsData'
        shownColumns:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.StatisticsColumnDefinition'
    api.v0alpha.ListAgentStatisticsTemplatesRequest:
      type: object
      properties: {}
      description: Request message for the ListAgentStatisticsTemplates RPC.
    api.v0alpha.ListAgentStatisticsTemplatesResponse:
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentLoginGuiStatisticsTemplate'
          description: List of agent statistics templates.
      description: Response message for the ListAgentStatisticsTemplates RPC.
    api.v0alpha.ListAgentTransferOptionsReq:
      type: object
      properties: {}
    api.v0alpha.ListAgentTransferOptionsRes:
      type: object
      properties:
        agentInfo:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Agent'
        huntGroup:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.HuntGroup'
        pbxExtensions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PBXExtension'
        agentSkills:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentSkill'
        agentProfile:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentsByAgentSidShort'
    api.v0alpha.ListAgentTriggerTemplatesRequest:
      type: object
      properties: {}
    api.v0alpha.ListAgentTriggerTemplatesResponse:
      type: object
      properties:
        agentTriggerTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate'
    api.v0alpha.ListAgentTriggersReq:
      type: object
      properties:
        huntGroupSid:
          type: string
    api.v0alpha.ListAgentTriggersRes:
      type: object
      properties:
        triggerDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.TriggerDetails'
    api.v0alpha.ListAllScenariosReq:
      type: object
      properties: {}
    api.v0alpha.ListAllScenariosRes:
      type: object
      properties:
        scenarios:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Scenario'
    api.v0alpha.ListApplicationsDashboardsRequest:
      type: object
      properties: {}
      description: ListApplicationDashboardsRequest lists apps and assigned dashboards
    api.v0alpha.ListApplicationsDashboardsResponse:
      type: object
      properties:
        applicationDashboards:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ApplicationDashboards'
      description: ListApplicationsDashboardsResponse used in ListApplicationDashboards
        rpc'
    api.v0alpha.ListArchivedOrganizationsRequest:
      type: object
      properties: {}
      description: The request for api.v0alpha.ListArchivedOrganizations
    api.v0alpha.ListArchivedOrganizationsResponse:
      type: object
      properties:
        archivedOrganizationDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.OrganizationDescription'
          description: List of organizations currently in archived state.
      description: The response for api.v0alpha.ListArchivedOrganizations
    api.v0alpha.ListAssignedRuleSetsReq:
      type: object
      properties:
        cplScenarioId:
          type: string
    api.v0alpha.ListAssignedRuleSetsRes:
      type: object
      properties:
        ruleSets:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.RuleSet'
    api.v0alpha.ListAssignedScenariosReq:
      type: object
      properties:
        cplRuleSetId:
          type: string
    api.v0alpha.ListAssignedScenariosRes:
      type: object
      properties:
        assignedScenarios:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AssignedScenario'
    api.v0alpha.ListAutocompleteFieldsReq:
      type: object
      properties: {}
    api.v0alpha.ListAutocompleteFieldsRes:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Field'
    api.v0alpha.ListAvailableFieldsByElementIdReq:
      type: object
      properties:
        elementId:
          type: string
    api.v0alpha.ListAvailableGreetingsReq:
      type: object
      properties: {}
    api.v0alpha.ListAvailableGreetingsRes:
      type: object
      properties:
        greetings:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ListAvailableGreetingsRes_FileInfo'
    api.v0alpha.ListAvailableGreetingsRes_FileInfo:
      type: object
      properties:
        filename:
          type: string
        size:
          type: string
    api.v0alpha.ListCallbackRoutingAgentsReq:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: HuntGroupSid to filter agents by
      description: ListCallbackRoutingAgentsReq requires a hunt_group_sid to filter
        agents by.
    api.v0alpha.ListCallbackRoutingAgentsRes:
      type: object
      properties:
        agentShort:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentsByAgentSidShort'
          description: A list of agents that are allowed to do callbacks
      description: ListCallbackRoutingAgentsRes returns a list of agents that are
        allowed to do callbacks.
    api.v0alpha.ListCallbackRoutingSkillsReq:
      type: object
      properties:
        huntGroupSid:
          type: string
    api.v0alpha.ListCallbackRoutingSkillsRes:
      type: object
      properties:
        agentSkills:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentSkill'
    api.v0alpha.ListCallerIdsFromBucketReq:
      type: object
      properties:
        bucketNumber:
          type: string
    api.v0alpha.ListCallerIdsFromBucketRes:
      type: object
      properties:
        callerIdInfo:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CallerIdInfo'
    api.v0alpha.ListCampaignLinksRes:
      type: object
      properties:
        Links:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Link'
    api.v0alpha.ListCampaignsReq:
      type: object
      properties:
        statuses:
          type: array
          items:
            type: integer
            format: enum
          description: the statuses to select by when listing campaigns (if empty,
            selects all)
        fieldMask:
          type: string
          description: field mask for selecting extra campaign module details (if
            empty, does not select any details)
          format: field-mask
        byIds:
          $ref: '#/components/schemas/api.v0alpha.ListCampaignsReq_ByIds'
        byProject:
          $ref: '#/components/schemas/api.v0alpha.ListCampaignsReq_ByProject'
        byTime:
          $ref: '#/components/schemas/api.v0alpha.ListCampaignsReq_ByTime'
        byUnsubscribeLink:
          $ref: '#/components/schemas/api.v0alpha.ListCampaignsReq_ByUnsubscribeLink'
        byConnectedInbox:
          $ref: '#/components/schemas/api.v0alpha.ListCampaignsReq_ByConnectedInbox'
        byVerifiedEmail:
          $ref: '#/components/schemas/api.v0alpha.ListCampaignsReq_ByVerifiedEmail'
        bySmsNumber:
          $ref: '#/components/schemas/api.v0alpha.ListCampaignsReq_BySmsNumber'
        byWhatsappNumber:
          $ref: '#/components/schemas/api.v0alpha.ListCampaignsReq_ByWhatsAppNumber'
        byWhatsApp:
          $ref: '#/components/schemas/api.v0alpha.ListCampaignsReq_ByWhatsApp'
        byModuleType:
          $ref: '#/components/schemas/api.v0alpha.ListCampaignsReq_ByModuleType'
      description: ListCampaignsReq - request to list all campaigns using a given
        filter
    api.v0alpha.ListCampaignsReq_ByConnectedInbox:
      type: object
      properties:
        inboxSid:
          type: string
          description: connected inbox identifier
      description: ByConnectedInbox - filter to list campaigns by the provided connected
        inbox
    api.v0alpha.ListCampaignsReq_ByIds:
      type: object
      properties:
        campaignSids:
          type: array
          items:
            type: string
          description: campaign ids to search for
      description: ByIds - filter to list campaigns by ids
    api.v0alpha.ListCampaignsReq_ByModuleType:
      type: object
      properties:
        moduleType:
          type: array
          items:
            type: integer
            format: enum
        channelType:
          type: array
          items:
            type: integer
            format: enum
      description: ByModuleType - filter the list of campaigns by the module type
        and channel type
    api.v0alpha.ListCampaignsReq_ByProject:
      type: object
      properties:
        projectSid:
          type: string
          description: project identifier
      description: ByProject - filter to list campaigns by project
    api.v0alpha.ListCampaignsReq_BySmsNumber:
      type: object
      properties:
        number:
          type: string
          description: sms number
      description: BySmsNumber - filter the list of campaigns by the Sms Number
    api.v0alpha.ListCampaignsReq_ByTime:
      type: object
      properties:
        searchFrom:
          type: string
          description: time to search from
          format: date-time
        searchTo:
          type: string
          description: time to search to
          format: date-time
      description: ByTime - filter to list running campaigns by scheduled_start_time
    api.v0alpha.ListCampaignsReq_ByUnsubscribeLink:
      type: object
      properties:
        linkSid:
          type: string
          description: custom unsubscribe link identifier
      description: ByUnsubscribeLink - filter to list campaigns using the provided
        unsubscribe link
    api.v0alpha.ListCampaignsReq_ByVerifiedEmail:
      type: object
      properties:
        emailSid:
          type: string
          description: verified email identifier
      description: ByVerifiedEmail - filter to list campaigns by the verified email
    api.v0alpha.ListCampaignsReq_ByWhatsApp:
      type: object
      properties:
        number:
          type: string
          description: whatsapp number
      description: ByWhatsApp - filter the list of campaigns by the Whatsapp
    api.v0alpha.ListCampaignsReq_ByWhatsAppNumber:
      type: object
      properties:
        number:
          type: string
          description: whatsapp number
      description: ByWhatsAppNumber - filter the list of campaigns by the Whatsapp
        Number
    api.v0alpha.ListCampaignsRes:
      type: object
      properties:
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: the listed campaigns
        modules:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniCampaignModule'
          description: associated modules
      description: ListCampaignsRes - result of listing filtered campaigns
    api.v0alpha.ListCannedMessageGroupsReq:
      type: object
      properties: {}
      description: request used to get a list of CannedMessageGroups
    api.v0alpha.ListCannedMessageGroupsRes:
      type: object
      properties:
        cannedMessageGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CannedMessageGroup'
          description: list of cannedMessageGroups
      description: response holding the list of CannedMessageGroups
    api.v0alpha.ListCannedMessagesByGroupIdReq:
      type: object
      properties:
        cannedMessageGroupId:
          type: string
          description: canned_message_group_id
      description: request used to get a list of CannedMessages for the group
    api.v0alpha.ListCannedMessagesByGroupIdRes:
      type: object
      properties:
        cannedMessagesWithGroup:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CannedMessageWithGroup'
          description: the list of cannedMessages with group details
      description: response holding the list of CannedMessages with group details
        for the group
    api.v0alpha.ListCannedMessagesReq:
      type: object
      properties: {}
      description: request used to get a list of CannedMessages
    api.v0alpha.ListCannedMessagesRes:
      type: object
      properties:
        cannedMessagesWithGroup:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CannedMessageWithGroup'
          description: the list of cannedMessages with group details
      description: response holding the list of CannedMessages with group details
    api.v0alpha.ListCjsSearchDefinitionsReq:
      type: object
      properties: {}
    api.v0alpha.ListCjsSearchDefinitionsRes:
      type: object
      properties:
        definitions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CjsSearchDefinitionMetadata'
    api.v0alpha.ListClientInfoDisplayTemplatesRequest:
      type: object
      properties: {}
    api.v0alpha.ListClientInfoDisplayTemplatesResponse:
      type: object
      properties:
        clientInfoDisplayTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ClientInfoDisplayTemplate'
    api.v0alpha.ListClientPhoneBookEntriesReq:
      type: object
      properties: {}
      description: Request message for the ListClientPhoneBookEntries RPC
    api.v0alpha.ListClientPhoneBookEntriesRes:
      type: object
      properties:
        phoneBookEntries:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PhoneBookEntry'
          description: The list of phone book entries
        huntGroupSid:
          type: string
          description: This field is not set, since the entry type is 'Client'.
      description: Response message for the ListClientPhoneBookEntries RPC
    api.v0alpha.ListCollectionsReq:
      type: object
      properties: {}
    api.v0alpha.ListCollectionsRes:
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CollectionMetadata'
    api.v0alpha.ListComparison_FieldOrVal:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/api.v0alpha.FieldIndex'
        value:
          $ref: '#/components/schemas/api.v0alpha.FilterCheck_Value'
    api.v0alpha.ListConnectedInboxesReq:
      type: object
      properties:
        fieldMask:
          type: string
          description: 'what fields should be returned on the associated campaigns
            (if no field mask: no associated campaigns; if empty field mask, empty
            campaigns)'
          format: field-mask
      description: ListConnectedInboxesReq - request to list the connected inboxes
        for an organization
    api.v0alpha.ListConnectedInboxesRes:
      type: object
      properties:
        connectedInboxes:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ListConnectedInboxesRes_ListConnectedInbox'
          description: the listed connected inboxes
      description: ListConnectedInboxesRes - result to listing an organization's connected
        inboxes
    api.v0alpha.ListConnectedInboxesRes_ListConnectedInbox:
      type: object
      properties:
        connectedInbox:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConnectedInbox'
          description: the listed connected inbox
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: the associated campaigns
      description: ListConnectedInbox - a wrapper for a listed connected inbox containing
        the inbox and a list of it's associated campaigns
    api.v0alpha.ListConsentProfile:
      type: object
      properties:
        consentProfileId:
          type: string
        profileName:
          type: string
        count:
          type: string
        disabled:
          type: boolean
        channel:
          allOf:
          - $ref: '#/components/schemas/api.commons.CommType'
          description: channel (email, sms, phone, etc)
    api.v0alpha.ListConsentProfilesReq:
      type: object
      properties: {}
    api.v0alpha.ListConsentProfilesRes:
      type: object
      properties:
        consentProfiles:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ListConsentProfile'
    api.v0alpha.ListConsentTopicsReq:
      type: object
      properties: {}
    api.v0alpha.ListConsentTopicsRes:
      type: object
      properties:
        topics:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ConsentTopic'
    api.v0alpha.ListContactFieldDescriptionsByCGSidReq:
      type: object
      properties:
        contactGroupSid:
          type: string
    api.v0alpha.ListContactFieldDescriptionsByCGSidRes:
      type: object
      properties:
        contactFieldDescription:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ContactFieldDescription'
    api.v0alpha.ListContactFieldDescriptionsReq:
      type: object
      properties: {}
    api.v0alpha.ListContactFieldDescriptionsRes:
      type: object
      properties:
        contactFieldDescription:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ContactFieldDescription'
    api.v0alpha.ListContactGroupDetailsByClientSidReq:
      type: object
      properties: {}
    api.v0alpha.ListContactGroupDetailsByClientSidRes:
      type: object
      properties:
        contactGroup:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ContactGroup'
    api.v0alpha.ListContactImportTemplatesReq:
      type: object
      properties: {}
    api.v0alpha.ListContactImportTemplatesRes:
      type: object
      properties:
        contactImportTemplate:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ContactImportTemplate'
    api.v0alpha.ListContactListsReq:
      type: object
      properties:
        fieldMask:
          type: string
          description: field mask to filter what is returned by each row
          format: field-mask
        byProject:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ListContactListsReq_ByProject'
          description: select contact lists by project id
      description: ListContactListsReq - request to list contact lists
    api.v0alpha.ListContactListsReq_ByProject:
      type: object
      properties:
        projectSid:
          type: string
          description: project identifier
      description: ByProject - filter to list campaigns by project
    api.v0alpha.ListContactListsRes:
      type: object
      properties:
        contactLists:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ContactList'
          description: the listed contact lists
      description: ListContactListsRes - result to listing contact lists
    api.v0alpha.ListConversationsReq:
      type: object
      properties:
        channelTypes:
          type: array
          items:
            type: integer
            format: enum
          description: the channel types to list conversations for
        fieldMask:
          type: string
          description: field mask to filter what is returned by each row
          format: field-mask
        statuses:
          type: array
          items:
            type: integer
            format: enum
          description: list of conversation status that we want returned, if empty
            return everything.
        byTime:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ListConversationsReq_ByTime'
          description: list conversations by time
        byAssignedUser:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ListConversationsReq_ByAssignedUser'
          description: list conversations by assigned user
        byConversationSids:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ListConversationsReq_ByConversationSids'
          description: list conversations by conversation sid
      description: ListConversationsReq - request to get conversations
    api.v0alpha.ListConversationsReq_ByAssignedUser:
      type: object
      properties:
        userId:
          type: string
          description: the assigned user
        statuses:
          type: array
          items:
            type: integer
            format: enum
          description: 'the statuses of the conversations to retrieve, or empty if
            retrieving everything : deprecated because we moved to the main request.'
        pageSize:
          type: integer
          description: Optional. The number of listconversation to include in a single
            response. When not provided this defaults to 100.
          format: uint32
        pageToken:
          type: string
          description: Optional. When provided all other request fields are ignored.
      description: message filter to list conversations by assigned user
    api.v0alpha.ListConversationsReq_ByConversationSids:
      type: object
      properties:
        conversationSids:
          type: array
          items:
            type: string
          description: the conversation sid
        pageSize:
          type: integer
          description: Optional. The number of listconversation to include in a single
            response. When not provided this defaults to 100.
          format: uint32
        pageToken:
          type: string
          description: Optional. When provided all other request fields are ignored.
      description: message filter to list conversations by conversation sids
    api.v0alpha.ListConversationsReq_ByTime:
      type: object
      properties:
        startTime:
          type: string
          description: start time for filtering conversations
          format: date-time
        endTime:
          type: string
          description: stop time for filtering conversations
          format: date-time
        pageSize:
          type: integer
          description: Optional. The number of listconversation to include in a single
            response. When not provided this defaults to 100.
          format: uint32
        pageToken:
          type: string
          description: Optional. When provided all other request fields are ignored.
      description: message filter to list conversations by time
    api.v0alpha.ListConversationsRes:
      type: object
      properties:
        conversations:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniConversation'
          description: list of conversations for the dashboard
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of tasks, or empty if there
            are no more pages

            Only returned if using the ByTime or ByAssignedUser filters'
      description: ListConversationsRes - list of conversations satisfying the request
        parameters
    api.v0alpha.ListCustomDataKeysReq:
      type: object
      properties: {}
      description: Request message for the ListCustomDataKeys RPC
    api.v0alpha.ListCustomDataKeysRes:
      type: object
      properties:
        dataKeys:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CustomDataKey'
      description: Response message for the ListCustomDataKeys RPC
    api.v0alpha.ListCustomReportFiltersReq:
      type: object
      properties: {}
      description: Request for ListCustomReportFilters
    api.v0alpha.ListCustomReportFiltersRequest:
      type: object
      properties: {}
      description: Request message for ListCustomReportFilters
    api.v0alpha.ListCustomReportFiltersRes:
      type: object
      properties:
        customReportFilters:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CustomReportFilterProperty'
      description: Response for ListCustomReportFilters
    api.v0alpha.ListCustomReportFiltersResponse:
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CustomReportFilter'
      description: Response message for ListCustomReportFilters
    api.v0alpha.ListCustomUnsubscribeLinksRes:
      type: object
      properties:
        customUnsubscribeLinks:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniCustomUnsubscribeLink'
          description: the listed custom unsubscribe links
      description: ListCustomUnsubscribeLinksRes - result to listing custom unsubscribe
        links
    api.v0alpha.ListDashboardsRequest:
      type: object
      properties: {}
      description: ListDashboardsRequest --  filled in from auth. May include filters
        in future
    api.v0alpha.ListDashboardsResponse:
      type: object
      properties:
        dashboardSummaries:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.DashboardSummary'
      description: ListDashboardsRes contains an array of dashboard summaries
    api.v0alpha.ListDispositionsReq:
      type: object
      properties: {}
      description: ListDispositionsReq - request to list dispositions
    api.v0alpha.ListDispositionsRes:
      type: object
      properties:
        dispositions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Disposition'
          description: the listed dispositions
      description: ListDispositionsRes - result to listing dispositions
    api.v0alpha.ListElementsReq:
      type: object
      properties:
        labels:
          type: array
          items:
            type: string
    api.v0alpha.ListExtendedCallHistoryReq:
      type: object
      properties:
        searchType:
          type: integer
          format: enum
        callTypes:
          type: array
          items:
            type: integer
            format: enum
        customerNumber:
          type: string
        searchScope:
          type: integer
          format: enum
        callSid:
          type: string
        callerId:
          type: string
    api.v0alpha.ListExtendedCallHistoryRes:
      type: object
      properties:
        groupSid:
          type: string
          description: The groupSid
        callType:
          type: integer
          description: The callType, based on the CallType enum.
          format: enum
        callSid:
          type: string
          description: The callSid
        customerNumber:
          type: string
          description: The customerNumber
        phone:
          type: string
          description: The phone number
        date:
          type: string
          description: The date
        result:
          type: integer
          description: The result
          format: int32
        length:
          type: integer
          description: The length of the call
          format: int32
        cost:
          type: number
          description: The cost of the call
          format: double
        keys:
          type: string
          description: The keys
        callDetails:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.GetCallDetailsRes'
          description: The callDetails
        linkbackLength:
          type: integer
          description: The linkbackLength
          format: int32
        isCallRecorded:
          type: boolean
          description: If the call is recorded
        recordingFilename:
          type: string
          description: The filename of the recording
        startDate:
          type: string
          description: "The startDate is the chosen Timescale value (1 day, 2 days,
            etc.) as a time stamp based on the current date.\n For example, if today
            is 05/13/22 and the Timescale value is 7 days, it will be the time stamp
            value of 05/06/22."
          format: date-time
        countrySid:
          type: string
          description: The country sid on the group, which is for the destination
            phone number
      description: The response for ListExtendedCallHistory
    api.v0alpha.ListFieldsForElementReq:
      type: object
      properties:
        elementId:
          type: string
    api.v0alpha.ListFieldsForElementRes:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Field'
    api.v0alpha.ListFieldsReq:
      type: object
      properties: {}
    api.v0alpha.ListHuntGroupExtensionsReq:
      type: object
      properties: {}
    api.v0alpha.ListHuntGroupExtensionsRes:
      type: object
      properties:
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Extension'
    api.v0alpha.ListHuntGroupPhoneBookEntriesReq:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: Required to specify which Hunt Group entries are requested
      description: Request message for the ListHuntGroupPhoneBookEntries RPC
    api.v0alpha.ListHuntGroupPhoneBookEntriesRes:
      type: object
      properties:
        phoneBookEntries:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PhoneBookEntry'
          description: The list of phone book entries
        huntGroupSid:
          type: string
          description: This field is set, since the entry type is 'Hunt Group"
      description: Response message for the ListHuntGroupPhoneBookEntries RPC
    api.v0alpha.ListHuntGroupWebLinksReq:
      type: object
      properties:
        huntGroupSid:
          type: string
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        serviceId:
          type: string
          description: "the following fields should only be set when the call_sid
            from the request is from a retrieved scheduled callback.\n used to get
            the callback details to replace them in the web links parameters (if any
            match)."
        scheduledCallbackId:
          type: string
        sessionSid:
          type: string
        isInitialPreview:
          type: boolean
          description: "this field should only be set on the request when the ui is
            in a \"preview call\" state when dealing with\n preview calls"
    api.v0alpha.ListHuntGroupWebLinksRes:
      type: object
      properties:
        webLinks:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.WebLink'
    api.v0alpha.ListHuntGroupsReq:
      type: object
      properties: {}
    api.v0alpha.ListHuntGroupsRes:
      type: object
      properties:
        huntGroup:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.HuntGroup'
    api.v0alpha.ListInboundSmsGroupByFiltersReq:
      type: object
      properties:
        searchFrom:
          type: string
          format: date-time
        searchTo:
          type: string
          format: date-time
        status:
          type: string
        name:
          type: string
    api.v0alpha.ListInboundSmsGroupByFiltersRes:
      type: object
      properties:
        inboundSmsGroupWithIntents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.InboundSmsGroupWithIntents'
    api.v0alpha.ListInboundSmsGroupsByGroupIdsReq:
      type: object
      properties:
        inboundSmsGroupIdsArr:
          type: array
          items:
            type: string
    api.v0alpha.ListInboundSmsGroupsByGroupIdsRes:
      type: object
      properties:
        inboundSmsGroupWithIntents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.InboundSmsGroupWithIntents'
    api.v0alpha.ListInboundSmsGroupsReq:
      type: object
      properties: {}
    api.v0alpha.ListInboundSmsGroupsRes:
      type: object
      properties:
        inboundSmsGroupWithIntents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.InboundSmsGroupWithIntents'
    api.v0alpha.ListInboundSmsTasksByGroupIdsReq:
      type: object
      properties:
        inboundSmsGroupIdsArr:
          type: array
          items:
            type: string
    api.v0alpha.ListInboundSmsTasksByGroupIdsRes:
      type: object
      properties:
        inboundSmsTasks:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.InboundSmsTask'
    api.v0alpha.ListInboundSmsTemplatesReq:
      type: object
      properties: {}
    api.v0alpha.ListInboundSmsTemplatesRes:
      type: object
      properties:
        inboundSmsTemplateWithIntents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.InboundSmsTemplateWithIntents'
    api.v0alpha.ListLastTemplateElementsRequest:
      type: object
      properties: {}
      description: Request message for ListLastTemplateElements
    api.v0alpha.ListLastTemplateElementsResponse:
      type: object
      properties:
        templateElements:
          type: array
          items:
            type: string
      description: Response message for ListLastTemplateElements
    api.v0alpha.ListLoginHistoryRequest:
      type: object
      properties:
        userId:
          type: string
        originationIp:
          type: string
        duration:
          type: string
        strikesOnly:
          type: boolean
    api.v0alpha.ListLoginHistoryResponse:
      type: object
      properties:
        loginEvents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.LoginEvent'
    api.v0alpha.ListMAMAgentHuntGroupsByClientSidReq:
      type: object
      properties: {}
      description: Request message for the ListMAMAgentHuntGroupsByClientSid RPC.
    api.v0alpha.ListMAMAgentHuntGroupsByClientSidRes:
      type: object
      properties:
        huntGroup:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.HuntGroup'
      description: Response message for the ListMAMAgentHuntGroupsByClientSid RPC.
    api.v0alpha.ListMessagesReq:
      type: object
      properties:
        timestamp:
          type: string
          description: timestamp
          format: date-time
        live:
          type: boolean
          description: live flag
        channelType:
          type: integer
          description: channel type
          format: enum
        byConversationSid:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ListMessagesReq_ByConversationSid'
          description: select messages by the given conversation sid
    api.v0alpha.ListMessagesReq_ByConversationSid:
      type: object
      properties:
        conversationSid:
          type: string
          description: the conversation identifier
    api.v0alpha.ListMetrics:
      type: object
      properties:
        inputRecordCount:
          type: integer
          description: signifies how many records existed at the beginning of the
            operation
          format: int32
        outputRecordCount:
          type: integer
          description: how many records existed on the element at the end of the operation
          format: int32
        fieldNames:
          type: array
          items:
            type: string
          description: all the field names that exist in the list
        fieldTypes:
          type: array
          items:
            type: integer
            format: enum
          description: "all the field types that exist. field_types[i] has a name
            of field_names[i].\n THeir indexes match up"
        ftypes:
          type: array
          items:
            type: integer
            format: enum
        fieldCounts:
          type: array
          items:
            type: integer
            format: int32
          description: "the counts of the field_name[i], field_type[i] pairs.\n ex:
            if field_name[i] == 'test' and field_types[i] == record_type_err, and
            field_counts[i] == 10\n means we woud have 10 fiels named test that were
            error types in the list."
        runType:
          type: integer
          description: the run type for the exchange.  Will only mean anything if
            the element is an exchange.
          format: enum
        successMessage:
          type: string
          description: "will contain the http post response body from the POST request
            to p3 backoffice\n only relevent on p3 exchange elements."
        maxRecordWidth:
          type: integer
          description: "specifies the number of fields the largest record had in the
            list.\n ex: max_record_width of 10 means that there exists at least 1
            record in the list had 10 fields.\n meta fields (fields that start with
            an '_') are not counted"
          format: int32
        minRecordWidth:
          type: integer
          description: opposite of max_record_width
          format: int32
        maxRecordIndex:
          type: integer
          description: the first index we can find the record with max_record_width
            fields
          format: int32
        minRecordIndex:
          type: integer
          description: the first index we can find the record with min_record_width
            fields
          format: int32
        files:
          type: array
          items:
            type: string
          description: "the upstream files that were used to process this element.\n
            usually this field will either be empty, or have 1 item in it."
        groups:
          type: array
          items:
            type: string
          description: "which groups exist in the list.\n a group is a tagged record
            with a field '_group' and a string payload"
        missingFields:
          type: array
          items:
            type: string
          description: "represents which fields were looked up, but were missing from
            the record\n this is the set of all missing fields"
        secondsToStart:
          type: number
          description: represents how many seconds it took for the event to start
            getting worked on
          format: double
        secondsToProcess:
          type: number
          description: represents how mahy seconds it took to process the event
          format: double
      description: stored as json in lms_history table
    api.v0alpha.ListMyUserSubscriptionsRequest:
      type: object
      properties: {}
      description: Request for listing subscriptions for a user.
    api.v0alpha.ListMyUserSubscriptionsResponse:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.UserSubscription'
      description: "Response for listing subscriptions for a user.\n Contains a user
        subscriptions (plural) object."
    api.v0alpha.ListOrgResponseEvaluatorsReq:
      type: object
      properties: {}
    api.v0alpha.ListOrgResponseEvaluatorsRes:
      type: object
      properties:
        evaluators:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ResponseEvaluator'
    api.v0alpha.ListOrgSubscriptionsRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Required.
        eventType:
          type: integer
          description: "Optional.\n Used by matrix-notify to get settings in bulk
            for a particular event type."
          format: enum
      description: Request for listing subscriptions (for many users) for an org.
    api.v0alpha.ListOrgSubscriptionsResponse:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.UserSubscription'
      description: Response for listing subscriptions for multiple users.
    api.v0alpha.ListOrganizationDescriptionsRequest:
      type: object
      properties: {}
    api.v0alpha.ListOrganizationDescriptionsResponse:
      type: object
      properties:
        organizationDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.OrganizationDescription'
    api.v0alpha.ListOrganizationUserDescriptionsRequest:
      type: object
      properties: {}
    api.v0alpha.ListOrganizationUserDescriptionsResponse:
      type: object
      properties:
        userDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.UserDescription'
    api.v0alpha.ListOutboundBroadcastTemplateDataReq:
      type: object
      properties: {}
      description: Request message for the ListOutboundBroadcastTemplateData RPC.
    api.v0alpha.ListOutboundBroadcastTemplateDataRes:
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ListOutboundBroadcastTemplateDataRes_Data'
          description: "List of outbound broadcast templates found for the requesting
            client,\n each entry will contain the data one of the templates found."
      description: Response message for the ListOutboundBroadcastTemplateData RPC.
    api.v0alpha.ListOutboundBroadcastTemplateDataRes_Data:
      type: object
      properties:
        templateNumber:
          type: string
          description: number of the template (not to be confused with the template
            id)
        templateName:
          type: string
          description: name of the template (as shown in back office)
        templateType:
          type: integer
          description: type of template (will be either STANDARD or LAYERED)
          format: enum
        modifyDate:
          type: string
          description: date that the template was last modified
          format: date-time
    api.v0alpha.ListOwnedOrgsByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
          description: organization id passed in by customer support
      description: Request message for the ListOwnedOrgsByOrgId rpc.
    api.v0alpha.ListOwnedOrgsByOrgIdResponse:
      type: object
      properties:
        organizationDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.OrganizationDescription'
    api.v0alpha.ListOwnedOrgsRequest:
      type: object
      properties:
        orgId:
          type: string
          description: "DEPRECATED: org_id was previously optional,\n if org_id needs
            to be providedm use ListOwnedOrgsByOrgId rpc"
      description: Request message for the ListOwnedOrgs rpc.
    api.v0alpha.ListOwnedOrgsResponse:
      type: object
      properties:
        organizationDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.OrganizationDescription'
    api.v0alpha.ListOwnedUsersRequest:
      type: object
      properties:
        orgId:
          type: string
    api.v0alpha.ListOwnedUsersResponse:
      type: object
      properties:
        userDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.UserDescription'
    api.v0alpha.ListP3PermissionGroupsByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
    api.v0alpha.ListP3PermissionGroupsByOrgIdResponse:
      type: object
      properties:
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.P3PermissionGroup'
    api.v0alpha.ListP3PermissionGroupsRequest:
      type: object
      properties:
        orgId:
          type: string
          description: 'DEPRECATED: if provided use ListP3PermissionGroupsByOrgId
            rpc instead'
    api.v0alpha.ListP3PermissionGroupsResponse:
      type: object
      properties:
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.P3PermissionGroup'
    api.v0alpha.ListP3UnMigratedUsersRequest:
      type: object
      properties:
        orgId:
          type: string
    api.v0alpha.ListP3UnMigratedUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.UnMigratedUser'
    api.v0alpha.ListPBXExtensionsReq:
      type: object
      properties: {}
    api.v0alpha.ListPBXExtensionsRes:
      type: object
      properties:
        agentExtensions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ListPBXExtensionsRes_AgentExtension'
        huntGroupExtensions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ListPBXExtensionsRes_HuntGroupExtension'
    api.v0alpha.ListPBXExtensionsRes_AgentExtension:
      type: object
      properties:
        pbxExtension:
          type: string
        greetingLocation:
          type: string
        email:
          $ref: '#/components/schemas/api.v0alpha.EmailResponse'
        agentName:
          type: string
        hasGreeting:
          type: boolean
    api.v0alpha.ListPBXExtensionsRes_HuntGroupExtension:
      type: object
      properties:
        pbxExtension:
          type: string
        greetingLocation:
          type: string
        email:
          $ref: '#/components/schemas/api.v0alpha.EmailResponse'
        huntGroupName:
          type: string
        hasGreeting:
          type: boolean
    api.v0alpha.ListPermissionGroupsByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
    api.v0alpha.ListPermissionGroupsByOrgIdResponse:
      type: object
      properties:
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PermissionGroup'
    api.v0alpha.ListPermissionGroupsRequest:
      type: object
      properties:
        orgId:
          type: string
          description: 'DEPRECATED: Use ListPermissionGroupsByOrgId rpc if this field
            was used'
    api.v0alpha.ListPermissionGroupsResponse:
      type: object
      properties:
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PermissionGroup'
    api.v0alpha.ListPhoneBooksReq:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: id of the hunt group that 'Hunt Group' entry types will have.
      description: Request message for the ListPhoneBooks RPC
    api.v0alpha.ListPhoneBooksRes:
      type: object
      properties:
        callerIdPhoneBooks:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PhoneBook'
          description: Phone books with the caller id phone number type
        outboundPhoneBooks:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PhoneBook'
          description: Phone books with the outbound phone number type
        transferPhoneBooks:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PhoneBook'
          description: Phone books with the transfer phone number type
      description: Response message for the ListPhoneBooks RPC
    api.v0alpha.ListPoolsRequest:
      type: object
      properties: {}
    api.v0alpha.ListPoolsResponse:
      type: object
      properties:
        pools:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Pool'
    api.v0alpha.ListProductTypesRequest:
      type: object
      properties: {}
      description: ListProductTypesRequest used in ListProductTypes rpc
    api.v0alpha.ListProductTypesResult:
      type: object
      properties:
        types:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ProductType'
    api.v0alpha.ListProjectsReq:
      type: object
      properties: {}
      description: request used to get a list of projects
    api.v0alpha.ListProjectsRes:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Project'
          description: the list of projects
      description: response holding the list of projects
    api.v0alpha.ListQueueConfigsByOrgIdReq:
      type: object
      properties:
        orgId:
          type: string
          description: "If org_id is left empty, the org_id will be\n retreived from
            the users token."
    api.v0alpha.ListQueueConfigsByOrgIdRes:
      type: object
      properties:
        configs:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.QueueConfig'
          description: configs is a list of a clients custom queue configurations.
    api.v0alpha.ListQueueConfigsReq:
      type: object
      properties:
        orgId:
          type: string
          description: 'DEPRECATED: if org_id was provided use ListQueueConfigsByOrgId
            rpc instead.'
    api.v0alpha.ListQueueConfigsRes:
      type: object
      properties:
        configs:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.QueueConfig'
          description: configs is a list of a clients custom queue configurations.
    api.v0alpha.ListReassignmentHuntGroupsReq:
      type: object
      properties:
        huntGroupSid:
          type: string
    api.v0alpha.ListReassignmentHuntGroupsRes:
      type: object
      properties:
        huntGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SimpleHuntGroup'
    api.v0alpha.ListRegionalOrganizationsRequest:
      type: object
      properties: {}
    api.v0alpha.ListRegionalOrganizationsResponse:
      type: object
      properties:
        organizationDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.OrganizationDescription'
    api.v0alpha.ListRuleSetsReq:
      type: object
      properties:
        includeDisabled:
          type: boolean
    api.v0alpha.ListRuleSetsRes:
      type: object
      properties:
        ruleSetId:
          type: string
        name:
          type: string
        ruleCount:
          type: string
        disabled:
          type: boolean
    api.v0alpha.ListScheduleRulesRequest:
      type: object
      properties: {}
      description: Request message for listing schedule rules (ListScheduleRules).
    api.v0alpha.ListScheduleRulesResult:
      type: object
      properties:
        scheduleRules:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ScheduleRule'
      description: Response message for listing schedule rules (ListScheduleRules).
    api.v0alpha.ListScheduledCallbacksWithDetailsBySkillsReq:
      type: object
      properties:
        serviceId:
          type: string
          description: the service id that the callback will belong to.
        skills:
          type: array
          items:
            type: string
          description: list of agent_skills (skill names) that will be used to find
            a matching callback.
      description: ListScheduledCallbacksWithDetailsBySkillsReq requests all the scheduled
        callbacks by a filter of skills.
    api.v0alpha.ListScheduledCallbacksWithDetailsReq:
      type: object
      properties:
        phoneNumber:
          type: string
        callerId:
          type: string
        fromStartTime:
          type: string
          format: date-time
        toStartTime:
          type: string
          format: date-time
        skills:
          type: array
          items:
            type: string
      description: ListScheduledCallbacksWithDetailsReq each of the following fields
        is applied as a filter phone_number, caller_id, or skills. The fields from_start_time
        and to_start_time need to be provided together.
    api.v0alpha.ListScheduledCallbacksWithDetailsRes:
      type: object
      properties:
        callbacks:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ScheduledCallbackWithDetails'
    api.v0alpha.ListSignaturesReq:
      type: object
      properties: {}
      description: ListSignaturesReq - request to list message signatures
    api.v0alpha.ListSignaturesRes:
      type: object
      properties:
        signatures:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Signature'
          description: the message signatures created by the organization
      description: ListSignaturesRes - result of listing message signatures
    api.v0alpha.ListSkillsForCurrentAgentReq:
      type: object
      properties: {}
      description: Request message for the ListSkillsForCurrentAgent RPC.
    api.v0alpha.ListSkillsForCurrentAgentRes:
      type: object
      properties:
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentSkill'
          description: The returned list of skills belonging to the current agent.
      description: Response message for the ListSkillsForCurrentAgent RPC.
    api.v0alpha.ListSkillsReq:
      type: object
      properties:
        typeFilters:
          type: array
          items:
            type: integer
            format: enum
          description: "Filters the response to only contain skills with the\n given
            types. Leaving this field empty will return\n all skill types. The PBX
            SkillType is not\n supported and will cause an error if present.\n Should
            use AGENT_PBX or HUNT_GROUP_PBX."
    api.v0alpha.ListSkillsRes:
      type: object
      properties:
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.P3Skill'
    api.v0alpha.ListSmsConversationAssignedAgentsReq:
      type: object
      properties:
        smsConversationId:
          type: string
    api.v0alpha.ListSmsConversationAssignedAgentsRes:
      type: object
      properties:
        smsConversationAssignedAgents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsConversationAssignedAgent'
    api.v0alpha.ListSmsConversationAuditsReq:
      type: object
      properties:
        smsConversationId:
          type: string
    api.v0alpha.ListSmsConversationAuditsRes:
      type: object
      properties:
        smsConversationAudits:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsConversationAudit'
    api.v0alpha.ListSmsConversationsReq:
      type: object
      properties: {}
    api.v0alpha.ListSmsConversationsRes:
      type: object
      properties:
        smsConversations:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsConversation'
    api.v0alpha.ListSmsGroupByFiltersReq:
      type: object
      properties:
        searchFrom:
          type: string
          format: date-time
        searchTo:
          type: string
          format: date-time
        status:
          type: string
        name:
          type: string
    api.v0alpha.ListSmsGroupByFiltersRes:
      type: object
      properties:
        smsGroupWithIntents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsGroupWithIntents'
    api.v0alpha.ListSmsGroupsByGroupSidsReq:
      type: object
      properties:
        smsGroupSidsArr:
          type: array
          items:
            type: string
    api.v0alpha.ListSmsGroupsByGroupSidsRes:
      type: object
      properties:
        smsGroupWithIntents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsGroupWithIntents'
    api.v0alpha.ListSmsIntentTemplatesReq:
      type: object
      properties: {}
    api.v0alpha.ListSmsIntentTemplatesRes:
      type: object
      properties:
        smsIntentTemplate:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsIntentTemplate'
    api.v0alpha.ListSmsNumbersReq:
      type: object
      properties: {}
      description: Request message for listing sms numbers
    api.v0alpha.ListSmsNumbersRes:
      type: object
      properties:
        smsNumbers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SmsNumber'
          description: list of sms numbers
      description: Response message for listing sms numbers
    api.v0alpha.ListSmsSourceNumbersReq:
      type: object
      properties: {}
    api.v0alpha.ListSmsSourceNumbersRes:
      type: object
      properties:
        smsNumbers:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsNumbers'
    api.v0alpha.ListSmsTasksByGroupSidsReq:
      type: object
      properties:
        smsGroupSidsArr:
          type: array
          items:
            type: string
    api.v0alpha.ListSmsTasksByGroupSidsRes:
      type: object
      properties:
        smsTaskInfoWithReply:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsTaskInfoWithReply'
    api.v0alpha.ListSmsTasksWithDetailedStatusReq:
      type: object
      properties:
        smsGroupSid:
          type: string
    api.v0alpha.ListSmsTasksWithDetailedStatusRes:
      type: object
      properties:
        smsTaskInfoWithReply:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsTaskInfoWithReply'
    api.v0alpha.ListSmsTemplatesReq:
      type: object
      properties: {}
    api.v0alpha.ListSmsTemplatesRes:
      type: object
      properties:
        smsTemplateWithIntents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsTemplateWithIntents'
    api.v0alpha.ListTableTemplatePropertiesReq:
      type: object
      properties: {}
      description: Request for ListTableTemplateProperties
    api.v0alpha.ListTableTemplatePropertiesRes:
      type: object
      properties:
        agentTableTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.TableTemplateProperty'
        queueTableTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.TableTemplateProperty'
      description: Response for ListTableTemplateProperties
    api.v0alpha.ListTasksReq:
      type: object
      properties:
        fieldMask:
          type: string
          description: field mask for selecting optional details
          format: field-mask
        byCampaign:
          $ref: '#/components/schemas/api.v0alpha.ListTasksReq_ByCampaign'
      description: ListTasksReq - request to list tasks
    api.v0alpha.ListTasksReq_ByCampaign:
      type: object
      properties:
        campaignSid:
          type: string
          description: Required. The campaign identifier.
        pageSize:
          type: integer
          description: "Optional. The number of tasks to include in a single response.
            When  not provided\n this defaults to 100."
          format: uint32
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
      description: ByCampaign - retrieve tasks for the specified campaign
    api.v0alpha.ListTasksRes:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of tasks, or empty if there
            are\n no more tasks in the list."
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniTask'
          description: The list of tasks.
      description: ListTasksRes - result of listing tasks
    api.v0alpha.ListTtsVoicesReq:
      type: object
      properties: {}
      description: Request message for the ListTtsVoices RPC.
    api.v0alpha.ListTtsVoicesRes:
      type: object
      properties:
        voices:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.TtsVoice'
      description: Response message for the ListTtsVoices RPC.
    api.v0alpha.ListUnassignedScenariosReq:
      type: object
      properties:
        cplRuleSetId:
          type: string
    api.v0alpha.ListUnassignedScenariosRes:
      type: object
      properties:
        scenarios:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Scenario'
    api.v0alpha.ListUserDescriptionsRequest:
      type: object
      properties:
        regionId:
          type: string
          description: "DEPRECATED. region_id was previously optional,\n if region_id
            needs to be provided, use AdminListUserDescriptions rpc"
        orgIdFilter:
          type: string
          description: "DEPRECATED. org_id_filter was previously optional,\n if org_id_filter
            needs to be provided, use AdminListUserDescriptions rpc"
    api.v0alpha.ListUserDescriptionsResponse:
      type: object
      properties:
        userDescriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.UserDescription'
    api.v0alpha.ListUserSkillsReq:
      type: object
      properties:
        typeFilters:
          type: array
          items:
            type: integer
            format: enum
          description: "Filters the response to only contain skills with the\n given
            types. Leaving this field empty will return\n all skill types. The PBX
            SkillType is not\n supported and will cause an error if present.\n Should
            use AGENT_PBX or HUNT_GROUP_PBX."
      description: request to list user skills
    api.v0alpha.ListUserSkillsRes:
      type: object
      properties:
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.OmniSkill'
      description: respose to list users skills
    api.v0alpha.ListUserSubscriptionsRequest:
      type: object
      properties:
        userId:
          type: string
          description: Required.
      description: Request for listing subscriptions for a user.
    api.v0alpha.ListUserSubscriptionsResponse:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.UserSubscription'
      description: "Response for listing subscriptions for a user.\n Contains a user
        subscriptions (plural) object."
    api.v0alpha.ListVerifiedEmailsReq:
      type: object
      properties: {}
      description: request to list verified email
    api.v0alpha.ListVerifiedEmailsRes:
      type: object
      properties:
        verifiedEmails:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.VerifiedEmail'
          description: list of verified emails
      description: response to list verified email
    api.v0alpha.ListVersionsReq:
      type: object
      properties:
        locale:
          type: string
          description: locale
      description: request to list all the learning pages in different versions
    api.v0alpha.ListVersionsRes:
      type: object
      properties:
        versions:
          type: array
          items:
            type: string
          description: all the existing versions
        versionDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.VersionDetails'
          description: all the details about versions
      description: response to list all the learning pages in different versions
    api.v0alpha.ListVisualizationsLegacyReq:
      type: object
      properties: {}
    api.v0alpha.ListVisualizationsLegacyRes:
      type: object
      properties:
        descriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.VizDescription'
    api.v0alpha.ListWebLinkTemplatesRequest:
      type: object
      properties: {}
    api.v0alpha.ListWebLinkTemplatesResponse:
      type: object
      properties:
        webLinkTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.WebLinkTemplate'
    api.v0alpha.ListWhatsAppNumbersReq:
      type: object
      properties: {}
      description: Request message for listing whatsapp numbers
    api.v0alpha.ListWhatsAppNumbersRes:
      type: object
      properties:
        whatsappNumbers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.WhatsAppNumber'
          description: list of whatsapp numbers
      description: Response message for listing whatsapp numbers
    api.v0alpha.ListWhiteListPhoneBooksReq:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: "Entry type will be 'Hunt Group' if this field is set.\n Otherwise
            the entry type will be 'Client'."
        includeNullPhoneNumberTypes:
          type: boolean
          description: Whether to include the phone number types
        orderBys:
          type: array
          items:
            type: integer
            format: enum
          description: The list of ways to order phone books.
      description: Request message for the ListWhiteListPhoneBooks RPC
    api.v0alpha.ListWhiteListPhoneBooksRes:
      type: object
      properties:
        whiteListPhoneBooks:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PhoneBook'
          description: The list of phone books
      description: Response message for the ListWhiteListPhoneBooks RPC
    api.v0alpha.LogEvent:
      type: object
      properties:
        traceId:
          type: string
        sessionId:
          type: string
          description: the browsers session id
        message:
          type: string
        location:
          type: string
          description: the browsers current uri
        stackTrace:
          type: string
        timestamp:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
        severity:
          type: integer
          format: enum
      description: log events details to be sent
    api.v0alpha.LoginEvent:
      type: object
      properties:
        loginLogSid:
          type: string
        userName:
          type: string
        originationIp:
          type: string
        loginSuccess:
          type: boolean
        strike:
          type: boolean
        notes:
          type: string
        dateAttempted:
          type: string
          format: date-time
    api.v0alpha.LookupProcess:
      type: object
      properties:
        fieldNames:
          type: array
          items:
            type: string
          description: names of the fields that will be used in the lookup
        compl:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.LookupProcess_ComplProcess'
          description: lookup from compliance
        list:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.LookupProcess_ListLookup'
          description: lookup from another version of another list
        url:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.LookupProcess_UrlLookup'
          description: lookup against the records at the url
      description: USE INSTEAD of ComplProcess
    api.v0alpha.LookupProcess_ComplProcess:
      type: object
      properties:
        countryCode:
          type: string
    api.v0alpha.LookupProcess_ListLookup:
      type: object
      properties:
        orgId:
          type: string
        regionId:
          type: string
        elementId:
          type: string
        version:
          type: string
          description: latest list will be used by default
    api.v0alpha.LookupProcess_UrlLookup:
      type: object
      properties:
        url:
          type: string
        fileTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.FileTemplate'
          description: "the template file used to convert records to proto\n if left
            blank it assumes already converted format"
    api.v0alpha.MailMergeData:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        scheduledCallbackId:
          type: string
    api.v0alpha.MakeAdoptableReq:
      type: object
      properties: {}
    api.v0alpha.MakeAdoptableRes:
      type: object
      properties: {}
    api.v0alpha.MamAgentResponse:
      type: object
      properties:
        status:
          type: integer
          format: enum
        agentResponseTime:
          type: string
          format: date-time
        agentName:
          type: string
    api.v0alpha.ManagerAgentGetConnectedPartyReply:
      type: object
      properties:
        callId:
          type: string
        callType:
          type: integer
          format: enum
    api.v0alpha.ManagerAgentGetConnectedPartyRequest:
      type: object
      properties:
        sessionSid:
          type: string
        userId:
          type: string
    api.v0alpha.ManagerListMessagesReq:
      type: object
      properties:
        timestamp:
          type: string
          description: TimeStamp
          format: date-time
        userId:
          type: string
          description: User_id
        live:
          type: boolean
          description: live flag
        channelType:
          type: integer
          description: channel type
          format: enum
        byConversationSid:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ManagerListMessagesReq_ByConversationSid'
          description: select messages by the given conversation sid
        byTaskSid:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ManagerListMessagesReq_ByTaskSid'
          description: select message by the given task sid
    api.v0alpha.ManagerListMessagesReq_ByConversationSid:
      type: object
      properties:
        conversationSid:
          type: string
          description: the conversation identifier
      description: filter used to get messages by conversation sid
    api.v0alpha.ManagerListMessagesReq_ByTaskSid:
      type: object
      properties:
        taskSid:
          type: string
          description: the task identifier
      description: filter used to get messages by task sid
    api.v0alpha.ManualApprovalSettings:
      type: object
      properties:
        allowed:
          type: boolean
        confirm:
          type: boolean
        smsAllowed:
          type: boolean
        smsNumberConfirmation:
          type: boolean
        disableRejectOptionForApprovers:
          type: boolean
          description: Control whether the reject option is available to the approvers.
    api.v0alpha.ManualDialSettings:
      type: object
      properties:
        enabled:
          type: boolean
        showOutboundPhoneBook:
          type: boolean
        showCallerIdPhoneBook:
          type: boolean
        hasCustomCallerId:
          type: boolean
        defaultCallerId:
          type: string
        defaultCountrySid:
          type: string
        showCountrySelector:
          type: boolean
        timezoneRestrictions:
          type: boolean
        scrubCellPhones:
          type: boolean
        callRecording:
          type: boolean
        agentOverrideCell:
          type: boolean
        agentOverrideCcr:
          type: boolean
        agentOverrideDncl:
          type: boolean
        agentOverrideTimezone:
          type: boolean
        useWhiteList:
          type: boolean
        useRandomCallerId:
          type: boolean
        randomCallerIdBucket:
          type: string
        defaultCallerIdCountrySid:
          type: string
        displayCallerIdCountrySelect:
          type: boolean
        useCallerIdBucket:
          type: boolean
        agentOverrideNaturalCompliance:
          type: boolean
        naturalComplianceRuleSetName:
          type: string
        complianceMetadata:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ComplianceMetadata'
        enableMetadata:
          type: boolean
        useTimezoneValidationZip:
          type: integer
          format: enum
        enableRejectOptionForApprovers:
          type: boolean
          description: "Control whether the reject option is available to the approvers.\n
            Please use disable_reject_option_for_approvers under GeneralSettings."
        enableSipAddress:
          type: boolean
        maskManualDialCallerId:
          type: boolean
        enableManualDialDataDip:
          type: string
          description: Manual Dial Data Dip Settings
        manualDialDataDipConfig:
          type: string
          description: Data dip url id
        manualDialDataDipResultHandling:
          type: integer
          description: Configuration on which action to take on data dip failure
          format: enum
        dataDipManualDialIntegration:
          type: object
          additionalProperties:
            type: string
          description: Configuration for which Manual Dial Data Dip Parameters to
            replace
        dataDipManualDialIntegrationHandling:
          type: integer
          description: Configuration for which action to take on data dip parameter
            replacement failure
          format: enum
    api.v0alpha.ManualDialStartReq:
      type: object
      properties:
        simpleCallData:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
        huntGroupSid:
          type: string
        agentSessionSid:
          type: string
        bucketId:
          type: string
        bucketRegionData:
          type: string
    api.v0alpha.ManualDialStartRes:
      type: object
      properties: {}
    api.v0alpha.ManualUserEmailVerificationByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: Required. The ID of the user.
        orgId:
          type: string
          description: The ID of the org the user belongs to.
      description: Request for the ManualUserEmailVerificationByOrgId RPC.
    api.v0alpha.ManualUserEmailVerificationByOrgIdResponse:
      type: object
      properties: {}
      description: Response for the ManualUserEmailVerificationByOrgId RPC.
    api.v0alpha.ManualUserEmailVerificationRequest:
      type: object
      properties:
        userId:
          type: string
          description: Required. The ID of the user.
        orgId:
          type: string
          description: "DEPRECATED. the org_id was previously optional,\n if org_id
            needs to be provided, use ManualUserEmailVerificationByOrgId rpc"
      description: Request for the ManualUserEmailVerification RPC.
    api.v0alpha.ManualUserEmailVerificationResponse:
      type: object
      properties: {}
      description: Response for the ManualUserEmailVerification RPC.
    api.v0alpha.Merge_FieldOrVal:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/api.v0alpha.FieldIndex'
        value:
          type: string
    api.v0alpha.MigrateP3UserRequest:
      type: object
      properties:
        agentSid:
          type: string
          description: Optional agent_sid or login_sid (must have one)
        loginSid:
          type: string
        clientSid:
          type: string
        password:
          type: string
          description: New password for migrated user
    api.v0alpha.MigrateP3UserResponse:
      type: object
      properties: {}
    api.v0alpha.MultiAgentHuntGroupAssignmentReq:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
        huntGroupSid:
          type: string
    api.v0alpha.MultiAgentHuntGroupAssignmentRes:
      type: object
      properties: {}
    api.v0alpha.MultiAgentSkillAssignmentReq:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SkillUpdate'
      description: Request message for the MultiAgentSkillAssignment RPC.
    api.v0alpha.MultiAgentSkillAssignmentRes:
      type: object
      properties: {}
      description: Response message for the MultiAgentSkillAssignment RPC.
    api.v0alpha.MultiAgentSkillUnassignmentReq:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
        skillSids:
          type: array
          items:
            type: string
      description: Response message for the MultiAgentSkillUnassignment RPC.
    api.v0alpha.MultiAgentSkillUnassignmentRes:
      type: object
      properties: {}
      description: Response message for the MultiAgentSkillUnassignment RPC.
    api.v0alpha.MultiClientSummary:
      type: object
      properties:
        adoptable:
          type: boolean
        parents:
          $ref: '#/components/schemas/api.v0alpha.Relations'
        children:
          $ref: '#/components/schemas/api.v0alpha.Relations'
        proStatus:
          type: boolean
    api.v0alpha.NameAndId:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    api.v0alpha.Nil:
      type: object
      properties: {}
    api.v0alpha.OmniExchange:
      type: object
      properties:
        exchangeId:
          type: string
        name:
          type: string
    api.v0alpha.OmniExchangeProcess:
      type: object
      properties:
        projectId:
          type: string
          description: project_id is the id for the Omni project
        campaignId:
          type: string
          description: campaign_id is the id for the Omni campaign
        timeZone:
          type: string
        days:
          type: string
          description: the number of days into the future, can be 0
        hour:
          type: string
          description: hour of the day, 0-23
        minute:
          type: string
          description: minute of the hour, 0-59
      description: OmniExchangeProcess allows omni to import contacts using LMS file
        upload
    api.v0alpha.OmniSkill:
      type: object
      properties:
        region:
          type: string
          description: region
        p3Id:
          type: string
          description: p3 id
        name:
          type: string
          description: skill name
        description:
          type: string
          description: skill description
        type:
          type: integer
          format: enum
      description: skill details
    api.v0alpha.OrgBillingSettings:
      type: object
      properties:
        orgId:
          type: string
        voiceAnalyticsPricePerHour:
          type: number
          format: float
        analyticsPricePerDoc:
          type: number
          format: float
        default:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.PhoneBillingRates'
          description: "If default is not nil it will be used for any region\n that
            is not presesnt in the region_overrides map.\n otherwise the system defaults
            will be used for missing\n regions in the override map."
        countryRegionOverrides:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v0alpha.BillingRegionMap'
          description: "The given billing rates will be used for the region instead\n
            of the system defaults (or the org default if default is not nil).\n Key:
            api.commons.Country as int32"
        agentRates:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AgentBillingRates'
          description: "If agent_rates is nil the AgentBillingRates fields from\n
            the system default will be used."
        emailPricePerMessage:
          type: number
          description: "If email_price_per_message is nil the system default value\n
            will be used."
          format: float
    api.v0alpha.Organization:
      type: object
      properties:
        isManualOnlyAccount:
          type: boolean
        backofficeTheme:
          type: integer
          description: "Requried. Must match one of the timezones returned by\n api.v0alpha.GetTimezones."
          format: enum
        contractNumber:
          type: string
        CRMID:
          type: string
        timeZoneEnum:
          type: integer
          format: enum
        name:
          type: string
          description: Required
      description: "The message that serves as a datastore entity for the\n Organization
        table."
    api.v0alpha.OrganizationDescription:
      type: object
      properties:
        billingId:
          type: string
        addDate:
          type: string
          format: date-time
        clientSid:
          type: string
        name:
          type: string
        orgId:
          type: string
        regionId:
          type: string
        lastScheduledDate:
          type: string
          description: "last_scheduled_date has three different states.\n 1. the field
            is a valid timestamp\n 2. the field is a zero value timestamp. This\n
            \   means the organization is in the current region\n    but does not
            have a last scheduled date.\n 3. the field is nil. This means the organization\n
            \   does not belong to the current region."
          format: date-time
    api.v0alpha.OrganizationPreferences:
      type: object
      properties:
        allowedCountries:
          type: array
          items:
            type: integer
            format: enum
        defaultCountry:
          type: integer
          format: enum
        timeZone:
          type: integer
          format: enum
        displayLanguage:
          type: integer
          format: enum
        localePreferences:
          $ref: '#/components/schemas/api.commons.LocalePreferences'
      description: Wrapper OrganizationPreferences object for get response and update
        request
    api.v0alpha.P3ExportProcess:
      type: object
      properties:
        header:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ExportHeader'
          description: Specifies which fields to export
        contactListPrefix:
          type: string
        username:
          type: string
          description: P3 API Username
        password:
          type: string
          description: P3 API Password
        accessToken:
          type: string
          description: user access token for authenticating with p3 without username
            password combo
        country:
          type: string
          description: Call List Country
        dupePolicy:
          type: integer
          description: "Specifies how to handle duplicate phone numbers.\n 'Keep and
            Discard' = keep the record, discard the number.\n 'Allow' = keep the record
            & number.\n 'Discard' = discard both.\n 'Duplicate List' = create duplicate
            list\n Default = 'Keep and Discard'"
          format: enum
        absentPolicy:
          type: integer
          description: Specifies how records without numbers should be handled.
          format: enum
        templateId:
          type: integer
          description: / The number of the import template describing this import.
          format: int32
        defaultAreaCode:
          type: integer
          description: Specifies a default area code to use with file
          format: int32
        scheduleTemplateNumber:
          type: integer
          description: The number of the template describing the campaign to be sent.
          format: int32
        description:
          type: string
          description: "`description` will be deprecated in\n favor of `file_pattern`,\n
            currently it is ignored"
        runType:
          type: integer
          description: To Disable or run as test
          format: enum
        filePattern:
          allOf:
          - $ref: '#/components/schemas/api.commons.FilePattern'
          description: "`file_pattern` is what sets the description\n we are using
            api.commons.FilePattern so that it\n can change depending on the day.\n
            The directory field in this `file_pattern`\n should not be used (it will
            be ignored)"
        filename:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConstructedFilename'
          description: what to name the file
        callerIds:
          type: array
          items:
            type: string
          description: "Advanced options\n Allows ids to be specificied in place of
            the ones\n already specified into the schedule template"
        cellScrub:
          type: boolean
          description: Scrub known cell numbers from call list
        startTime:
          type: string
          description: Campaign start time
          format: date-time
        endTime:
          type: string
          description: Campaign end time
          format: date-time
        dialOrder:
          type: integer
          description: FIRST, NATURAL, or CUSTOM. Will default to FIRST
          format: enum
        emailField:
          type: string
          description: Identifies the Email column in the contact list.
        emailFrom:
          type: string
          description: Email address to send campaign from.
        followTheSun:
          type: boolean
          description: "Dial numbers from east to west.\n 'true' = numbers will be
            dialed from east to west.\n 'false' = numbers will be dialed in default
            order.\n Default = 'false'"
        messagesPerMinute:
          type: integer
          description: Messages Per Minute
          format: int32
        randomizeContacts:
          type: boolean
          description: Allow contacts to be inserted in random order.
        scheduleAsPaused:
          type: boolean
          description: Specifies if to schedule as paused.
        scheduleRule:
          type: string
          description: Allows selection of a schedule rule (input by name)
        shaDigestOverride:
          type: boolean
          description: "TCN P3 will attempt to very file uniqueness over a 20 hour
            period.\n If duplicates are found the duplicates are failed.\n 'true'
            = do not attempt to verify file uniqueness.\n 'false' = attempt to verify
            file uniqueness.\n Default = 'false'"
        smsField:
          type: string
          description: Identifies the Cell Phone column in the contact list.
        smsSourceNumber:
          type: string
          description: Number to to send campaign from.
        timezoneOverride:
          type: boolean
          description: "Allow calls after hours.\n 'true' = calls may go out after
            9 P.M. and before 8 A.M.\n 'false = calls will not go out after 9 P.M.
            and before 8 A.M.\n Default = 'false'"
        zipScrub:
          type: boolean
          description: "Specifies how to handle zip code scrubbing.\n If client preference
            is set to use zip code scrub, that value will be default.\n 'true' = will
            scrub based on the client preference for zip code fields.\n 'false' =
            will not scrub based on zip code.\n Default = 'false'"
        completionThreshold:
          type: integer
          description: Specifies the completion percentage at which to execute campaign
            linking.
          format: int32
        timezone:
          type: string
          description: "TIMEZONE must exist in the TZ database:\n http://en.wikipedia.org/wiki/List_of_tz_database_time_zones"
        complianceRule:
          type: string
          description: "Specifies the Natural Language Compliance Rule\n to be used.
            Empty will not use NLC"
        fieldDelimiter:
          type: string
          description: what separates a field from another.  In csv this is ','
        recordDelimiter:
          type: string
          description: what separates a record from another. In csv this is '\n'
        quoteFields:
          type: boolean
          description: Wrap fields with `"`
        useCustomDateFormat:
          type: boolean
          description: "Specifies whether to export using the date\n format defined
            by the field in the file\n template or use the default"
        fileFormat:
          type: integer
          description: "Specifies the export filetype\n (CSV, CUSTOM, TSV, etc.)\n
            If the export filetype is anything other than custom\n `field_delimiter`,
            `record_delimiter` and `quote_fields`\n will be ignored"
          format: enum
        daysIntoFuture:
          type: string
          description: "The fields `days_into_future`, `start_hour`\n and `end_hour`\n
            will override `start_time`, `end_time`\n and should be used over `start_time`,
            and `end_time`\n Specifies how many days into the future to schedule\n
            0 <= days < 7, 0 = today, 1 = tomorrow, etc."
        startHour:
          type: string
          description: "Specifies the time to start\n in format \"15:04\""
        endHour:
          type: string
          description: "Specifies the time to end\n in format \"15:04\""
        scheduleByTimezone:
          type: boolean
          description: will schedule the campaign by timezone
        shiftPhoneFields:
          type: boolean
          description: "If true, it will try to bunch all phone number\n fields to
            the left."
        doCampaignLinking:
          type: boolean
          description: campaign linking
        campaignLinkId:
          type: string
        stopTrigger:
          type: string
    api.v0alpha.P3PermissionGroup:
      type: object
      properties:
        permissionGroupId:
          type: string
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            type: integer
            format: enum
        permissionGroupSid:
          type: string
          description: return sid for visibility on skunk permission group
    api.v0alpha.P3Skill:
      type: object
      properties:
        region:
          type: string
        p3Id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: integer
          format: enum
    api.v0alpha.PBXExtension:
      type: object
      properties:
        pbxExtensionSid:
          type: string
        pbxExtension:
          type: string
        joinSid:
          type: string
        joinType:
          type: string
        emailSubject:
          type: string
        emailBody:
          type: string
        emailAddresses:
          type: string
        agentAccess:
          type: boolean
    api.v0alpha.PaginatedHttpRequest:
      type: object
      properties:
        iterationRequest:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.HttpReq'
          description: "an http request that must return records.\n the iteration_request
            will have access to the special template variable\n {{$i}} which will
            increment by 1 every time the request is made."
        startIndex:
          type: string
          description: the starting value of i.
        endForAny:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.PaginationTerminator'
          description: terminates if *any* of the terminators return true
        endForAll:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.PaginationTerminator'
          description: terminates if all fo the terminators return true
        requestNotReady:
          allOf:
          - $ref: '#/components/schemas/api.commons.PaginationTerminator'
          description: "if set, and if the PaginationTerminator returns true\n the
            response is considered not done.\n No rows are expected to be imported
            from this response,\n and the request will retry."
        notReadyWaitSeconds:
          type: string
          description: how many seconds we will wait before retrying if request_not_ready
            returns true
        notReadyRedoPreliminary:
          type: boolean
          description: whether to retry the preliminary when we get a not ready state
        notReadySkipIteration:
          type: boolean
          description: if set we do not advance {{$i}} to the next value if request_not_ready
            returns true
        processStopPage:
          type: boolean
          description: whether the end page has records on it
      description: "this request is expected to return records that can be parsed
        by\n the file template each time it is called.\n if no termination case is
        specified, (end_for_any, and end_for_all are empty)\n then we terminate after
        the first call."
    api.v0alpha.PaginatedSearchRes:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.CollectionEntry'
          description: A page of results
        total:
          type: string
          description: Specifies the total number of results
        moreResults:
          type: boolean
          description: Whether or not there is another page of results
        lastId:
          type: string
          description: The last entry ID in the most recently grabbed page of results
    api.v0alpha.PanelSource:
      type: object
      properties:
        insightId:
          type: string
          description: Used for new BI insights in operator
        legacyInsightId:
          type: string
          description: Used for old insights in BI
        insightResourceId:
          type: string
          description: Used for BI Insights in operator
        outputConfigurationResourceId:
          type: string
          description: Used for selecting which output configuration to display in
            the dashboard
      description: PanelSource is used per APP and each message in the oneOf is used
        to determine what APP to call
    api.v0alpha.ParseReq:
      type: object
      properties:
        elementId:
          type: string
          description: "if empty, we will use GetAvailableFields instead of\n ListAvailableFieldsByElementId"
        sessionId:
          type: string
          description: if empty, a new session will be returned with the response
        expression:
          type: string
          description: current expression string, can be empty
    api.v0alpha.ParseRes:
      type: object
      properties:
        sessionId:
          type: string
          description: the session_id should be returned on future requests to make
            things faster
        expression:
          type: string
        nextTokens:
          type: array
          items:
            type: string
          description: a list of valid tokens we can use at this point
        error:
          type: string
          description: if not a valid expression, error should have the message why
        complete:
          type: boolean
          description: whether the result_expression is complete
        process:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.Process'
          description: "if complete is true, process will have a completed Process
            defined.\n if complete is true, you will be able to send process to lms_api
            through\n CreatePipelineElement."
    api.v0alpha.PauseCampaignReq:
      type: object
      properties:
        campaignSid:
          type: string
          description: the campaign identifier
        channelType:
          type: integer
          description: the campaign's channel type
          format: enum
        campaignDirection:
          type: integer
          description: the campaign direction
          format: enum
      description: Request to pause a campaign
    api.v0alpha.PauseCampaignRes:
      type: object
      properties:
        referenceId:
          type: string
          description: send back ghost notifier referenceID
      description: Response to pause a campaign
    api.v0alpha.PauseCode:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        codes:
          type: array
          items:
            type: string
        xmlClientPropertySid:
          type: string
      description: Entity message for the ListAgentPauseCodes, CreateAgentPauseCode,
        and UpdateAgentPauseCode RPCs.
    api.v0alpha.PauseSettings:
      type: object
      properties:
        allowAgentPause:
          type: boolean
        allowAgentPauseReset:
          type: boolean
        useAgentPauseCodes:
          type: boolean
        defaultAgentPauseCode:
          type: string
        recordingPauseConfirmation:
          type: boolean
          description: recording pause confirmationl -
    api.v0alpha.PaymentLinkEnrichment:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
        paymentLinkConfigId:
          type: string
        discardOnMissingFields:
          type: boolean
          description: "if true, we will not generate a link for lms records that
            to not contain *all* of the fields.\n instead we will move that record
            to the discards"
        keyMap:
          type: object
          additionalProperties:
            type: string
          description: lms field names as keys, mapped to what they should be called
            in the portal
        portalId:
          type: string
          description: the portal that these links will belong to.
    api.v0alpha.PbxRingStrategy_Config:
      type: object
      properties:
        ringAll:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
          description: ring all available agents.
        highestScoreOnly:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
          description: ring the agent with the highest score only.
        random:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.QueueConfig_Optionless'
          description: ring a randomly selected available agent.
        agentScore:
          type: string
          description: "ring each available agent sequentially ordered by skill score.\n
            the value if the field is the ring time out time in seconds."
        agentScoreMemory:
          type: string
          description: "ring highest ranked agent, then the two highest, and so on.\n
            the value if the field is the ring time out time in seconds."
    api.v0alpha.PeekListReq:
      type: object
      properties:
        elementId:
          type: string
        version:
          type: string
        pageSize:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        process:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.Process'
          description: "process to run before we return the records back\n currently
            only expecting this to be a simple filter process"
        peekAtDiscards:
          type: boolean
          description: if true, we will fetch the discards chunk to look at instead
            of the data chunk
    api.v0alpha.PeekListRes:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.RecordProto'
        metrics:
          $ref: '#/components/schemas/api.v0alpha.ListMetrics'
    api.v0alpha.PeerAgentWithCallerReply:
      type: object
      properties: {}
    api.v0alpha.PeerAgentWithCallerRequest:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        sessionSid:
          type: string
    api.v0alpha.PermissionGroup:
      type: object
      properties:
        id:
          type: string
          description: Unique id for this permission group.
        name:
          type: string
          description: Name to identify by.
        description:
          type: string
          description: Brief description of this group of permissions.
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: List of permissions in this group.
        readOnly:
          type: boolean
          description: Restricts users from modifying this group.
      description: Defines a group of permissions.
    api.v0alpha.Phone:
      type: object
      properties:
        rawValue:
          type: string
        fullNumber:
          type: string
        invalid:
          type: boolean
    api.v0alpha.PhoneBillingRates:
      type: object
      properties:
        billingIncrementSeconds:
          type: string
          description: ppi = price per increment
        inboundPpi:
          type: number
          format: double
        smsPricePerAttempt:
          type: number
          format: double
        vocalDirectPricePerMessage:
          type: number
          format: double
        seconds:
          $ref: '#/components/schemas/api.v0alpha.PhoneBillingRates_Seconds'
        attempts:
          $ref: '#/components/schemas/api.v0alpha.PhoneBillingRates_Attempts'
        connectedCalls:
          $ref: '#/components/schemas/api.v0alpha.PhoneBillingRates_ConnectedCalls'
    api.v0alpha.PhoneBillingRates_Attempts:
      type: object
      properties:
        ppa:
          type: number
          description: ppa = price per attempt
          format: double
        linkbackPpa:
          type: number
          format: double
        agentLinkcallPpa:
          type: number
          format: double
    api.v0alpha.PhoneBillingRates_ConnectedCalls:
      type: object
      properties:
        ppc:
          type: number
          description: ppc = price per connect
          format: double
        linkbackPpc:
          type: number
          format: double
        agentLinkcallPpc:
          type: number
          format: double
    api.v0alpha.PhoneBillingRates_Seconds:
      type: object
      properties:
        ppi:
          type: number
          description: "all billed_increment fields must be greater than 0.\n if any
            of the wrapper fields are nil there is no limit."
          format: double
        linkbackPpi:
          type: number
          format: double
        agentLinkcallPpi:
          type: number
          format: double
        minimumBilledIncrements:
          type: string
        maximumBilledIncrements:
          type: string
        minimumLinkbackBilledIncrements:
          type: string
        maximumLinkbackBilledIncrements:
          type: string
        machineHangupIncrementsBilled:
          type: string
        humanHangupIncrementsBilled:
          type: string
    api.v0alpha.PhoneBook:
      type: object
      properties:
        entryType:
          type: string
          description: The entry type, either 'Hunt Group' or 'Client"
        entryName:
          type: string
          description: The entry name
        huntGroupSid:
          type: string
          description: "Entry type will be 'Hunt Group' if this field is set.\n Otherwise
            the entry type will be 'Client'."
        phoneNumber:
          type: string
          description: The phone number
        phoneNumberType:
          type: string
          description: "The phone number type determines where this phone book is
            used.\n It can be any combination of Caller ID, Outbound, and Transfer,
            separated by a colon.\n For example -> Caller ID:Outbound:Transfer would
            be all three."
        phoneNumberHidden:
          type: boolean
          description: Whether the phone number is displayed to the agent or not.
            The entry name will always be displayed.
      description: A phone book
    api.v0alpha.PhoneBookEntry:
      type: object
      properties:
        phoneBookSid:
          type: string
          description: The sid that matches this phone book entry to a specific phone
            book.
        entryName:
          type: string
          description: The entry name
        standard:
          $ref: '#/components/schemas/api.v0alpha.PhoneBookStandardNumber'
        sipUri:
          $ref: '#/components/schemas/api.v0alpha.PhoneBookSIPURI'
        phoneNumberHidden:
          type: boolean
          description: Whether the phone number is displayed to the agent or not.
            The entry name will always be displayed.
      description: An entry that is associted with a phone book.
    api.v0alpha.PhoneBookSIPURI:
      type: object
      properties:
        sipUriLeft:
          type: string
          description: The part of the SIP URI before the @ symbol
        sipUriRight:
          type: string
          description: The part of the SIP URI after the @ symbol
        sipTypes:
          type: array
          items:
            type: integer
            format: enum
          description: "The sip types determines where this phone book is used.\n
            It can be Outbound, Transfer, or both separated by a colon.\n For example
            -> Outbound:Transfer"
      description: A SIP URI
    api.v0alpha.PhoneBookStandardNumber:
      type: object
      properties:
        phoneNumber:
          type: string
          description: The phone number
        phoneNumberTypes:
          type: array
          items:
            type: integer
            format: enum
          description: "The phone number types determines where this phone book is
            used.\n It can be any combination of Caller ID, Outbound, and Transfer,
            separated by a colon.\n For example -> Caller ID:Outbound:Transfer would
            be all three."
        whiteList:
          type: boolean
      description: A standard phone number
    api.v0alpha.PhoneNumberActivitySettings:
      type: object
      properties:
        allowPhoneNumberActivity:
          type: boolean
        allowExportPhoneNumberActivity:
          type: boolean
        allowPnaRecordingsDownload:
          type: boolean
        allowPnaEditResponses:
          type: boolean
    api.v0alpha.PhonePreferences:
      type: object
      properties:
        agentPreviewDialing:
          type: boolean
        defaultRingLengthThreshold:
          type: integer
          format: int32
        displayRingLengthThreshold:
          type: boolean
        showCallerId:
          type: boolean
        defaultUseCallerId:
          type: boolean
        overrideLinkbackRecording:
          type: boolean
        callerIdCfdSid:
          type: string
        defaultDialOrder:
          $ref: '#/components/schemas/api.v0alpha.DialOrder'
        answeringMachineDetection:
          type: integer
          format: enum
        linkbackRecording:
          type: boolean
      description: Wrapper PhonePreferences object for get response and update request
    api.v0alpha.PlacePreviewDialCallReq:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
        huntGroupSid:
          type: string
        agentSessionSid:
          type: string
    api.v0alpha.PlacePreviewDialCallRes:
      type: object
      properties: {}
    api.v0alpha.PlayDTMFReply:
      type: object
      properties: {}
      description: message used in response to playing a dtmf tone in an agent's conference
    api.v0alpha.PlayDTMFRequest:
      type: object
      properties:
        sessionSid:
          type: string
          description: the session sid for the agent
        dtmfDigits:
          type: array
          items:
            type: integer
            format: enum
          description: the dtmf tone to play
      description: message used to play a dtmf tone in an agent's conference
    api.v0alpha.PlaySoundboardEntityReq:
      type: object
      properties:
        sessionSid:
          type: string
          description: the session sid for the agent
        soundboardEntityId:
          type: string
          description: the id of the requested soundboard entity to play
      description: message used in a request for playing audio from the soundboard
    api.v0alpha.PlaySoundboardEntityRes:
      type: object
      properties:
        soundInstanceId:
          type: string
          description: the id of the instance of sound being played
      description: message used in a response for playing audio from the soundboard
    api.v0alpha.Pool:
      type: object
      properties:
        id:
          type: string
        desc:
          type: string
    api.v0alpha.PopulateWorkflowFieldsReq:
      type: object
      properties:
        clientSid:
          type: string
        agentSid:
          type: string
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        scheduledCallbackId:
          type: string
        fieldDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: field_definitions are all the fields that we will check if
            they have already been collected during the IVR
    api.v0alpha.PopulateWorkflowFieldsRes:
      type: object
      properties:
        values:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
    api.v0alpha.PortalLinkEnrichment:
      type: object
      properties:
        keyMap:
          type: object
          additionalProperties:
            type: string
          description: lms field names as keys, mapped to what they should be called
            in the portal
        portalId:
          type: string
          description: the portal that these links will belong to.
        expiration:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.Expiration'
          description: 'unit type and quantity of: months, weeks, days, hours'
        demo:
          type: boolean
          description: if the payment will process or not
    api.v0alpha.PositionAnnouncements_Config:
      type: object
      properties:
        firstSeconds:
          type: string
          description: first announcement played to caller.
        repeatingSeconds:
          type: string
          description: repeates announcement after given seconds.
        threshold:
          type: string
          description: "the \"shortly\" announcement is played unless the\n caller
            position is greater than or equal to the\n given threshold."
    api.v0alpha.PositionAnnouncements_Disableable:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/api.v0alpha.PositionAnnouncements_Config'
        disable:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Disable'
    api.v0alpha.PostalCode:
      type: object
      properties:
        postalCode:
          type: string
        invalid:
          type: boolean
    api.v0alpha.PreviewDialSettings:
      type: object
      properties:
        requireConfirmation:
          type: boolean
        timeoutMinutes:
          type: string
        allowCancel:
          type: boolean
        pauseOnCancel:
          type: boolean
    api.v0alpha.PriorityGroup:
      type: object
      properties:
        threshold:
          type: integer
          description: threshold for the priority group
          format: int32
        channelType:
          type: integer
          description: channel type for the priority group
          format: enum
      description: PriorityGroup is a type and threshold in array for AgentProfileGroup
    api.v0alpha.Process:
      type: object
      properties:
        expression:
          type: string
        append:
          $ref: '#/components/schemas/api.v0alpha.AppendProcess'
        sort:
          $ref: '#/components/schemas/api.v0alpha.SortCriteria'
        filter:
          $ref: '#/components/schemas/api.v0alpha.FilterProcess'
        gsExport:
          $ref: '#/components/schemas/api.v0alpha.GSExportProcess'
        p3Export:
          $ref: '#/components/schemas/api.v0alpha.P3ExportProcess'
        compl:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ComplProcess'
          description: USE LookupProcess
        dedup:
          $ref: '#/components/schemas/api.v0alpha.DeDupCriteria'
        cfsExport:
          $ref: '#/components/schemas/api.v0alpha.CFSExportProcess'
        sftpExport:
          $ref: '#/components/schemas/api.v0alpha.SftpExportProcess'
        reshape:
          $ref: '#/components/schemas/api.v0alpha.ReshapeProcess'
        lookup:
          $ref: '#/components/schemas/api.v0alpha.LookupProcess'
        entrypoint:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.EntrypointProcess'
          description: split into ApiEntrypoint and SftpImport
        complianceExport:
          $ref: '#/components/schemas/api.v0alpha.ComplianceExportProcess'
        apiEntrypoint:
          $ref: '#/components/schemas/api.v0alpha.ApiEntrypoint'
        sftpImport:
          $ref: '#/components/schemas/api.v0alpha.SftpImport'
        scrub:
          $ref: '#/components/schemas/api.v0alpha.ScrubProcess'
        frequency:
          $ref: '#/components/schemas/api.v0alpha.FrequencyProcess'
        cjsImport:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.CjsImportProcess'
          description: "Will import a list from Durable Data Service(CJS)\n The templates
            for CJS and LMS will need to match"
        cjsExport:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.CjsExportProcess'
          description: "Exports a list to Durable Data Service (CJS)\n The exported
            fields will need to match the\n CJS template if exporting to an existing
            list."
        cjsEnrich:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.CjsEnrichmentProcess'
          description: "Enriches an LMS list with\n data from a CJS list"
        webEntrypoint:
          $ref: '#/components/schemas/api.v0alpha.WebEntrypointProcess'
        deleteScrubEntries:
          $ref: '#/components/schemas/api.v0alpha.DeleteScrubEntriesProcess'
        wfmExport:
          $ref: '#/components/schemas/api.v0alpha.WfmExportProcess'
        linkEnrich:
          $ref: '#/components/schemas/api.v0alpha.PaymentLinkEnrichment'
        rnd:
          $ref: '#/components/schemas/api.v0alpha.RndEnrichmentProcess'
        consentEnrich:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ConsentEnrichmentProcess'
          description: Enriches an LMS list with consent data
        consentExport:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ConsentExportProcess'
          description: Exchanges with compliance consent to add or delete consents
        complianceProcessor:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ComplianceProcessor'
          description: "Processes a list through compliance and enriching\n whether
            a coule would have been permitted or not"
        consentEntrypoint:
          $ref: '#/components/schemas/api.v0alpha.ConsentEntrypointProcess'
        portalLinkEnrich:
          $ref: '#/components/schemas/api.v0alpha.PortalLinkEnrichment'
        bulkWebEntrypoint:
          $ref: '#/components/schemas/api.v0alpha.BulkWebEntrypointProcess'
        omniExchangeProcess:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.OmniExchangeProcess'
          description: OmniExchangeProcess allows omni to import contacts using LMS
            file upload
        webExchangeProcess:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.WebExchangeProcess'
          description: WebExchangeProcess allows a user to setup a process to send
            data to an external api
        split:
          $ref: '#/components/schemas/api.v0alpha.SplitCriteria'
        epicEntryPoint:
          $ref: '#/components/schemas/api.v0alpha.EpicEntrypoint'
        contactManagerSink:
          $ref: '#/components/schemas/api.v0alpha.ContactManagerSink'
        sum:
          $ref: '#/components/schemas/api.v0alpha.SumProcess'
        finviEntrypoint:
          $ref: '#/components/schemas/api.v0alpha.FinviEntrypoint'
    api.v0alpha.ProcessConsentListDeleteUploadReq:
      type: object
      properties:
        consentProfileId:
          type: string
          description: payload
        filename:
          type: string
        notificationMessage:
          type: string
    api.v0alpha.ProcessConsentUploadReq:
      type: object
      properties:
        filename:
          type: string
        consentProfileId:
          type: string
        userId:
          type: string
    api.v0alpha.ProcessElementReq:
      type: object
      properties:
        elementId:
          type: string
        processMessage:
          type: string
          description: says if it was triggered by a cron or manually
    api.v0alpha.ProcessFields:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ProcessFields_Field'
    api.v0alpha.ProcessFields_Field:
      type: object
      properties:
        name:
          type: string
        fieldType:
          type: integer
          format: enum
        nested:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ProcessFields_NestedField'
          description: any nested fields, could be empty
        format:
          type: string
    api.v0alpha.ProcessFields_NestedField:
      type: object
      properties:
        name:
          type: string
        fieldType:
          type: integer
          format: enum
    api.v0alpha.ProcessGreetingUploadReq:
      type: object
      properties:
        pbxExtension:
          type: string
        filename:
          type: string
    api.v0alpha.ProcessGreetingUploadRes:
      type: object
      properties: {}
    api.v0alpha.ProcessListRequest:
      type: object
      properties:
        elementId:
          type: string
          description: "the element/node we want to upload the list to.\n must be
            an api_entrypoint type element."
        list:
          type: string
          description: "raw bytes of the list we are uploading.\n must be parsable
            by the file_template for element_id."
          format: bytes
    api.v0alpha.ProcessListResponse:
      type: object
      properties: {}
    api.v0alpha.ProcessManualDialCallReq:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
    api.v0alpha.ProcessManualDialCallRes:
      type: object
      properties:
        scrubbedCall:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
    api.v0alpha.ProcessOutboundCallReq:
      type: object
      properties:
        ruleSetName:
          type: string
          description: The name of the rule set to use for processing
        countryCode:
          type: string
          description: The country code of the phone number
        phoneNumber:
          type: string
          description: The phone number to process
        callMetadata:
          type: object
          additionalProperties:
            type: string
          description: Extra compliance metadata
        sourceId:
          type: string
          description: The id of the caller associated with this process request
        sourceField:
          type: string
          description: The call type of the caller associated with this process request
        callerId:
          type: string
          description: The caller id being called from
        clientSid:
          type: string
          description: The client id
        commType:
          allOf:
          - $ref: '#/components/schemas/api.commons.CommType'
          description: The communication type
        callType:
          type: string
          description: The call type
        orgId:
          type: string
          description: The organization id
        regionId:
          type: string
          description: The region id
        email:
          type: string
          description: The email address to process
        zipCode:
          type: string
          description: The zip code
      description: request used to process an outbound call against a rule set
    api.v0alpha.ProcessRes:
      type: object
      properties:
        permit:
          type: boolean
          description: indicates if the process request was permitted or not
        ruleResponses:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.RuleResponse'
          description: the list of rules checked against
      description: response given after processing something against a rule set
    api.v0alpha.ProcessScrubListDeleteUploadReq:
      type: object
      properties:
        listId:
          type: string
          description: payload
        filename:
          type: string
        notificationMessage:
          type: string
    api.v0alpha.ProcessScrubListUploadReq:
      type: object
      properties:
        filename:
          type: string
        listId:
          type: string
        contentType:
          type: integer
          description: payload
          format: enum
        notificationMessage:
          type: string
        countryCode:
          type: string
    api.v0alpha.ProcessSecureFormReq:
      type: object
      properties:
        values:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
        portalId:
          type: string
        segment:
          type: integer
          description: segment tells us which workflow segment needs processing
          format: int32
        choice:
          type: integer
          description: which choice in the workflow array to be processed
          format: int32
        voiceSessionSid:
          type: string
    api.v0alpha.ProcessSecureFormRes:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
          description: the response data from the process
    api.v0alpha.ProductType:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
    api.v0alpha.Project:
      type: object
      properties:
        projectSid:
          type: string
          description: project identifier
        name:
          type: string
          description: project name
        description:
          type: string
          description: project description
        status:
          type: integer
          description: project status
          format: enum
        dateCreated:
          type: string
          description: creation date
          format: date-time
        complianceConfig:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniProjectComplianceConfig'
          description: compliance configuration
      description: Project -
    api.v0alpha.PublicKey:
      type: object
      properties:
        key:
          type: string
    api.v0alpha.PublishDashboardRequest:
      type: object
      properties:
        resourceId:
          type: string
          description: resource id of the dashboard to be published
        destinationResourceId:
          type: string
          description: "destination resource id can be emtpy to create\n a new resource
            or can be used to update an existing"
      description: PublishDashboardRequest used in PublishDashboard rpc
    api.v0alpha.PublishDashboardResponse:
      type: object
      properties:
        resourceId:
          type: string
          description: resource id of the published dashboard
      description: PublishDashboardResponse used in PublishDashboard rpc
    api.v0alpha.PublishVersionReq:
      type: object
      properties:
        publishVersion:
          type: string
          description: publish version
      description: request to publish version
    api.v0alpha.PublishVersionRes:
      type: object
      properties:
        versionDetails:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.VersionDetails'
          description: details about version
      description: response to publish version
    api.v0alpha.PurgeScrubListReq:
      type: object
      properties:
        listId:
          type: string
    api.v0alpha.PurgeScrubListRes:
      type: object
      properties:
        entriesFound:
          type: string
    api.v0alpha.QueryHolidaysRequest:
      type: object
      properties:
        date:
          type: string
        name:
          type: string
        year:
          type: string
        month:
          type: string
        day:
          type: string
        weekday:
          type: string
        type:
          type: string
        isObserved:
          type: string
        country:
          type: string
        state:
          type: string
    api.v0alpha.QueryHolidaysResponse:
      type: object
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.HolidayData'
    api.v0alpha.QueueConfig:
      type: object
      properties:
        name:
          type: string
          description: "Name can only contain these characters:\n  ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789,-_"
        configModified:
          type: string
          format: date-time
        soundsModified:
          type: string
          format: date-time
        soundsLanguage:
          type: string
        soundsGender:
          type: string
        announcementMixing:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.QueueConfig_AnnouncementMixing'
          description: nil fields will use default config for all call types.
        positionAnnouncements:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_PositionAnnouncements'
        waitTimeAnnouncements:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_WaitTimeAnnouncements'
        attentionTones:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_AttentionTones'
        inQueueConditions:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_InQueueConditions'
        keyPressEvents:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_KeyPressEvents'
        pbxRingStrategy:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_PbxRingStrategy'
        queueMonitoringSilenceWaitTimes:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_QueueMonitoringSilenceWaitTimes'
        callbackTimeoutMinutes:
          type: string
          description: 'general configs:'
        numberUpdate:
          type: boolean
        inboundOverride:
          type: integer
          format: enum
        intercomConnection:
          type: integer
          description: "IntercomConnection is only editable from the default\n tab
            of the account default config. This will\n eventually be removed."
          format: enum
    api.v0alpha.QueueConfig_AnnouncementMixing:
      type: object
      properties:
        inbound:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AnnouncementMixing_Config'
          description: nil fields will use default config settings.
        outbound:
          $ref: '#/components/schemas/api.v0alpha.AnnouncementMixing_Config'
        manual:
          $ref: '#/components/schemas/api.v0alpha.AnnouncementMixing_Config'
        preview:
          $ref: '#/components/schemas/api.v0alpha.AnnouncementMixing_Config'
        any:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AnnouncementMixing_Config'
          description: any can only be created/edited for the account default config.
    api.v0alpha.QueueConfig_AttentionTones:
      type: object
      properties:
        inbound:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AttentionTones_Disableable'
          description: nil fields will use default config settings.
        outbound:
          $ref: '#/components/schemas/api.v0alpha.AttentionTones_Disableable'
        manual:
          $ref: '#/components/schemas/api.v0alpha.AttentionTones_Disableable'
        preview:
          $ref: '#/components/schemas/api.v0alpha.AttentionTones_Disableable'
        any:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AttentionTones_Disableable'
          description: any can only be created/edited for the account default config.
    api.v0alpha.QueueConfig_Disable:
      type: object
      properties: {}
    api.v0alpha.QueueConfig_InQueueConditions:
      type: object
      properties:
        noAgentsLoggedIn:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_LimitedCondition'
        noAgentsWithRequiredSkillsLoggedIn:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_Condition'
        noAgentsAvailable:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_LimitedCondition'
        noAgentsWithRequiredSkillsAvailable:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_Condition'
        pbxRinging:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_Condition'
        agentLost:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_Condition'
        default:
          $ref: '#/components/schemas/api.v0alpha.InQueueConditions_LimitedCondition'
    api.v0alpha.QueueConfig_KeyPressEvents:
      type: object
      properties:
        zero:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Action'
        one:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Action'
        two:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Action'
        three:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Action'
        four:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Action'
        five:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Action'
        six:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Action'
        seven:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Action'
        eight:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Action'
        nine:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Action'
        asterisk:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Action'
        hashtag:
          $ref: '#/components/schemas/api.v0alpha.KeyPressEvents_Action'
    api.v0alpha.QueueConfig_Optionless:
      type: object
      properties: {}
      description: "Optionless represents config options that do not\n require sub
        settings."
    api.v0alpha.QueueConfig_PbxRingStrategy:
      type: object
      properties:
        inbound:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.PbxRingStrategy_Config'
          description: nil fields will use default config settings.
        outbound:
          $ref: '#/components/schemas/api.v0alpha.PbxRingStrategy_Config'
        any:
          $ref: '#/components/schemas/api.v0alpha.PbxRingStrategy_Config'
    api.v0alpha.QueueConfig_PositionAnnouncements:
      type: object
      properties:
        inbound:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.PositionAnnouncements_Disableable'
          description: nil fields will use default config settings.
        outbound:
          $ref: '#/components/schemas/api.v0alpha.PositionAnnouncements_Disableable'
        manual:
          $ref: '#/components/schemas/api.v0alpha.PositionAnnouncements_Disableable'
        preview:
          $ref: '#/components/schemas/api.v0alpha.PositionAnnouncements_Disableable'
        any:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.PositionAnnouncements_Disableable'
          description: any can only be created/edited for the account default config.
    api.v0alpha.QueueConfig_QueueMonitoringSilenceWaitTimes:
      type: object
      properties:
        firstMilliseconds:
          type: string
          description: "minimum allowed milliseconds: 500.\n maximum allowed milliseconds:
            5000."
        secondMilliseconds:
          type: string
    api.v0alpha.QueueConfig_Skills:
      type: object
      properties:
        p3Ids:
          type: array
          items:
            type: string
    api.v0alpha.QueueConfig_WaitTimeAnnouncements:
      type: object
      properties:
        inbound:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.WaitTimeAnnouncements_Disableable'
          description: nil fields will use default config settings.
        outbound:
          $ref: '#/components/schemas/api.v0alpha.WaitTimeAnnouncements_Disableable'
        manual:
          $ref: '#/components/schemas/api.v0alpha.WaitTimeAnnouncements_Disableable'
        preview:
          $ref: '#/components/schemas/api.v0alpha.WaitTimeAnnouncements_Disableable'
        any:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.WaitTimeAnnouncements_Disableable'
          description: any can only be created/edited for the account default config.
    api.v0alpha.RealTimeConfig:
      type: object
      properties: {}
      description: "Real Time Dashboard type\n has no time_span, is only concerned
        with the present"
    api.v0alpha.RecalculateBillingReq:
      type: object
      properties:
        month:
          type: integer
          format: enum
        types:
          type: array
          items:
            type: integer
            format: enum
        orgId:
          type: string
      description: "RecalculateBillingReq represents the request message\n for method
        RecalculateBilling. The month field is\n an enum that can either be 0: the
        current month or\n 1: the previous month. The types field is a list of\n billing
        types (as defined by api.commons.RecalculateBillingType)\n that will be updated
        for recalculation."
    api.v0alpha.RecalculateBillingRes:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.RecalculateBillingRes_Result'
      description: "RecalculateBillingRes represents the response message for\n method
        RecalculateBilling. The field results contains a list of\n BillingResults
        with an entry for each billing type given on the request message.\n Each result
        message will contain the count of updated records for a type\n or an error
        message."
    api.v0alpha.RecalculateBillingRes_Result:
      type: object
      properties:
        type:
          type: integer
          format: enum
        updated:
          type: string
        errorMessage:
          type: string
    api.v0alpha.RecordEmailUnsubscribeAcknowledgementRequest:
      type: object
      properties: {}
      description: Request for recording email unsubscribe acknowledgement.
    api.v0alpha.RecordEmailUnsubscribeAcknowledgementResponse:
      type: object
      properties: {}
      description: Response for recording email unsubscribe acknowledgement.
    api.v0alpha.RecordFieldMap:
      type: object
      properties:
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v0alpha.RecordFieldProto'
    api.v0alpha.RecordFieldProto:
      type: object
      properties:
        name:
          type: string
        stringValue:
          type: string
        numberValue:
          type: number
          format: double
        boolValue:
          type: boolean
        phone:
          $ref: '#/components/schemas/api.v0alpha.Phone'
        currency:
          $ref: '#/components/schemas/api.v0alpha.Currency'
        postalCode:
          $ref: '#/components/schemas/api.v0alpha.PostalCode'
        email:
          $ref: '#/components/schemas/api.v0alpha.Email'
        dateTime:
          $ref: '#/components/schemas/api.v0alpha.DateTime'
        repeatedRecords:
          $ref: '#/components/schemas/api.v0alpha.RepeatedRecords'
        recordFieldMap:
          $ref: '#/components/schemas/api.v0alpha.RecordFieldMap'
        err:
          $ref: '#/components/schemas/api.v0alpha.Error'
        enrichedPhone:
          $ref: '#/components/schemas/api.v0alpha.EnrichedPhone'
        enrichedZip:
          $ref: '#/components/schemas/api.v0alpha.EnrichedZip'
    api.v0alpha.RecordProto:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.RecordFieldProto'
    api.v0alpha.RecordingPreferences:
      type: object
      properties:
        conventionEnabled:
          type: boolean
        fileNameConvention:
          $ref: '#/components/schemas/api.v0alpha.RecordingsFileNamingConvention'
        zipConventionEnabled:
          type: boolean
        zipFileNameConvention:
          $ref: '#/components/schemas/api.v0alpha.RecordingsZipFileNamingConvention'
        exportFileType:
          type: integer
          format: enum
      description: Wrapper RecordingPreferences object for get response and update
        request
    api.v0alpha.RecordingSettings:
      type: object
      properties:
        displayIndicator:
          type: boolean
        enablePause:
          type: boolean
        enableDelay:
          type: boolean
        delay:
          type: string
        pauseRecordingOnHold:
          type: boolean
    api.v0alpha.RecordingsFileNamingConvention:
      type: object
      properties:
        inbound:
          $ref: '#/components/schemas/api.v0alpha.FileNamingConvention'
        manual:
          $ref: '#/components/schemas/api.v0alpha.FileNamingConvention'
        outbound:
          $ref: '#/components/schemas/api.v0alpha.FileNamingConvention'
        preview:
          $ref: '#/components/schemas/api.v0alpha.FileNamingConvention'
        xmlClientPropertySid:
          type: string
      description: Call recordings file name convention
    api.v0alpha.RecordingsZipFileNamingConvention:
      type: object
      properties:
        inbound:
          $ref: '#/components/schemas/api.v0alpha.FileNamingConvention'
        manual:
          $ref: '#/components/schemas/api.v0alpha.FileNamingConvention'
        outbound:
          $ref: '#/components/schemas/api.v0alpha.FileNamingConvention'
        combined:
          $ref: '#/components/schemas/api.v0alpha.FileNamingConvention'
        xmlClientPropertySid:
          type: string
      description: Call recordings file name convention (for *.zip)
    api.v0alpha.RegionUrls:
      type: object
      properties:
        apiEndpoints:
          type: array
          items:
            type: string
          description: array of api_endpoints per region
      description: urls used for each region
    api.v0alpha.RegisterAccountReq:
      type: object
      properties:
        orgId:
          type: string
    api.v0alpha.RegisterOrganizationRequest:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/api.v0alpha.Organization'
        allowedCountries:
          type: array
          items:
            type: integer
            format: enum
          description: "allowed_countries is used to initialize the organization's\n
            allowed countries preference.\n This field is optional."
        p3ParentAccount:
          type: string
          description: Required. The id of new organization's parent account.
      description: The request for api.v0alpha.RegisterOrganization.
    api.v0alpha.RegisterOrganizationResponse:
      type: object
      properties:
        orgId:
          type: string
      description: The response for api.v0alpha.RegisterOrganization
    api.v0alpha.RejectTaskRequest:
      type: object
      properties:
        taskSid:
          type: string
    api.v0alpha.RejectTaskResponse:
      type: object
      properties: {}
    api.v0alpha.Relation:
      type: object
      properties:
        clientSid:
          type: string
        clientName:
          type: string
        relationInitiation:
          type: string
          format: date-time
        relationInitiator:
          type: string
        relationTermination:
          type: string
          format: date-time
        relationTerminator:
          type: string
        isCurrent:
          type: boolean
        orgId:
          type: string
          description: org id of child
    api.v0alpha.Relations:
      type: object
      properties:
        relations:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Relation'
    api.v0alpha.ReloadClientDataReq:
      type: object
      properties:
        orgId:
          type: string
          description: development operations can specify org
      description: ReloadClientDataReq request message
    api.v0alpha.ReloadClientDataResp:
      type: object
      properties: {}
      description: ReloadClientData response message
    api.v0alpha.RemoveLoginStrikesRequest:
      type: object
      properties:
        loginLogSids:
          type: array
          items:
            type: string
    api.v0alpha.RemoveLoginStrikesResponse:
      type: object
      properties: {}
    api.v0alpha.RemoveMyUserSubscriptionRequest:
      type: object
      properties:
        subscriptionId:
          type: string
          description: Required.
      description: Request for removing a user subscription by id.
    api.v0alpha.RemoveMyUserSubscriptionResponse:
      type: object
      properties: {}
      description: Response for deleting a user subscription.
    api.v0alpha.RemoveOrgBillingOverrideRequest:
      type: object
      properties:
        orgId:
          type: string
        region:
          type: string
        country:
          type: integer
          format: enum
      description: Request message for the RemoveOrgBillingOverride rpc.
    api.v0alpha.RemoveOrgBillingOverrideResponse:
      type: object
      properties: {}
      description: Response message for the RemoveOrgBillingOverride rpc.
    api.v0alpha.RemoveTransferMemberReply:
      type: object
      properties: {}
      description: request to hangup a transfer member
    api.v0alpha.RemoveTransferMemberRequest:
      type: object
      properties:
        memberIdentifier:
          type: string
          description: the id of the member to be hungup
        sessionSid:
          type: string
          description: the session sid for the agent
      description: request to add a new outbound transfer member
    api.v0alpha.RemoveUserLoginStrikesRequest:
      type: object
      properties:
        userId:
          type: string
    api.v0alpha.RemoveUserLoginStrikesResponse:
      type: object
      properties: {}
    api.v0alpha.RemoveUserRegionRequest:
      type: object
      properties:
        userId:
          type: string
        regionId:
          type: string
    api.v0alpha.RemoveUserRegionResponse:
      type: object
      properties: {}
    api.v0alpha.RemoveUserSubscriptionRequest:
      type: object
      properties:
        userId:
          type: string
          description: Required.
        subscriptionId:
          type: string
          description: Required.
      description: Request for removing a user subscription by id.
    api.v0alpha.RemoveUserSubscriptionResponse:
      type: object
      properties: {}
      description: Response for deleting a user subscription.
    api.v0alpha.RenameRuleSetReq:
      type: object
      properties:
        ruleSetId:
          type: string
        name:
          type: string
    api.v0alpha.RenameRuleSetRes:
      type: object
      properties: {}
    api.v0alpha.RepeatedRecords:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.RecordProto'
    api.v0alpha.ReportFilter:
      type: object
      properties:
        standard:
          type: integer
          format: enum
        custom:
          type: string
      description: Report filter type, standard or custom
    api.v0alpha.ReportSettings:
      type: object
      properties:
        enabled:
          type: boolean
        deliveryMethod:
          type: string
        reportTemplateSid:
          type: string
        smsSettings:
          $ref: '#/components/schemas/api.v0alpha.SmsSettings'
        emailSettings:
          $ref: '#/components/schemas/api.v0alpha.EmailSettings'
        ftpSettings:
          $ref: '#/components/schemas/api.v0alpha.FtpSettings'
        sftpSettings:
          $ref: '#/components/schemas/api.v0alpha.SftpSettings'
    api.v0alpha.RequeueManuallyApprovedCallReq:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
        queueName:
          type: string
    api.v0alpha.RequeueManuallyApprovedCallRes:
      type: object
      properties: {}
    api.v0alpha.RequeueManuallyApprovedSmsReq:
      type: object
      properties:
        sms:
          $ref: '#/components/schemas/api.commons.SimpleSmsMamData'
        queueName:
          type: string
    api.v0alpha.RequeueManuallyApprovedSmsRes:
      type: object
      properties: {}
    api.v0alpha.RequeueTaskRequest:
      type: object
      properties:
        taskSid:
          type: string
    api.v0alpha.RequeueTaskResponse:
      type: object
      properties: {}
    api.v0alpha.ResendUnconnectedSmsReq:
      type: object
      properties:
        smsGroupSid:
          type: string
        startTime:
          type: string
          format: date-time
        stopTime:
          type: string
          format: date-time
    api.v0alpha.ResendUnconnectedSmsRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.ResendVerifiedEmailReq:
      type: object
      properties:
        verifiedEmailSid:
          type: string
          description: verified_email_sid
      description: request to resend verified email
    api.v0alpha.ResendVerifiedEmailRes:
      type: object
      properties: {}
      description: response to resend verified email
    api.v0alpha.ResetCollectionReq:
      type: object
      properties:
        collectionId:
          type: string
    api.v0alpha.ResetSecureFormFieldReq:
      type: object
      properties:
        voiceSessionSid:
          type: string
    api.v0alpha.ResetSecureFormFieldRes:
      type: object
      properties: {}
    api.v0alpha.ResetUserRequirePasswordResetRequest:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user.
      description: Request message for ResetUserRequirePasswordReset.
    api.v0alpha.ResetUserRequirePasswordResetResponse:
      type: object
      properties: {}
      description: Response message for ResetUserRequirePasswordReset.
    api.v0alpha.ReshapeAction:
      type: object
      properties:
        field:
          type: string
          description: NOT a FieldIndex
        matchingType:
          type: integer
          description: will only execute on the matching type (defaults to ALL)
          format: enum
        predicate:
          $ref: '#/components/schemas/api.v0alpha.FilterCheck'
        rename:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_Rename'
        addValue:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_AddValue'
        addField:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_AddField'
        addDate:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_AddDate'
        subtractValue:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_SubtractValue'
        subtractField:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_SubtractField'
        convert:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_Convert'
        removeField:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_RemoveField'
        addNewField:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_AddNewField'
        changeCurrencyType:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_ChangeCurrencyType'
        divide:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_Divide'
        multiply:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_Multiply'
        modulo:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_Modulo'
        merge:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_Merge'
        setFieldValue:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_SetFieldValue'
        addNewFieldFromField:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_AddNewFieldFromField'
        setFieldFromField:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_SetFieldFromField'
        pad:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_Pad'
        trim:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_Trim'
        extract:
          $ref: '#/components/schemas/api.v0alpha.ReshapeAction_Extract'
    api.v0alpha.ReshapeAction_AddDate:
      type: object
      properties:
        datetime:
          $ref: '#/components/schemas/api.v0alpha.DateTimeModifier'
      description: add or subtract a datetime modifier to the field
    api.v0alpha.ReshapeAction_AddField:
      type: object
      properties:
        otherField:
          $ref: '#/components/schemas/api.v0alpha.FieldIndex'
      description: "add two fields values together. If field is time-like, other_field
        must be\n either number or timestamp"
    api.v0alpha.ReshapeAction_AddNewField:
      type: object
      properties:
        startingValue:
          $ref: '#/components/schemas/api.v0alpha.RecordFieldProto'
      description: "will add \"field\" to the record with default starting value\n
        TODO: make a RecordFieldProtoValue, it is a noeof"
    api.v0alpha.ReshapeAction_AddNewFieldFromField:
      type: object
      properties:
        name:
          type: string
        otherField:
          $ref: '#/components/schemas/api.v0alpha.FieldIndex'
      description: will add "field" to the record with default starting value from
        other field
    api.v0alpha.ReshapeAction_AddValue:
      type: object
      properties:
        value:
          type: number
          description: if the field type is time-like, this is number of seconds
          format: double
      description: add a static value to field's current value.
    api.v0alpha.ReshapeAction_ChangeCurrencyType:
      type: object
      properties: {}
      description: change the currency value to one represented
    api.v0alpha.ReshapeAction_Convert:
      type: object
      properties:
        newType:
          type: integer
          format: enum
        newField:
          $ref: '#/components/schemas/api.v0alpha.Field'
        defaultValue:
          $ref: '#/components/schemas/api.v0alpha.RecordFieldProto'
      description: "convert a field to another type, if conversion fails, it will
        be an error\n type"
    api.v0alpha.ReshapeAction_Divide:
      type: object
      properties:
        defaultValue:
          type: number
          description: The default value to be used if no other value is provided.
          format: double
        divisor:
          type: number
          description: The divisor to be used for the division operation.
          format: double
      description: Represents a message for division operation.
    api.v0alpha.ReshapeAction_Extract:
      type: object
      properties:
        parts:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Extract_Slice'
          description: parts represents several substrings using indices
      description: extract takes a string and can take any combination of substrings
        of the string
    api.v0alpha.ReshapeAction_Merge:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Merge_FieldOrVal'
      description: "merges together all the strings fetched from FieldOrVal into the
        reshape\n action field. overrides any data already in the field."
    api.v0alpha.ReshapeAction_Modulo:
      type: object
      properties:
        defaultValue:
          type: integer
          description: The default value to be used if no other value is provided.
          format: int32
        modulus:
          type: integer
          description: The modulus to be used for the modulo operation.
          format: int32
      description: Represents a message for modulo operation.
    api.v0alpha.ReshapeAction_Multiply:
      type: object
      properties:
        defaultValue:
          type: number
          description: The default value to be used if no other value is provided.
          format: double
        multiplier:
          type: number
          description: The multiplier to be used for the multiplication operation.
          format: double
      description: Represents a message for multiplication operation.
    api.v0alpha.ReshapeAction_Pad:
      type: object
      properties:
        char:
          type: string
          description: what character to pad with.  Must be length 1.
        amount:
          type: integer
          description: "what the desired length of the string is.\n if < 0 we will
            use the len of the longest string in the column"
          format: int32
        prefix:
          type: boolean
          description: prefixorsuffix
      description: provide padding to the right or left of the string field
    api.v0alpha.ReshapeAction_RemoveField:
      type: object
      properties: {}
      description: will remove "field" from the record
    api.v0alpha.ReshapeAction_Rename:
      type: object
      properties:
        newName:
          type: string
      description: rename this field's name to new_name, keep the value the same
    api.v0alpha.ReshapeAction_SetFieldFromField:
      type: object
      properties:
        name:
          type: string
        otherField:
          $ref: '#/components/schemas/api.v0alpha.FieldIndex'
      description: will set "field" from other field
    api.v0alpha.ReshapeAction_SetFieldValue:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/api.v0alpha.RecordFieldProto'
      description: will set field with the value
    api.v0alpha.ReshapeAction_SubtractField:
      type: object
      properties:
        otherField:
          $ref: '#/components/schemas/api.v0alpha.FieldIndex'
      description: "subtract two fields values. If field is time-like, other_field
        must be\n either number or timestamp"
    api.v0alpha.ReshapeAction_SubtractValue:
      type: object
      properties:
        value:
          type: number
          description: if the field type is time-like, this is number of seconds
          format: double
      description: subtract a static value to field's current value
    api.v0alpha.ReshapeAction_Trim:
      type: object
      properties:
        amount:
          type: integer
          description: "trim this exact amount of chars. If the string is less than
            amount in length\n the string is set to the empty string\n examples:\n
            - trim.amount = 3 on 'abcdef' => 'def'\n - trim.amount = 3 on 'ab' =>
            ''"
          format: int32
        data:
          type: string
          description: "trim this specific string from the field if it exists, otherwise
            do nothing\n examples:\n - trim.data = 'abc' on 'abcdef' => 'def'\n -
            trim.data = 'abc' on 'ab' => 'ab'"
        marker:
          type: string
          description: "trim til this specific marker. If marker doesn't exist string
            is left alone\n examples:\n - trim.marker = 'de' on 'abcdef' = 'def'"
        suffix:
          type: boolean
          description: if true, the trim operation starts at the end of the string
            and works backwards
      description: 'trims off specific characters from a prefix or suffix.

        Or can trim off a certain amount of characters from the left or right.'
    api.v0alpha.ReshapeProcess:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ReshapeAction'
    api.v0alpha.ResponseEvaluator:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        regularExpression:
          type: string
        xmlClientPropertySid:
          type: string
    api.v0alpha.ResumeCampaignReq:
      type: object
      properties:
        campaignSid:
          type: string
          description: the campaign identifier
        channelType:
          type: integer
          description: the campaign's channel type
          format: enum
        campaignDirection:
          type: integer
          description: the campaign direction
          format: enum
      description: Request to resume a campaign
    api.v0alpha.ResumeCampaignRes:
      type: object
      properties:
        referenceId:
          type: string
          description: send back ghost notifier referenceID
      description: Response to resume a campaign
    api.v0alpha.ReviewFileVersionsReq:
      type: object
      properties:
        url:
          type: string
          description: url to master version
        version:
          type: string
          description: version to be compared with
        locale:
          type: string
          description: locale
      description: request to retrieve diff after comparing file contents in different
        versions
    api.v0alpha.ReviewFileVersionsRes:
      type: object
      properties:
        content:
          type: string
          description: existing file contents from master
        diffContent:
          type: string
          description: diff contents between both master and passed version
        images:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.LearnImage'
          description: List containing image links from parsing both files
      description: response to retrieve diff after comparing file contents in different
        versions
    api.v0alpha.ReviewVersionReq:
      type: object
      properties:
        version:
          type: string
          description: version to be compared with
        locale:
          type: string
          description: locale
      description: request to retrieve list of differences after comparing different
        versions
    api.v0alpha.ReviewVersionRes:
      type: object
      properties:
        diffUrls:
          type: string
          description: diff of urls between both versions
        diffFileNames:
          type: string
          description: diff of file names between both versions
        srcContent:
          type: string
          description: src version content
        destContent:
          type: string
          description: dest version content
      description: response to list of differences after comparing different version
        contents
    api.v0alpha.RevokeAccountOwnerPermissionFromUserRequest:
      type: object
      properties:
        userId:
          type: string
          description: user for which the account owner permission will be revoked
    api.v0alpha.RevokeAccountOwnerPermissionFromUserResponse:
      type: object
      properties: {}
    api.v0alpha.RevokeConsentReq:
      type: object
      properties:
        consentId:
          type: string
        revoked:
          type: string
          format: date-time
        consentProfileId:
          type: string
        content:
          type: string
        channelType:
          type: integer
          format: enum
        revokedReason:
          type: string
        contentType:
          type: integer
          format: enum
    api.v0alpha.RevokeUserPermissionGroupRequest:
      type: object
      properties:
        permissionGroupId:
          type: string
          description: Required. The id of the permission group that is being revoked.
        revokeUserId:
          type: string
          description: Required. The id of the user the permission group is to be
            removed from.
      description: The request for api.v0alpha.RevokeUserPermissionGroup.
    api.v0alpha.RevokeUserPermissionGroupResponse:
      type: object
      properties: {}
      description: The response for api.v0alpha.RevokeUserPermissionGroup.
    api.v0alpha.RevokeUsersP3PermissionGroupRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: List of users to remove permission from
        permissionGroupId:
          type: string
          description: P3 permission group to remove
    api.v0alpha.RevokeUsersP3PermissionGroupResponse:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: List of updated user ids
    api.v0alpha.RevokeUsersPermissionGroupRequest:
      type: object
      properties:
        permissionGroupId:
          type: string
          description: Required. The id of the permission group that is being revoked.
        revokeUserIds:
          type: array
          items:
            type: string
          description: Required. The ids of the users the permission group is being
            revoked from.
      description: The request for api.v0alpha.RevokeUsersPermissionGroup.
    api.v0alpha.RevokeUsersPermissionGroupResponse:
      type: object
      properties: {}
      description: The response for api.v0alpha.RevokeUsersPermissionGroup.
    api.v0alpha.RndEnrichmentProcess:
      type: object
      properties:
        orgId:
          type: string
        field:
          type: string
        dateLastContactField:
          type: string
    api.v0alpha.RuleAutoCompleteReq:
      type: object
      properties:
        phrase:
          type: string
        cursor:
          type: integer
          format: int32
    api.v0alpha.RuleAutoCompleteRes:
      type: object
      properties:
        options:
          type: array
          items:
            type: string
    api.v0alpha.RuleSet:
      type: object
      properties:
        ruleSetId:
          type: string
        name:
          type: string
        head:
          type: boolean
        disabled:
          type: boolean
        rulesText:
          type: string
          description: original text from where we derived the rules
        sha:
          type: string
          description: sha256 for the input strings
        rules:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Rule'
      description: RuleSet / Rule
    api.v0alpha.RunAssignedScenariosReq:
      type: object
      properties:
        cplRuleSetId:
          type: string
    api.v0alpha.RunAssignedScenariosRes:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ScenarioResult'
        passedValue:
          type: boolean
        cplRuleSetName:
          type: string
    api.v0alpha.RuntimeValues:
      type: object
      properties:
        state:
          type: integer
          description: "current state of the entrypoint\n this is set to kickoff when
            the entrypoint is queued up"
          format: enum
        accessToken:
          type: string
          description: "the token we are using for this session.\n This value is retrieved
            by sending a jwt to epic's auth endpoint."
        checkUrl:
          type: string
          description: "the url returned from the kickoff's 'Content-Location' response
            header\n used during the CHECK state."
        dataUrls:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.EntityURL'
          description: "the the location for all the data we are importing.\n Epic
            returns newline delimited json for each url endpoint"
        currentIteration:
          type: string
          description: how many times we have ran the paginated request
        totalSecondsSpent:
          type: string
        errors:
          type: array
          items:
            type: string
          description: any errors that happened during processing
        totalNotReadyCount:
          type: string
          description: how many times the bulk entrypoint has been not ready total
        fileIds:
          type: object
          additionalProperties:
            type: string
          description: "as of writing, the unflushed input is stored in fts.\n the
            keys will be the fts_id the page, and the values the size of the request
            in bytes"
        preliminaryVars:
          type: object
          additionalProperties:
            type: string
          description: "the named variables saved from the preliminary requests\n
            these can be used in the paginated_request"
        parentEventIds:
          type: array
          items:
            type: string
          description: the events that happened before this one
        noMorePages:
          type: boolean
          description: "if true we wont need to switch back from process state, to
            check state.\n if false, we need to continue in check state after flushing
            records"
        totalFtsIds:
          type: array
          items:
            type: string
          description: tracks all fts files we have writen regardless of whether they
            have been processed yet
      description: "These values are invisible to the user, and null in the lms_elements
        table.\n These will be used during the processing of the event."
    api.v0alpha.SampleRequest:
      type: object
      properties: {}
    api.v0alpha.SaveAgentCallResponsesReq:
      type: object
      properties:
        callSid:
          type: string
        agentSessionSid:
          type: string
        agentCallResponseDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.AgentCallResponseDetails'
        callType:
          type: integer
          format: enum
        complianceMetadata:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SimpleKeyValue'
          description: will create an agent response for the given compliance metadata
            (not required).
    api.v0alpha.SaveAgentCallResponsesRes:
      type: object
      properties: {}
    api.v0alpha.SaveLastCallResponseReq:
      type: object
      properties:
        callType:
          type: integer
          format: enum
        callSid:
          type: string
        responseName:
          type: string
    api.v0alpha.SaveLastCallResponseRes:
      type: object
      properties: {}
    api.v0alpha.Scenario:
      type: object
      properties:
        cplScenarioId:
          type: string
        shouldAllow:
          $ref: '#/components/schemas/api.commons.ScenarioData'
        shouldDeny:
          $ref: '#/components/schemas/api.commons.ScenarioData'
        lastExecutionResult:
          $ref: '#/components/schemas/api.commons.ScenarioResult'
        name:
          type: string
    api.v0alpha.ScheduleCallBackSettings:
      type: object
      properties:
        allowCallbackScheduling:
          type: boolean
        allowScheduledCallbackCalling:
          type: boolean
        allowAutomaticCallbackRetrievalMode:
          type: boolean
        allowDefaultCallbackRouting:
          type: boolean
        callbacksRetrievalModeSettings:
          type: string
        defaultCallbackRoutingSettings:
          type: string
        callbacksServiceId:
          type: string
        hasCustomCallerId:
          type: boolean
        defaultCallerId:
          type: string
        allowScheduledCallbackCalendar:
          type: boolean
    api.v0alpha.ScheduleInboundSmsReq:
      type: object
      properties:
        inboundSmsTemplateId:
          type: string
        smsNumberSid:
          type: string
        groupName:
          type: string
    api.v0alpha.ScheduleInboundSmsRes:
      type: object
      properties:
        inboundSmsGroupId:
          type: string
    api.v0alpha.SchedulePreferences:
      type: object
      properties:
        displayScheduleByTimeZone:
          type: boolean
        useScheduleByTimeZone:
          type: boolean
        scheduleByTimeZoneScope:
          type: integer
          format: enum
        displayScheduleAsPaused:
          type: boolean
        scheduleAsPaused:
          type: boolean
        defaultCompletionThreshold:
          type: string
        displayCampaignLinking:
          type: boolean
        useCampaignLinking:
          type: boolean
        campaignLinks:
          type: object
          additionalProperties:
            type: string
        defaultCampaignLinkId:
          type: string
        resendCancelledCampaigns:
          type: boolean
      description: Wrapper SchedulePreferences object for get response and update
        request
    api.v0alpha.ScheduleRule:
      type: object
      properties:
        scheduleRuleSid:
          type: string
        clientSid:
          type: string
        name:
          type: string
        ruleTimeZone:
          type: string
      description: Schedule Rule after the Skunk database
    api.v0alpha.ScheduleRuleField:
      type: object
      properties:
        ruleId:
          type: string
        name:
          type: string
      description: Schedule rule field
    api.v0alpha.ScheduleSmsReq:
      type: object
      properties:
        smsTemplateSid:
          type: string
        initialPace:
          type: string
        selectedPhoneCol:
          type: string
        sourceNumber:
          type: string
        countrySid:
          type: string
        timezoneRestrictions:
          type: boolean
        groupName:
          type: string
        contactGroupSid:
          type: string
        startTime:
          type: string
          format: date-time
        stopTime:
          type: string
          format: date-time
        selectedMamHuntGroup:
          type: string
    api.v0alpha.ScheduleSmsRes:
      type: object
      properties:
        smsGroupSid:
          type: string
    api.v0alpha.ScheduledCallback:
      type: object
      properties:
        scheduledCallbackId:
          type: string
        serviceId:
          type: string
        status:
          type: integer
          format: enum
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        phoneNumber:
          type: string
        callerId:
          type: string
        notes:
          type: string
        createDate:
          type: string
          format: date-time
        lastUpdate:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
        callbackSkills:
          type: array
          items:
            type: string
    api.v0alpha.ScheduledCallbackDetail:
      type: object
      properties:
        scheduledCallbackDetailId:
          type: string
        scheduledCallbackId:
          type: string
        key:
          type: string
        value:
          type: string
    api.v0alpha.ScheduledCallbackWithDetails:
      type: object
      properties:
        scheduledCallbackId:
          type: string
        serviceId:
          type: string
        status:
          type: integer
          format: enum
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        phoneNumber:
          type: string
        callerId:
          type: string
        skills:
          type: array
          items:
            type: string
        notes:
          type: string
        createDate:
          type: string
          format: date-time
        lastUpdate:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        name:
          type: string
        formerCallSid:
          type: string
        formerCallType:
          type: integer
          format: enum
        callbackDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ScheduledCallbackDetail'
        countrySid:
          type: string
    api.v0alpha.ScorecardsPreferences:
      type: object
      properties:
        callSamplePercentage:
          type: integer
          description: "The percentage of randomized calls shown to the user for evaluation.\n
            Must be between 1-100."
          format: uint32
        maxUserEvaluations:
          type: integer
          description: "Maximum number of evaluations per user, per category,\n over
            the given time interval"
          format: uint32
        evaluationInterval:
          type: integer
          description: The time interval over which calls are listed for scoring.
          format: enum
    api.v0alpha.ScrubEntry:
      type: object
      properties:
        countrySid:
          type: string
        listId:
          type: string
        sourceId:
          type: string
        sourceField:
          type: string
        notes:
          type: string
          description: payload
        content:
          type: string
        expirationDate:
          type: string
          format: date-time
        result:
          type: string
        type:
          type: integer
          format: enum
        countryCode:
          type: string
        createdOn:
          type: string
          description: audit
          format: date-time
        createdBy:
          type: string
    api.v0alpha.ScrubList:
      type: object
      properties:
        listId:
          type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ScrubEntry'
    api.v0alpha.ScrubListDownloadRequest:
      type: object
      properties:
        listId:
          type: string
    api.v0alpha.ScrubListRes:
      type: object
      properties:
        listId:
          type: string
        readOnly:
          type: boolean
        contentType:
          type: integer
          format: enum
        entriesAdded:
          type: string
        invalidEntries:
          type: array
          items:
            type: string
        totalInvalid:
          type: string
        invalidList:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.InvalidScrubListEntry'
    api.v0alpha.ScrubListsAutoAdd:
      type: object
      properties:
        scrubList:
          type: string
          description: Scrub list ID
        fieldId:
          type: string
          description: Field ID to be added to scrub list
        fieldName:
          type: string
          description: Field name/value used to find calldata with same name/key
      description: scrub list ids and field values used in lookup
    api.v0alpha.ScrubListsExpirationLimits:
      type: object
      properties:
        outboundExpirationLimit:
          type: array
          items:
            type: string
          description: expiration limit options for outbound calls
        inboundExpirationLimit:
          type: array
          items:
            type: string
          description: expiration limit options for inbound calls
        manualDialExpirationLimit:
          type: array
          items:
            type: string
          description: expiration limit options for manual dial calls
        previewDialExpirationLimit:
          type: array
          items:
            type: string
          description: expiration limit options for preview dial calls
      description: ScrubListsExpirationLimits - expiration time options when adding  entry
        to scrub list
    api.v0alpha.ScrubListsRes:
      type: object
      properties:
        lists:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ScrubListRes'
    api.v0alpha.ScrubProcess:
      type: object
      properties:
        listId:
          type: string
        field:
          type: string
    api.v0alpha.Search:
      type: object
      properties:
        term:
          type: string
          description: The term we are searching for
        fuzziness:
          type: string
          description: "Sets the amount of fuzziness allowed\n in matches\n Example:\n
            Searching \"term\" would also match \"temr\"\n Not compatible with a substring
            match"
        substring:
          type: boolean
          description: "Checks if a subset of the content matches\n Example:\n Searching
            \"but\" would also match \"rebuttal\"\n Not compatible with fuzziness
            (will override fuzziness)"
        negate:
          type: boolean
          description: "Specifies if the search should be negated\n Example:\n Searching
            \"term\" would match everything NOT including \"term\""
        caseSensitive:
          type: boolean
          description: Specifies if we should be case sensitive
        value:
          type: string
          description: the value of the term we are searching for
    api.v0alpha.SearchCollectionsPaginatedReq:
      type: object
      properties:
        collectionIds:
          type: array
          items:
            type: string
          description: "Specifies which collections we are searching in\n If empty
            it will search all collections."
        search:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.Search'
          description: Specifies what we are searching for
        from:
          type: string
          description: Specifies where to start in the results
        pageSize:
          type: string
          description: How many results to include in a page
        lastId:
          type: string
          description: The last entry ID in the most recently returned page
    api.v0alpha.SearchConsentByContentReq:
      type: object
      properties:
        content:
          type: string
        consentProfileId:
          type: string
          description: optional field to also filter by consent_profile_id
    api.v0alpha.SearchConsentByContentRes:
      type: object
      properties:
        consents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ConsentByContent'
    api.v0alpha.SearchContentByVersionReq:
      type: object
      properties:
        searchContent:
          type: string
          description: search for the specific content in markdown contents
        locale:
          type: string
          description: locale used for the markdown contents
        fieldMask:
          type: string
          description: field mask to filter apps that are accessible to be searched
          format: field-mask
        version:
          type: string
          description: by version
      description: request to search content in learning pages based on version
    api.v0alpha.SearchContentReq:
      type: object
      properties:
        searchContent:
          type: string
          description: search for the specific content in markdown contents
        locale:
          type: string
          description: locale used for the markdown contents
        fieldMask:
          type: string
          description: field mask to filter apps that are accessible to be searched
          format: field-mask
      description: request to search content in learning pages
    api.v0alpha.SearchRes:
      type: object
      properties:
        searchDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.LearnSearchDetails'
          description: matched urls
      description: response to search in learning pages
    api.v0alpha.SearchScrubListReq:
      type: object
      properties:
        listId:
          type: string
        term:
          type: string
    api.v0alpha.SendEmailNotificationReq:
      type: object
      properties:
        subject:
          type: string
          description: email subject
        data:
          type: string
          description: data
        message:
          type: string
          description: email message
        toEmailAddressArr:
          type: array
          items:
            type: string
          description: to email addresses
      description: request to send email notification
    api.v0alpha.SendEmailNotificationRes:
      type: object
      properties: {}
      description: response to email notification
    api.v0alpha.SendEventsReq:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SentinelEvent'
      description: request to sentinel send events
    api.v0alpha.SendEventsRes:
      type: object
      properties: {}
      description: response to sentinel send events
    api.v0alpha.SendFeedbackEmailReq:
      type: object
      properties:
        fromEmail:
          type: string
          description: from email address
        description:
          type: string
          description: email description
        sessionId:
          type: string
          description: session id
        screenshot:
          type: string
          description: email screenshot
      description: request to send feedback notifications
    api.v0alpha.SendFeedbackEmailRes:
      type: object
      properties: {}
      description: response to send feedback notifications
    api.v0alpha.SendOmniMessageReq:
      type: object
      properties:
        conversationSid:
          type: string
          description: the id of the conversation this message belongs to
        payload:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniMessagePayload'
          description: the message
        campaignSid:
          type: string
          description: the id of the chat campaign
        uiReferenceId:
          type: string
          description: a unique id created by the client to ensure it doesn't send
            the same message twice
        channelType:
          type: integer
          description: channel type
          format: enum
    api.v0alpha.SendSmsNotificationReq:
      type: object
      properties:
        message:
          type: string
        toPhoneNumArr:
          type: array
          items:
            type: string
    api.v0alpha.SendSmsNotificationRes:
      type: object
      properties:
        response:
          type: string
    api.v0alpha.SendUserVerificationEmailByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: Required. The ID of the user.
        orgId:
          type: string
          description: The ID of the org the user belongs to.
      description: Request for the SendUserVerificationEmailByOrgId RPC.
    api.v0alpha.SendUserVerificationEmailByOrgIdResponse:
      type: object
      properties: {}
      description: Response for the SendUserVerificationEmailByOrgId RPC.
    api.v0alpha.SendUserVerificationEmailRequest:
      type: object
      properties:
        userId:
          type: string
          description: Required. The ID of the user.
        orgId:
          type: string
          description: "DEPRECATED. the org_id was previously optional,\n if org_id
            needs to be provided, use SendUserVerificationEmailByOrgId rpc"
      description: Request for the SendUserVerificationEmail RPC.
    api.v0alpha.SendUserVerificationEmailResponse:
      type: object
      properties: {}
      description: Response for the SendUserVerificationEmail RPC.
    api.v0alpha.SendgridAccountByClientReq:
      type: object
      properties: {}
      description: SendgridAccountByClientReq -
    api.v0alpha.SendgridAccountByClientRes:
      type: object
      properties:
        result:
          type: boolean
          description: retult -
      description: SendgridAccountByClientRes -
    api.v0alpha.SentinelEvent:
      type: object
      properties:
        logEvent:
          $ref: '#/components/schemas/api.v0alpha.LogEvent'
      description: sentinel event
    api.v0alpha.SetAllQueueConfigSoundsFromSourceReq:
      type: object
      properties:
        toConfig:
          type: string
        config:
          type: string
        defaultProfile:
          $ref: '#/components/schemas/api.v0alpha.SetAllQueueConfigSoundsFromSourceReq_DefaultProfile'
    api.v0alpha.SetAllQueueConfigSoundsFromSourceReq_DefaultProfile:
      type: object
      properties:
        language:
          type: integer
          format: enum
        gender:
          type: integer
          format: enum
    api.v0alpha.SetAllQueueConfigSoundsFromSourceRes:
      type: object
      properties: {}
    api.v0alpha.SetAnaAccountRelationReq:
      type: object
      properties:
        parentOrgId:
          type: string
          description: Parent account to adopt child
        childOrgId:
          type: string
          description: Child account to be adopted
    api.v0alpha.SetAnaAccountRelationRes:
      type: object
      properties: {}
    api.v0alpha.SetCustomReportsEnabledReq:
      type: object
      properties: {}
    api.v0alpha.SetCustomReportsEnabledRes:
      type: object
      properties: {}
    api.v0alpha.SetDefaultDashboardReq:
      type: object
      properties:
        dashboardId:
          type: string
    api.v0alpha.SetDefaultDashboardRequest:
      type: object
      properties:
        dashboardId:
          type: string
          description: unique ID of dashboard to be set as default
        resourceId:
          type: string
          description: resource id of the dashboard
      description: SetDefaultDashboardRequest used in SetDefaultDashboard rpc
    api.v0alpha.SetDefaultDashboardRes:
      type: object
      properties: {}
    api.v0alpha.SetDefaultTimeFilterReq:
      type: object
      properties:
        defaultTimeFilter:
          type: string
    api.v0alpha.SetDefaultTimeFilterRes:
      type: object
      properties: {}
    api.v0alpha.SetOrgBillingSettingsRequest:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/api.v0alpha.OrgBillingSettings'
        fieldMask:
          type: string
          format: field-mask
      description: Request message for the SetOrgBillingSettings rpc.
    api.v0alpha.SetOrgBillingSettingsResponse:
      type: object
      properties: {}
      description: Response message for the SetOrgBillingSettings rpc.
    api.v0alpha.SetQueueConfigSoundReq:
      type: object
      properties:
        config:
          type: string
        sound:
          type: integer
          format: enum
        fileName:
          type: string
    api.v0alpha.SetQueueConfigSoundRes:
      type: object
      properties: {}
    api.v0alpha.SetTimeZoneReq:
      type: object
      properties:
        anaTimeZone:
          type: integer
          format: enum
    api.v0alpha.SetTimeZoneRes:
      type: object
      properties: {}
    api.v0alpha.SetWeeksReq:
      type: object
      properties:
        weeks:
          type: string
        orgId:
          type: string
          description: setting weeks of specified org
      description: Admin messages
    api.v0alpha.SetWeeksRes:
      type: object
      properties: {}
    api.v0alpha.SftpExportProcess:
      type: object
      properties:
        destFilepath:
          type: string
          description: where we try and write the data to on the destination filesystem
        password:
          type: string
          description: if left "", the service will attempt to use a public key instead
        address:
          type: string
          description: where we are trying to connect to.
        username:
          type: string
          description: username for sftp connection
        port:
          type: integer
          description: port we will attempt to establish a connection with
          format: int32
        fileformat:
          type: integer
          description: "File format to use (CSV, CUSTOM, TSV, etc.)\n `field_delimiter`,
            `record_dilimiter`, and `quote_fields`\n will be ignored the the format
            is not CUSTOM"
          format: enum
        prependHeaders:
          type: boolean
          description: "Specifies whether to use headers in the\n export file or not."
        fieldDelimiter:
          type: string
          description: Specifies custom field delimiter (default `,`)
        recordDelimiter:
          type: string
          description: Specifies custom record delimiter (default `\n`)
        filePattern:
          allOf:
          - $ref: '#/components/schemas/api.commons.FilePattern'
          description: Specifies the construction of the export filename
        runType:
          type: integer
          description: Run type can be RUN (default), TEST, or DISABLED
          format: enum
        header:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ExportHeader'
          description: Specifies which fields to export
        quoteFields:
          type: boolean
          description: Wrap fields with `"`
        useCustomDateFormat:
          type: boolean
          description: "Specifies whether to export using the date\n format defined
            by the field in the file\n template or use the default"
        directory:
          type: string
          description: directory to put the file in
        filename:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConstructedFilename'
          description: what to name the file
        shiftPhoneFields:
          type: boolean
          description: "If true, it will try to bunch all phone number\n fields to
            the left."
        transferConfigName:
          type: string
          description: transfer configs will be unique by name, transfer configs store
            credential data
    api.v0alpha.SftpImport:
      type: object
      properties:
        user:
          type: string
          description: "SFTP credentials. `password` will\n be tried first for authentication,\n
            if left blank, `private_key` will be tried."
        password:
          type: string
        privateKey:
          type: string
        address:
          type: string
        port:
          type: string
        filePattern:
          $ref: '#/components/schemas/api.commons.FilePattern'
        enabled:
          type: boolean
          description: We will only process if enabled
        fileTemplateId:
          type: string
          description: prefered/default template
        incremental:
          type: boolean
        encrypted:
          type: boolean
          description: "Specifies whether the files to be imported\n are encrypted
            with PGP key"
        cron:
          type: string
          description: "Should be a valid Cron expression\n based on https://en.wikipedia.org/wiki/Cron"
        timezone:
          type: string
          description: "Timezone to be used with the cron,\n if left blank it will
            default to the\n local time of whatever server it is on.\n e.g. \"America/Denver\",
            \"America/New_York\"\n Must exist in TZ database\n https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"
        transferConfigName:
          type: string
          description: Name of the transfer_config, used to find sftp configuration
      description: Takes SFTP credentials and import a file
    api.v0alpha.SftpSettings:
      type: object
      properties:
        passwd:
          type: string
        username:
          type: string
        reportFormat:
          type: string
        path:
          type: string
        authenticationType:
          type: string
        url:
          type: string
        privateKey:
          type: string
    api.v0alpha.SimpleCompareExpression:
      type: object
      properties:
        operatorType:
          type: string
        valueKey:
          type: string
        compareValue:
          type: string
      description: Simple compare expression
    api.v0alpha.SimpleHuntGroup:
      type: object
      properties:
        huntGroupSid:
          type: string
        huntGroupName:
          type: string
    api.v0alpha.SimpleRelation:
      type: object
      properties:
        clientName:
          type: string
        orgId:
          type: string
    api.v0alpha.SimpleRelations:
      type: object
      properties:
        simpleRelations:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SimpleRelation'
    api.v0alpha.Skill:
      type: object
      properties:
        level:
          type: string
        name:
          type: string
        description:
          type: string
        skillSid:
          type: string
    api.v0alpha.SkillUpdate:
      type: object
      properties:
        skillSid:
          type: string
        level:
          type: string
      description: Entity message for UpdateAgentSkillsReq message
    api.v0alpha.SmsActivitySearchReq:
      type: object
      properties:
        toNumber:
          type: string
        srcNumber:
          type: string
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        entireHistory:
          type: boolean
        sentOnly:
          type: boolean
    api.v0alpha.SmsActivitySearchRes:
      type: object
      properties:
        smsGroupWithIntents:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsGroupWithIntents'
        smsTaskInfoRes:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsTaskInfoRes'
    api.v0alpha.SmsConversation:
      type: object
      properties:
        smsConversationId:
          type: string
        inboundSmsGroupId:
          type: string
        smsTaskParent:
          type: string
        createdOn:
          type: string
          format: date-time
    api.v0alpha.SmsConversationAssignedAgent:
      type: object
      properties:
        smsConversationId:
          type: string
        assignedAgentId:
          type: string
        primaryAgent:
          type: boolean
        notify:
          type: boolean
        createdOn:
          type: string
          format: date-time
    api.v0alpha.SmsConversationAudit:
      type: object
      properties:
        smsConversationAuditId:
          type: string
        smsConversationId:
          type: string
        smsTaskSid:
          type: string
        smsReceivedRepliesSid:
          type: string
        action:
          type: string
        description:
          type: string
        agentId:
          type: string
        createdOn:
          type: string
          format: date-time
    api.v0alpha.SmsGroupInfo:
      type: object
      properties:
        smsGroupSid:
          type: string
        countrySid:
          type: string
        smsMessageSid:
          type: string
        name:
          type: string
        startTime:
          type: string
          format: date-time
        stopTime:
          type: string
          format: date-time
        sendsPerMinute:
          type: string
        status:
          type: string
        totalCost:
          type: number
          format: double
        callerIds:
          type: array
          items:
            type: string
        clientName:
          type: string
        totalScheduled:
          type: string
        totalCompleted:
          type: string
        contactGroupSidStr:
          type: string
        contactGroupSid:
          type: string
        phoneNumCol:
          type: string
        useTzRestrictions:
          type: string
        messageCount:
          type: integer
          format: int32
        todaysMessageCount:
          type: integer
          format: int32
        dateCreated:
          type: string
          format: date-time
    api.v0alpha.SmsGroupWithIntents:
      type: object
      properties:
        smsGroupInfoRes:
          $ref: '#/components/schemas/api.v0alpha.SmsGroupInfo'
        smsIntentGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsIntentGroup'
        smsMamSettings:
          $ref: '#/components/schemas/api.v0alpha.SmsMamSettings'
    api.v0alpha.SmsIntentGroup:
      type: object
      properties:
        smsIntentGroupSid:
          type: string
        smsGroupSid:
          type: string
        name:
          type: string
        description:
          type: string
        actionKey:
          type: string
        actionDetail:
          type: string
        actionTrigger:
          type: string
        priority:
          type: string
    api.v0alpha.SmsIntentTemplate:
      type: object
      properties:
        smsIntentTemplateSid:
          type: string
        name:
          type: string
        description:
          type: string
        actionKey:
          type: string
        actionDetail:
          type: string
        actionTrigger:
          type: string
        priority:
          type: string
        lastUpdated:
          type: string
          format: date-time
    api.v0alpha.SmsMamSettings:
      type: object
      properties:
        mamHgSid:
          type: string
        mamHgName:
          type: string
    api.v0alpha.SmsMessage:
      type: object
      properties:
        smsMessageSid:
          type: string
        message:
          type: string
    api.v0alpha.SmsNumbers:
      type: object
      properties:
        smsNumberSid:
          type: string
        countrySid:
          type: string
        number:
          type: string
        providerName:
          type: string
        notes:
          type: string
        ivrReference:
          type: string
        clientName:
          type: string
        isTollFree:
          type: boolean
        srcNumberType:
          type: string
        lastUpdated:
          type: string
          format: date-time
    api.v0alpha.SmsReceivedReplies:
      type: object
      properties:
        smsReceivedRepliesSid:
          type: string
        smsTaskSid:
          type: string
        srcNumber:
          type: string
        dstNumber:
          type: string
        msgUuid:
          type: string
        receivedReply:
          type: string
        receivedTime:
          type: string
          format: date-time
        analysisReport:
          type: string
        inboundSmsGroupId:
          type: string
        cost:
          type: number
          format: double
        status:
          type: integer
          format: enum
        units:
          type: string
    api.v0alpha.SmsSettings:
      type: object
      properties:
        phoneNumbers:
          type: array
          items:
            type: string
        srcNumber:
          type: string
    api.v0alpha.SmsTaskInfoRes:
      type: object
      properties:
        smsTaskSid:
          type: string
        smsGroupSid:
          type: string
        deliveryStatus:
          type: string
        deliveryStatusMessage:
          type: string
        data:
          type: string
        cost:
          type: number
          format: double
        msgUuid:
          type: string
        msgTime:
          type: string
          format: date-time
        status:
          type: string
        phoneNumCol:
          type: string
        units:
          type: string
        smsTaskParent:
          type: string
        mamAgentResponse:
          $ref: '#/components/schemas/api.v0alpha.MamAgentResponse'
    api.v0alpha.SmsTaskInfoWithReply:
      type: object
      properties:
        smsTaskInfoRes:
          $ref: '#/components/schemas/api.v0alpha.SmsTaskInfoRes'
        smsReceivedReplies:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsReceivedReplies'
    api.v0alpha.SmsTemplate:
      type: object
      properties:
        smsTemplateSid:
          type: string
        message:
          type: string
        lastUpdated:
          type: string
          format: date-time
    api.v0alpha.SmsTemplateWithIntents:
      type: object
      properties:
        smsTemplate:
          $ref: '#/components/schemas/api.v0alpha.SmsTemplate'
        smsIntentTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SmsIntentTemplate'
    api.v0alpha.SnippetReq:
      type: object
      properties:
        locale:
          type: string
          description: locale used for the markdown contents
        version:
          type: string
          description: version
      description: request to get snippets
    api.v0alpha.SnippetRes:
      type: object
      properties:
        snippetDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.LearnSnippetDetails'
      description: response to get snippets
    api.v0alpha.SortCriteria:
      type: object
      properties:
        ordering:
          type: array
          items:
            type: integer
            format: enum
          description: The ordering, ascending or descending
        fieldOrder:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.FieldIndex'
    api.v0alpha.SplitByEqualParts:
      type: object
      properties:
        partSize:
          type: integer
          format: int32
    api.v0alpha.SplitByMaxSize:
      type: object
      properties:
        maxSize:
          type: integer
          format: int32
    api.v0alpha.SplitByUnique:
      type: object
      properties:
        splitOnFields:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.FieldIndex'
    api.v0alpha.SplitCriteria:
      type: object
      properties:
        unique:
          $ref: '#/components/schemas/api.v0alpha.SplitByUnique'
        maxSize:
          $ref: '#/components/schemas/api.v0alpha.SplitByMaxSize'
        equalParts:
          $ref: '#/components/schemas/api.v0alpha.SplitByEqualParts'
    api.v0alpha.StandaloneReq:
      type: object
      properties:
        locale:
          type: string
          description: locale used for the markdown contents
        category:
          type: string
          description: categorize the articles
        version:
          type: string
          description: version
      description: request to get standalone articles
    api.v0alpha.StandaloneRes:
      type: object
      properties:
        standaloneDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.LearnStandaloneDetails'
      description: standalone articles
    api.v0alpha.StartSecureFormReq:
      type: object
      properties:
        portalId:
          type: string
        voiceSessionSid:
          type: string
    api.v0alpha.StartSecureFormRes:
      type: object
      properties: {}
    api.v0alpha.StatisticsColumnDefinition:
      type: object
      properties:
        headerLabel:
          type: string
        statisticId:
          type: string
        toolTip:
          type: string
    api.v0alpha.StatisticsData:
      type: object
      properties:
        agentSessionCount:
          type: string
        ivrDuration:
          type: string
        agentWaitDuration:
          type: string
        callWaitDuration:
          type: string
        holdDuration:
          type: string
        manualDuration:
          type: string
        pauseDuration:
          type: string
        previewDuration:
          type: string
        suspendedDuration:
          type: string
        talkDuration:
          type: string
        transferDuration:
          type: string
        wrapUpDuration:
          type: string
        agentName:
          type: string
        huntGroupName:
          type: string
        callCount:
          type: string
        webLoginTime:
          type: string
          format: date-time
        agentSid:
          type: string
        huntGroupSid:
          type: string
    api.v0alpha.StopAllInboundSmsGroupsReq:
      type: object
      properties:
        inboundSmsGroupIdsArr:
          type: array
          items:
            type: string
    api.v0alpha.StopAllInboundSmsGroupsRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.StopAllOutboundSmsGroupsReq:
      type: object
      properties:
        smsGroupSidsArr:
          type: array
          items:
            type: string
    api.v0alpha.StopAllOutboundSmsGroupsRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.StopInboundSmsGroupReq:
      type: object
      properties:
        inboundSmsGroupId:
          type: string
    api.v0alpha.StopInboundSmsGroupRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.StopSoundboardEntityReq:
      type: object
      properties:
        sessionSid:
          type: string
          description: the session sid for the agent
        soundInstanceId:
          type: string
          description: the id of the instance of sound being played
      description: message used in a request for stopping audio from the soundbooard
    api.v0alpha.StopSoundboardEntityRes:
      type: object
      properties: {}
      description: message used in a response for stopping audio from the soundbooard
    api.v0alpha.StoreStaticImageReq:
      type: object
      properties:
        image:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.LearnImage'
          description: LearnImage
      description: request to upload url for static images
    api.v0alpha.StoreStaticImageRes:
      type: object
      properties:
        image:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.LearnImage'
          description: updated LearnImage details
      description: response to upload url for static images
    api.v0alpha.StreamCollectionReq:
      type: object
      properties:
        collectionId:
          type: string
    api.v0alpha.StreamListRequest:
      type: object
      properties:
        orgId:
          type: string
        regionId:
          type: string
        elementId:
          type: string
          description: "the element/node we want to upload the list to.\n must be
            an api_entrypoint type element.\n all chunks will be concat together in
            order for each element streamed.\n if this field is ever empty the whole
            call will error."
        chunk:
          type: string
          description: "up to 2mb of raw bytes of the list we are uploading.\n all
            chunks streamed are concat together and uploaded after streaming ends."
          format: bytes
    api.v0alpha.StreamListResponse:
      type: object
      properties: {}
    api.v0alpha.SuggestResponseReq:
      type: object
      properties:
        conversationId:
          type: string
    api.v0alpha.SuggestResponseRes:
      type: object
      properties:
        suggestedResponse:
          type: string
    api.v0alpha.SumProcess:
      type: object
      properties:
        field:
          type: string
          description: field to sum
        newName:
          type: string
          description: new_name for the summed field
        groupBy:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.GroupBy'
          description: "optional group_by to aggregate data\n before summing the desired
            field"
        filter:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.FilterOperation'
          description: "conditions to limit which record's fields will be summed\n
            we will AND these together"
    api.v0alpha.TableTemplateProperty:
      type: object
      properties:
        xmlClientPropertySid:
          type: string
        name:
          type: string
      description: TableTemplate property
    api.v0alpha.TestConnectedInboxRes:
      type: object
      properties:
        success:
          type: boolean
          description: whether the test was a success
        details:
          type: string
          description: test-specific details
      description: TestConnectedInboxRes - result of testing a connected inbox login
    api.v0alpha.TimeSpan_Range:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
      description: absolute time range
    api.v0alpha.TimeZone:
      type: object
      properties:
        anaTimeZone:
          type: integer
          format: enum
    api.v0alpha.TransferColdToAgentReply:
      type: object
      properties: {}
    api.v0alpha.TransferColdToAgentRequest:
      type: object
      properties:
        destinationAgentId:
          type: string
        sessionSid:
          type: string
    api.v0alpha.TransferColdToOutboundReply:
      type: object
      properties: {}
    api.v0alpha.TransferColdToOutboundRequest:
      type: object
      properties:
        callerId:
          type: string
        destination:
          type: string
        reservedCarriers:
          type: array
          items:
            type: string
        sessionSid:
          type: string
    api.v0alpha.TransferSettings:
      type: object
      properties:
        allowed:
          type: boolean
        showFiltering:
          type: boolean
        requeueType:
          type: integer
          format: enum
        type:
          type: array
          items:
            type: integer
            format: enum
        defaultCountrySid:
          type: string
        showCountrySelector:
          type: boolean
        hasCustomTransferNumber:
          type: boolean
        defaultTransferNumber:
          type: string
        hasCustomCallerId:
          type: boolean
        defaultCallerId:
          type: string
        showTransfersPhoneBook:
          type: boolean
        showCallerIdPhoneBook:
          type: boolean
        handOffType:
          type: array
          items:
            type: integer
            format: enum
        recordingStatus:
          type: integer
          format: enum
        defaultCallerIdCountrySid:
          type: string
        showCallerIdCountrySelector:
          type: boolean
        startRecordTransferTargets:
          type: array
          items:
            type: string
        stopRecordTransferTargets:
          type: array
          items:
            type: string
        defaultFilteringIncludeAllOnlineAgents:
          type: boolean
        requeueTypeCustomValue:
          type: string
        agentTransferHuntGroupFilter:
          type: boolean
        agentTransferRecordingStatus:
          type: integer
          description: Determines what should happen with the recording status on
            agent transfers
          format: enum
        requeueTransferRecordingStatus:
          type: integer
          description: Determines what should happen with the recording status on
            requeue transfers
          format: enum
        openTransferRecordingStatus:
          type: integer
          description: Determines what should happen with the recording status on
            open transfers
          format: enum
        naturalComplianceOverride:
          type: boolean
          description: Compliance Settings for call transfers
        transferNaturalComplianceRuleSetName:
          type: string
        complianceMetadata:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ComplianceMetadata'
        callWhitelist:
          type: boolean
    api.v0alpha.TransferWarmToAgentApproveReply:
      type: object
      properties: {}
    api.v0alpha.TransferWarmToAgentApproveRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.TransferWarmToAgentCancelReply:
      type: object
      properties: {}
    api.v0alpha.TransferWarmToAgentCancelRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.TransferWarmToAgentStartReply:
      type: object
      properties: {}
    api.v0alpha.TransferWarmToAgentStartRequest:
      type: object
      properties:
        destinationAgentId:
          type: string
        callerHold:
          type: boolean
        sessionSid:
          type: string
        skills:
          type: object
          additionalProperties:
            type: boolean
    api.v0alpha.TransferWarmToOutboundApproveReply:
      type: object
      properties: {}
    api.v0alpha.TransferWarmToOutboundApproveRequest:
      type: object
      properties:
        sessionSid:
          type: string
          description: the session sid of the current agent
        memberIdentifiers:
          type: array
          items:
            type: string
          description: "the ids of the transfer member to want to be joined with the
            caller\n it will hang up all others (you don't need need to include the
            caller)\n If you leave this blank/empty it will include all members in
            the approval"
      description: the request used to approve a warm outbound transfer
    api.v0alpha.TransferWarmToOutboundCancelReply:
      type: object
      properties: {}
    api.v0alpha.TransferWarmToOutboundCancelRequest:
      type: object
      properties:
        sessionSid:
          type: string
    api.v0alpha.TransferWarmToOutboundStartReply:
      type: object
      properties: {}
    api.v0alpha.TransferWarmToOutboundStartRequest:
      type: object
      properties:
        callerId:
          type: string
        destination:
          type: string
        reservedCarriers:
          type: array
          items:
            type: string
        callerHold:
          type: boolean
        sessionSid:
          type: string
    api.v0alpha.TriggerDetails:
      type: object
      properties:
        triggerName:
          type: string
        triggerDesc:
          type: string
        triggerStatus:
          type: string
        triggerDuration:
          type: string
        callTypes:
          type: array
          items:
            type: integer
            format: enum
        triggerParameters:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.TriggerParameters'
    api.v0alpha.TriggerParameters:
      type: object
      properties:
        actionKey:
          type: string
        actionString:
          type: string
    api.v0alpha.TtsVoice:
      type: object
      properties:
        ttsVoiceSid:
          type: string
        displayName:
          type: string
        actualName:
          type: string
        port:
          type: string
      description: Entity message for ListTtsVoice RPC.
    api.v0alpha.UnArchiveOrganizationRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Required. Archives the specified organization
      description: The request for api.v0alpha.UnArchiveOrganization
    api.v0alpha.UnArchiveOrganizationResponse:
      type: object
      properties:
        organizationDescription:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.OrganizationDescription'
          description: Description of Organization that was unarchived.
      description: The response for api.v0alpha.UnArchiveOrganization
    api.v0alpha.UnMigratedUser:
      type: object
      properties:
        agentSid:
          type: string
          description: Optional agent_sid or login_sid (must have one)
        loginSid:
          type: string
        clientSid:
          type: string
        userName:
          type: string
        userId:
          type: string
        loginDisabled:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
    api.v0alpha.UnassignScenarioReq:
      type: object
      properties:
        cplRuleSetId:
          type: string
        cplScenarioId:
          type: string
    api.v0alpha.UnblockUserRequest:
      type: object
      properties:
        userId:
          type: string
    api.v0alpha.UnblockUserResponse:
      type: object
      properties: {}
    api.v0alpha.UnholdTransferMemberReq:
      type: object
      properties:
        sessionSid:
          type: string
        memberIdentifier:
          type: string
    api.v0alpha.UnholdTransferMemberRes:
      type: object
      properties: {}
    api.v0alpha.UpdateAdminClientPreferencesRequest:
      type: object
      properties:
        orgId:
          type: string
        adminClientPreferences:
          $ref: '#/components/schemas/api.v0alpha.AdminClientPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateAdminClientPreferences
    api.v0alpha.UpdateAdminClientPreferencesResponse:
      type: object
      properties: {}
      description: Response for UpdateAdminClientPreferences
    api.v0alpha.UpdateAgentAssignedHuntGroupReq:
      type: object
      properties:
        huntGroupSid:
          type: string
        skills:
          type: object
          additionalProperties:
            type: string
        replaceSkills:
          type: boolean
    api.v0alpha.UpdateAgentAssignedHuntGroupRes:
      type: object
      properties: {}
    api.v0alpha.UpdateAgentCallResponseValueReq:
      type: object
      properties:
        responseId:
          type: string
        value:
          type: string
    api.v0alpha.UpdateAgentCallResponseValueRes:
      type: object
      properties: {}
    api.v0alpha.UpdateAgentHuntGroupReq:
      type: object
      properties:
        huntGroupSid:
          type: string
        userId:
          type: string
    api.v0alpha.UpdateAgentHuntGroupRes:
      type: object
      properties: {}
    api.v0alpha.UpdateAgentPauseCodeRequest:
      type: object
      properties:
        pauseCode:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.PauseCode'
          description: "the pause_code.xml_client_property_sid field is\n used in
            this context. The pause code with the\n given xml_client_property_sid
            will be updated\n with the info as defined by the other\n pause_code fields."
      description: Request message for the UpdateAgentPauseCode RPC.
    api.v0alpha.UpdateAgentPauseCodeResponse:
      type: object
      properties: {}
      description: Response message for the UpdateAgentPauseCode RPC.
    api.v0alpha.UpdateAgentPreferencesRequest:
      type: object
      properties:
        agentPreferences:
          $ref: '#/components/schemas/api.v0alpha.AgentPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateAgentPreferences
    api.v0alpha.UpdateAgentPreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateAgentPreferences
    api.v0alpha.UpdateAgentProfileGroupRequest:
      type: object
      properties:
        agentProfileGroup:
          $ref: '#/components/schemas/api.commons.org.AgentProfileGroup'
    api.v0alpha.UpdateAgentProfileGroupResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateAgentResponseDataReq:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        responses:
          type: object
          additionalProperties:
            type: string
    api.v0alpha.UpdateAgentResponseDataRes:
      type: object
      properties: {}
    api.v0alpha.UpdateAgentSkillReq:
      type: object
      properties:
        agentSkillSid:
          type: string
        name:
          type: string
        description:
          type: string
    api.v0alpha.UpdateAgentSkillRes:
      type: object
      properties: {}
    api.v0alpha.UpdateAgentSkillsReply:
      type: object
      properties: {}
      description: message used in response to updating an agent's skills
    api.v0alpha.UpdateAgentSkillsReq:
      type: object
      properties:
        userId:
          type: string
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.SkillUpdate'
      description: Request message for the UpdateAgentSkills RPC.
    api.v0alpha.UpdateAgentSkillsRequest:
      type: object
      properties:
        sessionSid:
          type: string
          description: the session sid for the agent
        skills:
          type: object
          additionalProperties:
            type: string
          description: the skills to update
        replaceSkills:
          type: boolean
          description: true to replace the skills or false to add them
      description: message used to update an agent's skills
    api.v0alpha.UpdateAgentSkillsRes:
      type: object
      properties: {}
      description: Response message for the UpdateAgentSkills RPC.
    api.v0alpha.UpdateAgentStatisticsTemplateRequest:
      type: object
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.AgentLoginGuiStatisticsTemplate'
          description: Agent statistics template to update.
      description: Request message for the UpdateAgentStatisticsTemplate RPC.
    api.v0alpha.UpdateAgentStatisticsTemplateResponse:
      type: object
      properties: {}
      description: Response message for the UpdateAgentStatisticsTemplate RPC.
    api.v0alpha.UpdateAgentTriggerTemplateRequest:
      type: object
      properties:
        agentTriggerTemplate:
          $ref: '#/components/schemas/api.v0alpha.AgentTriggerTemplate'
    api.v0alpha.UpdateAgentTriggerTemplateResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateAuthConnectionSettingsRequest:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/api.v0alpha.AuthConnectionSettings'
        clientSecret:
          type: string
          description: the secret for the connection. Only used for Azure identity
            type.
        fieldMask:
          type: string
          format: field-mask
      description: Request message for the UpdateAuthConnectionSettings rpc.
    api.v0alpha.UpdateAuthConnectionSettingsResponse:
      type: object
      properties: {}
      description: Response message for the UpdateAuthConnectionSettings rpc.
    api.v0alpha.UpdateAuthenticationPreferencesRequest:
      type: object
      properties:
        authenticationPreferences:
          $ref: '#/components/schemas/api.v0alpha.AuthenticationPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateAuthenticationPreferences
    api.v0alpha.UpdateAuthenticationPreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateAuthenticationPreferences
    api.v0alpha.UpdateBroadcastPreferencesRequest:
      type: object
      properties:
        broadcastPreferences:
          $ref: '#/components/schemas/api.v0alpha.BroadcastPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateBroadcastPreferences
    api.v0alpha.UpdateBroadcastPreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateBroadcastPreferences
    api.v0alpha.UpdateBulkUsersDisabledRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
        disable:
          type: boolean
    api.v0alpha.UpdateBulkUsersDisabledResponse:
      type: object
      properties:
        updatedIds:
          type: array
          items:
            type: string
          description: updated_ids is a list of every id that was updated.
    api.v0alpha.UpdateBusinessPreferencesRequest:
      type: object
      properties:
        businessPreferences:
          $ref: '#/components/schemas/api.v0alpha.BusinessPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateBusinessPreferences
    api.v0alpha.UpdateBusinessPreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateBusinessPreferences
    api.v0alpha.UpdateByVersionReq:
      type: object
      properties:
        url:
          type: string
        locale:
          type: string
        content:
          type: string
        version:
          type: string
        message:
          type: string
          description: commit message
        title:
          type: string
          description: title of the article
      description: request to update learning pages content based on the url by version
    api.v0alpha.UpdateCampaignPacingSpeedReq:
      type: object
      properties:
        campaignSid:
          type: string
          description: the campaign identifier
        channelType:
          type: integer
          description: the campaign's channel type
          format: enum
        campaignDirection:
          type: integer
          description: the campaign direction
          format: enum
        sendsPerHour:
          type: string
          description: sends per hour
        campaignModuleSid:
          type: string
          description: the campaignModules identifier
      description: "Request to update pacing speed for a campaign\n Pacing speed updates
        are possible only for outbound campaigns like Email|SMS (not for CHAT)"
    api.v0alpha.UpdateCampaignPacingSpeedRes:
      type: object
      properties:
        referenceId:
          type: string
          description: send back ghost notifier referenceID
      description: Response to update pacing speed for a campaign
    api.v0alpha.UpdateCampaignReq:
      type: object
      properties:
        campaign:
          allOf:
          - $ref: '#/components/schemas/api.commons.OmniCampaign'
          description: the campaign to update
        userId:
          type: string
          description: the identifier of the user who initiated the request
        fieldMask:
          type: string
          description: list of all fields being updated
          format: field-mask
      description: Request to update a campaign
    api.v0alpha.UpdateCampaignRes:
      type: object
      properties:
        notifierId:
          type: string
          description: the identifier for the ghost notification
      description: UpdateCampaignRes - result of updating a campaign
    api.v0alpha.UpdateCannedMessageGroupReq:
      type: object
      properties:
        cannedMessageGroupId:
          type: string
          description: canned_message_group_id
        name:
          type: string
          description: canned message group name
        description:
          type: string
          description: group description
      description: request to update canned message group details
    api.v0alpha.UpdateCannedMessageGroupRes:
      type: object
      properties: {}
      description: response to update canned message group details
    api.v0alpha.UpdateCannedMessageReq:
      type: object
      properties:
        cannedMessageId:
          type: string
          description: canned_message_id
        name:
          type: string
          description: canned message name
        description:
          type: string
          description: description
        messageBody:
          type: string
          description: message details
        cannedMessageGroupId:
          type: string
          description: canned message group id
        allowsHtml:
          type: boolean
          description: allows html
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniAttachment'
          description: attachments
      description: request to update canned message details
    api.v0alpha.UpdateClientInfoDisplayTemplateRequest:
      type: object
      properties:
        clientInfoDisplayTemplate:
          $ref: '#/components/schemas/api.v0alpha.ClientInfoDisplayTemplate'
    api.v0alpha.UpdateClientInfoDisplayTemplateResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateCompliancePreferencesRequest:
      type: object
      properties:
        compliancePreferences:
          $ref: '#/components/schemas/api.v0alpha.CompliancePreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateCompliancePreferences
    api.v0alpha.UpdateCompliancePreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateCompliancePreferences
    api.v0alpha.UpdateConnectedInboxReq:
      type: object
      properties:
        connectedInbox:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConnectedInbox'
          description: the connected inbox to update with the specified fields updated
        fieldMask:
          type: string
          description: the fields to update
          format: field-mask
      description: UpdateConnectedInboxReq - request to update a connected inbox
    api.v0alpha.UpdateConsentReq:
      type: object
      properties:
        consentId:
          type: string
        consentProfileId:
          type: string
        content:
          type: string
          description: payload
        recorded:
          type: string
          format: date-time
        revoked:
          type: string
          format: date-time
        expire:
          type: string
          format: date-time
        referringUrl:
          type: string
        channel:
          allOf:
          - $ref: '#/components/schemas/api.commons.CommType'
          description: channel (email, sms, phone, etc)
        topic:
          type: string
          description: topic (future payment vs payment reminder vs account reminders
            vs receipts)
        revokedReason:
          type: string
          description: notate revocation (reason)
        grantedReason:
          type: string
          description: notate grant reason
        proof:
          type: string
          description: proof of consent (pdf, voice recording etc) this will be filename
            which can be retrieved via matrix-fts
        conditionDaysOfTheWeek:
          type: array
          items:
            type: integer
            format: enum
          description: consent conditions
        conditionTimeOfDayFrom:
          type: string
        conditionTimeOfDayTo:
          type: string
        conditionFrom:
          type: string
          format: date-time
        conditionTo:
          type: string
          format: date-time
        notes:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ConsentCondition'
          description: Consent Conditions
        contentType:
          type: integer
          description: content_type (call, email, sms, account number)
          format: enum
        channelType:
          type: integer
          format: enum
    api.v0alpha.UpdateConsentTopicReq:
      type: object
      properties:
        originalTopic:
          type: string
        newTopic:
          type: string
    api.v0alpha.UpdateContactFieldDescriptionReq:
      type: object
      properties:
        contactFieldDescriptionSid:
          type: integer
          format: int32
        fieldName:
          type: string
        isPhone:
          type: boolean
        displayFormatString:
          type: string
    api.v0alpha.UpdateContactFieldDescriptionRes:
      type: object
      properties: {}
    api.v0alpha.UpdateContactPreferencesRequest:
      type: object
      properties:
        contactPreferences:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.ContactPreferences'
          description: Contact preferences object, required to update
        fieldMask:
          type: string
          description: Field mask for update request
          format: field-mask
      description: Request message for the UpdateContactPreferences rpc.
    api.v0alpha.UpdateContactPreferencesResponse:
      type: object
      properties: {}
      description: Empty response message for UpdateContactPreferences.
    api.v0alpha.UpdateCustomDataKeyReq:
      type: object
      properties:
        dataKey:
          $ref: '#/components/schemas/api.v0alpha.CustomDataKey'
      description: Request message for the UpdateCustomDataKey RPC
    api.v0alpha.UpdateCustomDataKeyRes:
      type: object
      properties: {}
      description: Response message for the UpdateCustomDataKey RPC
    api.v0alpha.UpdateCustomReportFilterRequest:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/api.v0alpha.CustomReportFilter'
      description: Request message for UpdateCustomReportFilterSet
    api.v0alpha.UpdateCustomReportFilterResponse:
      type: object
      properties: {}
      description: Response message for UpdateCustomReportFilter
    api.v0alpha.UpdateCustomUnsubscribeLinkReq:
      type: object
      properties:
        customUnsubscribeLinkSid:
          type: string
          description: custom unsubscribe link sid
        linkName:
          type: string
          description: link name
        linkUrl:
          type: string
          description: link url
        description:
          type: string
          description: link description
      description: Request to update unsubscribe link details
    api.v0alpha.UpdateCustomUnsubscribeLinkRes:
      type: object
      properties:
        validated:
          type: boolean
          description: validation of link url
        dateValidated:
          type: string
          description: when the url was last validated
          format: date-time
      description: Response to update unsubscribe link details
    api.v0alpha.UpdateDashboardGeneralPreferencesRequest:
      type: object
      properties:
        dashboardPreferences:
          $ref: '#/components/schemas/api.v0alpha.DashboardPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateDashboardGeneralPreferences
    api.v0alpha.UpdateDashboardGeneralPreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateDashboardGeneralPreferences
    api.v0alpha.UpdateDashboardLayoutRequest:
      type: object
      properties:
        dashboardId:
          type: string
          description: unique ID for dashboard to update
        layout:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DashboardLayout'
          description: layout of associated panels
        resourceId:
          type: string
          description: resource id of the dashboard
      description: UpdateDashboardTitleAndDescriptionRequest used for the update RPC
    api.v0alpha.UpdateDashboardQueuePreferencesRequest:
      type: object
      properties:
        dashboardQueuePreferences:
          $ref: '#/components/schemas/api.v0alpha.DashboardQueuePreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateDashboardQueuePreferences
    api.v0alpha.UpdateDashboardQueuePreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateDashboardQueuePreferences
    api.v0alpha.UpdateDashboardRequest:
      type: object
      properties:
        dashboardId:
          type: string
          description: unique ID for this dashboard
        title:
          type: string
          description: required dashboard title
        description:
          type: string
          description: optional dashboard description
        layout:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DashboardLayout'
          description: layout of associated panels
        view:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DashboardView'
          description: viewing params of dashboard
        type:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DashboardType'
          description: dashboard type, with type specific components
        resourceId:
          type: string
          description: resource id of the dashboard
      description: UpdateDashboard used for the update RPC
    api.v0alpha.UpdateDashboardTitleAndDescriptionRequest:
      type: object
      properties:
        dashboardId:
          type: string
          description: unique ID for dashboard to update
        title:
          type: string
          description: required new dashboard title
        description:
          type: string
          description: optional new dashboard description
        resourceId:
          type: string
          description: resource id of the dashboard
      description: UpdateDashboardTitleAndDescriptionResponse used for the update
        RPC
    api.v0alpha.UpdateDashboardViewRequest:
      type: object
      properties:
        dashboardId:
          type: string
          description: unique ID of dashboard to update
        view:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.DashboardView'
          description: the dashboards viewing params
        resourceId:
          type: string
          description: resource id of the dashboard
      description: UpdateDashboardViewRequest  used in the update RPC
    api.v0alpha.UpdateDispositionReq:
      type: object
      properties:
        dispositionSid:
          type: string
          description: the disposition identifier
        disposition:
          type: string
          description: the updated disposition string
      description: UpdateDispositionReq - request to update disposition
    api.v0alpha.UpdateEmailSmsPreferencesRequest:
      type: object
      properties:
        emailSmsPreferences:
          $ref: '#/components/schemas/api.v0alpha.EmailSmsPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateEmailSmsPreferences
    api.v0alpha.UpdateEmailSmsPreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateEmailSmsPreferences
    api.v0alpha.UpdateEndOfDayPreferencesRequest:
      type: object
      properties:
        endOfDayPreferences:
          $ref: '#/components/schemas/api.v0alpha.EndOfDayPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateEndOfDayPreferences
    api.v0alpha.UpdateEndOfDayPreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateEndOfDayPreferences
    api.v0alpha.UpdateExtensionReq:
      type: object
      properties:
        extensionMessage:
          $ref: '#/components/schemas/api.v0alpha.Extension'
    api.v0alpha.UpdateExtensionRes:
      type: object
      properties: {}
    api.v0alpha.UpdateFieldReq:
      type: object
      properties:
        name:
          type: string
        type:
          type: integer
          format: enum
        dateModified:
          type: string
          format: date-time
        newName:
          type: string
        metadata:
          $ref: '#/components/schemas/api.v0alpha.FieldMetadata'
        description:
          type: string
    api.v0alpha.UpdateFilterPreferencesRequest:
      type: object
      properties:
        filterPreferences:
          $ref: '#/components/schemas/api.v0alpha.FilterPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateFilterPreferences
    api.v0alpha.UpdateFilterPreferencesResponse:
      type: object
      properties: {}
      description: Empty response UpdateFilterPreferences
    api.v0alpha.UpdateGreetingForExtensionReq:
      type: object
      properties:
        pbxExtension:
          type: string
        filename:
          type: string
    api.v0alpha.UpdateGreetingForExtensionRes:
      type: object
      properties: {}
    api.v0alpha.UpdateInboundSmsGroupReq:
      type: object
      properties:
        inboundSmsGroupId:
          type: string
        smsNumberSid:
          type: string
        name:
          type: string
        status:
          type: integer
          format: enum
        startTime:
          type: string
          format: date-time
        stopTime:
          type: string
          format: date-time
        totalCost:
          type: number
          format: double
        inboundSmsTemplateId:
          type: string
        reportSettings:
          $ref: '#/components/schemas/api.v0alpha.ReportSettings'
    api.v0alpha.UpdateInboundSmsGroupRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.UpdateInboundSmsTemplateReq:
      type: object
      properties:
        inboundSmsTemplateId:
          type: string
        smsNumberSid:
          type: string
        name:
          type: string
        smsIntentTemplateSid:
          type: array
          items:
            type: string
        reportSettings:
          $ref: '#/components/schemas/api.v0alpha.ReportSettings'
    api.v0alpha.UpdateInboundSmsTemplateRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.UpdateMyUserPasswordRequest:
      type: object
      properties:
        password:
          type: string
          description: "the USER_EDIT_PASSWORD permission is require\n to update the
            current user's own password."
        currentPassword:
          type: string
    api.v0alpha.UpdateMyUserPasswordResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateMyUserRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        partnerAgentId:
          type: string
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        linkbackNumbers:
          type: array
          items:
            type: string
        callerIds:
          type: array
          items:
            type: string
        userName:
          type: string
        defaultApp:
          type: integer
          description: Default app the user starts on
          format: enum
        passwordResetRequired:
          type: boolean
        agentProfileGroupId:
          type: string
        labelEntities:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Label'
          description: A list of labels to assign to the user
        email:
          type: string
          description: The users email
        localePreferencesOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: The override for the users locale preferences
        fieldMask:
          type: string
          description: List of all fields being updated
          format: field-mask
    api.v0alpha.UpdateMyUserResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateMyUserSubscriptionRequest:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.UserSubscription'
          description: "Required.\n Must have org id and subscription id."
        fieldMask:
          type: string
          description: "Required. Only fields in field mask will be updated.\n Valid
            fields include: \"filters\", \"room303\""
          format: field-mask
      description: Request for updating a user subscription.
    api.v0alpha.UpdateMyUserSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v0alpha.UserSubscription'
      description: "Response for updating a user subscription.\n Contains a single
        user subscription."
    api.v0alpha.UpdateOrganizationPreferencesRequest:
      type: object
      properties:
        organizationPreferences:
          $ref: '#/components/schemas/api.v0alpha.OrganizationPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateOrganizationPreferences
    api.v0alpha.UpdateOrganizationPreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateOrganizationPreferences
    api.v0alpha.UpdateOrganizationRequest:
      type: object
      properties:
        orgId:
          type: string
          description: organization id
        timeZone:
          type: integer
          description: organizations time zone
          format: enum
        name:
          type: string
          description: organizations name
        fieldMask:
          type: string
          description: Field mask for update request
          format: field-mask
      description: The request for api.v0alpha.UpdateOrganization
    api.v0alpha.UpdateOrganizationResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateP3OwningOrgRequest:
      type: object
      properties:
        orgId:
          type: string
        ownerId:
          type: string
    api.v0alpha.UpdateP3OwningOrgResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateP3PermissionGroupByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
          description: optional org_id. If not is passsed in peel off token.
        permissionGroupId:
          type: string
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            type: integer
            format: enum
    api.v0alpha.UpdateP3PermissionGroupByOrgIdResponse:
      type: object
      properties:
        p3PermissionGroup:
          $ref: '#/components/schemas/api.v0alpha.P3PermissionGroup'
    api.v0alpha.UpdateP3PermissionGroupRequest:
      type: object
      properties:
        orgId:
          type: string
          description: 'DEPRECATED: org_id. If this was previously used use the UpdateP3PermissionGroupByOrgId
            rpc instead.'
        permissionGroupId:
          type: string
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            type: integer
            format: enum
    api.v0alpha.UpdateP3PermissionGroupResponse:
      type: object
      properties:
        p3PermissionGroup:
          $ref: '#/components/schemas/api.v0alpha.P3PermissionGroup'
    api.v0alpha.UpdateP3UserNameRequest:
      type: object
      properties:
        agentSid:
          type: string
          description: Optional agent_sid or login_sid (must have one)
        loginSid:
          type: string
        userName:
          type: string
        clientSid:
          type: string
    api.v0alpha.UpdateP3UserNameResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateP3UserSidsRequest:
      type: object
      properties:
        userId:
          type: string
        agentSid:
          type: string
        loginSid:
          type: string
        fieldMask:
          type: string
          format: field-mask
    api.v0alpha.UpdateP3UserSidsResponse:
      type: object
      properties: {}
    api.v0alpha.UpdatePBXExtensionReq:
      type: object
      properties:
        pbxExtension:
          type: string
        emailSubject:
          type: string
        emailBody:
          type: string
        emailAddresses:
          type: string
    api.v0alpha.UpdatePBXExtensionRes:
      type: object
      properties: {}
    api.v0alpha.UpdatePermissionGroupRequest:
      type: object
      properties:
        permissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.PermissionGroup'
          description: Desired resulting PermissionGroup after update.
      description: The request for api.v0alpha.UpdatePermissionGroup.
    api.v0alpha.UpdatePermissionGroupResponse:
      type: object
      properties: {}
      description: The response for api.v0alpha.UpdatePermissionGroup.
    api.v0alpha.UpdatePhoneBookEntryReq:
      type: object
      properties:
        phoneBookSid:
          type: string
          description: The sid that matches this phone book entry to a specific phone
            book.
        huntGroupSid:
          type: string
          description: "Entry type will be 'Hunt Group' if this field is set.\n Otherwise
            the entry type will be 'Client'."
        entryName:
          type: string
          description: The entry name
        standard:
          $ref: '#/components/schemas/api.v0alpha.PhoneBookStandardNumber'
        sipUri:
          $ref: '#/components/schemas/api.v0alpha.PhoneBookSIPURI'
        phoneNumberHidden:
          type: boolean
          description: Whether the phone number is displayed to the agent or not.
            The entry name will always be displayed.
      description: Request message for the UpdatePhoneBookEntry RPC
    api.v0alpha.UpdatePhoneBookEntryRes:
      type: object
      properties: {}
      description: Response message for the UpdatePhoneBookEntry RPC
    api.v0alpha.UpdatePhonePreferencesRequest:
      type: object
      properties:
        phonePreferences:
          $ref: '#/components/schemas/api.v0alpha.PhonePreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdatePhonePreferences
    api.v0alpha.UpdatePhonePreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdatePhonePreferences
    api.v0alpha.UpdatePreviewRecordToFinishedReq:
      type: object
      properties:
        agentSessionSid:
          type: string
        taskSid:
          type: string
    api.v0alpha.UpdatePreviewRecordToFinishedRes:
      type: object
      properties: {}
    api.v0alpha.UpdateQueueConfigReq:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig'
    api.v0alpha.UpdateQueueConfigRes:
      type: object
      properties: {}
    api.v0alpha.UpdateRecordingPreferencesRequest:
      type: object
      properties:
        recordingPreferences:
          $ref: '#/components/schemas/api.v0alpha.RecordingPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateRecordingPreferences
    api.v0alpha.UpdateRecordingPreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateRecordingPreferences
    api.v0alpha.UpdateReq:
      type: object
      properties:
        url:
          type: string
        locale:
          type: string
        content:
          type: string
        message:
          type: string
          description: commit message
        title:
          type: string
          description: title of the article
      description: request to update learning pages content based on the url
    api.v0alpha.UpdateRes:
      type: object
      properties: {}
      description: response to update learning pages content
    api.v0alpha.UpdateScenarioReq:
      type: object
      properties:
        scenario:
          $ref: '#/components/schemas/api.v0alpha.Scenario'
    api.v0alpha.UpdateScenarioRes:
      type: object
      properties:
        scenario:
          $ref: '#/components/schemas/api.v0alpha.Scenario'
    api.v0alpha.UpdateSchedulePreferencesRequest:
      type: object
      properties:
        schedulePreferences:
          $ref: '#/components/schemas/api.v0alpha.SchedulePreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateSchedulePreferences
    api.v0alpha.UpdateSchedulePreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateSchedulePreferences
    api.v0alpha.UpdateScheduledCallbackReq:
      type: object
      properties:
        scheduledCallbackId:
          type: string
        newStatus:
          type: integer
          format: enum
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        phoneNumber:
          type: string
        callerId:
          type: string
        skills:
          type: array
          items:
            type: string
        lastUpdatedBy:
          type: string
        notes:
          type: string
        callbackDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.ScheduledCallbackDetail'
        name:
          type: string
    api.v0alpha.UpdateScheduledCallbackRes:
      type: object
      properties: {}
    api.v0alpha.UpdateScheduledCallbackToCanceledReq:
      type: object
      properties:
        scheduledCallbackId:
          type: string
        serviceId:
          type: string
    api.v0alpha.UpdateScheduledCallbackToCanceledRes:
      type: object
      properties: {}
    api.v0alpha.UpdateScheduledCallbackToClosedReq:
      type: object
      properties:
        scheduledCallbackId:
          type: string
        manualDialCallSid:
          type: string
        serviceId:
          type: string
    api.v0alpha.UpdateScheduledCallbackToClosedRes:
      type: object
      properties: {}
    api.v0alpha.UpdateScheduledCallbackToReadyReq:
      type: object
      properties:
        scheduledCallbackId:
          type: string
        isAutoReturn:
          type: boolean
        serviceId:
          type: string
    api.v0alpha.UpdateScheduledCallbackToReadyRes:
      type: object
      properties: {}
    api.v0alpha.UpdateScorecardsPreferencesRequest:
      type: object
      properties:
        scorecardsPreferences:
          $ref: '#/components/schemas/api.v0alpha.ScorecardsPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateScorecardsPreferences
    api.v0alpha.UpdateScorecardsPreferencesResponse:
      type: object
      properties: {}
      description: Response for UpdateScorecardsPreferences
    api.v0alpha.UpdateScrubEntryReq:
      type: object
      properties:
        listId:
          type: string
          description: keys
        notes:
          type: string
          description: updateable fields
        content:
          type: string
        expirationDate:
          type: string
          format: date-time
        countryCode:
          type: string
    api.v0alpha.UpdateScrubEntryRes:
      type: object
      properties: {}
    api.v0alpha.UpdateSignatureReq:
      type: object
      properties:
        signature:
          allOf:
          - $ref: '#/components/schemas/api.commons.Signature'
          description: the signature details to update
        fieldMask:
          type: string
          description: the field mask to update with
          format: field-mask
      description: UpdateSignatureReq - request to update a message signature
    api.v0alpha.UpdateSignatureRes:
      type: object
      properties:
        signature:
          allOf:
          - $ref: '#/components/schemas/api.commons.Signature'
          description: the updated signature
      description: UpdateSignatureRes - response to updating a message signature
    api.v0alpha.UpdateSmsConversationReq:
      type: object
      properties:
        smsConversationId:
          type: string
        inboundSmsGroupId:
          type: string
        smsTaskParent:
          type: string
    api.v0alpha.UpdateSmsConversationRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.UpdateSmsGroupRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.UpdateSmsIntentTemplateRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.UpdateSmsSourceNumberReq:
      type: object
      properties:
        smsNumberSid:
          type: string
        countrySid:
          type: string
        number:
          type: string
        providerName:
          type: string
        notes:
          type: string
        ivrReference:
          type: string
        srcNumberType:
          type: string
    api.v0alpha.UpdateSmsSourceNumberRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.UpdateSmsTemplateReq:
      type: object
      properties:
        smsTemplateSid:
          type: string
        message:
          type: string
        smsIntentTemplateSid:
          type: array
          items:
            type: string
    api.v0alpha.UpdateSmsTemplateRes:
      type: object
      properties:
        result:
          type: boolean
    api.v0alpha.UpdateTaskStatusReq:
      type: object
      properties:
        taskSid:
          type: string
        status:
          type: integer
          format: enum
    api.v0alpha.UpdateUploadNameReq:
      type: object
      properties:
        currentFileName:
          type: string
        newFileName:
          type: string
    api.v0alpha.UpdateUploadNameRes:
      type: object
      properties: {}
    api.v0alpha.UpdateUserCallerIdRequest:
      type: object
      properties:
        userId:
          type: string
        userCallerId:
          type: string
    api.v0alpha.UpdateUserCallerIdResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateUserDisabledByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: "the CUSTOMER_SUPPORT permission is required.\n the id of the
            user to update."
        orgId:
          type: string
          description: the id of the org the user belongs to.
        disable:
          type: boolean
          description: Disables/Enables the User. true disables, false enables.
    api.v0alpha.UpdateUserDisabledByOrgIdResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateUserDisabledRequest:
      type: object
      properties:
        userId:
          type: string
          description: "the USER_EDIT permission is required.\n the id of the user
            to update."
        disable:
          type: boolean
          description: Disables/Enables the User. true disables, false enables.
        orgId:
          type: string
          description: "DEPRECATED: org id was previously optional,\n if org_id needs
            to be provided, use UpdateUserDisabledByOrgId rpc"
    api.v0alpha.UpdateUserDisabledResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateUserNeoPermissionGroupsRequest:
      type: object
      properties:
        assignUserId:
          type: string
        permissionGroupIds:
          type: array
          items:
            type: string
      description: The request for api.v0alpha.UpdateUserNeoPermissionGroups.
    api.v0alpha.UpdateUserNeoPermissionGroupsResponse:
      type: object
      properties: {}
      description: The response for api.v0alpha.UpdateUserNeoPermissionGroups.
    api.v0alpha.UpdateUserPasswordByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: "the CUSTOMER_SUPPORT permission is require\n to update a specific
            user's password\n in a specific org."
        password:
          type: string
        currentPassword:
          type: string
        orgId:
          type: string
    api.v0alpha.UpdateUserPasswordByOrgIdResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateUserPasswordRequest:
      type: object
      properties:
        userId:
          type: string
          description: "the USER_EDIT permission is require\n to update another user's
            password\n in the same org as the current user."
        password:
          type: string
        currentPassword:
          type: string
        orgId:
          type: string
          description: "DEPRECATED: org_id was previously optional,\n if org_id needs
            to be provided, use UpdateUserPasswordByOrgId rpc"
    api.v0alpha.UpdateUserPasswordResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateUserRequest:
      type: object
      properties:
        userId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        partnerAgentId:
          type: string
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        linkbackNumbers:
          type: array
          items:
            type: string
        callerIds:
          type: array
          items:
            type: string
        userName:
          type: string
        defaultApp:
          type: integer
          description: Default app the user starts on
          format: enum
        userCallerId:
          type: string
          description: "DEPRECATED: user_caller_id was previously optional,\n if user_caller_id
            needs to be provided, use UpdateUserCallerId rpc"
        passwordResetRequired:
          type: boolean
        agentProfileGroupId:
          type: string
        labelEntities:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Label'
          description: A list of labels to assign to the user
        email:
          type: string
          description: The users email
        localePreferencesOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: The override for the users locale preferences
        fieldMask:
          type: string
          description: List of all fields being updated
          format: field-mask
    api.v0alpha.UpdateUserResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateUserSubscriptionRequest:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.UserSubscription'
          description: "Required.\n Must have org id, user id, and subscription id."
        fieldMask:
          type: string
          description: "Required. Only fields in field mask will be updated.\n Valid
            fields include: \"filters\", \"room303\""
          format: field-mask
      description: Request for updating a user subscription.
    api.v0alpha.UpdateUserSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v0alpha.UserSubscription'
      description: "Response for updating a user subscription.\n Contains a single
        user subscription."
    api.v0alpha.UpdateVerifiedEmailReq:
      type: object
      properties:
        verifiedEmailSid:
          type: string
        description:
          type: string
      description: request to update verified email description
    api.v0alpha.UpdateVoiceAnalyticsPreferencesEnabledRequest:
      type: object
      properties:
        voiceAnalyticsPreferences:
          $ref: '#/components/schemas/api.v0alpha.VoiceAnalyticsPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateVoiceAnalyticsPreferencesEnabled
    api.v0alpha.UpdateVoiceAnalyticsPreferencesEnabledResponse:
      type: object
      properties: {}
      description: Empty response for UpdateVoiceAnalyticsPreferencesEnabled
    api.v0alpha.UpdateVoiceAnalyticsPreferencesRequest:
      type: object
      properties:
        voiceAnalyticsPreferences:
          $ref: '#/components/schemas/api.v0alpha.VoiceAnalyticsPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateVoiceAnalyticsPreferences
    api.v0alpha.UpdateVoiceAnalyticsPreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateVoiceAnalyticsPreferences
    api.v0alpha.UpdateVoicemailBoxReq:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        pbxExtension:
          type: string
    api.v0alpha.UpdateVoicemailBoxRes:
      type: object
      properties: {}
    api.v0alpha.UpdateVoicemailFlagReadReq:
      type: object
      properties:
        mailBox:
          type: string
        callerSid:
          type: string
        callerType:
          type: integer
          format: enum
        flagRead:
          type: boolean
    api.v0alpha.UpdateVoicemailFlagReadRes:
      type: object
      properties:
        flagRead:
          type: boolean
    api.v0alpha.UpdateWebLinkTemplateRequest:
      type: object
      properties:
        webLinkTemplate:
          $ref: '#/components/schemas/api.v0alpha.WebLinkTemplate'
    api.v0alpha.UpdateWebLinkTemplateResponse:
      type: object
      properties: {}
    api.v0alpha.UpdateWebhookPreferencesRequest:
      type: object
      properties:
        webhookPreferences:
          $ref: '#/components/schemas/api.v0alpha.WebhookPreferences'
        fieldMask:
          type: string
          format: field-mask
      description: Request for UpdateWebhookPreferences
    api.v0alpha.UpdateWebhookPreferencesResponse:
      type: object
      properties: {}
      description: Empty response for UpdateWebhookPreferences
    api.v0alpha.UpdateWhatsAppNumberRequest:
      type: object
      properties:
        whatsappNumber:
          allOf:
          - $ref: '#/components/schemas/api.commons.WhatsAppNumber'
          description: whatsapp number details
        fieldMask:
          type: string
          description: list of all fields being updated
          format: field-mask
      description: Request message for update whatsapp number
    api.v0alpha.UpdateWhatsAppNumberResponse:
      type: object
      properties:
        whatsappNumber:
          allOf:
          - $ref: '#/components/schemas/api.commons.WhatsAppNumber'
          description: whatsapp number details
      description: Response message for update whatsapp number
    api.v0alpha.UploadDynamicScreenshotReq:
      type: object
      properties:
        dataLearnId:
          type: string
          description: learn id name
        version:
          type: string
          description: current version
        locale:
          type: string
          description: locale used for the markdown contents
        content:
          type: string
          description: image content
      description: upload dynamic learning image screenshot request
    api.v0alpha.UploadDynamicScreenshotRes:
      type: object
      properties:
        dataLearnId:
          type: string
          description: learn id name
        downloadUrl:
          type: string
          description: download url
      description: upload dynamic learning image screenshot response
    api.v0alpha.UploadStaticImageReq:
      type: object
      properties:
        image:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.LearnImage'
          description: image details
      description: request to upload image for learning articles
    api.v0alpha.UploadStaticImageRes:
      type: object
      properties:
        image:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.LearnImage'
          description: updated image details
      description: response to upload image for learning articles
    api.v0alpha.User:
      type: object
      properties:
        userId:
          type: string
        orgId:
          type: string
        regionId:
          type: string
        partnerAgentId:
          type: string
        loginSid:
          type: string
          description: legacy keys
        agentSid:
          type: string
        regions:
          type: array
          items:
            type: string
        email:
          type: string
        callerIds:
          type: array
          items:
            type: string
        linkbackNumbers:
          type: array
          items:
            type: string
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        passwordResetRequired:
          type: boolean
        connectionId:
          type: string
          description: "connection id is the id of the auth connection that the\n
            user is coming from if it is a delgated user. If the user\n is not delgated
            this will be nil."
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        labelEntities:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Label'
          description: A list of labels assigned to the user
      description: user_id or login_sid and region_id must be specified
    api.v0alpha.UserDescription:
      type: object
      properties:
        userId:
          type: string
          description: basic info
        orgId:
          type: string
        userName:
          type: string
        loginDisabled:
          type: boolean
        accountOwner:
          type: boolean
        orgName:
          type: string
        orgBillingId:
          type: string
        linkbackNumbers:
          type: array
          items:
            type: string
        callerIds:
          type: array
          items:
            type: string
        loginSid:
          type: string
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PermissionGroup'
        agentSid:
          type: string
        agentProfileGroupId:
          type: string
          description: Agent profile group details.
        agentProfileGroupName:
          type: string
        p3PermissionGroupId:
          type: string
          description: p3 permissions
        p3PermissionGroupName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        strikeCount:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        labelEntities:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Label'
          description: A list of labels assigned to the user
        delegated:
          type: boolean
          description: "Boolean for whether or not the user is a delegated login authenticated
            through a third party provider.\n Delegated login users are from connected
            login managements like Azure or Okta"
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        email:
          type: string
          description: The email of the user. empty if none set
        huntGroupSid:
          type: string
          description: Details of the agent-assigned hunt group.
        huntGroupName:
          type: string
        trusts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Trust'
          description: Trusts assigned to the user.
        mfaInfo:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: MfaInfo of the user.
        emailVerified:
          type: boolean
          description: Whether or not the users email is verified.
    api.v0alpha.UserDetails:
      type: object
      properties:
        userId:
          type: string
        userName:
          type: string
        organizationName:
          type: string
        locationName:
          type: string
        p3PermissionGroup:
          type: string
          description: Legacy P3 permission group
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.PermissionGroup'
          description: List of permission groups for this user.
        defaultRegion:
          type: string
        allowedRegions:
          type: array
          items:
            type: string
        disabled:
          type: boolean
        partnerAgentId:
          type: string
        agentSid:
          type: string
        orgId:
          type: string
        linkbackNumbers:
          type: array
          items:
            type: string
        callerIds:
          type: array
          items:
            type: string
        loginSid:
          type: string
        defaultApp:
          type: integer
          description: Default app the user starts on
          format: enum
        userCallerId:
          type: string
        huntGroupSid:
          type: string
        huntGroupName:
          type: string
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Skill'
        firstName:
          type: string
        lastName:
          type: string
        created:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        passwordResetRequired:
          type: boolean
        agentProfileGroupId:
          type: string
        labelEntities:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Label'
          description: A list of labels assigned to the user
        delegated:
          type: boolean
          description: "Boolean for whether or not the user is a delegated login authenticated
            through a third party provider.\n Delegated login users are from connected
            login managements like Azure or Okta"
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        email:
          type: string
          description: email of the user. empty if none set
        emailVerified:
          type: boolean
          description: if the user's email is verified
        localePreferencesOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: The override for the users locale preferences
        trusts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Trust'
          description: Trusts assigned to the user.
    api.v0alpha.UserDirectoryEntry:
      type: object
      properties:
        userId:
          type: string
        fullName:
          type: string
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    api.v0alpha.UserSubscription:
      type: object
      properties:
        subscriptionId:
          type: string
          description: "Required.\n The unique id given to the setting. Used for updating
            and deleting."
        eventType:
          type: integer
          description: "Required.\n\n Used by matrix-notify.\n It receives an event
            on an event type and\n uses it to look up the targets for that event type.\n
            e.g. api.commons.audit.EventType_DUMMY_APPLICAION_DID_SOMETHING"
          format: enum
        userId:
          type: string
          description: Required.
        room303:
          $ref: '#/components/schemas/api.v0alpha.UserSubscription_Room303'
        delivery:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.UserSubscription_Delivery'
          description: 'TODO: add email, sms, etc.'
        version:
          type: string
          description: Optional. Updates must specify current version or be rejected.
        filters:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.FieldValueFilter'
          description: "Optional.\n If set, user only notified for events that match
            ALL filters."
      description: "UserSubscription contains the info to send a notification to a
        user.\n It contains a user, the event type, a delivery method, and custom
        app settings."
    api.v0alpha.UserSubscription_Delivery:
      type: object
      properties:
        transferConfigName:
          type: string
          description: "Required.\n Used to lookup how the notification is going to
            happen through Delivery."
    api.v0alpha.UserSubscription_Room303:
      type: object
      properties:
        roomName:
          type: string
          description: "Optional.\n If set, user will be notified in the room specificed.\n
            If not set the message will be sent in the default\n system room."
      description: '-------------------- Deliver Methods --------------------'
    api.v0alpha.ValidateFieldReq:
      type: object
      properties:
        voiceSessionSid:
          type: string
        validationType:
          type: integer
          format: enum
        fieldName:
          type: string
    api.v0alpha.ValidateFieldRes:
      type: object
      properties:
        valid:
          type: boolean
        reason:
          type: string
    api.v0alpha.Verbiage:
      type: object
      properties:
        order:
          type: string
        header:
          type: string
        body:
          type: string
    api.v0alpha.VersionDetails:
      type: object
      properties:
        version:
          type: string
          description: version
        versionName:
          type: string
          description: version name
        dateCreated:
          type: string
          description: version creation date
          format: date-time
        datePublished:
          type: string
          description: version publised date
          format: date-time
        status:
          type: string
          description: published status
      description: version details
    api.v0alpha.View:
      type: object
      properties:
        clientSid:
          type: string
        weeks:
          type: string
    api.v0alpha.ViewQueueReq:
      type: object
      properties:
        newerThan:
          type: string
          description: return events with upload_ts times newer than this timestamp
          format: date-time
        noNewerThan:
          type: string
          description: do not return events with upload_ts times newer than this timestamp
          format: date-time
        afterEventId:
          type: string
          description: skip records with event_id smaller than this id
        numberOfRecords:
          type: string
          description: max number of records to retrieve
    api.v0alpha.Visualization:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    api.v0alpha.Visualizations:
      type: object
      properties:
        visualizations:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.Visualization'
    api.v0alpha.VizDescription:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        showThe:
          type: string
        watcher:
          type: boolean
        tcnModifiedDate:
          type: string
        description:
          type: string
    api.v0alpha.VoiceAnalyticsPreferences:
      type: object
      properties:
        enabled:
          type: boolean
          description: "Optional. When enabled call recordings will be transcribed
            and archived by\n localmixer in voice analytics."
        redact:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.VoiceAnalytics_Redact'
          description: "Optional. List of redactions to be performed, when voice analytics
            is\n enabled, on each call recording and transcript."
        notify:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.VoiceAnalytics_Notify'
          description: Optional. Flagging transcript notification preferences.
        billingNotify:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.VoiceAnalytics_Notify'
          description: Optional. Billing report notification preferences.
        numberFormat:
          type: string
          description: Optional. Number format for transcript dispositions.
        redactAllDigits:
          type: boolean
          description: "Optional. Will eventually be deprecated. When voice analytics
            is enabled\n and this is true all cardinal numbers in each call recording
            and transcript\n will be redacted."
        silenceThreshold:
          type: integer
          description: "Required. Minimum milliseconds of silence to occur before
            considered to\n be silence by voice analytics."
          format: uint32
        talkOverThreshold:
          type: integer
          description: "Required. Minimum milliseconds of talk over to occur before
            considered to\n be talk over by voice analytics."
          format: uint32
      description: "Preferences for voice analytics. Primarily consumed and interpreted
        by\n localmixer when mixing and transcribing call recordings."
    api.v0alpha.VoiceAnalytics_Notify:
      type: object
      properties:
        cron:
          type: string
          description: "Optional. Cron pattern determining notification frequency.
            Defaults to\n every 15 minutes when not specified."
    api.v0alpha.VoiceAnalytics_Number:
      type: object
      properties:
        kind:
          type: integer
          description: Optional. The kind of number to redact.
          format: enum
        minConsecutive:
          type: integer
          description: "Optional. When value is non zero only numbers composed of
            at least\n `min_consecutive` digits will be redacted. For example, when
            the\n transcript contains the number `one two three four five six` redaction\n
            will not occur when `min_consecutive` is greater than 6."
          format: uint32
        maxConsecutive:
          type: integer
          description: "Optional. When value is non zero only numbers composed of
            at most\n `max_consecutive` digits will be redacted. For example, when
            the\n transcript contains the number `one two three four five six` redaction\n
            will not occur when `max_consecutive` is less than 6."
          format: uint32
        slop:
          type: integer
          description: "slop is the number of extra words that can be in between digits
            and\n still count as a number. For example: slop of 2 with min_consecutive
            3\n would allow \"one uh two and three\" to count as a number."
          format: uint32
    api.v0alpha.VoiceAnalytics_Redact:
      type: object
      properties:
        number:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.VoiceAnalytics_Number'
          description: Optional. Redact numbers.
    api.v0alpha.WaitTimeAnnouncements_Config:
      type: object
      properties:
        firstSeconds:
          type: string
          description: first announcement played to caller.
        repeatingSeconds:
          type: string
          description: repeats announcement after given seconds.
        threshold:
          type: string
          description: "no announcement is played unless the callers wait time\n is
            greater than or equal to the given threshold."
    api.v0alpha.WaitTimeAnnouncements_Disableable:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/api.v0alpha.WaitTimeAnnouncements_Config'
        disable:
          $ref: '#/components/schemas/api.v0alpha.QueueConfig_Disable'
    api.v0alpha.WarmCallerTransferApproveReq:
      type: object
      properties:
        sessionSid:
          type: string
          description: the session sid for the agent
        reason:
          type: string
          description: the reason for the approve
      description: message used to approve a warm caller transfer
    api.v0alpha.WarmCallerTransferApproveRes:
      type: object
      properties: {}
      description: message used in response to approving a wamr caller transfer
    api.v0alpha.WarmCallerTransferCancelReq:
      type: object
      properties:
        sessionSid:
          type: string
          description: the session sid for the agent
        reason:
          type: string
          description: the reason for the cancel
      description: message used to cancel a warm caller transfer
    api.v0alpha.WarmCallerTransferCancelRes:
      type: object
      properties: {}
      description: message used in response to canceling a wamr caller transfer
    api.v0alpha.WarmCallerTransferStartReq:
      type: object
      properties:
        sessionSid:
          type: string
          description: the session sid for the agent
        callSid:
          type: string
          description: the sid for the destination caller
        callType:
          type: integer
          description: the type for the destination caller
          format: enum
        callerHold:
          type: boolean
          description: whether or not we should mute current caller ro not
      description: message used to start a warm caller transfer
    api.v0alpha.WarmCallerTransferStartRes:
      type: object
      properties: {}
      description: message used in response to start a warm caller transfer
    api.v0alpha.WebAgent:
      type: object
      properties:
        openSips:
          $ref: '#/components/schemas/api.v0alpha.WebAgent_OpenSips'
        enginePriority:
          $ref: '#/components/schemas/api.v0alpha.WebAgent_EnginePriority'
        logLevel:
          type: string
        useStun:
          type: string
        useFastStun:
          type: string
        useFastIce:
          type: string
        iceTimeout:
          type: string
        setFinalCodec:
          type: string
        useRport:
          type: string
        server:
          $ref: '#/components/schemas/api.v0alpha.WebAgent_Server'
        baseUrl:
          type: string
        stunServerAddress:
          type: string
    api.v0alpha.WebAgent_EnginePriority:
      type: object
      properties:
        java:
          type: string
        webrtc:
          type: string
        ns:
          type: string
        flash:
          type: string
        app:
          type: string
        p2p:
          type: string
        accessNum:
          type: string
        native:
          type: string
    api.v0alpha.WebAgent_OpenSips:
      type: object
      properties:
        address:
          type: string
    api.v0alpha.WebAgent_Server:
      type: object
      properties:
        sip:
          type: string
        webrtc:
          type: string
    api.v0alpha.WebEntrypointProcess:
      type: object
      properties:
        httpRequests:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.HttpReq'
          description: "the requests to make, in order, to get to our records.\n Last
            request in the array must always be able to be parsed by the file template,
            or the template represented by the file_template_id\n a nil, or 0 length
            array for http_requests will fail the entrypoint.\n See comments on the
            HttpReq message for using templated values in the requests."
        fileTemplateId:
          type: string
        fileTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v0alpha.FileTemplate'
          description: if set, the process will use this exact template during processing
        name:
          type: string
          description: "The name of this process. -YYYYMMDD will be attached.\n If
            empty, defaults to web-entrypoint-<now>.\n If scheduled through the lms-api,
            the element name will be used if left blank"
        cron:
          type: string
          description: the cron string, just like sftp_import process
        timezone:
          type: string
          description: Specifies the timezone to be used by the cron
        enabled:
          type: boolean
          description: if false, the cron will not put events int he queue when triggered
    api.v0alpha.WebExchangeProcess:
      type: object
      properties:
        httpRequests:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.HttpReq'
        errorThreshold:
          type: string
          description: threshold for a failed process. if threshold is exceeded, entire
            process fails
      description: "WebExchangeProcess is an lms exchange process that lets the user
        upload data to third part api.\n right now rest is supported with non bulk
        uploads."
    api.v0alpha.WebLink:
      type: object
      properties:
        displayName:
          type: string
        description:
          type: string
        linkUrl:
          type: string
        isJsLink:
          type: boolean
        tooltipMissingFields:
          type: array
          items:
            type: string
        huntGroupParameterSid:
          type: string
    api.v0alpha.WebLinkBaseOption:
      type: object
      properties:
        staticText:
          $ref: '#/components/schemas/api.v0alpha.WebLinkBaseOption_StaticText'
        ttsField:
          $ref: '#/components/schemas/api.v0alpha.WebLinkBaseOption_TtsField'
        agentField:
          $ref: '#/components/schemas/api.v0alpha.WebLinkBaseOption_AgentField'
        dataKeyField:
          $ref: '#/components/schemas/api.v0alpha.WebLinkBaseOption_DataKeyField'
        dataCollect:
          $ref: '#/components/schemas/api.v0alpha.WebLinkBaseOption_DataCollect'
        dataDip:
          $ref: '#/components/schemas/api.v0alpha.WebLinkBaseOption_DataDip'
        ivrData:
          $ref: '#/components/schemas/api.v0alpha.WebLinkBaseOption_IvrData'
        phoneField:
          $ref: '#/components/schemas/api.v0alpha.WebLinkBaseOption_PhoneField'
        sipHeaderData:
          $ref: '#/components/schemas/api.v0alpha.WebLinkBaseOption_SipHeaderData'
        postalField:
          $ref: '#/components/schemas/api.v0alpha.WebLinkBaseOption_PostalField'
    api.v0alpha.WebLinkBaseOption_AgentField:
      type: object
      properties:
        option:
          type: integer
          format: enum
    api.v0alpha.WebLinkBaseOption_DataCollect:
      type: object
      properties:
        value:
          type: string
    api.v0alpha.WebLinkBaseOption_DataDip:
      type: object
      properties:
        value:
          type: string
    api.v0alpha.WebLinkBaseOption_DataKeyField:
      type: object
      properties:
        clientPropertiesSid:
          type: string
        propertyKey:
          type: string
        propertyValue:
          type: string
    api.v0alpha.WebLinkBaseOption_IvrData:
      type: object
      properties:
        value:
          type: string
    api.v0alpha.WebLinkBaseOption_PhoneField:
      type: object
      properties:
        option:
          type: integer
          format: enum
    api.v0alpha.WebLinkBaseOption_PostalField:
      type: object
      properties:
        option:
          type: integer
          format: enum
    api.v0alpha.WebLinkBaseOption_SipHeaderData:
      type: object
      properties:
        value:
          type: string
    api.v0alpha.WebLinkBaseOption_StaticText:
      type: object
      properties:
        value:
          type: string
    api.v0alpha.WebLinkBaseOption_TtsField:
      type: object
      properties:
        contactFieldDescriptionSid:
          type: string
        fieldName:
          type: string
        displayFormatString:
          type: string
    api.v0alpha.WebLinkParameter:
      type: object
      properties:
        key:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.WebLinkBaseOption'
    api.v0alpha.WebLinkTemplate:
      type: object
      properties:
        webLinkTemplateId:
          type: string
        displayName:
          type: string
        description:
          type: string
        isJsLink:
          type: boolean
        baseUrl:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.WebLinkBaseOption'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/api.v0alpha.WebLinkParameter'
    api.v0alpha.WebhookPreferences:
      type: object
      properties:
        pushUrlsEnabled:
          type: boolean
        callResultPushUrl:
          type: string
        agentResponsePushUrl:
          type: string
      description: Wrapper WebhookPreferences object for get response and update request
    api.v0alpha.WeeksSummary:
      type: object
      properties:
        weeksCurrent:
          type: string
        weeksPeak:
          type: string
        weeksEditor:
          type: string
        proStatus:
          type: boolean
    api.v0alpha.WfmExportProcess:
      type: object
      properties:
        single:
          type: string
        multi:
          $ref: '#/components/schemas/api.v0alpha.WfmMultiSkill'
    api.v0alpha.WfmMultiSkill:
      type: object
      properties: {}
    api.v0alpha.ZipCodeField:
      type: object
      properties:
        cfdSid:
          type: string
        fieldName:
          type: string
      description: Zip code field for scrubbing
    api.v1alpha1.agentsmith.AgentSessionEndEvent:
      type: object
      properties: {}
      description: AgentSessionEndEvent is the event that is triggered when the agent
        session is closed.
    api.v1alpha1.agentsmith.AgentStateChangeEvent:
      type: object
      properties:
        oldState:
          type: integer
          description: the old state of the agent
          format: enum
        newState:
          type: integer
          description: the new state of the agent
          format: enum
        empty:
          $ref: '#/components/schemas/api.v1alpha1.agentsmith.EmptyState'
      description: AgentStateChangeEvent is the event that is triggered when the agent
        state changes in the agent interface.
    api.v1alpha1.agentsmith.AgentVoiceEndEvent:
      type: object
      properties: {}
      description: AgentVoiceEndEvent is the event that is triggered when the agent
        ends a voice session.
    api.v1alpha1.agentsmith.AgentVoiceStartEvent:
      type: object
      properties:
        sipDialUrl:
          type: string
          description: the sip dial url that can be used to connect to the agent's
            voice session.
      description: AgentVoiceStartEvent is the event that is triggered when the agent
        starts a voice session.
    api.v1alpha1.agentsmith.EmptyState:
      type: object
      properties: {}
      description: EmptyState is a debugging state (for now)
    api.v1alpha1.agentsmith.FollowAgentReq:
      type: object
      properties:
        userId:
          type: string
          description: user_id of the given agent that can be obtain from ...
        asmSessionSid:
          type: string
          description: asm_session_sid of the given agent that can be obtain from
            ...
      description: FollowAgentReq is the request for the FollowAgent method.
    api.v1alpha1.agentsmith.FollowAgentRes:
      type: object
      properties:
        ts:
          type: string
          description: the timestamp of the event
          format: date-time
        agentStateChange:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.agentsmith.AgentStateChangeEvent'
          description: A generic state change event that has been triggered in the
            agent interface
        agentVoiceStart:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.agentsmith.AgentVoiceStartEvent'
          description: The voice agent session start event
        agentVoiceEnd:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.agentsmith.AgentVoiceEndEvent'
          description: the voice agent session end event
        agentSessionEnd:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.agentsmith.AgentSessionEndEvent'
          description: "the agent session end event that is triggered when the agent
            session is closed. After this event the connection\n will be closed by
            the server."
      description: "FollowAgentRes is the response for the FollowAgent method. Each
        message is an event associated with the\n agent session and represents a change
        in the state of the agent session."
    api.v1alpha1.agenttraining.CompleteAgentLearningOpportunityRequest:
      type: object
      properties:
        learningOpportunityId:
          type: string
      description: "CompleteAgentLearningOpportunityRequest represents an agent\n
        request to complete a learning opportunity assigned to that agent."
    api.v1alpha1.agenttraining.CompleteAgentLearningOpportunityResponse:
      type: object
      properties:
        learningOpportunity:
          $ref: '#/components/schemas/api.commons.LearningOpportunity'
      description: CompleteAgentLearningOpportunityResponse represents the completed
        learning opportunity.
    api.v1alpha1.agenttraining.CreateLearningOpportunityRequest:
      type: object
      properties:
        learningOpportunity:
          $ref: '#/components/schemas/api.commons.LearningOpportunity'
      description: CreateLearningOpportunityRequest represents a request to create
        a new learning opportunity.
    api.v1alpha1.agenttraining.CreateLearningOpportunityResponse:
      type: object
      properties:
        learningOpportunity:
          $ref: '#/components/schemas/api.commons.LearningOpportunity'
      description: CreateLearningOpportunityResponse represents the created learning
        opportunity.
    api.v1alpha1.agenttraining.DeleteLearningOpportunityByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
        learningOpportunityId:
          type: string
      description: DeleteLearningOpportunityByOrgIdRequest represents a request to
        delete a learning opportunity.
    api.v1alpha1.agenttraining.DeleteLearningOpportunityRequest:
      type: object
      properties:
        learningOpportunityId:
          type: string
      description: DeleteLearningOpportunityRequest represents a request to delete
        a learning opportunity.
    api.v1alpha1.agenttraining.DeleteLearningOpportunityResponse:
      type: object
      properties:
        learningOpportunity:
          $ref: '#/components/schemas/api.commons.LearningOpportunity'
      description: DeleteLearningOpportunityResponse represents the deleted learning
        opportunity.
    api.v1alpha1.agenttraining.GetLearningOpportunityRequest:
      type: object
      properties:
        learningOpportunity:
          type: string
      description: GetLearningOpportunityRequest represents a request to get a learning
        opportunity.
    api.v1alpha1.agenttraining.GetLearningOpportunityResponse:
      type: object
      properties:
        learningOpportunity:
          $ref: '#/components/schemas/api.commons.LearningOpportunity'
      description: GetLearningOpportunityResponse represents the gotten learning opportunity.
    api.v1alpha1.agenttraining.ListAgentLearningOpportunitiesRequest:
      type: object
      properties:
        callIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.CallIdentifier'
        transcriptSids:
          type: array
          items:
            type: string
        createdAt:
          $ref: '#/components/schemas/api.commons.TimeFilter'
      description: ListAgentLearningOpportunitiesRequest represents a request to list
        learning opportunities by agent.
    api.v1alpha1.agenttraining.ListAgentLearningOpportunitiesResponse:
      type: object
      properties:
        learningOpportunities:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.LearningOpportunity'
      description: ListAgentLearningOpportunitiesResponse represents the listed learning
        opportunities.
    api.v1alpha1.agenttraining.ListDashboardsRequest:
      type: object
      properties: {}
      description: ListDashboardsRequest represents a request to list dashboards.
    api.v1alpha1.agenttraining.ListDashboardsResponse:
      type: object
      properties:
        dashboards:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.agenttraining.ListDashboardsResponse_Dashboard'
      description: ListDashboardsResponse represents the listed dashboards.
    api.v1alpha1.agenttraining.ListDashboardsResponse_Dashboard:
      type: object
      properties:
        resourceId:
          type: string
        title:
          type: string
    api.v1alpha1.agenttraining.ListLearningOpportunitiesByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
        callIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.CallIdentifier'
        transcriptSids:
          type: array
          items:
            type: string
        agentUserIds:
          type: array
          items:
            type: string
        createdAt:
          $ref: '#/components/schemas/api.commons.TimeFilter'
      description: ListLearningOpportunitiesByOrgIdRequest represents a request to
        list learning opportunities.
    api.v1alpha1.agenttraining.ListLearningOpportunitiesRequest:
      type: object
      properties:
        callIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.CallIdentifier'
        transcriptSids:
          type: array
          items:
            type: string
        agentUserIds:
          type: array
          items:
            type: string
        createdAt:
          $ref: '#/components/schemas/api.commons.TimeFilter'
      description: ListLearningOpportunitiesRequest represents a request to list learning
        opportunities.
    api.v1alpha1.agenttraining.ListLearningOpportunitiesResponse:
      type: object
      properties:
        learningOpportunities:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.LearningOpportunity'
      description: ListLearningOpportunitiesResponse represents the listed learning
        opportunities.
    api.v1alpha1.agenttraining.UpdateLearningOpportunityRequest:
      type: object
      properties:
        learningOpportunity:
          $ref: '#/components/schemas/api.commons.LearningOpportunity'
        updateMask:
          type: string
          format: field-mask
      description: UpdateLearningOpportunityRequest represents a request to update
        a learning opportunity.
    api.v1alpha1.agenttraining.UpdateLearningOpportunityResponse:
      type: object
      properties:
        learningOpportunity:
          $ref: '#/components/schemas/api.commons.LearningOpportunity'
      description: UpdateLearningOpportunityResponse represents the updated learning
        opportunity.
    api.v1alpha1.asm.AsmSession:
      type: object
      properties:
        asmSessionSid:
          type: string
        asmSessionStart:
          type: string
          format: date-time
        asmSessionEnd:
          type: string
          format: date-time
        voiceSession:
          $ref: '#/components/schemas/api.v1alpha1.asm.VoiceSession'
    api.v1alpha1.asm.AssignNewConversationReq:
      type: object
      properties:
        asmSessionSid:
          type: string
        skills:
          type: object
          additionalProperties:
            type: string
          description: skills
        channelTypes:
          type: array
          items:
            type: integer
            format: enum
          description: channel type - voice|sms|email|chat
    api.v1alpha1.asm.AssignNewConversationRes:
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/api.v1alpha1.asm.Conversation'
        referenceId:
          type: string
          description: send back ghost notifier referenceID
    api.v1alpha1.asm.Conversation:
      type: object
      properties:
        conversationSid:
          type: string
          description: "conversation details\n agent conversation id"
        conversationCreatedTime:
          type: string
          description: initial agent conversation created time
          format: date-time
        assignedLastUpdatedTime:
          type: string
          description: agent conversation assigned time
          format: date-time
        conversationStatus:
          type: integer
          description: conversation status - open, closed
          format: enum
        channelType:
          type: integer
          description: channel type - voice|sms|email|chat
          format: enum
        customerInfo:
          $ref: '#/components/schemas/api.commons.ConversationCustomerInformation'
        lastMessageTime:
          type: string
          description: received time
          format: date-time
        skills:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.asm.ConversationSkills'
          description: skills
        assignmentStatus:
          type: integer
          description: agent conversation assignment status
          format: enum
        assignmentType:
          type: integer
          description: agent conversation assignment type
          format: enum
        slaTimeouts:
          allOf:
          - $ref: '#/components/schemas/api.commons.SLATimeouts'
          description: sla and timeouts
        conversationCollectedData:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConversationCollectedData'
          description: conversation collected data
        lastMessageGroupTime:
          type: string
          description: "the time that the last group of message started. A message
            group is a\n continuous set of messages from the same type of sender"
          format: date-time
        lastMessageGroupType:
          type: integer
          description: the sender type of the last message group
          format: enum
    api.v1alpha1.asm.ConversationSkills:
      type: object
      properties:
        skills:
          type: object
          additionalProperties:
            type: boolean
    api.v1alpha1.asm.CreateSessionReq:
      type: object
      properties:
        huntGroupSid:
          type: string
        skills:
          type: object
          additionalProperties:
            type: string
        subsessionType:
          type: integer
          format: enum
    api.v1alpha1.asm.CreateSessionRes:
      type: object
      properties:
        asmSessionSid:
          type: string
        voiceSessionSid:
          type: string
        voiceRegistration:
          $ref: '#/components/schemas/api.v1alpha1.asm.VoiceRegistration'
    api.v1alpha1.asm.DisableVoiceReq:
      type: object
      properties:
        asmSessionSid:
          type: string
        huntGroupSid:
          type: string
        skills:
          type: object
          additionalProperties:
            type: string
    api.v1alpha1.asm.DisableVoiceRes:
      type: object
      properties: {}
    api.v1alpha1.asm.EnableVoiceReq:
      type: object
      properties:
        asmSessionSid:
          type: string
        huntGroupSid:
          type: string
        skills:
          type: object
          additionalProperties:
            type: string
    api.v1alpha1.asm.EnableVoiceRes:
      type: object
      properties:
        voiceSessionSid:
          type: string
        voiceRegistration:
          $ref: '#/components/schemas/api.v1alpha1.asm.VoiceRegistration'
    api.v1alpha1.asm.EndSessionReq:
      type: object
      properties:
        asmSessionSid:
          type: string
        reason:
          type: string
    api.v1alpha1.asm.EndSessionRes:
      type: object
      properties: {}
    api.v1alpha1.asm.GetCurrentSessionReq:
      type: object
      properties: {}
    api.v1alpha1.asm.GetQueuesDetailsReq:
      type: object
      properties:
        asmSessionSid:
          type: string
          description: the agent's asm session
        channelTypes:
          type: array
          items:
            type: integer
            format: enum
          description: the channel types to get details for
        skills:
          type: object
          additionalProperties:
            type: string
          description: the skills to check
      description: GetQueuesDetailsReq - request to get details of queues
    api.v1alpha1.asm.GetStatusReq:
      type: object
      properties:
        asmSessionSid:
          type: string
        performKeepAlive:
          type: boolean
        performGetQueuedCalls:
          type: boolean
        performGetMessage:
          type: boolean
        minimumMessageTimestamp:
          type: string
        skills:
          type: array
          items:
            type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Event'
        agentPbxExtensions:
          type: array
          items:
            type: string
          description: the current agents pbx extensions
    api.v1alpha1.asm.GetStatusRes:
      type: object
      properties:
        voiceStatus:
          $ref: '#/components/schemas/api.v1alpha1.asm.VoiceStatus'
    api.v1alpha1.asm.ListAgentsReq:
      type: object
      properties: {}
    api.v1alpha1.asm.ListAgentsRes:
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.DashboardAgentInfo'
          description: list of agents in the system with enrichments
    api.v1alpha1.asm.ListConversationsReq:
      type: object
      properties:
        asmSessionSid:
          type: string
          description: the asm session identifier
        authenticatedUser:
          allOf:
          - $ref: '#/components/schemas/api.commons.auth.AuthenticatedUser'
          description: the currently signed in user
        userId:
          type: string
          description: an optional field, used to select a specific user rather than
            the auth user
        statuses:
          type: array
          items:
            type: integer
            format: enum
          description: an optional field, if only wanting to retrieve conversations
            with specific statuses
        fieldMask:
          type: string
          description: field mask to filter what is returned by each row
          format: field-mask
        channelTypes:
          type: array
          items:
            type: integer
            format: enum
          description: the channel types to list conversations for
      description: ListConversationsReq - request to list all conversations associated
        with a given user
    api.v1alpha1.asm.ListConversationsRes:
      type: object
      properties:
        conversations:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.OmniConversation'
          description: the conversations retrieved
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of tasks, or empty if there
            are no more pages

            Only returned if using the ByTime or ByAssignedUser filters'
      description: ListConversationsRes - result to listing a user's conversations
    api.v1alpha1.asm.ManagerStreamAgentStateReq:
      type: object
      properties: {}
      description: "request used to establish a stream of status updates\n based on
        the current authenticated user's org_id\n This will only return the AgentState
        payload type\n in the reponses"
    api.v1alpha1.asm.PushEventsReq:
      type: object
      properties:
        asmSessionSid:
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AsmEvent'
      description: PushEventsReq - request to push events
    api.v1alpha1.asm.PushEventsRes:
      type: object
      properties: {}
    api.v1alpha1.asm.QueuedCalls:
      type: object
      properties:
        agentQueueCalls:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.asm.QueuedCalls_QueuedCallData'
          description: calls that were queued and have a matching subset of the agent_skills
            from the request.
        onHoldCalls:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.asm.QueuedCalls_QueuedCallData'
          description: calls that were placed on multi-hold by the agent_sid from
            the request.
        hqmCalls:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.asm.QueuedCalls_QueuedCallData'
          description: "calls that were placed in the Hold Queue Monitor, are still
            on hold by the destination (hold music is being played by the other party)
            and have\n a matching subset of the agent_skills from the request."
    api.v1alpha1.asm.QueuedCalls_QueuedCallData:
      type: object
      properties:
        callSid:
          type: string
          description: id of the found call.
        phoneNumber:
          type: string
          description: number dialed when the call was placed.
        callerId:
          type: string
          description: caller_id used when the call was placed.
        callType:
          type: integer
          description: call type of the found call.
          format: enum
        startDate:
          type: string
          description: timestamp indicating when the call started.
          format: date-time
        holdDate:
          type: string
          description: timestamp indicating when the call was put on hold (only set
            when call is a hold call).
          format: date-time
        skills:
          type: array
          items:
            type: string
          description: formatted skills that the call requires.
        agentSpecific:
          type: boolean
          description: indicates if the call is specific to the agent (multi-hold)
            or it can be picked up by multiple agents (queued and HQM calls).
        queuedNotificationType:
          type: integer
          description: queued notification type of the call.
          format: enum
    api.v1alpha1.asm.SetConversationCollectedDataReq:
      type: object
      properties:
        conversationSid:
          type: string
          description: conversation_id
        channelType:
          type: integer
          description: channel type - email|sms|chat|voice
          format: enum
        collectedData:
          type: object
          additionalProperties:
            type: string
          description: collected data - key/value
        asmSessionSid:
          type: string
          description: asm session sid
      description: request to set collected data for a conversation
    api.v1alpha1.asm.SetConversationCollectedDataRes:
      type: object
      properties: {}
      description: response after setting collected data for a conversation
    api.v1alpha1.asm.StreamAgentStateReq:
      type: object
      properties:
        asmSessionSid:
          type: string
        keepAlive:
          type: boolean
      description: "request used to establish a stream of status updates\n based on
        the given asm session sid. Ths will return\n all payload types in the responses"
    api.v1alpha1.asm.SwitchSubsessionReq:
      type: object
      properties:
        asmSessionSid:
          type: string
        huntGroupSid:
          type: string
        skills:
          type: object
          additionalProperties:
            type: string
        channelType:
          type: integer
          format: enum
    api.v1alpha1.asm.SwitchSubsessionRes:
      type: object
      properties:
        voiceSessionSid:
          type: string
        voiceRegistration:
          $ref: '#/components/schemas/api.v1alpha1.asm.VoiceRegistration'
    api.v1alpha1.asm.VoiceRegistration:
      type: object
      properties:
        username:
          type: string
          description: The pin used to log in via a connected phone
        password:
          type: string
          description: The pass used to log in via a connected phone
        dialUrl:
          type: string
          description: The extention appended
        pstnPhone:
          type: string
          description: "pstn phone number that will be used for the agent to dial
            in\n if it's an empty string then the voip connection must be used"
        defaultTimeZone:
          type: string
        expirationTimestamp:
          type: string
    api.v1alpha1.asm.VoiceSession:
      type: object
      properties:
        voiceSessionSid:
          type: string
        voiceSessionStart:
          type: string
          format: date-time
        voiceSessionEnd:
          type: string
          format: date-time
    api.v1alpha1.asm.VoiceStatus:
      type: object
      properties:
        status:
          type: string
        statusDesc:
          type: integer
          format: enum
        paused:
          type: boolean
        queue:
          type: string
        currentSessionId:
          type: string
        lastStatusChange:
          type: string
        monitoring:
          type: boolean
        callsCount:
          type: string
        lastSipCode:
          type: string
        agentPeerIsLostCall:
          type: boolean
        disabled:
          type: boolean
        keepAliveSucceeded:
          type: boolean
        message:
          type: string
        messageTimestamp:
          type: string
        queuedCalls:
          $ref: '#/components/schemas/api.v1alpha1.asm.QueuedCalls'
        callerWasSuspended:
          type: boolean
        transferMembers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.TransferMember'
        alert:
          $ref: '#/components/schemas/api.commons.AgentAlert'
        agentPeerIsDirectToAgent:
          type: boolean
          description: indicates if the current call is a direct to agent call
        agentIsMuted:
          type: boolean
          description: indicates if the agent is muted or not
    api.v1alpha1.billing.ExportGeneratedInvoiceReq:
      type: object
      properties:
        invoiceDate:
          type: string
          format: date-time
        orgId:
          type: string
        format:
          type: integer
          format: enum
        invoiceFormat:
          type: integer
          format: enum
    api.v1alpha1.billing.ExportGeneratedInvoiceRes:
      type: object
      properties:
        proto:
          $ref: '#/components/schemas/api.commons.billing.Invoice'
        csvUrl:
          type: string
        invoiceProto:
          $ref: '#/components/schemas/api.commons.billing.Invoice'
        invoiceCsvUrl:
          type: string
        billingCycle:
          type: string
    api.v1alpha1.billing.GetBillingPlanReq:
      type: object
      properties:
        orgId:
          type: string
    api.v1alpha1.billing.GetBillingPlanRes:
      type: object
      properties:
        billingPlan:
          $ref: '#/components/schemas/api.commons.billing.Plan'
    api.v1alpha1.billing.GetInvoiceReq:
      type: object
      properties:
        invoiceDate:
          type: string
          format: date-time
        orgId:
          type: string
        format:
          type: integer
          format: enum
        invoiceFormat:
          type: integer
          format: enum
    api.v1alpha1.billing.GetInvoiceRes:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/api.commons.billing.Invoice'
        proto:
          $ref: '#/components/schemas/api.commons.billing.Invoice'
        csvUrl:
          type: string
        invoiceProto:
          $ref: '#/components/schemas/api.commons.billing.Invoice'
        invoiceCsvUrl:
          type: string
        billingCycle:
          type: string
    api.v1alpha1.billing.UpdateBillingPlanReq:
      type: object
      properties:
        billingDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.billing.Detail'
        orgId:
          type: string
    api.v1alpha1.billing.UpdateBillingPlanRes:
      type: object
      properties:
        billingPlan:
          $ref: '#/components/schemas/api.commons.billing.Plan'
    api.v1alpha1.bireportgenerator.CreateReportJobRequest:
      type: object
      properties:
        reportJob:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.ReportJob'
          description: The report job to create.
      description: CreateReportJobRequest is the request for creating a report job.
    api.v1alpha1.bireportgenerator.CreateReportJobResponse:
      type: object
      properties:
        reportJob:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.ReportJob'
          description: The created report job.
      description: CreateReportJobResponse is the response for creating a report job.
    api.v1alpha1.bireportgenerator.DeleteReportJobRequest:
      type: object
      properties:
        reportJobId:
          type: string
          description: id of the report job to delete.
      description: DeleteReportJobRequest is the request for deleting a report job.
    api.v1alpha1.bireportgenerator.DeleteReportJobResponse:
      type: object
      properties: {}
      description: DeleteReportJobResponse is the response for deleting a report job.
    api.v1alpha1.bireportgenerator.GenerateReportRequest:
      type: object
      properties:
        reportJob:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.ReportJob'
          description: The report job to generate the report for.
        sendAsOfDate:
          type: string
          description: When to send the report as
          format: date-time
      description: GenerateReportRequest is the request for generating a report.
    api.v1alpha1.bireportgenerator.GenerateReportResponse:
      type: object
      properties: {}
      description: GenerateReportResponse is the response for generating a report.
    api.v1alpha1.bireportgenerator.GetReportJobRequest:
      type: object
      properties:
        reportJobId:
          type: string
          description: id of the report job to get.
      description: GetReportJobRequest is the request for getting a report job.
    api.v1alpha1.bireportgenerator.GetReportJobResponse:
      type: object
      properties:
        reportJob:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.ReportJob'
          description: The report job.
      description: GetReportJobResponse is the response for getting a report job.
    api.v1alpha1.bireportgenerator.ListReportJobsRequest:
      type: object
      properties: {}
      description: ListReportJobsRequest is the request for listing report jobs.
    api.v1alpha1.bireportgenerator.ListReportJobsResponse:
      type: object
      properties:
        reportJobs:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.ReportJob'
          description: The report jobs.
      description: ListReportJobsResponse is the response for listing report jobs.
    api.v1alpha1.bireportgenerator.ReportJob:
      type: object
      properties:
        reportJobId:
          type: string
          description: unique identifier for the report job
        name:
          type: string
          description: name of the report job
        description:
          type: string
          description: description of the report job
        dashboardId:
          type: string
          description: dashboard id to report
        timeZone:
          type: string
          description: time zone to use for the report schedule
        timePeriod:
          type: integer
          description: time period of data to report with
          format: enum
        deliveryTimes:
          allOf:
          - $ref: '#/components/schemas/api.commons.DeliveryTimes'
          description: delivery times for the report
        dayFilter:
          allOf:
          - $ref: '#/components/schemas/api.commons.DayFilter'
          description: days filter to report on
        months:
          type: array
          items:
            type: integer
            format: enum
          description: months filter to report on
        formatOptions:
          allOf:
          - $ref: '#/components/schemas/api.commons.FormatOptions'
          description: format options for the report
        deliveryOptions:
          allOf:
          - $ref: '#/components/schemas/api.commons.DeliveryOptions'
          description: delivery options for the report
        isActive:
          type: boolean
          description: whether the report job is active
        sendEmptyReport:
          type: boolean
          description: whether to send an empty report if no data is available
        dashboardResourceId:
          type: string
          description: dashboard resource id to report
        timeZoneWrapper:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: time_zone_wrapper to use for the report schedule
        hideCsvFooter:
          type: boolean
          description: hide csv footer
        transferConfigSid:
          type: string
          description: transfer_config_sid to use for the report delivery
        cronExpression:
          allOf:
          - $ref: '#/components/schemas/api.commons.CronExpression'
          description: cron expression for the report schedule
        transferOptions:
          allOf:
          - $ref: '#/components/schemas/api.commons.TransferOptions'
          description: transfer_options are options used for the report delivery
      description: ReportJob that can be scheduled to report dashboard data.
    api.v1alpha1.bireportgenerator.UpdateReportJobRequest:
      type: object
      properties:
        reportJob:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.ReportJob'
          description: The report job to update.
        updateMask:
          type: string
          description: The fields to update.
          format: field-mask
      description: UpdateReportJobRequest is the request for updating a report job.
    api.v1alpha1.bireportgenerator.UpdateReportJobResponse:
      type: object
      properties:
        reportJob:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.bireportgenerator.ReportJob'
          description: The updated report job.
      description: UpdateReportJobResponse is the response for updating a report job.
    api.v1alpha1.callqueue.ClearManualDialQueueReq:
      type: object
      properties: {}
    api.v1alpha1.callqueue.ClearManualDialQueueRes:
      type: object
      properties: {}
    api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq:
      type: object
      properties: {}
    api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes:
      type: object
      properties: {}
    api.v1alpha1.callqueue.DequeueCallForManualApprovalReq:
      type: object
      properties:
        huntGroupSid:
          type: string
        agentSessionSid:
          type: string
        timeoutMinutes:
          type: integer
          format: int32
    api.v1alpha1.callqueue.DequeueCallForManualApprovalRes:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
        queue:
          type: string
        clientInfo:
          $ref: '#/components/schemas/api.v0alpha.GetClientInfoDataRes'
        clientInfoTemplate:
          $ref: '#/components/schemas/api.v0alpha.GetClientInfoDisplayTemplateRes'
    api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq:
      type: object
      properties:
        timeoutMinutes:
          type: integer
          format: int32
        agentSessionSid:
          type: string
    api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes:
      type: object
      properties:
        queueName:
          type: string
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
        record:
          $ref: '#/components/schemas/api.commons.SimpleRecordData'
    api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq:
      type: object
      properties:
        huntGroupSid:
          type: string
        phoneNumber:
          type: string
        phoneNumIndex:
          type: integer
          format: int32
        taskGroupSid:
          type: string
        taskSid:
          type: string
    api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
    api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq:
      type: object
      properties:
        huntGroupSid:
          type: string
    api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes:
      type: object
      properties:
        sms:
          $ref: '#/components/schemas/api.commons.SimpleSmsMamData'
        queue:
          type: string
    api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
    api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes:
      type: object
      properties: {}
    api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq:
      type: object
      properties:
        sms:
          $ref: '#/components/schemas/api.commons.SimpleSmsMamData'
    api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes:
      type: object
      properties: {}
    api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
    api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes:
      type: object
      properties: {}
    api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq:
      type: object
      properties:
        sms:
          $ref: '#/components/schemas/api.commons.SimpleSmsMamData'
    api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes:
      type: object
      properties: {}
    api.v1alpha1.callqueue.EnqueuePreviewDialCallReq:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
        queueName:
          type: string
    api.v1alpha1.callqueue.EnqueuePreviewDialCallRes:
      type: object
      properties: {}
    api.v1alpha1.callqueue.EnqueuePreviewRecordReq:
      type: object
      properties:
        record:
          $ref: '#/components/schemas/api.commons.SimpleRecordData'
        queueName:
          type: string
    api.v1alpha1.callqueue.EnqueuePreviewRecordRes:
      type: object
      properties: {}
    api.v1alpha1.callqueue.ProcessManualDialCallReq:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
    api.v1alpha1.callqueue.ProcessManualDialCallRes:
      type: object
      properties:
        scrubbedCall:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
    api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq:
      type: object
      properties:
        call:
          $ref: '#/components/schemas/api.commons.SimpleCallData'
        queueName:
          type: string
    api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes:
      type: object
      properties: {}
    api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq:
      type: object
      properties:
        sms:
          $ref: '#/components/schemas/api.commons.SimpleSmsMamData'
        queueName:
          type: string
    api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes:
      type: object
      properties: {}
    api.v1alpha1.cfg.GetWebAgentConfigReq:
      type: object
      properties:
        regionId:
          type: string
          description: the regional identifier for the web agent.
      description: Request to retrieve the WebAgent configuration.
    api.v1alpha1.cfg.WebAgent:
      type: object
      properties:
        openSips:
          $ref: '#/components/schemas/api.v1alpha1.cfg.WebAgent_OpenSips'
        enginePriority:
          $ref: '#/components/schemas/api.v1alpha1.cfg.WebAgent_EnginePriority'
        logLevel:
          type: string
        useStun:
          type: string
        useFastStun:
          type: string
        useFastIce:
          type: string
        iceTimeout:
          type: string
        setFinalCodec:
          type: string
        useRport:
          type: string
        server:
          $ref: '#/components/schemas/api.v1alpha1.cfg.WebAgent_Server'
        baseUrl:
          type: string
        stunServerAddress:
          type: string
      description: The configuration for a web agent.
    api.v1alpha1.cfg.WebAgent_EnginePriority:
      type: object
      properties:
        java:
          type: string
        webrtc:
          type: string
        ns:
          type: string
        flash:
          type: string
        app:
          type: string
        p2p:
          type: string
        accessNum:
          type: string
        native:
          type: string
    api.v1alpha1.cfg.WebAgent_OpenSips:
      type: object
      properties:
        address:
          type: string
    api.v1alpha1.cfg.WebAgent_Server:
      type: object
      properties:
        sip:
          type: string
        webrtc:
          type: string
    api.v1alpha1.classifier.ClassifierEntityTypes:
      type: object
      properties:
        types:
          type: array
          items:
            type: integer
            format: enum
    api.v1alpha1.classifier.Constraints:
      type: object
      properties:
        forbid:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.classifier.ClassifierEntityTypes'
        allow:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.classifier.ClassifierEntityTypes'
      description: "these are options to forbid/allow certain\n types from being guessed
        by Classifier"
    api.v1alpha1.classifier.DeleteFileTemplateRequest:
      type: object
      properties:
        fileTemplate:
          type: string
    api.v1alpha1.classifier.DeleteFileTemplateResponse:
      type: object
      properties: {}
    api.v1alpha1.classifier.FileTemplate:
      type: object
      properties:
        fileTemplateId:
          type: string
        filename:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.classifier.FileTemplate_Field'
        parseOpts:
          $ref: '#/components/schemas/api.v1alpha1.classifier.ParseOpts'
        constraints:
          $ref: '#/components/schemas/api.v1alpha1.classifier.Constraints'
        foid:
          type: string
        opts:
          $ref: '#/components/schemas/api.v1alpha1.classifier.Opts'
    api.v1alpha1.classifier.FileTemplate_Field:
      type: object
      properties:
        syntaxType:
          type: string
        entityType:
          type: integer
          format: enum
        name:
          type: string
        format:
          type: string
        rawValue:
          type: string
          description: example of a value for this field
    api.v1alpha1.classifier.GetFileTemplateRequest:
      type: object
      properties:
        fileTemplateId:
          type: string
    api.v1alpha1.classifier.GetFileTemplateResponse:
      type: object
      properties:
        fileTemplate:
          $ref: '#/components/schemas/api.v1alpha1.classifier.FileTemplate'
    api.v1alpha1.classifier.ListFileTemplatesRequest:
      type: object
      properties:
        prevId:
          type: string
          description: if empty we will start at begining/end of list
        asc:
          type: boolean
          description: sort ascending instead of descending
        pageSize:
          type: integer
          description: how many records to get
          format: int32
    api.v1alpha1.classifier.ListFileTemplatesResponse:
      type: object
      properties:
        fileTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.classifier.FileTemplate'
    api.v1alpha1.classifier.Opts:
      type: object
      properties:
        dateFormats:
          type: object
          additionalProperties:
            type: string
          description: "map from field name to date format\n e.g: \"dob\": yyyy/mm/dd"
        renameFields:
          type: object
          additionalProperties:
            type: string
          description: keys are old field names, values are new field names
        parseOpts:
          $ref: '#/components/schemas/api.v1alpha1.classifier.ParseOpts'
        constraints:
          $ref: '#/components/schemas/api.v1alpha1.classifier.Constraints'
    api.v1alpha1.classifier.OptsCsv:
      type: object
      properties:
        hasHeader:
          type: boolean
        skipRows:
          type: string
        header:
          type: array
          items:
            type: string
        separator:
          type: string
    api.v1alpha1.classifier.OptsFixed:
      type: object
      properties:
        positions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.classifier.OptsFixed_FieldOpts'
          description: field opts keyed by field name
        hasHeader:
          type: boolean
    api.v1alpha1.classifier.OptsFixed_FieldOpts:
      type: object
      properties:
        startingPosition:
          type: integer
          description: "for fixed width files indicates the starting position of the
            data.\n if it is -1, starting position is one character after the previous
            fields\n starting position + length. if this is the first field and it
            is -1,\n starting position is 0"
          format: int32
        fieldLength:
          type: integer
          description: "for fixed width files indicates how many characters to the
            right of\n starting_position we will read. this field is required to be
            greater than\n 0."
          format: int32
    api.v1alpha1.classifier.OptsJson:
      type: object
      properties:
        recordsRoot:
          type: string
    api.v1alpha1.classifier.OptsJsonL:
      type: object
      properties: {}
    api.v1alpha1.classifier.OptsParquet:
      type: object
      properties: {}
    api.v1alpha1.classifier.ParseFileRequest:
      type: object
      properties:
        rawData:
          type: string
          description: "the raw file, no more than 2mb\n use raw_data if file is simple.\n
            a header immediately followed by data"
          format: bytes
        reparseFile:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.classifier.ParseFileRequest_ReParseFile'
          description: reparse the file that exists for this template with new hints
        parseWithHints:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.classifier.ParseFileRequest_ParseWithHints'
          description: "parse with hints if file is not\n a header immediately followed
            by data"
        name:
          type: string
    api.v1alpha1.classifier.ParseFileRequest_ParseWithHints:
      type: object
      properties:
        rawData:
          type: string
          description: the raw file, no more than 2mb
          format: bytes
        opts:
          $ref: '#/components/schemas/api.v1alpha1.classifier.Opts'
    api.v1alpha1.classifier.ParseFileRequest_ReParseFile:
      type: object
      properties:
        fileTemplateId:
          type: string
        hints:
          $ref: '#/components/schemas/api.v1alpha1.classifier.ParseHints'
        opts:
          $ref: '#/components/schemas/api.v1alpha1.classifier.Opts'
    api.v1alpha1.classifier.ParseFileResponse:
      type: object
      properties:
        fileTemplate:
          $ref: '#/components/schemas/api.v1alpha1.classifier.FileTemplate'
    api.v1alpha1.classifier.ParseHints:
      type: object
      properties:
        parseOpts:
          $ref: '#/components/schemas/api.v1alpha1.classifier.ParseOpts'
        constraints:
          $ref: '#/components/schemas/api.v1alpha1.classifier.Constraints'
    api.v1alpha1.classifier.ParseOpts:
      type: object
      properties:
        csv:
          $ref: '#/components/schemas/api.v1alpha1.classifier.OptsCsv'
        json:
          $ref: '#/components/schemas/api.v1alpha1.classifier.OptsJson'
        jsonl:
          $ref: '#/components/schemas/api.v1alpha1.classifier.OptsJsonL'
        fixed:
          $ref: '#/components/schemas/api.v1alpha1.classifier.OptsFixed'
        parquet:
          $ref: '#/components/schemas/api.v1alpha1.classifier.OptsParquet'
      description: "details on how the data should be\n parsed with respect to the
        file type"
    api.v1alpha1.classifier.UpdateFileTemplateRequest:
      type: object
      properties:
        fileTemplate:
          $ref: '#/components/schemas/api.v1alpha1.classifier.FileTemplate'
    api.v1alpha1.classifier.UpdateFileTemplateResponse:
      type: object
      properties: {}
    api.v1alpha1.contactmanager.AddContactEntryRequest:
      type: object
      properties:
        contactManagerListId:
          type: string
        entry:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.contactmanager.Entry'
          description: List of entries of a given contact
    api.v1alpha1.contactmanager.AddContactEntryResponse:
      type: object
      properties:
        contactId:
          type: string
          description: contact_manager_entry_list_id
    api.v1alpha1.contactmanager.ContactManagerEntry:
      type: object
      properties:
        contactManagerEntryId:
          type: string
        contactManagerEntryListId:
          type: string
        key:
          type: string
        value:
          type: string
        type:
          type: string
        dateCreated:
          type: string
          format: date-time
      description: Common messages deprecated
    api.v1alpha1.contactmanager.ContactManagerEntryVal:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    api.v1alpha1.contactmanager.ContactManagerList:
      type: object
      properties:
        contactManagerListId:
          type: string
        orgId:
          type: string
        projectId:
          type: string
        fileName:
          type: string
        description:
          type: string
        listDetails:
          type: array
          items:
            type: string
          description: List of Columns In The Contact List. UI to render table based
            on this list
        ttl:
          type: string
        dateCreated:
          type: string
          format: date-time
        isDeleted:
          type: boolean
    api.v1alpha1.contactmanager.EditContactEntryRequest:
      type: object
      properties:
        contactManagerListId:
          type: string
        contactManagerEntryId:
          type: string
        editedEntry:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.contactmanager.EditedEntry'
    api.v1alpha1.contactmanager.EditContactEntryResponse:
      type: object
      properties: {}
    api.v1alpha1.contactmanager.EditedEntry:
      type: object
      properties:
        contactManagerEntryListId:
          type: string
        name:
          type: string
        value:
          type: string
        type:
          type: string
    api.v1alpha1.contactmanager.Entry:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        type:
          type: string
    api.v1alpha1.contactmanager.GetContactListRequest:
      type: object
      properties:
        requestMask:
          type: string
          format: field-mask
        orgId:
          type: string
        projectId:
          type: string
      description: New Proto's For Get and List - Contact List and Contact Entries
    api.v1alpha1.contactmanager.GetContactListResponse:
      type: object
      properties:
        contactManagerList:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.contactmanager.ContactManagerList'
    api.v1alpha1.contactmanager.GetEncContactEntryRequest:
      type: object
      properties:
        contactManagerEntryId:
          type: string
    api.v1alpha1.contactmanager.GetEncContactEntryResponse:
      type: object
      properties:
        contactManagerEntry:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.contactmanager.ContactManagerEntry'
    api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest:
      type: object
      properties:
        projectId:
          type: string
        kycResponse:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.contactmanager.ContactManagerEntryVal'
    api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse:
      type: object
      properties:
        verified:
          type: boolean
        contactEntry:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.contactmanager.ContactManagerEntry'
    api.v1alpha1.contactmanager.GetKYCKeysRequest:
      type: object
      properties:
        projectSid:
          type: string
    api.v1alpha1.contactmanager.GetKYCKeysResponse:
      type: object
      properties:
        entryType:
          type: array
          items:
            type: string
    api.v1alpha1.contactmanager.ListContactEntryListRequest:
      type: object
      properties:
        contactManagerListId:
          type: string
        orgId:
          type: string
        projectId:
          type: string
    api.v1alpha1.contactmanager.ListContactEntryListResponse:
      type: object
      properties:
        contactManagerEntry:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.contactmanager.ContactManagerEntry'
      description: "List all Unencrypted Data. Encrypted Data would be sent On Double
        Click of the Record\n Seperate API to List All Encrypted Data"
    api.v1alpha1.contactmanager.ListContactsByEntityRequest:
      type: object
      properties:
        projectId:
          type: string
        entityId:
          type: string
    api.v1alpha1.contactmanager.ListContactsByEntityResponse:
      type: object
      properties:
        contactManagerEntry:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.contactmanager.ContactManagerEntry'
          description: Contacts associated to the entity
    api.v1alpha1.delivery.AESEncryptionRef:
      type: object
      properties:
        aesSid:
          type: string
    api.v1alpha1.delivery.AESPassword:
      type: object
      properties:
        password:
          type: string
    api.v1alpha1.delivery.CreateCredentialReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Credential'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.CreateCredentialRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
    api.v1alpha1.delivery.CreateDeliveryDefinitionReq:
      type: object
      properties:
        definition:
          $ref: '#/components/schemas/api.v1alpha1.delivery.DeliveryDefinition'
    api.v1alpha1.delivery.CreateDeliveryDefinitionRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
    api.v1alpha1.delivery.CreateEncryptionReq:
      type: object
      properties:
        encryption:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Encryption'
    api.v1alpha1.delivery.CreateEncryptionRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
    api.v1alpha1.delivery.CreateTransferConfigReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.TransferConfig'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.CreateTransferConfigRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
    api.v1alpha1.delivery.Credential:
      type: object
      properties:
        sid:
          type: string
        name:
          type: string
        description:
          type: string
        data:
          $ref: '#/components/schemas/api.v1alpha1.delivery.CredentialData'
        createdOn:
          type: string
          format: date-time
        lastEdited:
          type: string
          format: date-time
    api.v1alpha1.delivery.CredentialData:
      type: object
      properties:
        userPassword:
          $ref: '#/components/schemas/api.v1alpha1.delivery.UserPassword'
        password:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Password'
        sshKeyPair:
          $ref: '#/components/schemas/api.v1alpha1.delivery.SSHKeyPair'
        pgpKeyPair:
          $ref: '#/components/schemas/api.v1alpha1.delivery.PGPKeyPair'
        aesPassword:
          $ref: '#/components/schemas/api.v1alpha1.delivery.AESPassword'
    api.v1alpha1.delivery.Credentials:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.delivery.Credential'
    api.v1alpha1.delivery.DeleteCredentialReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.DeleteCredentialRes:
      type: object
      properties: {}
    api.v1alpha1.delivery.DeleteDeliveryDefinitionReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
    api.v1alpha1.delivery.DeleteDeliveryDefinitionRes:
      type: object
      properties: {}
    api.v1alpha1.delivery.DeleteEncryptionReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.DeleteEncryptionRes:
      type: object
      properties: {}
    api.v1alpha1.delivery.DeleteTransferConfigReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.TransferConfig'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.DeleteTransferConfigRes:
      type: object
      properties: {}
    api.v1alpha1.delivery.DeliveryDefinition:
      type: object
      properties:
        deliveryDefinitionSid:
          type: string
        orgId:
          type: string
        name:
          type: string
          description: the name of the definition. Must be unique within the org
        description:
          type: string
        ttl:
          type: integer
          description: "how many hours the files should live in cloud storage for\n
            must always be > 0"
          format: int32
        sftp:
          $ref: '#/components/schemas/api.v1alpha1.delivery.SFTPTransport'
        email:
          $ref: '#/components/schemas/api.v1alpha1.delivery.EmailTransport'
        room303:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Room303Transport'
        sms:
          $ref: '#/components/schemas/api.v1alpha1.delivery.SMSTransport'
        aes:
          $ref: '#/components/schemas/api.v1alpha1.delivery.AESEncryptionRef'
        pgp:
          $ref: '#/components/schemas/api.v1alpha1.delivery.PGPEncryptionRef'
        createdOn:
          type: string
          format: date-time
        lastEdited:
          type: string
          format: date-time
      description: replaces TransferConfig
    api.v1alpha1.delivery.Destination:
      type: object
      properties:
        encryption:
          $ref: '#/components/schemas/api.commons.Encryption'
        email:
          $ref: '#/components/schemas/api.v1alpha1.delivery.EmailDestination'
        room303:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Room303Destination'
        sms:
          $ref: '#/components/schemas/api.v1alpha1.delivery.SmsDestination'
        sftp:
          $ref: '#/components/schemas/api.v1alpha1.delivery.SftpDestination'
    api.v1alpha1.delivery.EmailDestination:
      type: object
      properties:
        toAddr:
          type: string
          description: which email we are sending to
        ccAddrs:
          type: array
          items:
            type: string
          description: additional emails we are sending to
        fromAddr:
          type: string
          description: which email we want to show up as as from
        toAddrs:
          type: array
          items:
            type: string
    api.v1alpha1.delivery.EmailTransport:
      type: object
      properties:
        fromAddress:
          type: string
          description: which email we want to show up as as from
        toAddress:
          type: string
          description: which email we are sending to
        ccAddresses:
          type: array
          items:
            type: string
          description: additional emails we are sending to
        toAddresses:
          type: array
          items:
            type: string
    api.v1alpha1.delivery.Encryption:
      type: object
      properties:
        encryptionSid:
          type: string
        orgId:
          type: string
        name:
          type: string
        description:
          type: string
        pgpKeyPair:
          $ref: '#/components/schemas/api.v1alpha1.delivery.PGPKeyPair'
        aesPassword:
          $ref: '#/components/schemas/api.v1alpha1.delivery.AESPassword'
        createdOn:
          type: string
          format: date-time
        lastEdited:
          type: string
          format: date-time
    api.v1alpha1.delivery.GetCredentialReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Credential'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.GetCredentialRes:
      type: object
      properties:
        credential:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Credential'
    api.v1alpha1.delivery.GetDeliveryDefinitionByNameReq:
      type: object
      properties:
        name:
          type: string
        mask:
          type: string
          format: field-mask
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.DeliveryDefinition'
    api.v1alpha1.delivery.GetDeliveryDefinitionByNameRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.DeliveryDefinition'
    api.v1alpha1.delivery.GetDeliveryDefinitionReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.DeliveryDefinition'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.GetDeliveryDefinitionRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.DeliveryDefinition'
    api.v1alpha1.delivery.GetEncryptionReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Encryption'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.GetEncryptionRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Encryption'
    api.v1alpha1.delivery.GetTransferConfigByNameReq:
      type: object
      properties:
        name:
          type: string
        mask:
          type: string
          format: field-mask
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.TransferConfig'
    api.v1alpha1.delivery.GetTransferConfigByNameRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.TransferConfig'
    api.v1alpha1.delivery.GetTransferConfigReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.TransferConfig'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.GetTransferConfigRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.TransferConfig'
    api.v1alpha1.delivery.History:
      type: object
      properties:
        sid:
          type: string
        transferConfigName:
          type: string
        transferConfigSid:
          type: string
        deliveryType:
          type: string
          description: delivery or retrieval
        error:
          type: string
        success:
          type: boolean
        createdOn:
          type: string
          description: when the transaction was first opened
          format: date-time
        transferStart:
          type: string
          description: when upload of deps is finished and we started moving the files
          format: date-time
        transferComplete:
          type: string
          description: when the record was inserted into the db (delivery ended)
          format: date-time
        origin:
          type: integer
          description: the application calling for delivery
          format: enum
        orgId:
          type: string
        messagePayload:
          type: string
          description: this should only be the first 64 chars of the message_payload
        messagePayloadLen:
          type: integer
          description: this represents the full actual length of the message_payload
            from the frontend
          format: int32
        status:
          type: integer
          description: the status of the delivery
          format: enum
        isInbound:
          type: boolean
        transactionSid:
          type: string
    api.v1alpha1.delivery.ID:
      type: object
      properties:
        sid:
          type: string
    api.v1alpha1.delivery.ListByIDReq:
      type: object
      properties:
        beforeSid:
          type: string
          description: start listing records less than this sid
        limit:
          type: string
          description: max records to retrieve
        otherSid:
          type: string
          description: the sid that is in the where clause
    api.v1alpha1.delivery.ListCredentialsReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ListReq'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.ListCredentialsRes:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Credentials'
    api.v1alpha1.delivery.ListDeliveryDefinitionsByCredentialIDReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.DeliveryDefinition'
        mask:
          type: string
          format: field-mask
        credentialSid:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
        listReq:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ListReq'
    api.v1alpha1.delivery.ListDeliveryDefinitionsByCredentialIDRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.delivery.DeliveryDefinition'
    api.v1alpha1.delivery.ListDeliveryDefinitionsReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.DeliveryDefinition'
        mask:
          type: string
          format: field-mask
        listReq:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ListReq'
    api.v1alpha1.delivery.ListDeliveryDefinitionsRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.delivery.DeliveryDefinition'
    api.v1alpha1.delivery.ListEncryptionsReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ListReq'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.ListEncryptionsRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.delivery.Encryption'
    api.v1alpha1.delivery.ListHistoryByTransferConfigReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ListByIDReq'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.ListHistoryByTransferConfigRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.delivery.History'
    api.v1alpha1.delivery.ListHistoryReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.History'
        mask:
          type: string
          format: field-mask
        listReq:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ListReq'
    api.v1alpha1.delivery.ListHistoryRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.delivery.History'
    api.v1alpha1.delivery.ListReq:
      type: object
      properties:
        beforeSid:
          type: string
          description: start listing records less than this sid
        limit:
          type: string
          description: max records to retrieve
    api.v1alpha1.delivery.ListSMSNumbersReq:
      type: object
      properties: {}
    api.v1alpha1.delivery.ListSMSNumbersRes:
      type: object
      properties:
        smsNumbers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SmsNumber'
    api.v1alpha1.delivery.ListTransferConfigsByCredentialIDReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.TransferConfig'
        mask:
          type: string
          format: field-mask
        credentialSid:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
        listReq:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ListReq'
    api.v1alpha1.delivery.ListTransferConfigsByCredentialIDRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.delivery.TransferConfig'
    api.v1alpha1.delivery.ListTransferConfigsReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.TransferConfig'
        mask:
          type: string
          format: field-mask
        listReq:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ListReq'
    api.v1alpha1.delivery.ListTransferConfigsRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.delivery.TransferConfig'
    api.v1alpha1.delivery.PGPEncryptionRef:
      type: object
      properties:
        pgpSid:
          type: string
    api.v1alpha1.delivery.PGPKeyPair:
      type: object
      properties:
        publicKey:
          type: string
        privateKey:
          type: string
    api.v1alpha1.delivery.Password:
      type: object
      properties:
        password:
          type: string
    api.v1alpha1.delivery.PasswordRef:
      type: object
      properties:
        passwordSid:
          type: string
    api.v1alpha1.delivery.Room303Destination:
      type: object
      properties:
        room:
          type: string
          description: which room or user to sned the file to
        username:
          type: string
          description: "will lookup user_sid through org if not provided\n username
            of the intended user"
        userId:
          type: string
          description: user_id of the intended user
    api.v1alpha1.delivery.Room303SystemMessage:
      type: object
      properties:
        room:
          type: string
          description: which room or user to sned the file to
        username:
          type: string
          description: "will lookup user_sid through org if not provided\n username
            of the intended user"
        userId:
          type: string
          description: user_id of the intended user
    api.v1alpha1.delivery.Room303SystemMessages:
      type: object
      properties:
        systemMessages:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.delivery.Room303SystemMessage'
    api.v1alpha1.delivery.Room303Transport:
      type: object
      properties:
        systemMessage:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.delivery.Room303SystemMessage'
          description: "this way we can use different types of room303 deliveries\n
            in the future, support different api calls,\n maybe support multiple groups
            etc"
        systemMessages:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Room303SystemMessages'
    api.v1alpha1.delivery.SFTPTransport:
      type: object
      properties:
        host:
          type: string
        port:
          type: integer
          format: int32
        password:
          $ref: '#/components/schemas/api.v1alpha1.delivery.PasswordRef'
        sshKey:
          $ref: '#/components/schemas/api.v1alpha1.delivery.SSHKeyRef'
        username:
          type: string
        baseDir:
          type: string
    api.v1alpha1.delivery.SMSTransport:
      type: object
      properties:
        destinationPhone:
          type: string
          description: must include country code and area code
        sourcePhone:
          type: string
          description: the phone number we want this message to come from
    api.v1alpha1.delivery.SSHKeyPair:
      type: object
      properties:
        publicKey:
          type: string
        privateKey:
          type: string
    api.v1alpha1.delivery.SSHKeyRef:
      type: object
      properties:
        sshKeySid:
          type: string
    api.v1alpha1.delivery.SftpDestination:
      type: object
      properties:
        baseDirectory:
          type: string
          description: "path that will be joined with the filename specified on the
            attachment.\n this is optional.  If not provided the attachments must
            include the full filepath"
        address:
          type: string
        port:
          type: integer
          format: int32
    api.v1alpha1.delivery.SftpSource:
      type: object
      properties:
        directory:
          type: string
          description: directory files should be in
    api.v1alpha1.delivery.SmsDestination:
      type: object
      properties:
        destinationPhone:
          type: string
          description: must include country code and area code
        sourcePhone:
          type: string
          description: the phone number we want this message to come from
    api.v1alpha1.delivery.Source:
      type: object
      properties:
        encryption:
          $ref: '#/components/schemas/api.commons.Encryption'
        sftp:
          $ref: '#/components/schemas/api.v1alpha1.delivery.SftpSource'
    api.v1alpha1.delivery.TransferConfig:
      type: object
      properties:
        sid:
          type: string
          description: snowflake id
        name:
          type: string
          description: the name of this config. Must be unique within the org
        description:
          type: string
        ttl:
          type: integer
          description: "how many hours the files should live in cloud storage for\n
            must always be > 0"
          format: int32
        credential:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Credential'
        destination:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.delivery.Destination'
          description: where we will put the payload if we are triggering a delivery
        source:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.delivery.Source'
          description: where we will get the payload if we are triggering a retrieval
        createdOn:
          type: string
          description: when the config was last created/edited
          format: date-time
        lastEdited:
          type: string
          format: date-time
      description: entity types
    api.v1alpha1.delivery.UpdateCredentialReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Credential'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.UpdateCredentialRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
    api.v1alpha1.delivery.UpdateDeliveryDefinitionReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.DeliveryDefinition'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.UpdateDeliveryDefinitionRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
    api.v1alpha1.delivery.UpdateEncryptionReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.Encryption'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.UpdateEncryptionRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
    api.v1alpha1.delivery.UpdateTransferConfigReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.TransferConfig'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.delivery.UpdateTransferConfigRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.delivery.ID'
    api.v1alpha1.delivery.UserPassword:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    api.v1alpha1.exile.station.finvi.v1.PopAccountReq:
      type: object
      properties:
        recordId:
          type: string
        userId:
          type: string
        alternateId:
          type: string
          description: optional
        callSid:
          type: string
          description: (call_sid, call_type) is primary key
        callType:
          type: string
    api.v1alpha1.exile.station.finvi.v1.PopAccountRes:
      type: object
      properties:
        jobId:
          type: string
        async:
          type: boolean
          description: "if true only job_id and async will be populated.\n all other
            data on the response will be sent as jsonl to the async handler"
    api.v1alpha1.explorer.ListDatasourceSchemasRequest:
      type: object
      properties:
        datasourceNames:
          type: array
          items:
            type: string
          description: datasource_names is a table name filter for the datasources
            to list.
        datasourceType:
          type: integer
          description: "datasource_type is the type of the datasource to list.\n If
            not specified, all datasources will be listed."
          format: enum
      description: ListDatasourceSchemasRequest is the request to list datasource
        schemas.
    api.v1alpha1.explorer.ListDatasourceSchemasResponse:
      type: object
      properties:
        schemas:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.explorer.Schema'
          description: list of schemas
      description: ListDatasourceSchemasResponse contains datasources and their schemas.
    api.v1alpha1.explorer.Parameters:
      type: object
      properties:
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.explorer.Parameters_Parameter'
      description: Parameter is a parameter for a query.
    api.v1alpha1.explorer.Parameters_Parameter:
      type: object
      properties:
        value:
          type: string
        dataType:
          type: string
    api.v1alpha1.explorer.QueryRequest:
      type: object
      properties:
        datasourceName:
          type: string
          description: datasource_name is the name of the datasource to query.
        datasourceType:
          type: integer
          description: datasource_type is the type of the datasource to query.
          format: enum
        pipeline:
          type: string
          description: pipeline to be compiled to prql
        prql:
          type: string
          description: prql query to execute
        orgIds:
          type: array
          items:
            type: string
          description: org_id for ownership of the data
        startTime:
          type: string
          description: start_time is the start time of the query.
          format: date-time
        endTime:
          type: string
          description: end_time is the end time of the query.
          format: date-time
        timezone:
          type: string
          description: "timezone is IESG timezone name\n this is how the timezone
            is represented in the query"
        pipelineParameters:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.explorer.Parameters'
          description: pipeline_parameters is the parameters for the pipeline.
        uiTraceId:
          type: string
          description: ui_trace_id is the trace id of the query.
        comment:
          type: string
          description: comment is the comment for the query.
        format:
          type: integer
          description: format is the format of the result.
          format: enum
      description: QueryRequest is the request to query a datasource.
    api.v1alpha1.explorer.QueryResponse:
      type: object
      properties:
        resultUrl:
          type: string
          description: result_url is the URL to the result of the query.
        resultSizeBytes:
          type: string
          description: result_size_bytes is the size of the result in bytes.
      description: QueryResponse contains the result of a datasource query.
    api.v1alpha1.explorer.Schema:
      type: object
      properties:
        name:
          type: string
        datasourceType:
          type: integer
          format: enum
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.explorer.SchemaField'
        tableDescription:
          type: string
      description: Schema is a schema for a datasource.
    api.v1alpha1.explorer.SchemaField:
      type: object
      properties:
        name:
          type: string
        columnType:
          type: integer
          format: enum
        isPrimaryKey:
          type: boolean
        isLowCardinality:
          type: boolean
        columnDescription:
          type: string
      description: SchemaField is a field in a schema.
    api.v1alpha1.fts.GetUploadFileUrlReq:
      type: object
      properties:
        prefix:
          type: string
    api.v1alpha1.fts.GetUploadFileUrlRes:
      type: object
      properties:
        url:
          type: string
        id:
          type: string
          description: identifier so we can get this file back at a later point
    api.v1alpha1.ghostnotifier.ListNotificationsReq:
      type: object
      properties: {}
    api.v1alpha1.insights.ColumnOperation:
      type: object
      properties:
        operationType:
          type: integer
          description: Operation type
          format: enum
        floatValue:
          type: number
          description: Float value for operation
          format: double
        formatSeries:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.insights.FormatSeries'
          description: Series values for operation
      description: Message for ColumnOperation
    api.v1alpha1.insights.ComponentAction:
      type: object
      properties:
        componentName:
          type: string
        componentValue:
          type: object
          additionalProperties:
            type: string
      description: Message for Component Insight Contextual Action
    api.v1alpha1.insights.CreateInsightRequest:
      type: object
      properties:
        insight:
          $ref: '#/components/schemas/api.v1alpha1.insights.Insight'
      description: CreateInsightRequest is the request to create an insight.
    api.v1alpha1.insights.CreateInsightResponse:
      type: object
      properties:
        insight:
          $ref: '#/components/schemas/api.v1alpha1.insights.Insight'
      description: CreateInsightResponse contains the Insight that was created.
    api.v1alpha1.insights.CreateOutputConfigurationRequest:
      type: object
      properties:
        outputConfiguration:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.insights.OutputConfiguration'
          description: Output configuration to be create
      description: Request for creating a new output configuration
    api.v1alpha1.insights.CreateOutputConfigurationResponse:
      type: object
      properties:
        outputConfiguration:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.insights.OutputConfiguration'
          description: The created output configuration
      description: Response for creating a new output configuration
    api.v1alpha1.insights.DeleteInsightRequest:
      type: object
      properties:
        insightId:
          type: string
        resourceId:
          type: string
      description: DeleteInsightRequest is the request to delete an insight.
    api.v1alpha1.insights.DeleteInsightResponse:
      type: object
      properties:
        insight:
          $ref: '#/components/schemas/api.v1alpha1.insights.Insight'
      description: DeleteInsightResponse contains the Insight that was deleted.
    api.v1alpha1.insights.DeleteOutputConfigurationRequest:
      type: object
      properties:
        resourceId:
          type: string
          description: Resource Id of the output configuration to delete
      description: Request for deleting an output configuration
    api.v1alpha1.insights.DeleteOutputConfigurationResponse:
      type: object
      properties: {}
      description: Response for deleting an output configuration
    api.v1alpha1.insights.DrillThroughAction:
      type: object
      properties:
        insightResourceId:
          type: string
        drillThroughParameters:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.insights.DrillThroughParameter'
      description: Message for Drill Through Insight Contextual Action
    api.v1alpha1.insights.DrillThroughParameter:
      type: object
      properties:
        parameterName:
          type: string
        columnName:
          type: string
      description: Message for Drill Through
    api.v1alpha1.insights.FormatSeries:
      type: object
      properties:
        formatParts:
          type: array
          items:
            type: string
          description: The series of format parts
      description: FormatSeries contains the series of operations for a column operation
    api.v1alpha1.insights.GetDefaultOutputConfigurationRequest:
      type: object
      properties:
        insightResourceId:
          type: string
          description: Insight resource id of default output configuration
      description: Request message for GetDefaultOutputConfiguration
    api.v1alpha1.insights.GetDefaultOutputConfigurationResponse:
      type: object
      properties:
        outputConfiguration:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.insights.OutputConfiguration'
          description: Default ouptut configuration
      description: Response message for GetDefaultOutputConfiguration
    api.v1alpha1.insights.GetInsightRequest:
      type: object
      properties:
        insightId:
          type: string
        resourceId:
          type: string
      description: GetInsightRequest is the request to get an insight.
    api.v1alpha1.insights.GetInsightResponse:
      type: object
      properties:
        insight:
          $ref: '#/components/schemas/api.v1alpha1.insights.Insight'
      description: GetInsightResponse contains the Insight that was retrieved.
    api.v1alpha1.insights.GetOutputConfigurationRequest:
      type: object
      properties:
        resourceId:
          type: string
          description: Resource Id of the output configuration
      description: Request for getting a specific output configuration
    api.v1alpha1.insights.GetOutputConfigurationResponse:
      type: object
      properties:
        outputConfiguration:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.insights.OutputConfiguration'
          description: The requested output configuration
      description: Response for getting a specific output configuration
    api.v1alpha1.insights.GetVfsSchemaRequest:
      type: object
      properties:
        aliasName:
          type: string
      description: GetVfsSchemaRequest is request to get vfs schema using alias
    api.v1alpha1.insights.GetVfsSchemaResponse:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.insights.GetVfsSchemaResponse_Field'
        vfsDescription:
          type: string
        aliasName:
          type: string
      description: GetVfsSchemaResponse is response with vfs schema
    api.v1alpha1.insights.GetVfsSchemaResponse_Field:
      type: object
      properties:
        columnName:
          type: string
        columnType:
          type: integer
          format: enum
        columnDescription:
          type: string
      description: Field represents a column in a dataframe
    api.v1alpha1.insights.Insight:
      type: object
      properties:
        insightId:
          type: string
        name:
          type: string
        description:
          type: string
        insightType:
          type: integer
          format: enum
        insightVersion:
          type: integer
          format: uint32
        body:
          type: string
        insightPermissionType:
          type: integer
          format: enum
        resourceId:
          type: string
        standardInsight:
          type: boolean
        datasourceType:
          type: integer
          format: enum
      description: "Insight is a data handling entity used to process data\n Insight
        can represent an object that belongs to the user\n Insight can represent an
        object inside the common lib"
    api.v1alpha1.insights.InsightContextualAction:
      type: object
      properties:
        type:
          type: integer
          description: Type of the contextual action
          format: enum
        link:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.insights.LinkAction'
          description: Link action
        component:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.insights.ComponentAction'
          description: Component action
        drillThrough:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.insights.DrillThroughAction'
          description: Drill through action
      description: Message for Insight Contextual Action
    api.v1alpha1.insights.LinkAction:
      type: object
      properties:
        linkElements:
          type: array
          items:
            type: string
        componentValue:
          type: object
          additionalProperties:
            type: string
      description: Message for Link Insight Contextual Action
    api.v1alpha1.insights.ListInsightsRequest:
      type: object
      properties:
        insightPermissionTypes:
          type: array
          items:
            type: integer
            format: enum
      description: ListInsightsRequest is the request to list insights.
    api.v1alpha1.insights.ListInsightsResponse:
      type: object
      properties:
        insights:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.insights.Insight'
      description: ListInsightsResponse contains the Insights that were listed.
    api.v1alpha1.insights.ListOrgInsightsRequest:
      type: object
      properties:
        orgId:
          type: string
      description: ListOrgInsightsRequest is the request to list insights for an org
        in support.
    api.v1alpha1.insights.ListOrgInsightsResponse:
      type: object
      properties:
        insights:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.insights.Insight'
      description: ListOrgInsightsResponse contains the Insights that were listed.
    api.v1alpha1.insights.ListOutputConfigurationsRequest:
      type: object
      properties:
        insightResourceId:
          type: string
          description: Insight resource id to get output configurations for
      description: Request for listing output configurations
    api.v1alpha1.insights.ListOutputConfigurationsResponse:
      type: object
      properties:
        outputConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.insights.OutputConfiguration'
          description: The requested output configurations
      description: Response for listing output configurations
    api.v1alpha1.insights.ListVfsSchemasRequest:
      type: object
      properties: {}
      description: ListVfsSchemasRequest is request to list vfs schemas
    api.v1alpha1.insights.ListVfsSchemasResponse:
      type: object
      properties:
        vfsSchemas:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.insights.GetVfsSchemaResponse'
      description: ListVfsSchemasResponse is response with vfs schemas
    api.v1alpha1.insights.ListVfsesRequest:
      type: object
      properties: {}
      description: ListVfsesRequest is request to list vfses
    api.v1alpha1.insights.ListVfsesResponse:
      type: object
      properties:
        aliases:
          type: array
          items:
            type: string
      description: ListVfsesResponse is response with vfs aliases
    api.v1alpha1.insights.OutputConfiguration:
      type: object
      properties:
        resourceId:
          type: string
          description: Unique identifier for the output configuration
        outputConfigurationTitle:
          type: string
          description: Title of the output configuration
        outputConfigurationType:
          type: integer
          description: Type of the output configuration
          format: enum
        insightResourceId:
          type: string
          description: Insight resource ID associated with the output configuration
        isDefault:
          type: boolean
          description: is_default flag for the output configuration
        blob:
          type: string
          description: Blob data for the output configuration
        tableVisualization:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.insights.TableVisualization'
          description: Table visualization data for the output configuration
      description: Output configuration provides formatting options in post processing
    api.v1alpha1.insights.PublishInsightRequest:
      type: object
      properties:
        resourceId:
          type: string
          description: Required - resource id of the insight to publish
        destinationResourceId:
          type: string
          description: "Optional - resource id of the destination to publish to\n
            If not provided, a new standard insight will be created"
      description: PublishInsightRequest is the request to publish an insight.
    api.v1alpha1.insights.PublishInsightResponse:
      type: object
      properties:
        insight:
          $ref: '#/components/schemas/api.v1alpha1.insights.Insight'
      description: PublishInsightResponse contains the Insight that was published.
    api.v1alpha1.insights.SetDefaultOutputConfigurationRequest:
      type: object
      properties:
        resourceId:
          type: string
          description: resource id of the output configuration
        insightResourceId:
          type: string
          description: Insight resource id
      description: Request message for SetDefaultOutputConfiguration
    api.v1alpha1.insights.SetDefaultOutputConfigurationResponse:
      type: object
      properties: {}
      description: Response message for SetDefaultOutputConfiguration
    api.v1alpha1.insights.TableColumnConfig:
      type: object
      properties:
        columnName:
          type: string
          description: Name for the table column
        columnWidth:
          type: string
          description: Width of the column
        hideColumn:
          type: boolean
          description: Flag to hide the column
        renamedAs:
          type: string
          description: Renames the column name
        operations:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.insights.ColumnOperation'
          description: Operations to be performed on the column
        columnSummary:
          type: integer
          description: Summary for the column (AVG, SUM, MIN, MAX)
          format: enum
        description:
          type: string
          description: Description of the column
        sortDirection:
          type: integer
          description: The sorting direction of the column
          format: enum
        insightContextualAction:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.insights.InsightContextualAction'
          description: insight contextual actions
      description: Message for Table Column Configuration
    api.v1alpha1.insights.TableVisualization:
      type: object
      properties:
        tableColumnDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.insights.TableColumnConfig'
          description: Map of table column details
      description: Message for Table Visualization
    api.v1alpha1.insights.UpdateInsightRequest:
      type: object
      properties:
        insight:
          $ref: '#/components/schemas/api.v1alpha1.insights.Insight'
        updateMask:
          type: string
          format: field-mask
      description: UpdateInsightRequest is the request to update an insight.
    api.v1alpha1.insights.UpdateInsightResponse:
      type: object
      properties:
        insight:
          $ref: '#/components/schemas/api.v1alpha1.insights.Insight'
      description: UpdateInsightResponse contains the Insight that was updated.
    api.v1alpha1.insights.UpdateOutputConfigurationRequest:
      type: object
      properties:
        updateMask:
          type: string
          description: Field mask to update specified fields
          format: field-mask
        outputConfiguration:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.insights.OutputConfiguration'
          description: Updated output configuration
      description: Request for updating an existing output configuration
    api.v1alpha1.insights.UpdateOutputConfigurationResponse:
      type: object
      properties:
        outputConfiguration:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.insights.OutputConfiguration'
          description: Updated output configuration
      description: Response for updating an existing output configuration
    api.v1alpha1.integrations.Action:
      type: object
      properties:
        pluginInstanceId:
          type: string
          description: the global data for this action.
        restructureBefore:
          type: object
          additionalProperties:
            type: string
          description: "when a flow is executed if we find in the result any keys
            that match\n the keys in rename, we will restructure the keys to the matching\n
            value in these map's."
        restructureAfter:
          type: object
          additionalProperties:
            type: string
        actionDefinitionName:
          type: string
        opts:
          type: object
          additionalProperties:
            type: string
          description: the data that controls optional functionality for some flows.
      description: an Action is 1 api execution + optional rename of result data step.
    api.v1alpha1.integrations.ActionDefinition:
      type: object
      properties:
        flowType:
          type: integer
          description: the type of flow
          format: enum
        definitionName:
          type: string
          description: the name of this action definition
        method:
          type: integer
          description: the api method performed for this flow.
          format: enum
        reqFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: the fields required to complete this flow
        resFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: the fields returned from this flows execution
        pluginFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: a subset of req_fields we suggest go in the plugin instance.
        linkFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: a subset of req_fields we suggest go in the portal link
        prevFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: "a subset of req_fields we suggest come from some previously
            called flow.\n this is usually empty. Experian Payment flows do have this
            populated with\n data that comes from the experian query balance flow."
        formFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: "a subset of either req_fields OR res_fields that is suggested
            comes from the user.\n Example:\n verification flows would have a subset
            of the res_fields here, because\n we want to verify the user provided
            data against the api call's result.\n but\n payment flows would have a
            subset of req_fields here, because\n we want to take the payment fields
            from the user to make the api call.\n Some flows have no form fields.
            Invoice Flows and Execute Flows don't need\n a user form, so this is empty
            on those flows."
        template:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.integrations.Template'
          description: "The default template that can be used with the result data
            to make it pretty\n and grouped. Right now this is only used for invoices."
        opts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: "Optional data that can be defined on Flow creation tine to
            affect the execution\n of the flow entity.\n Example:\n Experian flows
            have a 'use_invoice_account_number' field that is a boolean.\n if checked,
            we change the account number used for payment, rather than use the\n one
            provided in the portal link."
      description: "this describes the requirements to build a Flow entity\n that
        matches this description.  All created flows must\n conform to a FlowDefinition."
    api.v1alpha1.integrations.CalendarSummary:
      type: object
      properties:
        calendarNum:
          type: integer
          description: calendar_num is in either YYYY, MM, or WW format
          format: int32
        summary:
          $ref: '#/components/schemas/api.v1alpha1.integrations.TransactionSummary'
        typeSummaries:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.IntegrationTypeSummary'
          description: an array of "pairs" with the integration type and it's transaction
            summary
    api.v1alpha1.integrations.CallEpicPatientReq:
      type: object
      properties:
        PhoneAgentID:
          type: string
          description: "The PhoneAgentID is the user’s ID in the phone system (TCN),
            which indicates to the phone system (TCN) which user is initiating a call.\n
            At least one of PhoneAgentID and OriginPhoneExtension must be populated.\n
            The property will always be sent, although it may not be populated."
        OriginPhoneExtension:
          type: string
          description: "The extension used as the phone number for the call initiated
            from Epic.\n At least one of PhoneAgentID and OriginPhoneExtension must
            be populated.\n The property will always be sent, although it may not
            be populated."
        PhoneNumber:
          type: string
          description: The phone number that should be dialed.
        EpicCallID:
          type: string
          description: "The internal ID of the record in Epic that represents this
            call.\n The phone system can store the ID to allow later linking of reports,\n
            and to update Epic with information about the call if necessary in the
            future.\n The property will always be sent, although it may not be populated."
    api.v1alpha1.integrations.CallEpicPatientRes:
      type: object
      properties:
        PhoneSystemCallID:
          type: string
          description: A unique identifier for the call in the phone system. The VoiceSessionID.
    api.v1alpha1.integrations.CompositeVal:
      type: object
      properties:
        parts:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.FieldOrStr'
      description: "represents the individual parts of a string, where some of the
        parts are\n fields in the payload, and other parts are static strings\n CompositeVal
        cannot handle circular references. Meaning you cannot have two\n values that
        contain fields of each other in the same payload.\n Fields that are not found
        when built into a string will throw an error"
    api.v1alpha1.integrations.Condition:
      type: object
      properties:
        key:
          type: string
          description: 'json path to the result ex: path.to.the.0.result'
        op:
          type: integer
          description: what operation we are confirming
          format: enum
        value:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
          description: we support comparing strings, numbers and bools
    api.v1alpha1.integrations.Conditions:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Condition'
    api.v1alpha1.integrations.CreatePaymentPortalLinksReq:
      type: object
      properties:
        linkConfigId:
          type: string
          description: the pk of link_config table that contains method we will be
            creating links for
        expiry:
          type: string
          description: when the link expires. blank means it never expires
          format: date-time
        userData:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Task'
          description: "each index represents one map of user data we need a link
            for\n should contain the sms/email id that is going to use this link at
            \"_task_id\""
    api.v1alpha1.integrations.CreatePaymentPortalLinksRes:
      type: object
      properties:
        urls:
          type: array
          items:
            type: string
          description: each url maps to the same index on the request.user_data
    api.v1alpha1.integrations.CreatePortalLinksReq:
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.integrations.PortalId'
          description: the portal's pk the link is for
        linkDatas:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Task'
          description: "each task will have a url created for it\n and all info for
            it can be located by Task.task_id"
    api.v1alpha1.integrations.CreatePortalLinksRes:
      type: object
      properties:
        urls:
          type: array
          items:
            type: string
          description: each url will be returned in order of the CreatePortalLinks.link_datas
            sent them in
    api.v1alpha1.integrations.DeleteIntegrationConfigReq:
      type: object
      properties:
        integrationId:
          type: integer
          format: enum
        name:
          type: string
        id:
          type: string
          description: if this exists we will delete by id, otherwise we delete by
            integration_id and name
    api.v1alpha1.integrations.DeletePluginInstanceReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PluginInstanceId'
    api.v1alpha1.integrations.DeletePluginInstanceRes:
      type: object
      properties: {}
    api.v1alpha1.integrations.DeletePortalConfigReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfigId'
        mask:
          type: string
          format: field-mask
        id:
          type: string
          description: DEPRECATED only here because integrations service needs it
      description: LETS MOVE THIS TO portals.proto WHERE IT BELONGS
    api.v1alpha1.integrations.DeletePortalConfigRes:
      type: object
      properties: {}
    api.v1alpha1.integrations.DeletePortalLinkReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalLinkId'
    api.v1alpha1.integrations.DeletePortalLinkRes:
      type: object
      properties: {}
    api.v1alpha1.integrations.DeletePortalReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalId'
    api.v1alpha1.integrations.DeletePortalRes:
      type: object
      properties: {}
    api.v1alpha1.integrations.Empty:
      type: object
      properties: {}
    api.v1alpha1.integrations.FieldOrStr:
      type: object
      properties:
        field:
          type: string
        strVal:
          type: string
      description: "represents either a field name whose value needs to be looked
        up in the payload\n or a static string value"
    api.v1alpha1.integrations.GenerateEpicKeyPairReq:
      type: object
      properties:
        orgId:
          type: string
        servers:
          type: array
          items:
            type: string
    api.v1alpha1.integrations.GenerateEpicKeyPairRes:
      type: object
      properties:
        productionPublicKey:
          type: string
        nonProductionPublicKey:
          type: string
    api.v1alpha1.integrations.GetAggregatedMetadataReq:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        methodId:
          type: integer
          format: enum
      description: get a summary of all the aggregated data between two dates
    api.v1alpha1.integrations.GetAggregatedMetadataRes:
      type: object
      properties:
        views:
          type: integer
          format: int32
        verifyAttempts:
          type: integer
          format: int32
        verifySuccesses:
          type: integer
          format: int32
        paymentAttempts:
          type: integer
          format: int32
        paymentSuccesses:
          type: integer
          format: int32
        paymentAmount:
          type: number
          format: double
        fields:
          type: array
          items:
            type: string
      description: the metadata values. All values should be numbers or dates
    api.v1alpha1.integrations.GetDetailedPortalReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalId'
        portalMask:
          type: string
          format: field-mask
        portalConfigMask:
          type: string
          description: "controls which fields are sent back on entity related to the
            portal's portal_config.\n If left empty, only the portal_config.name,
            and portal_config.id fields will be set."
          format: field-mask
        pluginInstanceMask:
          type: string
          description: "controls which fields are sent back on entity related to the
            portal's plugin_instances.\n If left empty, only each plugin_instance.name,
            and plugin_instance.id fields will be set."
          format: field-mask
    api.v1alpha1.integrations.GetDetailedPortalRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.GetDetailedPortalRes_Entity'
    api.v1alpha1.integrations.GetDetailedPortalRes_Entity:
      type: object
      properties:
        portal:
          $ref: '#/components/schemas/api.v1alpha1.integrations.Portal'
        portalConfig:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfig'
        pluginInstances:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PluginInstance'
    api.v1alpha1.integrations.GetIntegrationConfigReq:
      type: object
      properties:
        integrationId:
          type: integer
          format: enum
        name:
          type: string
        id:
          type: string
          description: if this exists, we will do GetIntegrationConfigById, otherwise
            we will do GetIntegrationConfigByName
    api.v1alpha1.integrations.GetIntegrationTransactionReportDataReq:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        groupBy:
          type: object
          additionalProperties:
            type: string
          description: which field_names:value we want to see that was in the last
            request's group_by
        pageSize:
          type: integer
          format: int32
        pageNum:
          type: integer
          format: int32
        integrationId:
          type: integer
          format: enum
        searchAfterSid:
          type: string
      description: Lists the integration transactions that match a flow and campaign
    api.v1alpha1.integrations.GetIntegrationTransactionReportDataRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow'
        lastTransactionSid:
          type: string
    api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow:
      type: object
      properties:
        countMetrics:
          type: object
          additionalProperties:
            type: string
        linkData:
          type: object
          additionalProperties:
            type: string
        date:
          type: string
          format: date-time
        paymentAmount:
          type: number
          format: double
    api.v1alpha1.integrations.GetIntegrationTransactionReportReq:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        groupBy:
          type: array
          items:
            type: string
          description: field names we want to group the data by
      description: GetIntegrationTransactionReportReq gives summarizes the IntegrationTrasactions
        between two dates
    api.v1alpha1.integrations.GetIntegrationTransactionReportRes:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.IntegrationTransactionReportRow'
    api.v1alpha1.integrations.GetIntegrationTransactionReq:
      type: object
      properties:
        integrationTransactionId:
          type: string
    api.v1alpha1.integrations.GetPluginInstanceReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PluginInstanceId'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.integrations.GetPluginInstanceRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PluginInstance'
    api.v1alpha1.integrations.GetPortalConfigLogoReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfigId'
    api.v1alpha1.integrations.GetPortalConfigLogoRes:
      type: object
      properties:
        entity:
          type: string
          format: bytes
    api.v1alpha1.integrations.GetPortalConfigReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfigId'
        mask:
          type: string
          format: field-mask
        id:
          type: string
          description: DEPRECATED only here because integrations service needs it
      description: LETS MOVE THIS TO portals.proto WHERE IT BELONGS
    api.v1alpha1.integrations.GetPortalConfigRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfig'
    api.v1alpha1.integrations.GetPortalLinkReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalLinkId'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.integrations.GetPortalLinkRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalLink'
    api.v1alpha1.integrations.GetPortalLinksByDateRangeReq:
      type: object
      properties:
        orgId:
          type: string
        regionId:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        pageSize:
          type: integer
          format: int32
        pageNum:
          type: integer
          format: int32
        methodId:
          type: integer
          format: enum
      description: GetPortalLinksByDateRangeReq gives a paginated view of portal links
    api.v1alpha1.integrations.GetPortalLinksByDateRangeRes:
      type: object
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PortalLinkTransactionRow'
      description: GetPortalLinksByDateRangeRes returns a page of data
    api.v1alpha1.integrations.GetPortalLogoReq:
      type: object
      properties:
        id:
          type: string
          description: id of portal_config
    api.v1alpha1.integrations.GetPortalReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalId'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.integrations.GetPortalRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.Portal'
    api.v1alpha1.integrations.HangUpEpicPatientCallReq:
      type: object
      properties:
        PhoneAgentID:
          type: string
          description: "The PhoneAgentID is the user’s ID in the phone system (TCN),
            which indicates to the phone system (TCN) which user is initiating a call.\n
            At least one of PhoneAgentID and OriginPhoneExtension must be populated.\n
            The property will always be sent, although it may not be populated."
        OriginPhoneExtension:
          type: string
          description: "The extension used as the phone number for the call initiated
            from Epic.\n At least one of PhoneAgentID and OriginPhoneExtension must
            be populated.\n The property will always be sent, although it may not
            be populated."
        EpicCallID:
          type: string
          description: The internal ID of the record in Epic that represents this
            call.
    api.v1alpha1.integrations.IVRPortal:
      type: object
      properties: {}
    api.v1alpha1.integrations.IntegrationConfig:
      type: object
      properties:
        id:
          type: string
        integrationId:
          type: integer
          format: enum
        name:
          type: string
        description:
          type: string
        params:
          $ref: '#/components/schemas/api.v1alpha1.integrations.Values'
        deleted:
          type: boolean
        createdOn:
          type: string
          format: date-time
        alias:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.integrations.MapString'
          description: alternative names that map to parameter names.
        conds:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.integrations.Conditions'
          description: these conditions will be checked on the integration's response.
            If any evaluate to false, the integration method will fail
        methodId:
          type: integer
          format: enum
    api.v1alpha1.integrations.IntegrationConfigs:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.IntegrationConfig'
    api.v1alpha1.integrations.IntegrationInfo:
      type: object
      properties:
        name:
          type: string
          description: 'the pretty name of this integration. Ex: ''BrainTree'''
        integrationId:
          type: integer
          description: identifies which integration handler this is
          format: enum
        description:
          type: string
          description: describes this integration
        methods:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.MethodInfo'
          description: what methods are available for this integration
        groupParams:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Parameter'
          description: "the plugin fields for this integration.\n These fields should
            be set on the plugin level and not the runtime.\n key is a value starting
            at api.commons.integrations.Visiblity.VISIBILITY_GROUP\n and ending at
            99 more than that value, or parameters marked VISIBILITY_ANYWHERE"
      description: "IntegrationInfo describes one of our payment sub-services\n it
        is used in static structures in integrations/adapters/integrations go packages"
    api.v1alpha1.integrations.IntegrationInfos:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.IntegrationInfo'
    api.v1alpha1.integrations.IntegrationTemplateInfo:
      type: object
      properties:
        broadcastTemplateSid:
          type: string
        templateName:
          type: string
    api.v1alpha1.integrations.IntegrationTransaction:
      type: object
      properties:
        integrationTransactionId:
          type: string
        taskId:
          type: string
        integrationId:
          type: integer
          format: enum
        methodId:
          type: integer
          format: enum
        transactionType:
          type: integer
          format: enum
        requestSource:
          type: integer
          format: enum
        result:
          type: integer
          format: enum
        amountCollected:
          type: number
          format: double
        requestData:
          $ref: '#/components/schemas/api.v1alpha1.integrations.Values'
        responseData:
          $ref: '#/components/schemas/api.v1alpha1.integrations.Values'
        createdOn:
          type: string
          format: date-time
        configName:
          type: string
        conds:
          $ref: '#/components/schemas/api.v1alpha1.integrations.Conditions'
    api.v1alpha1.integrations.IntegrationTransactionReportRow:
      type: object
      properties:
        integrationId:
          type: integer
          format: enum
        integrationName:
          type: string
        methodId:
          type: integer
          format: enum
        methodName:
          type: string
        transactionType:
          type: integer
          format: enum
        requestSource:
          type: integer
          format: enum
        flowName:
          type: string
          description: "name of the flow that was ran.\n two flows can have the same
            method_id but have different flow_names due to\n the payment portal and
            ivr portal using same methods, but different flows.\n group by this to
            get rid of ivr data in the text2pay results"
        campaignType:
          type: string
        groupByValues:
          type: object
          additionalProperties:
            type: string
          description: the key value pairs for the 'group_by_fields' passed to the
            request
        revenue:
          type: number
          description: aggregate results
          format: double
        revenueSubtotals:
          type: object
          additionalProperties:
            type: number
            format: double
          description: "date => amount collected subtotals for this row.\n if the
            transaction collected = 0 it is not included as an entry.\n date format
            for the key is RFC339: \"YYYY-MM-DDThh:mm:ss\". It will always be in UTC."
        successCount:
          type: string
        failureCount:
          type: string
        totalCount:
          type: string
        highestTrafficDate:
          type: string
          description: DD-MM-YYYY format of highest traffic day
        lowestTrafficDate:
          type: string
          description: DD-MM-YYYY format of lowest traffic day
        countMetrics:
          type: object
          additionalProperties:
            type: string
          description: views, verification, invoice, and payment attempts, etc
        fields:
          type: array
          items:
            type: string
          description: "the names of the fields uploaded to portal link, and sent
            for enriching portal link campaign info\n to get these values, you must
            make a separate api call"
    api.v1alpha1.integrations.IntegrationTypeSummary:
      type: object
      properties:
        integrationType:
          type: integer
          format: enum
        integrationSummary:
          $ref: '#/components/schemas/api.v1alpha1.integrations.TransactionSummary'
    api.v1alpha1.integrations.ListAllActionDefinitionsReq:
      type: object
      properties: {}
    api.v1alpha1.integrations.ListAllActionDefinitionsResponse:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.ActionDefinition'
    api.v1alpha1.integrations.ListAvailablePaymentFieldsReq:
      type: object
      properties:
        payment:
          $ref: '#/components/schemas/api.commons.integrations.PaymentFlow'
      description: for listing fields on the given payment flow
    api.v1alpha1.integrations.ListAvailablePaymentFieldsRes:
      type: object
      properties:
        paymentFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
      description: the available fields for the payment flow
    api.v1alpha1.integrations.ListAvailableVerificationFieldsReq:
      type: object
      properties:
        verification:
          $ref: '#/components/schemas/api.commons.integrations.VerificationFlow'
      description: for listing fields on the given verification flow
    api.v1alpha1.integrations.ListAvailableVerificationFieldsRes:
      type: object
      properties:
        verificationFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
      description: the available fields for the verification flow
    api.v1alpha1.integrations.ListDetailedPortalsReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalId'
        portalMask:
          type: string
          format: field-mask
        portalConfigMask:
          type: string
          description: "controls which fields are sent back on entity related to the
            portal's portal_config.\n If left empty, only the portal_config.name,
            and portal_config.id fields will be set."
          format: field-mask
        pluginInstanceMask:
          type: string
          description: "controls which fields are sent back on entity related to the
            portal's plugin_instances.\n If left empty, only each plugin_instance.name,
            and plugin_instance.id fields will be set."
          format: field-mask
        pageSize:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        ptypes:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PortalType'
    api.v1alpha1.integrations.ListDetailedPortalsRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.ListDetailedPortalsRes_Entity'
    api.v1alpha1.integrations.ListDetailedPortalsRes_Entity:
      type: object
      properties:
        portal:
          $ref: '#/components/schemas/api.v1alpha1.integrations.Portal'
        portalConfig:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfig'
        pluginInstances:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PluginInstance'
    api.v1alpha1.integrations.ListFlowFieldNamesReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.ListFlowFieldNamesReq_Entity'
      description: "used to check what field names are expected by a flow\n does not
        return any other information about the fields,\n and the user backend still
        allows any data to be submitted."
    api.v1alpha1.integrations.ListFlowFieldNamesReq_Entity:
      type: object
      properties:
        flow:
          allOf:
          - $ref: '#/components/schemas/api.commons.integrations.Flow'
          description: the single flow we are interested in checking
        loc:
          type: integer
          description: the location the flow will check for fields
          format: enum
    api.v1alpha1.integrations.ListFlowFieldNamesRes:
      type: object
      properties:
        fieldNames:
          type: array
          items:
            type: string
      description: the field names the flow will look for at the request's specified
        location
    api.v1alpha1.integrations.ListIntegrationConfigNamesReq:
      type: object
      properties:
        integrationId:
          type: integer
          format: enum
      description: used to list all the config names that we have for an integration
        handler
    api.v1alpha1.integrations.ListIntegrationConfigNamesRes:
      type: object
      properties:
        integrationId:
          type: integer
          format: enum
        names:
          type: array
          items:
            type: string
    api.v1alpha1.integrations.ListIntegrationTemplatesByConfigReq:
      type: object
      properties:
        integrationConfigName:
          type: string
    api.v1alpha1.integrations.ListIntegrationTemplatesByConfigRes:
      type: object
      properties:
        integrationTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.IntegrationTemplateInfo'
    api.v1alpha1.integrations.ListIntegrationsForOrgReq:
      type: object
      properties: {}
    api.v1alpha1.integrations.ListJourneyConfigsReq:
      type: object
      properties: {}
    api.v1alpha1.integrations.ListNonJourneyConfigsReq:
      type: object
      properties: {}
    api.v1alpha1.integrations.ListPluginInstanceReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PluginInstance'
        mask:
          type: string
          format: field-mask
        pageSize:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
    api.v1alpha1.integrations.ListPluginInstanceRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PluginInstance'
    api.v1alpha1.integrations.ListPluginsByMethodReq:
      type: object
      properties:
        methodId:
          type: integer
          format: enum
    api.v1alpha1.integrations.ListPluginsByMethodRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PluginInstance'
    api.v1alpha1.integrations.ListPortalConfigsReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfigId'
        mask:
          type: string
          format: field-mask
        pageSize:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
      description: LETS MOVE THIS TO portals.proto WHERE IT BELONGS
    api.v1alpha1.integrations.ListPortalConfigsRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfig'
        nextPageToken:
          type: string
    api.v1alpha1.integrations.ListPortalLinksReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalLinkId'
        mask:
          type: string
          format: field-mask
        pageSize:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
    api.v1alpha1.integrations.ListPortalLinksRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PortalLink'
    api.v1alpha1.integrations.ListPortalTypesReq:
      type: object
      properties: {}
    api.v1alpha1.integrations.ListPortalTypesResponse:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PortalDefinition'
    api.v1alpha1.integrations.ListPortalWorkflowsReq:
      type: object
      properties: {}
    api.v1alpha1.integrations.ListPortalWorkflowsResponse:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.WorkflowDefinition'
    api.v1alpha1.integrations.ListPortalsReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalId'
        mask:
          type: string
          format: field-mask
        pageSize:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        ptypes:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PortalType'
    api.v1alpha1.integrations.ListPortalsRes:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Portal'
    api.v1alpha1.integrations.Logo:
      type: object
      properties:
        value:
          type: string
          format: bytes
      description: wrapper message so it can be stored in database correctly
    api.v1alpha1.integrations.MapString:
      type: object
      properties:
        values:
          type: object
          additionalProperties:
            type: string
    api.v1alpha1.integrations.MethodInfo:
      type: object
      properties:
        name:
          type: string
          description: the pretty name of the method
        methodId:
          type: integer
          description: identifies which method this is
          format: enum
        txType:
          type: integer
          description: 'what type of method call this is: PAYMENT, INQUIRY, or VERIFY'
          format: enum
        params:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Parameter'
          description: what types of fields can/must be sent with the data when calling
            the method
        url:
          type: string
          description: the url we contact
        response:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Parameter'
          description: "the expected response map will have these values\n none of
            these should be required, and none should have a default value"
        runtimeParams:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Parameter'
          description: "fields specific to this method that should come over during
            the runtime\n key will be a value starting at commnos.public.Visiblity.VISIBILITY_RUNTIME\n
            and ending at 99 more than that value, or parameeters marked VISIBLITY_ANYWHERE"
    api.v1alpha1.integrations.Parameter:
      type: object
      properties:
        name:
          type: string
          description: name of parameter. This will be the key of the field in the
            request payload
        paramType:
          type: integer
          description: "the type of the field. The value of the key value pair needs
            to be this type in the request payload\n right now this will be STRING,
            NUMBER, BOOL"
          format: enum
        required:
          type: boolean
          description: if the field must appear in the request payload or not
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
          description: what is used if the value is not provided
        displayName:
          type: string
          description: some names are really ugly, display names are what the user
            should be shown
        sensitive:
          type: boolean
          description: means we won't be storing in the database (and there is no
            way to override)
        runtimeParam:
          type: boolean
          description: "whether this value can be stored in an integration config.\n
            If true, we do not allow the value to be put in the config, the value
            can only\n be received during processing.\n true values should be filtered
            on the front end"
        helperText:
          type: string
          description: tool tip info about the param
        templateLocked:
          type: boolean
          description: "means the parameter is not allowed to be editted in the template
            builder.\n template builder can use this to field to make the parameter
            read_only on the ui.\n integration_config builder ui can ignore this field.\n
            usually fields that are template_locked are ones that require extra work
            to\n get an appropriate value for. like \"collection_id\""
        validation:
          type: integer
          description: what type of data value we accept
          format: enum
      description: "Parameter is describes a key/value pair that needs to be on the
        requeset object\n it is used in static structures in integrations/adapters/integrations
        go packages"
    api.v1alpha1.integrations.PastTxEntity:
      type: object
      properties:
        req:
          type: object
          additionalProperties:
            type: string
        res:
          type: object
          additionalProperties:
            type: string
        createdOn:
          type: string
          format: date-time
      description: "simplified view of a IntegrationTransaction\n all values converted
        to string.\n only shows the request/resposne data, and timestamp it was created
        on"
    api.v1alpha1.integrations.PaymentPortal:
      type: object
      properties:
        verification:
          $ref: '#/components/schemas/api.commons.integrations.VerificationFlow'
        invoice:
          $ref: '#/components/schemas/api.commons.integrations.InvoiceFlow'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.PaymentFlow'
        portalText:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalText'
    api.v1alpha1.integrations.PluginInstance:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        pluginDefinition:
          type: string
          description: 'the plugin type name/label. Ex: ''Experian Payments'''
        data:
          $ref: '#/components/schemas/api.v1alpha1.integrations.Values'
        metadata:
          $ref: '#/components/schemas/api.v1alpha1.integrations.Values'
        lastEdited:
          type: string
          format: date-time
        methodId:
          type: integer
          format: enum
        displayMethods:
          type: array
          items:
            type: integer
            format: enum
    api.v1alpha1.integrations.PluginInstanceId:
      type: object
      properties:
        id:
          type: string
    api.v1alpha1.integrations.PopulateIntegrationLinkReq:
      type: object
      properties:
        clientSid:
          type: string
        agentSid:
          type: string
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        scheduledCallbackId:
          type: string
        integrationLink:
          $ref: '#/components/schemas/api.commons.org.IntegrationLink'
    api.v1alpha1.integrations.PopulateIntegrationLinkRes:
      type: object
      properties:
        integrationLink:
          $ref: '#/components/schemas/api.commons.org.IntegrationLink'
    api.v1alpha1.integrations.Portal:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        portalConfigId:
          type: string
        pluginInstIds:
          type: array
          items:
            type: string
        ptype:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalType'
        lastEdited:
          type: string
          format: date-time
        definitionName:
          type: string
          description: the portal definition this came from
        portalSegments:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.integrations.PortalSegments'
          description: "each item in \"segments\" represents a task for the user.\n
            the user must choose and complete one of the FlowChoices in each position\n
            in the \"segments\" array to be considered complete"
    api.v1alpha1.integrations.PortalConfig:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        chatClientLink:
          type: string
          description: link to pull up a chat with customer service
        contactEmail:
          type: string
        contactPhone:
          type: string
        postalCode:
          type: string
        city:
          type: string
        state:
          type: string
        companyName:
          type: string
        logo:
          type: string
          description: is the logo used in the corner of the portal screen
          format: bytes
        primaryColor:
          type: string
          description: is the primary color used for the portal screen
        secondaryColor:
          type: string
          description: accent color used on the portal screen
        streetAddress:
          type: string
      description: "all these things will show up on the portal screen to the receiver
        of\n the link contact info should look like the company who is using the portal\n
        (not tcn)"
    api.v1alpha1.integrations.PortalConfigId:
      type: object
      properties:
        id:
          type: string
    api.v1alpha1.integrations.PortalConfigs:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfig'
    api.v1alpha1.integrations.PortalDefinition:
      type: object
      properties:
        definitionName:
          type: string
          description: the name of this type of portal
        workflowRequirements:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.WorkflowRequirement'
          description: "each FlowRequirement below represents a screen that must be
            presented\n to the user in order. All flows in the workflow_requirements
            must be completed in order.\n Payment portal would have 3 workflow_requirements:\n
            workflow_requirements: [\n   FlowRequirement{max_choices: 1, flow_type:
            VERIFICATION},\n   FlowRequirement{max_choices: 1, flow_type: INVOICE},\n
            \  FlowRequirement{max_choices: 0, flow_type: PAYMENT},\n ]"
      description: "this describes a portal type. any created portals must conform
        to a\n portal definition."
    api.v1alpha1.integrations.PortalId:
      type: object
      properties:
        id:
          type: string
    api.v1alpha1.integrations.PortalLink:
      type: object
      properties:
        id:
          type: string
        portalId:
          type: string
        pluginInstanceId:
          type: string
          description: DONT USE
        portalConfigId:
          type: string
        taskId:
          type: string
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
        metadata:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
        lastEdited:
          type: string
          format: date-time
    api.v1alpha1.integrations.PortalLinkId:
      type: object
      properties:
        id:
          type: string
    api.v1alpha1.integrations.PortalLinkTransactionRow:
      type: object
      properties:
        views:
          type: integer
          description: all this from the PortalLink.Metadata map
          format: int32
        verifyAttempts:
          type: integer
          format: int32
        verifySuccesses:
          type: integer
          format: int32
        paymentAttempts:
          type: integer
          format: int32
        paymentSuccesses:
          type: integer
          format: int32
        paymentAmount:
          type: number
          format: double
        date:
          type: string
          format: date-time
        linkData:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
          description: from PortalLink.Data map
      description: "PortalLinkTransactionRow is all the metrics about a portal link,\n
        and how it was used in any integration transactions."
    api.v1alpha1.integrations.PortalSegment:
      type: object
      properties:
        workflowChoices:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PortalWorkflow'
      description: "PortalSegment contains a set a flows where user must complete
        one of set.\n usually this is selected by the user.\n Example:\n with payment
        portal, our payment step would have a WorkflowChoices like this:\n PortalSegment{\n
        \ workflow_choices: [\n    <Credit Card Workflow>,\n    <ACH Workflow>,\n
        \   <PayPal Workflow>,\n  ]\n }\n The user doesn't need to do all the choices,
        just needs to select one to complete."
    api.v1alpha1.integrations.PortalSegments:
      type: object
      properties:
        portalSegments:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PortalSegment'
    api.v1alpha1.integrations.PortalText:
      type: object
      properties:
        verificationHeader:
          type: string
        verificationFooter:
          type: string
        paymentHeader:
          type: string
        paymentFooter:
          type: string
        receiptHeader:
          type: string
        receiptFooter:
          type: string
        invoiceHeader:
          type: string
        invoiceFooter:
          type: string
    api.v1alpha1.integrations.PortalType:
      type: object
      properties:
        paymentPortal:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PaymentPortal'
        ivrPortal:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.integrations.IVRPortal'
          description: contains info needed for ivr payment
    api.v1alpha1.integrations.PortalWorkflow:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Action'
          description: the set of actions on the integrations api that must be executed
            in order
        template:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.integrations.Template'
          description: the template that belongs with the result dataset.
        formFields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
          description: the data that appears on the user form. This is untrusted data.
        headerText:
          type: string
          description: text presented to the user for this flow
        footerText:
          type: string
        demoMode:
          type: boolean
          description: "if true we do not perform the actions in the \"segments\"
            array\n instead we check pass/fail demo conditions and return demo results"
        demoFailConditions:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Condition'
        demoPassConditions:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Condition'
        demoResults:
          type: object
          additionalProperties:
            type: string
        workflowDefinitionName:
          type: string
      description: "a PortalWorkflow is an entity that describes a set of segments
        that must be completed in sequence.\n each segment is fed the data as input,
        and the result is merged on top of the input.\n after completing all the segments
        successfully, we consider the flow completed.\n A Flow also comes with the
        user defined template, form_fields, opts, and text.\n None of these are required
        but will affect how the information is shown to the user."
    api.v1alpha1.integrations.ProcessReq:
      type: object
      properties:
        requestId:
          type: string
          description: "an identifier for this request so we do not do duplicate calls\n
            if a IntegrationsApi.Process() call times out, but doesn't fail\n you
            can call IntegrationsApi.Process() again with the same request_id.\n The
            second call will just return the result of the previous timed out call\n
            instead of processing the request a second time."
        integrationId:
          type: integer
          description: the id of handler we want to trigger
          format: enum
        methodId:
          type: integer
          description: which integration config is going to be triggered
          format: enum
        configName:
          type: string
        configId:
          type: string
          description: "if this exists, we will fetch the integration by id\n otherwise
            we will get the integration by config_name (legecy)"
        params:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
          description: parameters used for this request. These are combined with the
            parameters stored in the config
        conds:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Condition'
          description: can be left nil, used for verification requests
        callSid:
          type: string
        callType:
          type: integer
          format: enum
    api.v1alpha1.integrations.ProcessRes:
      type: object
      properties:
        result:
          type: boolean
          description: whether we were successful or the bool result the operation
            returned.
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
          description: "contains the response value from the transaction. This could
            be an amount for payments\n an object from inquiries, or it could be nil"
        integration:
          type: string
          description: integration name that was called
        method:
          type: string
          description: method that was called
        transactionId:
          type: string
          description: "ID of thing we inserted into the db\n If this is only empty
            if we fail to insert a transaction (which will return an error) or\n the
            transaction is pending. This happens if we call IntegrationsApi.Process()
            with the same request_id\n twice, with the first call timing out."
    api.v1alpha1.integrations.ProcessWorkflowReq:
      type: object
      properties:
        portalLinkId:
          type: string
          description: "portal link id is optional depending on the type of portal
            being processed\n if it is specified, we merge in the link data to the
            request params"
        portalId:
          type: string
        segment:
          type: integer
          description: segment tells us which workflow segment needs processing
          format: int32
        choice:
          type: integer
          description: which choice in the workflow array to be processed
          format: int32
        params:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
          description: "params are what the user fills out before it is processed.\n
            It will be merged with plugin instance data and potentially link data"
        callSid:
          type: string
        callType:
          type: integer
          format: enum
    api.v1alpha1.integrations.ProcessWorkflowRes:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
          description: the response data from the process
    api.v1alpha1.integrations.SearchPastTransactionsRequest:
      type: object
      properties:
        pluginInstanceId:
          type: string
          description: "which plugin instance made this call.\n optional. If empty
            string, we use the int_id"
        intId:
          type: integer
          format: enum
        methodId:
          type: integer
          description: which method to look up
          format: enum
        matchFields:
          type: object
          additionalProperties:
            type: string
          description: "what keys were given to IntegrationsApi during the ivr processing
            call\n and the string representation of the values"
        limit:
          type: integer
          description: "max records we will be looking for in the response.\n no more
            than 10.\n if left 0, default of 3 is used."
          format: uint32
        searchBefore:
          type: string
          description: "if provided, we will start the search at any transactions
            older than this timestamp.\n if left empty, we will start at the current
            time."
          format: date-time
    api.v1alpha1.integrations.SearchPastTransactionsResponse:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.PastTxEntity'
    api.v1alpha1.integrations.SummaryReq:
      type: object
      properties:
        year:
          type: integer
          description: a num in YYYY format
          format: int32
    api.v1alpha1.integrations.SummaryRes:
      type: object
      properties:
        yearSummary:
          $ref: '#/components/schemas/api.v1alpha1.integrations.CalendarSummary'
        monthSummaries:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.CalendarSummary'
        weekSummaries:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.CalendarSummary'
    api.v1alpha1.integrations.Task:
      type: object
      properties:
        values:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
          description: the data used to fetch info about this task when the user clicks
            on a link
        taskId:
          type: string
          description: the sms_id, email_id, etc that can be used to identify what
            generated this link
        src:
          type: integer
          description: 'the type of the source for this link. ex: Email, Sms, Chat'
          format: enum
    api.v1alpha1.integrations.Template:
      type: object
      properties:
        invoiceTemplate:
          $ref: '#/components/schemas/api.commons.integrations.Invoices'
      description: "template is a container for the different template types on each
        flow.\n each flow definition can have 0-1 templates. Right now we only have
        Templates\n on invoice flows, but that might not always be the case."
    api.v1alpha1.integrations.TransactionSummary:
      type: object
      properties:
        totalTransactionsAttempted:
          type: string
        totalTransactionsCompleted:
          type: string
        totalTransactionsFailed:
          type: string
        totalAmountCollected:
          type: number
          format: double
        avgAmountCollected:
          type: number
          format: double
    api.v1alpha1.integrations.UpdateIntegrationConfigReq:
      type: object
      properties:
        id:
          type: string
          description: if this exists, we will do UpdateIntegrationConfigById, otherwise
            we will do UpdateIntegrationConfigByName
        integrationId:
          type: integer
          format: enum
        name:
          type: string
        description:
          type: string
        params:
          $ref: '#/components/schemas/api.v1alpha1.integrations.Values'
    api.v1alpha1.integrations.UpdatePortalConfigLogoReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfig'
    api.v1alpha1.integrations.UpdatePortalConfigLogoRes:
      type: object
      properties: {}
    api.v1alpha1.integrations.UpdatePortalLogoReq:
      type: object
      properties:
        id:
          type: string
          description: id of portal_config
        logo:
          type: string
          description: is the logo used in the corner of the payment portal screen
          format: bytes
    api.v1alpha1.integrations.UpsertPluginInstanceReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PluginInstance'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.integrations.UpsertPluginInstanceRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PluginInstanceId'
    api.v1alpha1.integrations.UpsertPortalConfigReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfig'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.integrations.UpsertPortalConfigRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalConfigId'
    api.v1alpha1.integrations.UpsertPortalReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.Portal'
        mask:
          type: string
          format: field-mask
    api.v1alpha1.integrations.UpsertPortalRes:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrations.PortalId'
    api.v1alpha1.integrations.Value:
      type: object
      properties:
        strVal:
          type: string
        numVal:
          type: number
          format: double
        boolVal:
          type: boolean
        timeVal:
          type: string
          format: date-time
        compVal:
          $ref: '#/components/schemas/api.v1alpha1.integrations.CompositeVal'
        intVal:
          type: string
        sensitive:
          type: boolean
          description: whether this value should be allowed to be stored
        validation:
          type: integer
          description: "what type of data value we *want* to validate as.\n a value
            does *not* have to match the validation enum.\n a value that does not
            match its validation enum is just invalid."
          format: enum
      description: kind of like a json value, but we don't support circular references
    api.v1alpha1.integrations.Values:
      type: object
      properties:
        values:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrations.Value'
    api.v1alpha1.integrations.WorkflowDefinition:
      type: object
      properties:
        flowType:
          type: integer
          description: Payment, Invoice, or other type of flow
          format: enum
        definitionName:
          type: string
          description: the name of this workflow definition
        actionDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrations.ActionDefinition'
          description: the list of choices that can be selected for an action during
            the workflow execution
    api.v1alpha1.integrations.WorkflowRequirement:
      type: object
      properties:
        maxChoices:
          type: integer
          description: "how many different flows the user can choose from on this
            step.\n 0 and below is interpreted as unlimited flows.\n example:\n PaymentPortal
            would have this set to 1 for verification flow and invoice flows\n and
            set to 0 for payment flows. This forces the user to verify exactly 1 way\n
            see exactly 1 invoice, and choose credit card, ach paypal, etc to pay."
          format: int32
        flowType:
          type: integer
          description: "the flows for this step must be of this type\n FLOW_TYPE_UNKNOWN
            is interpreted as any flow type is acceptable"
          format: enum
    api.v1alpha1.integrationspublic.CompositeVal:
      type: object
      properties:
        parts:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrationspublic.FieldOrStr'
      description: "represents the individual parts of a string, where some of the
        parts are\n fields in the payload, and other parts are static strings\n CompositeVal
        cannot handle circular references. Meaning you cannot have two\n values that
        contain fields of each other in the same payload.\n Fields that are not found
        when built into a string will throw an error"
    api.v1alpha1.integrationspublic.FieldOrStr:
      type: object
      properties:
        field:
          type: string
        strVal:
          type: string
      description: "represents either a field name whose value needs to be looked
        up in the payload\n or a static string value"
    api.v1alpha1.integrationspublic.GetInvoiceReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrationspublic.PortalLinkId'
        sessionId:
          type: string
    api.v1alpha1.integrationspublic.GetInvoiceRes:
      type: object
      properties:
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrationspublic.Value'
          description: the raw data
        amountDue:
          type: number
          format: double
        amountDueKey:
          type: string
        invoices:
          allOf:
          - $ref: '#/components/schemas/api.commons.integrations.Invoices'
          description: the parsed data
    api.v1alpha1.integrationspublic.GetLinkDataReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrationspublic.PortalLinkId'
    api.v1alpha1.integrationspublic.GetLinkDataRes:
      type: object
      properties:
        complete:
          type: boolean
          description: true if payment was taken for this link
        expired:
          type: boolean
          description: true if the link is expired
        portalConfig:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.integrationspublic.PortalConfig'
          description: styling info
        verification:
          allOf:
          - $ref: '#/components/schemas/api.commons.integrations.VerificationFlow'
          description: how the user verifies identity for this portal
        invoice:
          allOf:
          - $ref: '#/components/schemas/api.commons.integrations.InvoiceFlow'
          description: how the user retrieves invoice for this portal
        payments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.PaymentFlow'
          description: all the accepted payment flows for this portal
        flowForms:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.integrationspublic.GetLinkDataRes_FieldNames'
        portalText:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.integrationspublic.PortalText'
          description: text that appears on one of the portal pages
    api.v1alpha1.integrationspublic.GetLinkDataRes_FieldNames:
      type: object
      properties:
        flow:
          $ref: '#/components/schemas/api.commons.integrations.Flow'
        fieldNames:
          type: array
          items:
            type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.integrations.FieldDefinition'
    api.v1alpha1.integrationspublic.GetReceiptReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrationspublic.PortalLinkId'
        sessionId:
          type: string
    api.v1alpha1.integrationspublic.GetReceiptRes:
      type: object
      properties:
        receiptId:
          type: string
        request:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrationspublic.Value'
          description: the non-sensitive request fields used to make the payment
        response:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrationspublic.Value'
          description: the response from the payment
        amountPaid:
          type: number
          description: amount charged
          format: double
        amountPaidKey:
          type: string
          description: field in the response that represents the amount charged
        paymentFlow:
          allOf:
          - $ref: '#/components/schemas/api.commons.integrations.PaymentFlow'
          description: flow name, type and options used
    api.v1alpha1.integrationspublic.PortalConfig:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        chatClientLink:
          type: string
          description: link to pull up a chat with customer service
        contactEmail:
          type: string
        contactPhone:
          type: string
        postalCode:
          type: string
        city:
          type: string
        state:
          type: string
        companyName:
          type: string
        logo:
          type: string
          description: is the logo used in the corner of the payment portal screen
          format: bytes
        primaryColor:
          type: string
          description: is the primary color used for the portal screen
        secondaryColor:
          type: string
          description: accent color used on the portal screen
        streetAddress:
          type: string
      description: "all these things will show up on the portal screen to the receiver
        of the link\n contact info should look like the company who is using the portal(not
        tcn)"
    api.v1alpha1.integrationspublic.PortalLinkId:
      type: object
      properties:
        id:
          type: string
    api.v1alpha1.integrationspublic.PortalText:
      type: object
      properties:
        verificationHeader:
          type: string
        verificationFooter:
          type: string
        paymentHeader:
          type: string
        paymentFooter:
          type: string
        receiptHeader:
          type: string
        receiptFooter:
          type: string
        invoiceHeader:
          type: string
        invoiceFooter:
          type: string
    api.v1alpha1.integrationspublic.ProcessWorkflowReq:
      type: object
      properties:
        portalLinkId:
          type: string
          description: "portal link id is optional depending on the type of portal
            being processed\n if it is specified, we merge in the link data to the
            request params"
        portalId:
          type: string
        segment:
          type: integer
          description: segment tells us which workflow segment needs processing
          format: int32
        choice:
          type: integer
          description: which choice in the workflow array to be processed
          format: int32
        params:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrationspublic.Value'
          description: "params are what the user fills out before it is processed.\n
            It will be merged with plugin instance data and potentially link data"
    api.v1alpha1.integrationspublic.ProcessWorkflowRes:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrationspublic.Value'
          description: the response data from the process
    api.v1alpha1.integrationspublic.SessionKeepAliveReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrationspublic.PortalLinkId'
        sessionId:
          type: string
    api.v1alpha1.integrationspublic.SessionKeepAliveRes:
      type: object
      properties:
        ok:
          type: boolean
          description: session refreshed ok
        sessionId:
          type: string
    api.v1alpha1.integrationspublic.SubmitPaymentReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrationspublic.PortalLinkId'
        sessionId:
          type: string
        paymentFields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrationspublic.Value'
        paymentFlow:
          $ref: '#/components/schemas/api.commons.integrations.PaymentFlow'
    api.v1alpha1.integrationspublic.SubmitPaymentRes:
      type: object
      properties:
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrationspublic.Value'
        amountPaid:
          type: number
          format: double
        amountPaidKey:
          type: string
    api.v1alpha1.integrationspublic.SubmitVerificationReq:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/api.v1alpha1.integrationspublic.PortalLinkId'
        verificationFields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.integrationspublic.Value'
          description: values from the verification form
    api.v1alpha1.integrationspublic.SubmitVerificationRes:
      type: object
      properties:
        verified:
          type: boolean
          description: if true, the session_id is valid and the user is considered
            "logged in"
        sessionId:
          type: string
          description: must be sent for requests that require a user to be verified
    api.v1alpha1.integrationspublic.Value:
      type: object
      properties:
        strVal:
          type: string
        numVal:
          type: number
          format: double
        boolVal:
          type: boolean
        timeVal:
          type: string
          format: date-time
        compVal:
          $ref: '#/components/schemas/api.v1alpha1.integrationspublic.CompositeVal'
        intVal:
          type: string
        sensitive:
          type: boolean
          description: whether this value should be allowed to be stored
        validation:
          type: integer
          description: "what type of data value we *want* to validate as.\n a value
            does *not* have to match the validation enum.\n a value that does not
            match its validation enum is just invalid."
          format: enum
      description: kind of like a json value, but we don't support circular references
    api.v1alpha1.lms.DeleteFileTemplateRequest:
      type: object
      properties:
        fileTemplate:
          $ref: '#/components/schemas/api.v1alpha1.lms.FileTemplateV2'
    api.v1alpha1.lms.DeleteFileTemplateResponse:
      type: object
      properties:
        fileTemplate:
          $ref: '#/components/schemas/api.v1alpha1.lms.FileTemplateV2'
    api.v1alpha1.lms.ExistingTemplate:
      type: object
      properties:
        fileTemplateId:
          type: string
        parseOpts:
          $ref: '#/components/schemas/api.v1alpha1.lms.ParseOpts'
    api.v1alpha1.lms.Field:
      type: object
      properties:
        syntaxType:
          type: string
        presiType:
          type: string
        name:
          type: string
        format:
          type: string
        rawValue:
          type: string
          description: example of a value for this field
    api.v1alpha1.lms.FileTemplate:
      type: object
      properties:
        orgId:
          type: string
        fileTemplateId:
          type: string
        filename:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.lms.Field'
        parseOpts:
          $ref: '#/components/schemas/api.v1alpha1.lms.ParseOpts'
        foid:
          type: string
    api.v1alpha1.lms.FileTemplateV2:
      type: object
      properties:
        legacyTemplate:
          $ref: '#/components/schemas/api.v0alpha.FileTemplate'
        dockTemplate:
          $ref: '#/components/schemas/api.v1alpha1.lms.FileTemplate'
    api.v1alpha1.lms.GetFileTemplateRequest:
      type: object
      properties:
        fileTemplate:
          $ref: '#/components/schemas/api.v1alpha1.lms.FileTemplateV2'
    api.v1alpha1.lms.GetFileTemplateResponse:
      type: object
      properties:
        fileTemplate:
          $ref: '#/components/schemas/api.v1alpha1.lms.FileTemplateV2'
    api.v1alpha1.lms.ListFileTemplatesRequest:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/api.v1alpha1.lms.FileTemplateV2'
        lastId:
          type: string
        pageSize:
          type: integer
          format: int32
    api.v1alpha1.lms.ListFileTemplatesResponse:
      type: object
      properties:
        fileTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.lms.FileTemplateV2'
    api.v1alpha1.lms.NewTemplate:
      type: object
      properties:
        orgId:
          type: string
        filename:
          type: string
        data:
          type: string
          format: bytes
    api.v1alpha1.lms.OptsCsv:
      type: object
      properties:
        hasHeader:
          type: boolean
        skipRows:
          type: string
        header:
          type: array
          items:
            type: string
        separator:
          type: string
    api.v1alpha1.lms.OptsFixed:
      type: object
      properties:
        hasHeader:
          type: boolean
        header:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.lms.OptsFixed_Field'
    api.v1alpha1.lms.OptsFixed_Field:
      type: object
      properties:
        startingPosition:
          type: integer
          description: "for fixed width files indicates the starting position of the
            data.\n if it is -1, starting position is one character after the previous
            fields\n starting position + length. if this is the first field and it
            is -1,\n starting position is 0"
          format: int32
        fieldLength:
          type: integer
          description: "for fixed width files indicates how many characters to the
            right of\n starting_position we will read. this field is required to be
            greater than\n 0."
          format: int32
    api.v1alpha1.lms.OptsJson:
      type: object
      properties:
        recordsRoot:
          type: string
    api.v1alpha1.lms.OptsJsonL:
      type: object
      properties: {}
    api.v1alpha1.lms.OptsParquet:
      type: object
      properties: {}
    api.v1alpha1.lms.ParseFileTemplateRequest:
      type: object
      properties:
        newTemplate:
          $ref: '#/components/schemas/api.v1alpha1.lms.NewTemplate'
        existingTemplate:
          $ref: '#/components/schemas/api.v1alpha1.lms.ExistingTemplate'
    api.v1alpha1.lms.ParseFileTemplateResult:
      type: object
      properties: {}
    api.v1alpha1.lms.ParseOpts:
      type: object
      properties:
        csv:
          $ref: '#/components/schemas/api.v1alpha1.lms.OptsCsv'
        json:
          $ref: '#/components/schemas/api.v1alpha1.lms.OptsJson'
        jsonl:
          $ref: '#/components/schemas/api.v1alpha1.lms.OptsJsonL'
        fixed:
          $ref: '#/components/schemas/api.v1alpha1.lms.OptsFixed'
        parquet:
          $ref: '#/components/schemas/api.v1alpha1.lms.OptsParquet'
    api.v1alpha1.lms.UpdateFileTemplateRequest:
      type: object
      properties:
        fileTemplate:
          $ref: '#/components/schemas/api.v1alpha1.lms.FileTemplateV2'
    api.v1alpha1.lms.UpdateFileTemplateResponse:
      type: object
      properties:
        fileTemplate:
          $ref: '#/components/schemas/api.v1alpha1.lms.FileTemplateV2'
    api.v1alpha1.newsroom.CreateNewsArticleRequest:
      type: object
      properties:
        title:
          type: string
          description: news article title
        content:
          type: string
          description: markdown content
        author:
          type: string
          description: article author
        imageReferenceId:
          type: string
          description: image reference id
      description: Request to create news article
    api.v1alpha1.newsroom.CreateNewsArticleResponse:
      type: object
      properties:
        articleDetails:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.NewsArticleDetails'
          description: news article details
      description: Response to create news article
    api.v1alpha1.newsroom.CreatePublishedArticleRequest:
      type: object
      properties:
        newArticleSid:
          type: string
          description: news article identifier
        displayToUser:
          type: boolean
          description: determines if we show to user
        articleLink:
          type: string
          description: link to the published article
      description: Request to create published article
    api.v1alpha1.newsroom.CreatePublishedArticleResponse:
      type: object
      properties:
        publishedArticleDetails:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.PublishedArticleDetails'
          description: news article details
      description: Response to create published article
    api.v1alpha1.newsroom.GetNewsArticleByIdRequest:
      type: object
      properties:
        newArticleSid:
          type: string
          description: the unique news article identifier
      description: Request to get news article by id
    api.v1alpha1.newsroom.GetNewsArticleByIdResponse:
      type: object
      properties:
        articleDetails:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.NewsArticleDetails'
          description: news article details
      description: Response to get news article
    api.v1alpha1.newsroom.GetNewsForUserRequest:
      type: object
      properties: {}
      description: Request to get unseen news articles for the user
    api.v1alpha1.newsroom.GetNewsForUserResponse:
      type: object
      properties:
        publishedArticleDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.newsroom.PublishedArticleDetails'
          description: published article details
      description: Response to unseen news articles for the user
    api.v1alpha1.newsroom.GetPublishedArticleByIdRequest:
      type: object
      properties:
        newArticleSid:
          type: string
          description: deprecated
        publishedArticleSid:
          type: string
          description: the unique published article sid
      description: Request to get published article by id
    api.v1alpha1.newsroom.GetPublishedArticleByIdResponse:
      type: object
      properties:
        publishedArticleDetails:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.PublishedArticleDetails'
          description: published article details
      description: Response to get published article
    api.v1alpha1.newsroom.ListImagesForNewsArticleRequest:
      type: object
      properties:
        newArticleSid:
          type: string
          description: images for the new article sid
      description: request to list all images news article
    api.v1alpha1.newsroom.ListImagesForNewsArticleResponse:
      type: object
      properties:
        newsArticleImages:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.newsroom.NewsArticleImage'
          description: images for the news article
      description: response to list all images for the news article
    api.v1alpha1.newsroom.ListNewsArticlesRequest:
      type: object
      properties:
        statuses:
          type: array
          items:
            type: integer
            format: enum
          description: the statuses to select by when listing articles (if empty,
            selects all)
        fieldMask:
          type: string
          description: list of article details to be Requested
          format: field-mask
      description: Request to list of news articles
    api.v1alpha1.newsroom.ListNewsArticlesResponse:
      type: object
      properties:
        articleDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.newsroom.NewsArticleDetails'
          description: article details
      description: Responseponse to list of news articles
    api.v1alpha1.newsroom.ListPublishedArticlesRequest:
      type: object
      properties: {}
      description: Request to list of published articles
    api.v1alpha1.newsroom.ListPublishedArticlesResponse:
      type: object
      properties:
        publishedArticleDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.newsroom.PublishedArticleDetails'
          description: published article details
      description: Response to list of published articles
    api.v1alpha1.newsroom.NewsArticleDetails:
      type: object
      properties:
        newArticleSid:
          type: string
          description: the unique news article identifier
        title:
          type: string
          description: news article title
        content:
          type: string
          description: markdown content
        status:
          type: integer
          description: article status
          format: enum
        dateCreated:
          type: string
          description: news article creation date
          format: date-time
        lastEdited:
          type: string
          description: news article last updated date
          format: date-time
        author:
          type: string
          description: article author
        imageReferenceId:
          type: string
          description: image reference id
      description: news article details
    api.v1alpha1.newsroom.NewsArticleImage:
      type: object
      properties:
        uuid:
          type: string
          description: unique name of the image
        newArticleSid:
          type: string
          description: image for the new article
        content:
          type: string
          description: image content
        downloadUrl:
          type: string
          description: download image url
        imageReferenceId:
          type: string
          description: image reference id
        imageType:
          type: string
          description: image type
        tempId:
          type: string
          description: temp id for the image
      description: image for the news article details
    api.v1alpha1.newsroom.PublishedArticleDetails:
      type: object
      properties:
        publishedArticleSid:
          type: string
          description: the unique published article identifier
        newsArticleDetails:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.NewsArticleDetails'
          description: news article details
        datePublished:
          type: string
          description: news article published date
          format: date-time
        displayToUser:
          type: boolean
          description: this flag determines if we show to user or not
      description: published article details
    api.v1alpha1.newsroom.StoreNewsArticleImageRequest:
      type: object
      properties:
        image:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.NewsArticleImage'
          description: NewsArticleImage
      description: request to upload image for the news article
    api.v1alpha1.newsroom.StoreNewsArticleImageResponse:
      type: object
      properties:
        image:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.NewsArticleImage'
          description: stored image details
      description: response to uploaded image
    api.v1alpha1.newsroom.UpdateNewsArticleRequest:
      type: object
      properties:
        articleDetails:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.NewsArticleDetails'
          description: the news article fields specified to be updated
        fieldMask:
          type: string
          description: list of fields Requested to be updated
          format: field-mask
      description: Request to update news article
    api.v1alpha1.newsroom.UpdateNewsArticleResponse:
      type: object
      properties:
        articleDetails:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.NewsArticleDetails'
          description: updated news article
      description: Response to update news article
    api.v1alpha1.newsroom.UploadNewsArticleImageRequest:
      type: object
      properties:
        image:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.NewsArticleImage'
          description: image details
      description: request to upload image for the news article
    api.v1alpha1.newsroom.UploadNewsArticleImageResponse:
      type: object
      properties:
        image:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.NewsArticleImage'
          description: uploaded image details
      description: response after uploading image for the news article
    api.v1alpha1.newsroom.UserActivity:
      type: object
      properties:
        userActivityLogSid:
          type: string
          description: the unique user activity log identifier
        dateCreated:
          type: string
          description: user activity created date
          format: date-time
        userActivityDetails:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.UserActivity_UserActivityDetails'
          description: user activity details
      description: user activity details
    api.v1alpha1.newsroom.UserActivityRequest:
      type: object
      properties:
        publishedArticleSid:
          type: string
          description: the unique published article identifier
        force:
          type: boolean
          description: this flag determines whether to allow news article popups while
            imitating/impersonating
      description: Request to update user activity
    api.v1alpha1.newsroom.UserActivityResponse:
      type: object
      properties:
        userActivity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.newsroom.UserActivity'
          description: user activity details
      description: Response to user activity updates
    api.v1alpha1.newsroom.UserActivity_UserActivityDetails:
      type: object
      properties:
        publishedArticleSid:
          type: string
          description: the unique published article identifier
      description: user activity details
    api.v1alpha1.org.AcceptLinkbackRecordingTermsRequest:
      type: object
      properties: {}
      description: Request for accepting linkback recording terms agreement.
    api.v1alpha1.org.AcceptLinkbackRecordingTermsResponse:
      type: object
      properties: {}
      description: Response for accepting linkback recording terms agreement.
    api.v1alpha1.org.AcceptTrustRequest:
      type: object
      properties:
        trustId:
          type: string
          description: ID of the trust being accepted.
      description: Request message for the AcceptTrust RPC.
    api.v1alpha1.org.AcceptTrustResponse:
      type: object
      properties: {}
      description: Response message for the AcceptTrust RPC.
    api.v1alpha1.org.AddGroupedUserIPRestrictionsRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: List of users that can only use the provided IPs.
        ips:
          type: array
          items:
            type: string
          description: List of IPs to whitelist for the associated group of users.
      description: Request message for the AddGroupedUserIPRestrictions rpc.
    api.v1alpha1.org.AddGroupedUserIPRestrictionsResponse:
      type: object
      properties: {}
      description: Response message for the AddGroupedUserIPRestrictions rpc.
    api.v1alpha1.org.AddIntervalToBusinessHoursRequest:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the business hours to add an interval
        dayInterval:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DayInterval'
          description: The day interval to be added
      description: Request for adding an interval to a business hours object
    api.v1alpha1.org.AddIntervalToBusinessHoursResponse:
      type: object
      properties: {}
      description: Response for adding an interval to a business hours object
    api.v1alpha1.org.AddUserSubscriptionByUserIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: "Required.\n User assigned to subscription"
        subscription:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
          description: All fields (except subscription id) must be set.
      description: Request to add a user subscription by a specified user with editing
        users org.
    api.v1alpha1.org.AddUserSubscriptionByUserIdResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
      description: "Response to adding a user subscription.\n Contains a single user
        subscription."
    api.v1alpha1.org.AddUserSubscriptionRequest:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
          description: "Required.\n All fields (except subscription id) must be set."
      description: Request to add a user subscription.
    api.v1alpha1.org.AddUserSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
      description: "Response to adding a user subscription.\n Contains a single user
        subscription."
    api.v1alpha1.org.AgentDetails_AgentProfileGroup:
      type: object
      properties:
        agentProfileGroupId:
          type: string
          description: The id of the user's agent profile group
        agentProfileGroupName:
          type: string
          description: The name of the user's agent profile group
      description: Object to contain the agent profile group fields
    api.v1alpha1.org.AgentDetails_HuntGroup:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group the agent is assigned to
        huntGroupName:
          type: string
          description: The name of the hunt group the agent is assigned to
      description: Object to contain the hunt group fields
    api.v1alpha1.org.ArchiveOrganizationRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Required. Archives the specified organization
      description: The request for ArchiveOrganization
    api.v1alpha1.org.ArchiveOrganizationResponse:
      type: object
      properties: {}
      description: The response for ArchiveOrganization
    api.v1alpha1.org.AssignAccountOwnerPermissionToUserRequest:
      type: object
      properties:
        userId:
          type: string
          description: User which will be assigned the account owner permissions.
      description: Request message for the AssignAccountOwnerPermissionToUser RPC.
    api.v1alpha1.org.AssignAccountOwnerPermissionToUserResponse:
      type: object
      properties: {}
      description: Response message for the AssignAccountOwnerPermissionToUser RPC.
    api.v1alpha1.org.AssignAgentProfileGroupsRequest:
      type: object
      properties:
        agentProfileGroupId:
          type: string
        userIds:
          type: array
          items:
            type: string
    api.v1alpha1.org.AssignAgentProfileGroupsResponse:
      type: object
      properties: {}
    api.v1alpha1.org.AssignLabelRequest:
      type: object
      properties:
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.LabelAssignment'
          description: The label assignments.
      description: Request message for the AssignLabel RPC.
    api.v1alpha1.org.AssignLabelResponse:
      type: object
      properties: {}
      description: Response message for the AssingLabel RPC.
    api.v1alpha1.org.AssignLabelsRequest:
      type: object
      properties:
        labelIds:
          type: array
          items:
            type: string
          description: Ids of labels getting assigned to a permission group
        permissionGroupId:
          type: string
          description: Id of the permission group to be assigned labels.
      description: Request message for the AssignLabelsRequest RPC.
    api.v1alpha1.org.AssignLabelsResponse:
      type: object
      properties: {}
      description: Response message for the AssignLabelsResponse RPC.
    api.v1alpha1.org.AssignScriptToHuntGroupsRequest:
      type: object
      properties:
        scriptSid:
          type: string
          description: The script to be assigned
        huntGroupSids:
          type: array
          items:
            type: string
          description: The target hunt groups to assign the specified script
      description: The request message for AssignScriptToHuntGroups
    api.v1alpha1.org.AssignScriptToHuntGroupsResponse:
      type: object
      properties: {}
      description: The response message for AssignScriptToHuntGroups
    api.v1alpha1.org.AssignTrustRequest:
      type: object
      properties:
        trustId:
          type: string
          description: ID of the trust being assigned.
        userIds:
          type: array
          items:
            type: string
          description: List of user IDs to assign the trust to.
      description: Request message for the AssignTrust RPC.
    api.v1alpha1.org.AssignTrustResponse:
      type: object
      properties: {}
      description: Response message for the AssignTrust RPC.
    api.v1alpha1.org.AssignUsersP3PermissionGroupRequest:
      type: object
      properties:
        p3PermissionGroupId:
          type: string
          description: The Id of the P3PermissionGroup to be assigned
        userIds:
          type: array
          items:
            type: string
          description: List of users to assign this group to
      description: Request message for the AssignUsersP3PermissionGroup RPC.
    api.v1alpha1.org.AssignUsersP3PermissionGroupResponse:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: List of users that were assigned the group
      description: Response message for the AssignUsersP3PermissionGroup RPC.
    api.v1alpha1.org.AssignUsersPermissionGroupRequest:
      type: object
      properties:
        permissionGroupId:
          type: string
          description: Required. The ID of the permission group that is being assigned.
        assignUserIds:
          type: array
          items:
            type: string
          description: Required. The IDs of the users the permission group is being
            assigned to.
      description: Request message for the AssignUsersPermissionGroup RPC.
    api.v1alpha1.org.AssignUsersPermissionGroupResponse:
      type: object
      properties: {}
      description: Response message for the AssignUsersPermissionGroup RPC.
    api.v1alpha1.org.ClearEmailUnsubscribeAcknowledgementRequest:
      type: object
      properties: {}
      description: Request for clearing email unsubscribe acknowledgement.
    api.v1alpha1.org.ClearEmailUnsubscribeAcknowledgementResponse:
      type: object
      properties: {}
      description: Response for clearing email unsubscribe acknowledgement.
    api.v1alpha1.org.ConvertOrgToManualRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Org id to convert to manual
      description: "ConvertOrgToManualRequest request to convert a single organization\n
        to manual only by org id."
    api.v1alpha1.org.ConvertOrgToManualResponse:
      type: object
      properties: {}
      description: ConvertOrgToManualRequest response for converting an organization
        to manual.
    api.v1alpha1.org.CopyAgentTriggerRequest:
      type: object
      properties:
        fromHuntGroupSid:
          type: string
          description: The sid of the hunt group from which the trigger is copied
        toHuntGroupSid:
          type: string
          description: The sid of the hunt group to which the trigger is copied
        agentTrigger:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AgentTrigger'
          description: The agent trigger to copy
      description: "CopyAgentTriggerRequest is the request message for the CopyAgentTrigger
        RPC method.\n DEPRECATED: Use services.org.hunt_groups.v1alpha1.CopyHuntGroupAgentTriggerRequest
        instead"
    api.v1alpha1.org.CopyAgentTriggerResponse:
      type: object
      properties: {}
      description: "CopyAgentTriggerResponse is the response message for the CopyAgentTrigger
        RPC method.\n DEPRECATED: Use services.org.hunt_groups.v1alpha1.CopyHuntGroupAgentTriggerResponse
        instead"
    api.v1alpha1.org.CopyDataDipTemplateRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        xmlClientPropertySid:
          type: string
          description: ID of the template to copy.
        configName:
          type: string
          description: Name to give the new template.
      description: Request message for CopyDataDipTemplate RPC method.
    api.v1alpha1.org.CopyDataDipTemplateResponse:
      type: object
      properties:
        xmlClientPropertySid:
          type: string
          description: The ID of the newly created template.
      description: Response message for CopyDataDipTemplate RPC method
    api.v1alpha1.org.CopyDataDipTemplateToOrganizationRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        xmlClientPropertySid:
          type: string
          description: ID of the template to copy.
        configName:
          type: string
          description: Name to give the new template.
        destinationOrgId:
          type: string
          description: The ID of the org to copy to.
      description: Request message for CopyDataDipTemplateToOrganization RPC method.
    api.v1alpha1.org.CopyDataDipTemplateToOrganizationResponse:
      type: object
      properties: {}
      description: Response message for CopyDataDipTemplateToOrganization RPC method
    api.v1alpha1.org.CopyHuntGroupClientInfoDisplayTemplateRequest:
      type: object
      properties:
        toHuntGroupSid:
          type: string
          description: The sid of the hunt group to copy the template to
        template:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ClientInfoDisplayTemplate'
          description: The client info display template to copy from the source hunt
            group
      description: CopyHuntGroupClientInfoDisplayTemplate is the request message for
        the CopyHuntGroupClientInfoDisplayTemplate RPC method.
    api.v1alpha1.org.CopyHuntGroupClientInfoDisplayTemplateResponse:
      type: object
      properties: {}
      description: CopyHuntGroupClientInfoDisplayTemplateResponse is the response
        message for the CopyHuntGroupClientInfoDisplayTemplate RPC method.
    api.v1alpha1.org.CopyHuntGroupIntegrationLinkRequest:
      type: object
      properties:
        toHuntGroupSid:
          type: string
          description: The sid of the hunt group to copy the integration link to.
        link:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.IntegrationLink'
          description: The integration link to copy from the source hunt group.
      description: CopyHuntGroupIntegrationLinkRequest is the request message for
        the CopyHuntGroupIntegrationLink RPC method.
    api.v1alpha1.org.CopyHuntGroupIntegrationLinkResponse:
      type: object
      properties: {}
      description: CopyHuntGroupIntegrationLinkResponse is the response message for
        the CopyHuntGroupIntegrationLink RPC method.
    api.v1alpha1.org.CopyHuntGroupWebLinkRequest:
      type: object
      properties:
        fromHuntGroupSid:
          type: string
          description: The hunt group sid of the residng web link
        toHuntGroupSid:
          type: string
          description: The hunt group sid of where the web link will be copied
        webLink:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.WebLink'
          description: The web link to be copied
      description: Request message for CopyHuntGroupWebLinks
    api.v1alpha1.org.CopyHuntGroupWebLinkResponse:
      type: object
      properties: {}
      description: Response message for CopyHuntGroupWebLinks
    api.v1alpha1.org.CreateAgentProfileGroupRequest:
      type: object
      properties:
        agentProfileGroup:
          $ref: '#/components/schemas/api.commons.org.AgentProfileGroup'
    api.v1alpha1.org.CreateAgentProfileGroupResponse:
      type: object
      properties:
        agentProfileGroupId:
          type: string
    api.v1alpha1.org.CreateAgentResponseAutoRulesRequest:
      type: object
      properties:
        ruleset:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AgentResponseAutoRuleSet'
          description: Agent Response Auto Rule set to add
      description: Request message for the CreateAgentResponseAutoRules RPC method.
    api.v1alpha1.org.CreateAgentResponseAutoRulesResponse:
      type: object
      properties: {}
      description: Response message for the CreateAgentResponseAutoRules RPC method.
    api.v1alpha1.org.CreateAuthTokenByUserIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: user id creating new token for
      description: Request message for the CreateAuthTokenByUserId rpc.
    api.v1alpha1.org.CreateAuthTokenByUserIdResponse:
      type: object
      properties:
        authToken:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AuthToken'
          description: newly generated auth token
      description: Response message for the CreateAuthTokenByUserId rpc.
    api.v1alpha1.org.CreateAuthTokenRequest:
      type: object
      properties: {}
      description: Request message for the CreateAuthToken rpc.
    api.v1alpha1.org.CreateAuthTokenResponse:
      type: object
      properties:
        authToken:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AuthToken'
          description: newly generated auth token
      description: Response message for the CreateAuthToken rpc.
    api.v1alpha1.org.CreateBusinessHoursRequest:
      type: object
      properties:
        businessHours:
          $ref: '#/components/schemas/api.commons.org.BusinessHours'
      description: Request for persisting business hours.
    api.v1alpha1.org.CreateBusinessHoursResponse:
      type: object
      properties:
        businessHoursId:
          type: string
      description: Response for persisting business hours.
    api.v1alpha1.org.CreateCampaignClientInfoDisplayTemplateRequest:
      type: object
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ClientInfoDisplayTemplate'
          description: The client info display template to create for the campaign
      description: CreateCampaignClientInfoDisplayTemplateRequest is the request message
        for the CreateCampaignClientInfoDisplayTemplate RPC method.
    api.v1alpha1.org.CreateCampaignClientInfoDisplayTemplateResponse:
      type: object
      properties:
        templateSid:
          type: string
          description: The sid of the created client info display template
      description: CreateCampaignClientInfoDisplayTemplateResponse is the response
        message for the CreateCampaignClientInfoDisplayTemplate RPC method.
    api.v1alpha1.org.CreateCertificateInfoRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the certificate info to be created.
        description:
          type: string
          description: The description of the certificate info to be created.
      description: "CreateCertificateInfoRequest is the request for creating a certificate
        info.\n DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.CreateCertificateInfoRequest
        instead"
    api.v1alpha1.org.CreateCertificateInfoResponse:
      type: object
      properties:
        encodedCertificate:
          type: string
          description: The base-64 encoded certificate that was created.
      description: "CreateCertificateInfoResponse is the response for creating a certificate
        info.\n DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.CreateCertificateInfoResponse
        instead"
    api.v1alpha1.org.CreateDataDipTemplateRequest:
      type: object
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DataDipConfig'
          description: The new template to persist.
      description: Request message for creating a Data Dip template.
    api.v1alpha1.org.CreateDataDipTemplateResponse:
      type: object
      properties:
        xmlClientPropertySid:
          type: string
          description: The ID of the newly persisted template.
      description: Response message from creating a Data Dip template.
    api.v1alpha1.org.CreateDelegatedUserRequest:
      type: object
      properties:
        authUserId:
          type: string
          description: the user id provided by the auth (idp) connection.
        orgId:
          type: string
          description: "org_id for which the user will be created for.\n generally
            when org_id is passed, it requires\n customer support permission, but
            this is an\n un-authenticated request so it is an exception\n which is
            handled by envoy."
        email:
          type: string
          description: the user's email provided by the auth connection.
        username:
          type: string
          description: the username provided by the auth connection.
        firstName:
          type: string
          description: the user's first name.
        lastName:
          type: string
          description: the user's last name.
        groups:
          type: array
          items:
            type: string
          description: the user's groups provided by the auth connection.
        connectionId:
          type: string
          description: the id of the auth connection the user is coming from.
      description: Request message for the CreateDelegatedUser rpc.
    api.v1alpha1.org.CreateDelegatedUserResponse:
      type: object
      properties:
        userId:
          type: string
          description: The id of the created user.
      description: Response message for the CreateDelegatedUser rpc.
    api.v1alpha1.org.CreateHuntGroupClientInfoDisplayTemplateRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid of the desired client info display template
        template:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ClientInfoDisplayTemplate'
          description: The template info of the client info display template
      description: Request message for CreateHuntGroupClientInfoDisplayTemplate RPC
        method.
    api.v1alpha1.org.CreateHuntGroupClientInfoDisplayTemplateResponse:
      type: object
      properties:
        templateSid:
          type: string
          description: The template sid of the created client info display template
      description: Response message for CreateHuntGroupClientInfoDisplayTemplate RPC
        method.
    api.v1alpha1.org.CreateHuntGroupRequest:
      type: object
      properties:
        name:
          type: string
          description: The hunt group name.
        description:
          type: string
          description: The hunt group description.
        type:
          type: integer
          description: The hunt group type.
          format: enum
      description: CreateHuntGroupRequest represents the request message for the CreateHuntGroup
        RPC method.
    api.v1alpha1.org.CreateHuntGroupResponse:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid.
      description: CreateHuntGroupResponse represents the response message for the
        CreateHuntGroup RPC method.
    api.v1alpha1.org.CreateHuntGroupScriptRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid of where the script belongs
        huntGroupScript:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.HuntGroupScript'
          description: The script to be created
      description: The request message for CreateHuntGroupScript
    api.v1alpha1.org.CreateHuntGroupScriptResponse:
      type: object
      properties: {}
      description: The response message for CreateHuntGroupScript
    api.v1alpha1.org.CreateLabelRequest:
      type: object
      properties:
        label:
          $ref: '#/components/schemas/api.v1alpha1.org.Label'
      description: Request message for the CreateLabel rpc.
    api.v1alpha1.org.CreateLabelResponse:
      type: object
      properties:
        labelId:
          type: string
          description: The ID of the returned label.
      description: Response message for the CreateLabel rpc.
    api.v1alpha1.org.CreateOrganizationRequest:
      type: object
      properties:
        name:
          type: string
          description: The organization name.
        crmId:
          type: string
          description: Salesforce ID used for integrations.
        timeZone:
          type: integer
          description: Organization's time zone.
          format: enum
        isManualOnlyAccount:
          type: boolean
          description: Whether account is manual only.
        backofficeTheme:
          type: integer
          description: Backoffice UI theme/skin.
          format: enum
        allowedCountries:
          type: array
          items:
            type: integer
            format: enum
          description: "Allowed countries is used to initialize the organization's
            list of allowed\n countries preference. This field is optional."
        p3ParentAccount:
          type: string
          description: The ID of new organization's parent account.
      description: CreateOrganizationRequest request for creating a new organization.
    api.v1alpha1.org.CreateOrganizationResponse:
      type: object
      properties:
        orgId:
          type: string
          description: Generated UUID for the organization.
      description: CreateOrganizationResponse response after creating a new organization.
    api.v1alpha1.org.CreateP3PermissionGroupRequest:
      type: object
      properties:
        name:
          type: string
          description: Display name for this group
        description:
          type: string
          description: More detailed description for this group
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: List of permissions associated with this group
      description: Request message for the CreateP3PermissionGroup RPC.
    api.v1alpha1.org.CreateP3PermissionGroupResponse:
      type: object
      properties:
        p3PermissionGroupId:
          type: string
          description: The newly created P3PermissionGroup
      description: Response message for the CreateP3PermissionGroup RPC.
    api.v1alpha1.org.CreatePasswordResetLinkByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user.
        orgId:
          type: string
          description: The organization ID of the user
      description: Request message for the CreatePasswordResetLinkByOrgId rpc.
    api.v1alpha1.org.CreatePasswordResetLinkByOrgIdResponse:
      type: object
      properties:
        url:
          type: string
      description: Response message for the CreatePasswordResetLinkByOrgId rpc.
    api.v1alpha1.org.CreatePasswordResetLinkRequest:
      type: object
      properties:
        userId:
          type: string
        expiration:
          type: string
          description: 'DEPRECATED: no longer used.'
          format: date-time
      description: Request message for the CreatePasswordResetLink rpc.
    api.v1alpha1.org.CreatePasswordResetLinkResponse:
      type: object
      properties:
        url:
          type: string
      description: Response message for the CreatePasswordResetLink rpc.
    api.v1alpha1.org.CreatePermissionGroupRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          description: Description of permission group
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: Permissions to include in new permission group
      description: Request message for the CreatePermissionGroup RPC.
    api.v1alpha1.org.CreatePermissionGroupResponse:
      type: object
      properties:
        permissionGroupId:
          type: string
          description: The permission group that was just created.
      description: Response message for the CreatePermissionGroup RPC.
    api.v1alpha1.org.CreateResponseEvaluatorRequest:
      type: object
      properties:
        evaluator:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ResponseEvaluator'
          description: "Response evaluator to create. response_evaluator_id\n will
            be generated"
      description: Request for the CreateResponseEvaluator RPC.
    api.v1alpha1.org.CreateResponseEvaluatorResponse:
      type: object
      properties:
        evaluator:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ResponseEvaluator'
          description: Created response evaluator.
      description: Response for the CreateResponseEvaluator RPC.
    api.v1alpha1.org.CreateTrustRequest:
      type: object
      properties:
        grantee:
          type: string
          description: Org ID of the org recieving the trust.
        name:
          type: string
          description: Name of the trust.
        description:
          type: string
          description: Description of the trust.
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: Permissions given through the trust
        labelIds:
          type: array
          items:
            type: string
          description: "IDs of labels associated with the given permissions.\n NOTE:
            All given labels are applied to ALL given permissions."
      description: Request message for the CreateTrust RPC.
    api.v1alpha1.org.CreateTrustResponse:
      type: object
      properties:
        trustId:
          type: string
          description: ID of the created trust.
      description: Response message for the CreateTrust RPC.
    api.v1alpha1.org.CreateUserRequest:
      type: object
      properties:
        orgId:
          type: string
          description: "if org_id is set the user will be created for\n the given
            org_id. This requires the CUSTOMER_SUPPORT permission.\n if this field
            is not set it will get the org_id\n from the token. This only requires
            the USER_CREATE permission."
        firstName:
          type: string
          description: The first name for the new user.
        lastName:
          type: string
          description: The last name for the new user.
        email:
          type: string
          description: The email for the new user.
        userName:
          type: string
          description: The user name of the new user.
        password:
          type: string
          description: The password of the new user.
        permissionGroupIds:
          type: array
          items:
            type: string
          description: The ids of the permission groups that the new user will have.
        partnerAgentId:
          type: string
          description: The partner agent id of the new user.
        p3PermissionGroupId:
          type: string
          description: The id of the p3 permission group that the new user will have.
        linkbackNumbers:
          type: array
          items:
            type: string
          description: The linkback numbers the new user will have.
        callerIds:
          type: array
          items:
            type: string
          description: The caller ids the new user will have.
        defaultApp:
          type: integer
          description: Default app the user starts on
          format: enum
        userCallerId:
          type: string
          description: The caller id for the user.
        agentProfileGroupId:
          type: string
          description: The id of the agent profile group the user will belong to.
        labelIds:
          type: array
          items:
            type: string
          description: A list of labels to assign to the user
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        huntGroupSid:
          type: string
          description: The hunt group that the created user will belong to.
        localePreferencesOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: The override for the users locale preferences
      description: Request message for the CreateUser rpc.
    api.v1alpha1.org.CreateUserResponse:
      type: object
      properties:
        userId:
          type: string
          description: The id of the created user.
      description: Response message for the CreateUser rpc.
    api.v1alpha1.org.DeleteAgentProfileGroupRequest:
      type: object
      properties:
        agentProfileGroupId:
          type: string
    api.v1alpha1.org.DeleteAgentProfileGroupResponse:
      type: object
      properties: {}
    api.v1alpha1.org.DeleteAgentResponseAutoRulesRequest:
      type: object
      properties:
        rulesetSid:
          type: string
          description: Sid for the Agent Response Rule set to delete
      description: Request message for the DeleteAgentResponseAutoRules RPC method.
    api.v1alpha1.org.DeleteAgentResponseAutoRulesResponse:
      type: object
      properties: {}
      description: Response message for the DeleteAgentResponseAutoRules RPC method.
    api.v1alpha1.org.DeleteAuthTokenByUserIdRequest:
      type: object
      properties:
        token:
          type: string
          description: token to delete
        userId:
          type: string
          description: user token belongs to
      description: Request message for the DeleteAuthTokenByUserIdRequest rpc.
    api.v1alpha1.org.DeleteAuthTokenByUserIdResponse:
      type: object
      properties: {}
      description: Response message for the DeleteAuthTokenByUserIdResponse rpc.
    api.v1alpha1.org.DeleteAuthTokenRequest:
      type: object
      properties:
        token:
          type: string
          description: token to delete for current user
      description: Request message for the DeleteAuthTokenRequest rpc.
    api.v1alpha1.org.DeleteAuthTokenResponse:
      type: object
      properties: {}
      description: Response message for the DeleteAuthTokenResponse rpc.
    api.v1alpha1.org.DeleteBusinessHoursRequest:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the business hours object to be deleted
      description: Request for deleting business hours.
    api.v1alpha1.org.DeleteBusinessHoursResponse:
      type: object
      properties: {}
      description: Response for deleting business hours.
    api.v1alpha1.org.DeleteCertificateInfoRequest:
      type: object
      properties:
        certificateInfoId:
          type: string
          description: The id of the certificate info to delete.
      description: "DeleteCertificateInfoRequest is the request for deleting a certificate
        info.\n DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.DeleteCertificateInfoRequest
        instead"
    api.v1alpha1.org.DeleteCertificateInfoResponse:
      type: object
      properties: {}
      description: "DeleteCertificateInfoResponse is the response for deleting a certificate
        info.\n DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.DeleteCertificateInfoResponse
        instead"
    api.v1alpha1.org.DeleteDataDipTemplateRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        xmlClientPropertySid:
          type: string
          description: The ID of the template to delete.
      description: Request message for DeleteDataDipTemplate RPC method.
    api.v1alpha1.org.DeleteDataDipTemplateResponse:
      type: object
      properties: {}
      description: Response message for DeleteDataDipTemplate RPC method.
    api.v1alpha1.org.DeleteHuntGroupClientInfoDisplayTemplateRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid of the desired client info display template
            to delete
        templateSid:
          type: string
          description: The template sid of the client info display template to delete
      description: Request message for DeleteHuntGroupClientInfoDisplayTemplate RPC
        method.
    api.v1alpha1.org.DeleteHuntGroupClientInfoDisplayTemplateResponse:
      type: object
      properties: {}
      description: Response message for DeleteHuntGroupClientInfoDisplayTemplate RPC
        method.
    api.v1alpha1.org.DeleteHuntGroupRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid.
      description: DeleteHuntGroupRequest represents the request message for the DeleteHuntGroup
        RPC method.
    api.v1alpha1.org.DeleteHuntGroupResponse:
      type: object
      properties: {}
      description: DeleteHuntGroupResponse represents the response message for the
        DeleteHuntGroup RPC method.
    api.v1alpha1.org.DeleteHuntGroupScriptRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid of where the script belongs
        scriptSid:
          type: string
          description: The sid of the hunt group script to be deleted
      description: The request message for DeleteHuntGroupScript
    api.v1alpha1.org.DeleteHuntGroupScriptResponse:
      type: object
      properties: {}
      description: The response message for DeleteHuntGroupScript
    api.v1alpha1.org.DeleteLabelRequest:
      type: object
      properties:
        labelId:
          type: string
          description: The id of the label.
      description: Request message for the DeleteLabel rpc.
    api.v1alpha1.org.DeleteLabelResponse:
      type: object
      properties: {}
      description: Response message for the DeleteLabel rpc.
    api.v1alpha1.org.DeleteP3PermissionGroupRequest:
      type: object
      properties:
        p3PermissionGroupId:
          type: string
          description: The Id of the P3PermissionGroup to be deleted
      description: Request message for the DeleteP3PermissionGroup RPC.
    api.v1alpha1.org.DeleteP3PermissionGroupResponse:
      type: object
      properties: {}
      description: Response message for the DeleteP3PermissionGroup RPC.
    api.v1alpha1.org.DeletePermissionGroupRequest:
      type: object
      properties:
        permissionGroupId:
          type: string
          description: Id of the permission group to be deleted.
      description: Request message for the DeletePermissionGroup RPC.
    api.v1alpha1.org.DeletePermissionGroupResponse:
      type: object
      properties: {}
      description: Response message for the DeletePermissionGroup RPC.
    api.v1alpha1.org.DeleteResponseEvaluatorRequest:
      type: object
      properties:
        evaluatorId:
          type: string
          description: ID of the evaluator to delete. Will be hard deleted.
      description: Request for the DeleteResponseEvaluator RPC.
    api.v1alpha1.org.DeleteResponseEvaluatorResponse:
      type: object
      properties: {}
      description: Response for the DeleteResponseEvaluator RPC.
    api.v1alpha1.org.DeleteTrustRequest:
      type: object
      properties:
        trustId:
          type: string
          description: ID of the trust to be deleted.
      description: Request message for the DeleteTrust RPC.
    api.v1alpha1.org.DeleteTrustResponse:
      type: object
      properties: {}
      description: Response message for the DeleteTrust RPC.
    api.v1alpha1.org.EnableMyUserMfaRequest:
      type: object
      properties: {}
      description: Request message for the EnableMyUserMfa rpc.
    api.v1alpha1.org.EnableMyUserMfaResponse:
      type: object
      properties: {}
      description: Response message for the EnableUserMfa rpc.
    api.v1alpha1.org.EnableUserMfaRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user to enable mfa for.
        enabled:
          type: boolean
          description: Whether or not mfa is enabled for the user.
      description: Request message for the EnableUserMfa rpc.
    api.v1alpha1.org.EnableUserMfaResponse:
      type: object
      properties: {}
      description: Response message for the EnableUserMfa rpc.
    api.v1alpha1.org.EvaluateBusinessHoursRequest:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the business hours to evaluate
      description: Request for EvaluateBusinessHours
    api.v1alpha1.org.EvaluateBusinessHoursResponse:
      type: object
      properties:
        withinRange:
          type: boolean
          description: "Resulting boolean if the current time is within\n a day interval
            of a business hours object"
      description: Response for EvaluateBusinessHours
    api.v1alpha1.org.GenerateTOTPSecretRequest:
      type: object
      properties: {}
      description: "GenerateTOTPSecretRequest is the request message for the GenerateTOTPSecret
        rpc.\n The user id and the org id will be taken from the claims of the request."
    api.v1alpha1.org.GenerateTOTPSecretResponse:
      type: object
      properties:
        secretKey:
          type: string
          description: The secret key for the user to use with their TOTP app.
        qrCodeUrl:
          type: string
          description: The QR code URL for the user to scan with their TOTP app.
      description: GenerateTOTPSecretResponse is the response message for the GenerateTOTPSecret
        rpc.
    api.v1alpha1.org.GetAccountOwnerGroupRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Id of organization to get account owner group for
      description: Request message for the GetAccountOwnerGroup RPC.
    api.v1alpha1.org.GetAccountOwnerGroupResponse:
      type: object
      properties:
        permissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: Permission groups in specified organization
      description: Response message for the GetAccountOwnerGroup RPC.
    api.v1alpha1.org.GetAdminClientPreferencesRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetAdminClientPreferences RPC.
    api.v1alpha1.org.GetAdminClientPreferencesResponse:
      type: object
      properties:
        adminClientPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AdminClientPreferences'
          description: Admin client preferences entity.
      description: Response for the GetAdminClientPreferences RPC.
    api.v1alpha1.org.GetAgentPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetAgentPreferences RPC.
    api.v1alpha1.org.GetAgentPreferencesResponse:
      type: object
      properties:
        agentPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AgentPreferences'
          description: Agent preferences entity.
      description: Response for the GetAgentPreferences RPC.
    api.v1alpha1.org.GetAgentProfileGroupRequest:
      type: object
      properties:
        agentProfileGroupId:
          type: string
    api.v1alpha1.org.GetAgentProfileGroupResponse:
      type: object
      properties:
        agentProfileGroup:
          $ref: '#/components/schemas/api.commons.org.AgentProfileGroup'
    api.v1alpha1.org.GetAssignableLabelsRequest:
      type: object
      properties:
        permission:
          type: integer
          description: "The given permission is used as the required permission\n
            for this RPC. It is also used to return a list of\n attached labels to
            the permission for the current user."
          format: enum
      description: Request message for the GetAssignableLabels RPC.
    api.v1alpha1.org.GetAssignableLabelsResponse:
      type: object
      properties:
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.Label'
          description: "The list of labels available to the current user based\n on
            the users permissions."
      description: Response message for the GetAssignableLabels RPC.
    api.v1alpha1.org.GetAssignmentCountsRequest:
      type: object
      properties:
        labelId:
          type: string
          description: The ID of the label.
      description: Reqeust message for the GetAssignmentCounts RPC.
    api.v1alpha1.org.GetAssignmentCountsResponse:
      type: object
      properties:
        counts:
          type: object
          additionalProperties:
            type: string
          description: "The key is the int32 value of the api.commons.EntityType enum.\n
            The value is the count of all assignments belonging to the\n type."
      description: Response message for the GetASsignmentCounts RPC.
    api.v1alpha1.org.GetAuthenticationPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetAuthenticationPreferences RPC.
    api.v1alpha1.org.GetAuthenticationPreferencesResponse:
      type: object
      properties:
        authenticationPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AuthenticationPreferences'
          description: Authentication preferences entity.
      description: Response for the GetAuthenticationPreferences RPC.
    api.v1alpha1.org.GetBroadcastPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetBroadcastPreferences RPC.
    api.v1alpha1.org.GetBroadcastPreferencesResponse:
      type: object
      properties:
        broadcastPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.BroadcastPreferences'
          description: Broadcast preferences entity.
      description: Response for the GetBroadcastPreferences RPC.
    api.v1alpha1.org.GetBusinessHoursRequest:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the business hours object
      description: Request for fetching a business hours.
    api.v1alpha1.org.GetBusinessHoursResponse:
      type: object
      properties:
        businessHours:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.BusinessHours'
          description: The retrieved business hours
      description: Response for fetching a business hours.
    api.v1alpha1.org.GetBusinessPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetBusinessPreferences RPC.
    api.v1alpha1.org.GetBusinessPreferencesResponse:
      type: object
      properties:
        businessPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.BusinessPreferences'
          description: Business preferences entity.
      description: Response for the GetBusinessPreferences RPC.
    api.v1alpha1.org.GetCompliancePreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetCompliancePreferences RPC.
    api.v1alpha1.org.GetCompliancePreferencesResponse:
      type: object
      properties:
        compliancePreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CompliancePreferences'
          description: Compliance preferences entity.
      description: Response for the GetCompliancePreferences RPC.
    api.v1alpha1.org.GetContactPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetContactPreferences RPC.
    api.v1alpha1.org.GetContactPreferencesResponse:
      type: object
      properties:
        contactPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ContactPreferences'
          description: Contact preferences entity.
      description: Response for the GetContactPreferences RPC.
    api.v1alpha1.org.GetDashboardGeneralPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetDashboardGeneralPreferences RPC.
    api.v1alpha1.org.GetDashboardGeneralPreferencesResponse:
      type: object
      properties:
        dashboardPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DashboardPreferences'
          description: Dashboard preferences entity.
      description: Response for the GetDashboardGeneralPreferences RPC.
    api.v1alpha1.org.GetDashboardQueuePreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetDashboardQueuePreferences RPC.
    api.v1alpha1.org.GetDashboardQueuePreferencesResponse:
      type: object
      properties:
        dashboardQueuePreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DashboardQueuePreferences'
          description: Dashboard queue preferences entity.
      description: Response for the GetDashboardQueuePreferences RPC.
    api.v1alpha1.org.GetDataDipTemplateRequest:
      type: object
      properties:
        xmlClientPropertySid:
          type: string
          description: The ID of the desired template.
      description: Request messsage for the GetDataDipTemplate RPC method.
    api.v1alpha1.org.GetDataDipTemplateResponse:
      type: object
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DataDipConfig'
          description: The requested template.
      description: Response message for the GetDataDipTemplate RPC method.
    api.v1alpha1.org.GetEmailSmsPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetEmailSmsPreferences RPC.
    api.v1alpha1.org.GetEmailSmsPreferencesResponse:
      type: object
      properties:
        emailSmsPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.EmailSmsPreferences'
          description: Email/SMS preferences entity.
      description: Response for the GetEmailSmsPreferences RPC.
    api.v1alpha1.org.GetEndOfDayPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetEndOfDayPreferences RPC.
    api.v1alpha1.org.GetEndOfDayPreferencesResponse:
      type: object
      properties:
        endOfDayPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.EndOfDayPreferences'
          description: EndOfDay preferences entity.
      description: Response for the GetEndOfDayPreferences RPC.
    api.v1alpha1.org.GetFilterPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetFilterPreferences RPC.
    api.v1alpha1.org.GetFilterPreferencesResponse:
      type: object
      properties:
        filterPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.FilterPreferences'
          description: Filter preferences entity.
      description: Response for the GetFilterPreferences RPC.
    api.v1alpha1.org.GetHuntGroupClientInfoDisplayTemplateRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid of the desired client info display template
      description: Request message for GetHuntGroupClientInfoDisplayTemplate RPC method.
    api.v1alpha1.org.GetHuntGroupClientInfoDisplayTemplateResponse:
      type: object
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ClientInfoDisplayTemplate'
          description: The template info of the client info display template
      description: Response message for GetHuntGroupClientInfoDisplayTemplate RPC
        method.
    api.v1alpha1.org.GetHuntGroupDetailsRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid.
      description: GetHuntGroupDetailsRequest is the request message for the GetHuntGroupDetails
        RPC method.
    api.v1alpha1.org.GetHuntGroupDetailsResponse:
      type: object
      properties:
        huntGroupDetails:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.HuntGroupDetails'
          description: The hunt group details.
      description: GetHuntGroupDetailsResponse is the response message for the GetHuntGroupDetails
        RPC method.
    api.v1alpha1.org.GetHuntGroupScriptRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid of where the script belongs
        scriptSid:
          type: string
          description: The sid of the script
      description: The request message for GetHuntGroupScript
    api.v1alpha1.org.GetHuntGroupScriptResponse:
      type: object
      properties:
        huntGroupScript:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.HuntGroupScript'
          description: The script for the given hunt group
        scriptDetails:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.GetHuntGroupScriptResponse_HuntGroupScriptDetails'
          description: The details of the hunt group script
      description: The response message for GetHuntGroupScript
    api.v1alpha1.org.GetHuntGroupScriptResponse_HuntGroupScriptDetails:
      type: object
      properties:
        script:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.HuntGroupScript'
          description: The hunt group script
        huntGroupSids:
          type: array
          items:
            type: string
          description: The hunt groups that have been assigned this script
        outboundBroadcastTemplateSids:
          type: array
          items:
            type: string
          description: The outbound broadcast templates that have been assigned this
            script
        inboundBroadcastTemplateSids:
          type: array
          items:
            type: string
          description: The inbound broadcast templates that have been assigned this
            script
      description: HuntGroupScriptDetails represents the details of a hunt group script.
    api.v1alpha1.org.GetHuntGroupSettingsRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: Hunt group sid.
        fieldMask:
          type: string
          description: Field mask containing the fields to retrieve.
          format: field-mask
      description: Request message for the GetHuntGroupSettings RPC method.
    api.v1alpha1.org.GetHuntGroupSettingsResponse:
      type: object
      properties:
        generalSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings'
          description: Hunt group general settings to be retrieved.
        communicationSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CommunicationSettings'
          description: Hunt group communication compliance settings to be retrieved.
        callbackSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CallbackSettings'
          description: Hunt group scheduled callback settings to be retrieved.
        previewDialSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.PreviewDialSettings'
          description: Hunt group Preview Dial settings to be retrieved.
        manualDialSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ManualDialSettings'
          description: Hunt group Manual Dial settings to be retrieved.
        transferCallSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TransferCallSettings'
          description: Transfer Call hunt group settings.
        numberHistorySettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.NumberHistorySettings'
          description: Number History hunt group settings.
      description: Response message for the GetHuntGroupSettings RPC method.
    api.v1alpha1.org.GetLabelRequest:
      type: object
      properties:
        labelId:
          type: string
          description: The id of the label.
      description: Request message for the GetLabel RPC.
    api.v1alpha1.org.GetLabelResponse:
      type: object
      properties:
        label:
          $ref: '#/components/schemas/api.v1alpha1.org.Label'
      description: Response message for the GetLabel RPC.
    api.v1alpha1.org.GetLicensesRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID to retrieve the assigned licenses for.
      description: Request message for the GetLicenses RPC.
    api.v1alpha1.org.GetLicensesResponse:
      type: object
      properties:
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.License'
          description: List of licenses organization is authorized for.
      description: Response message for the GetLicenses RPC.
    api.v1alpha1.org.GetMyAllowedMfaMethodsRequest:
      type: object
      properties: {}
      description: Request message for the GetMyAllowedMfaMethods rpc.
    api.v1alpha1.org.GetMyAllowedMfaMethodsResponse:
      type: object
      properties:
        mfaEnabled:
          type: boolean
          description: If the user is allowed to set up mfa
        emailEnabled:
          type: boolean
          description: If the user is allowed to set up email mfa
        duoEnabled:
          type: boolean
          description: If the user is allowed to set up duo mfa
        totpEnabled:
          type: boolean
          description: If the user is allowed to set TOTP mfa
      description: Response message for the GetMyAllowedMfaMethods rpc.
    api.v1alpha1.org.GetMyUserMfaInfoRequest:
      type: object
      properties: {}
      description: Request message for the GetMyUserMfaInfo rpc.
    api.v1alpha1.org.GetMyUserMfaInfoResponse:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/api.commons.org.MfaInfo'
      description: Response message for the GetMyUserMfaInfo rpc.
    api.v1alpha1.org.GetMyUserPasswordResetLinkRequest:
      type: object
      properties:
        ttl:
          type: string
          description: The time to live (in seconds) of the generated link, defaults
            to 180 if unset.
      description: Request message for the GetMyUserPasswordResetLink rpc.
    api.v1alpha1.org.GetMyUserPasswordResetLinkResponse:
      type: object
      properties:
        url:
          type: string
          description: The generated password reset link URL.
      description: Response message for the GetMyUserPasswordResetLink rpc.
    api.v1alpha1.org.GetMyUserRequest:
      type: object
      properties: {}
      description: Request message for GetMyUser.
    api.v1alpha1.org.GetMyUserResponse:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        orgId:
          type: string
          description: The ID of the user's organization
        username:
          type: string
          description: The agents's username
        delegated:
          type: boolean
          description: Whether the user is delegated (sso related)
        orgName:
          type: string
          description: The name of the user's organization
        huntGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.GetMyUserResponse_HuntGroup'
          description: An object with the hunt group fields required for the call
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Skill'
          description: A list of the skills associated with the user
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: A list of the permission groups the user belongs to
        p3PermissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.P3PermissionGroup'
          description: The user's p3 permission group
        agentProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.GetMyUserResponse_AgentProfileGroup'
          description: An object with the agent profile group fields required for
            the call
        trusts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Trust'
          description: A list of the trusts assigned to the user.
        accountOwner:
          type: boolean
          description: Whether the user is an account owner
        emailVerified:
          type: boolean
          description: if the user email is verified
      description: Response message for GetMyUser.
    api.v1alpha1.org.GetMyUserResponse_AgentProfileGroup:
      type: object
      properties:
        agentProfileGroupId:
          type: string
          description: The id of the user's agent profile group
        agentProfileGroupName:
          type: string
          description: The name of the user's agent profile group
      description: Object to contain the agent profile group fields
    api.v1alpha1.org.GetMyUserResponse_HuntGroup:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group the agent is assigned to
        huntGroupName:
          type: string
          description: The name of the hunt group the agent is assigned to
      description: Object to contain the hunt group fields
    api.v1alpha1.org.GetOrgLicensesRequest:
      type: object
      properties: {}
      description: Request message for the GetOrgLicenses RPC.
    api.v1alpha1.org.GetOrgLicensesResponse:
      type: object
      properties:
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.License'
          description: List of licenses organization is authorized for.
      description: Response message for the GetOrgLicenses RPC.
    api.v1alpha1.org.GetOrganizationByIdRequest:
      type: object
      properties:
        orgId:
          type: string
          description: OrgID filter
      description: GetOrganizationByIdRequest request to get single organization by
        given id
    api.v1alpha1.org.GetOrganizationByIdResponse:
      type: object
      properties:
        organization:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.Organization'
          description: Organization
      description: GetOrganizationByIdResponse a single organization from given org
        id
    api.v1alpha1.org.GetOrganizationPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetOrganizationPreferences RPC.
    api.v1alpha1.org.GetOrganizationPreferencesResponse:
      type: object
      properties:
        organizationPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.OrganizationPreferences'
          description: Organization preferences entity.
      description: Response for the GetOrganizationPreferences RPC.
    api.v1alpha1.org.GetOrganizationRequest:
      type: object
      properties: {}
      description: GetOrganizationRequest request to get users organization
    api.v1alpha1.org.GetOrganizationResponse:
      type: object
      properties:
        organization:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.Organization'
          description: Organization filtered by field masks
      description: GetOrganizationResponse a single organization
    api.v1alpha1.org.GetPermissionsRequest:
      type: object
      properties: {}
      description: Request message for the GetPermissions RPC.
    api.v1alpha1.org.GetPermissionsResponse:
      type: object
      properties:
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: List of permissions for the user.
        p3Permissions:
          type: array
          items:
            type: integer
            format: enum
          description: List of legacy P3 permissions.
        user:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.User'
          description: User entity.
        defaultApp:
          type: integer
          description: Default operator application for user.
          format: enum
      description: Response message for the GetPermissions RPC.
    api.v1alpha1.org.GetPhonePreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetPhonePreferences RPC.
    api.v1alpha1.org.GetPhonePreferencesResponse:
      type: object
      properties:
        phonePreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.PhonePreferences'
          description: Phone preferences entity.
      description: Response for the GetPhonePreferences RPC.
    api.v1alpha1.org.GetRecordingPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetRecordingPreferences RPC.
    api.v1alpha1.org.GetRecordingPreferencesResponse:
      type: object
      properties:
        recordingPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.RecordingPreferences'
          description: Recording preferences entity.
      description: Response for the GetRecordingPreferences RPC.
    api.v1alpha1.org.GetResponseEvaluatorRequest:
      type: object
      properties:
        evaluatorId:
          type: string
          description: ID of the requested response evaluator.
      description: Request for the GetResponseEvaluator RPC.
    api.v1alpha1.org.GetResponseEvaluatorResponse:
      type: object
      properties:
        evaluator:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ResponseEvaluator'
          description: Requested evaluator.
      description: Response for the GetResponseEvaluator RPC.
    api.v1alpha1.org.GetSchedulePreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetSchedulePreferences RPC.
    api.v1alpha1.org.GetSchedulePreferencesResponse:
      type: object
      properties:
        schedulePreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.SchedulePreferences'
          description: Schedule preferences entity.
      description: Response for the GetSchedulePreferences RPC.
    api.v1alpha1.org.GetScorecardsPreferencesRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for GetScorecardsPreferences
    api.v1alpha1.org.GetScorecardsPreferencesResponse:
      type: object
      properties:
        scorecardsPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ScorecardsPreferences'
          description: Scorecards preferences entity.
      description: Response for GetScorecardsPreferences
    api.v1alpha1.org.GetTrustRequest:
      type: object
      properties:
        trustId:
          type: string
          description: ID of the trust being retrieved.
      description: Response message for the GetTrust RPC.
    api.v1alpha1.org.GetTrustResponse:
      type: object
      properties:
        trust:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.Trust'
          description: Retrieved trust.
        grantorName:
          type: string
          description: Name of the Grantor org.
        granteeName:
          type: string
          description: Name of the Grantee org.
      description: Response message for the GetTrust RPC.
    api.v1alpha1.org.GetUserByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: Get by UserId.
        orgId:
          type: string
          description: OrgId of the user being requested.
      description: Request message for GetUserByOrgId.
    api.v1alpha1.org.GetUserByOrgIdResponse:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        orgId:
          type: string
          description: The ID of the user's organization
        username:
          type: string
          description: The agents's username
        delegated:
          type: boolean
          description: Whether the user is delegated (sso related)
        orgName:
          type: string
          description: The name of the user's organization
        huntGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.GetUserByOrgIdResponse_HuntGroup'
          description: An object with the hunt group fields required for the call
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Skill'
          description: A list of the skills associated with the user
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: A list of the permission groups the user belongs to
        p3PermissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.P3PermissionGroup'
          description: The user's p3 permission group
        agentProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.GetUserByOrgIdResponse_AgentProfileGroup'
          description: An object with the agent profile group fields required for
            the call
        trusts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Trust'
          description: A list of trusts the user has been assigned.
        accountOwner:
          type: boolean
          description: Whether the user is an account owner
        emailVerified:
          type: boolean
          description: if the user's email is verified
        localePreferencesOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: The override for the users locale preferences
      description: Response message for GetUserByOrgId.
    api.v1alpha1.org.GetUserByOrgIdResponse_AgentProfileGroup:
      type: object
      properties:
        agentProfileGroupId:
          type: string
          description: The id of the user's agent profile group
        agentProfileGroupName:
          type: string
          description: The name of the user's agent profile group
      description: Object to contain the agent profile group fields
    api.v1alpha1.org.GetUserByOrgIdResponse_HuntGroup:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group the agent is assigned to
        huntGroupName:
          type: string
          description: The name of the hunt group the agent is assigned to
      description: Object to contain the hunt group fields
    api.v1alpha1.org.GetUserEmailVerifiedByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user to be checked.
        orgId:
          type: string
          description: The organization ID of the user.
      description: Request message for the GetUserEmailVerifiedByOrgId rpc.
    api.v1alpha1.org.GetUserEmailVerifiedByOrgIdResponse:
      type: object
      properties:
        emailVerified:
          type: boolean
          description: Whether the user's email is verified
      description: Response message for the GetUserEmailVerifiedByOrgId rpc.
    api.v1alpha1.org.GetUserEmailVerifiedRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user to be checked.
      description: Request message for the GetUserEmailVerified rpc.
    api.v1alpha1.org.GetUserEmailVerifiedResponse:
      type: object
      properties:
        emailVerified:
          type: boolean
          description: Whether the user's email is verified
      description: Response message for the GetUserEmailVerified rpc.
    api.v1alpha1.org.GetUserLoginInfoRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user.
        orgId:
          type: string
          description: The organization ID of the user
      description: "This rpc used to be called GetUserBlocked\n Request message for
        the GetUserLoginInfo rpc."
    api.v1alpha1.org.GetUserLoginInfoResponse:
      type: object
      properties:
        blocked:
          type: boolean
          description: Whether the user is manually blocked in auth0
        lastIp:
          type: string
          description: The last IP the user used to login
        lastLogin:
          type: string
          description: The time of the user's latest login
          format: date-time
        lastPasswordReset:
          type: string
          description: The time of the user's latest password reset
          format: date-time
        loginsCount:
          type: string
          description: The number of times the user has logged in
        createdAt:
          type: string
          description: The time the user was created in auth0
          format: date-time
        updatedAt:
          type: string
          description: The last time the user was updated in auth0
          format: date-time
        hasBlockedIps:
          type: boolean
          description: Whether the user has specific IPs which are blocked
      description: Response message for the GetUserLoginInfo rpc.
    api.v1alpha1.org.GetUserMfaInfoRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user to get the mfa info of.
      description: Request message for the GetUserMfaInfo rpc.
    api.v1alpha1.org.GetUserMfaInfoResponse:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/api.commons.org.MfaInfo'
      description: Response message for the GetUserMfaInfo rpc.
    api.v1alpha1.org.GetUserPasswordResetLinkByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user whose password will be updated.
        orgId:
          type: string
          description: The organization ID of the user
        ttl:
          type: string
          description: The time to live (in seconds) of the generated link, defaults
            to 180 if unset.
      description: Request message for the GetUserPasswordResetLinkByOrgId rpc.
    api.v1alpha1.org.GetUserPasswordResetLinkByOrgIdResponse:
      type: object
      properties:
        url:
          type: string
          description: The generated password reset link URL.
      description: Response message for the GetUserPasswordResetLinkByOrgId rpc.
    api.v1alpha1.org.GetUserPasswordResetLinkRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user whose password will be updated.
        ttl:
          type: string
          description: The time to live (in seconds) of the generated link, defaults
            to 180 if unset.
      description: Request message for the GetUserPasswordResetLink rpc.
    api.v1alpha1.org.GetUserPasswordResetLinkResponse:
      type: object
      properties:
        url:
          type: string
          description: The generated password reset link URL.
      description: Response message for the GetUserPasswordResetLink rpc.
    api.v1alpha1.org.GetUserPermissionsRequest:
      type: object
      properties: {}
      description: Request message for the GetUserPermissions RPC.
    api.v1alpha1.org.GetUserPermissionsResponse:
      type: object
      properties:
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: List of permissions for the user.
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
      description: Response message for the GetUserPermissions RPC.
    api.v1alpha1.org.GetUserRequest:
      type: object
      properties:
        userId:
          type: string
          description: Get by UserId.
      description: Request message for GetUser.
    api.v1alpha1.org.GetUserResponse:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        orgId:
          type: string
          description: The ID of the user's organization
        delegated:
          type: boolean
          description: Whether the user is delegated (sso related)
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone.
        huntGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.GetUserResponse_HuntGroup'
          description: An object with the hunt group fields required for the call
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Skill'
          description: A list of the skills associated with the user
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: A list of the permission groups the user belongs to
        p3PermissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.P3PermissionGroup'
          description: The user's p3 permission group
        agentProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.GetUserResponse_AgentProfileGroup'
          description: An object with the agent profile group fields required for
            the call
        orgName:
          type: string
          description: name of users organization
        firstName:
          type: string
          description: users first name
        username:
          type: string
          description: The agents's username
        lastName:
          type: string
          description: users last name
        loginDisabled:
          type: boolean
          description: if the user is disabled from logging in
        partnerAgentId:
          type: string
          description: users partner agent sid
        userCallerId:
          type: string
          description: users caller id
        linkbackNumbers:
          type: array
          items:
            type: string
          description: a users array of linkback numbers
        callerIds:
          type: array
          items:
            type: string
          description: a users array of caller ids
        defaultApp:
          type: integer
          description: default application that is selected when signed in
          format: enum
        loginSid:
          type: string
          description: Login Sid of the user
        agentSid:
          type: string
          description: Agent Sid
        trusts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Trust'
          description: A list of trusts the user has been assigned.
        email:
          type: string
          description: user's email
        defaultRegion:
          type: string
          description: user's default region
        createdAt:
          type: string
          description: user's created date
          format: date-time
        lastUpdated:
          type: string
          description: user's last updated date
          format: date-time
        passwordResetRequired:
          type: boolean
          description: user's password reset required
        accountOwner:
          type: boolean
          description: Whether the user is an account owner
        emailVerified:
          type: boolean
          description: if the user's email is verified
        localePreferencesOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: The override for the users locale preferences
      description: Response message for GetUser.
    api.v1alpha1.org.GetUserResponse_AgentProfileGroup:
      type: object
      properties:
        agentProfileGroupId:
          type: string
          description: The id of the user's agent profile group
        agentProfileGroupName:
          type: string
          description: The name of the user's agent profile group
      description: Object to contain the agent profile group fields
    api.v1alpha1.org.GetUserResponse_HuntGroup:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group the agent is assigned to
        huntGroupName:
          type: string
          description: The name of the hunt group the agent is assigned to
      description: Object to contain the hunt group fields
    api.v1alpha1.org.GetUserSessionDataRequest:
      type: object
      properties: {}
      description: Request message for the GetUserSessionData rpc.
    api.v1alpha1.org.GetUserSessionDataResponse:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.GetUserSessionDataResponse_User'
          description: The user the data is about
        orgName:
          type: string
          description: The user's organizations's name
        p3Permissions:
          type: array
          items:
            type: integer
            format: enum
          description: List of legacy P3 permissions.
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: A list of the permission groups the user belongs to
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        orgAllowedMfa:
          type: boolean
          description: A boolean for if the organization allows multi factor authentication
        localePreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: The default locale preferences of the organization
        billingId:
          type: string
          description: The billing ID of the organization the user belongs to.
      description: Response message for the GetUserSessionData rpc.
    api.v1alpha1.org.GetUserSessionDataResponse_User:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user
        orgId:
          type: string
          description: The ID of the org the user belongs to.
        username:
          type: string
          description: The Username of the user.
        p3PermissionGroupId:
          type: string
          description: The ID of the p3 permission group the user has.
        partnerAgentId:
          type: string
          description: The User's partner agent id.
        regionSidMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.org.User_RegionSids'
          description: The user's regional sids. The key of the map is a region id.
        defaultRegion:
          type: string
          description: region_id of a the user's default region
        apiKey:
          type: string
          description: payload
        email:
          type: string
          description: The User's email.
        loginDisabled:
          type: boolean
          description: Whether or not the user is disabled.
        callerIds:
          type: array
          items:
            type: string
          description: login preferences
        linkbackNumbers:
          type: array
          items:
            type: string
        authUserId:
          type: string
        firstName:
          type: string
          description: The user's first name.
        lastName:
          type: string
          description: The user's last name.
        created:
          type: string
          description: The date/time the user was created.
          format: date-time
        lastUpdated:
          type: string
          description: The date/time the user was last updated.
          format: date-time
        passwordResetRequired:
          type: boolean
          description: Whether or not the user must reset their password on next login.
        connectionId:
          type: string
          description: "connection id is the id of the auth connection that the\n
            user is coming from if it is a delgated user. If the user\n is not delgated
            this will be nil."
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        permissionGroupIds:
          type: array
          items:
            type: string
          description: "UserSettings\n List of permission groups ids the user is a
            member of"
        trustIds:
          type: array
          items:
            type: string
          description: List of trust ids the user has been assigned.
        defaultApplication:
          type: integer
          description: default_app for a user
          format: enum
        userCallerId:
          type: string
          description: User caller id
        agentProfileGroupId:
          type: string
          description: users assigned agent profile group
        agent:
          type: boolean
          description: a bool signalling whether or not the user is also an agent
        accountOwner:
          type: boolean
          description: a bool to determine whether or not user is account owner
        mfaTimestamp:
          type: string
          description: Timestamp beyond which the user is required to have multi factor
            authentication set up
          format: date-time
        passwordResetDate:
          type: string
          description: Timestamp of of when a user must reset their password before
          format: date-time
        localePreferencesOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: The override for the users locale preferences
    api.v1alpha1.org.GetUserSubscriptionByUserIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: "Required.\n User assigned to subscription"
        subscriptionId:
          type: string
          description: Required.
      description: Request for getting a user subscription.
    api.v1alpha1.org.GetUserSubscriptionByUserIdResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
      description: "Response for getting a user subscription.\n Contains a single
        user subscription."
    api.v1alpha1.org.GetUserSubscriptionRequest:
      type: object
      properties:
        subscriptionId:
          type: string
          description: Required.
      description: Request for getting a user subscription.
    api.v1alpha1.org.GetUserSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
      description: "Response for getting a user subscription.\n Contains a single
        user subscription."
    api.v1alpha1.org.GetVoiceAnalyticsPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetVoiceAnalyticsPreferences RPC.
    api.v1alpha1.org.GetVoiceAnalyticsPreferencesResponse:
      type: object
      properties:
        voiceAnalyticsPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.VoiceAnalyticsPreferences'
          description: Voice analytics preferences entity.
      description: Response for the GetVoiceAnalyticsPreferences RPC.
    api.v1alpha1.org.GetWebhookPreferencesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the GetWebhookPreferences RPC.
    api.v1alpha1.org.GetWebhookPreferencesResponse:
      type: object
      properties:
        webhookPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.WebhookPreferences'
          description: Webhook preferences entity.
      description: Response for the GetWebhookPreferences RPC.
    api.v1alpha1.org.InitDefaultPermissionGroupsRequest:
      type: object
      properties: {}
      description: Request message for the InitDefaultPermissionGroups RPC.
    api.v1alpha1.org.InitDefaultPermissionGroupsResponse:
      type: object
      properties:
        defaultPermissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: The list of default permission groups.
      description: Response message for the InitDefaultPermissionGroups RPC.
    api.v1alpha1.org.Label:
      type: object
      properties:
        name:
          type: string
          description: "simply the name of the label.\n 'Team A', 'Medical', etc"
        description:
          type: string
          description: the description of the label.
        color:
          type: string
          description: Hex color code of the label.
        labelId:
          type: string
          description: Id of the label.
        deleted:
          type: boolean
          description: whether or not the label is deleted.
      description: Label is an entity message.
    api.v1alpha1.org.LabelAssignment:
      type: object
      properties:
        labelId:
          type: string
          description: The ID of the label.
        type:
          type: integer
          description: type of entity being labelled.
          format: enum
        entityId:
          type: string
          description: id of the entity being labelled.
        label:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.Label'
          description: "The label associated with the label_id.\n This will only be
            populated during the GetLabelAssignments RPC\n if the request field PopulateLabelInfo
            is set to true."
      description: Entity message for a label assignment.
    api.v1alpha1.org.LinkbackUpdateBroadcastTemplatesRequest:
      type: object
      properties:
        value:
          type: boolean
          description: Broadcast linkback recording value.
      description: Request for updating broadcast template 'Record' property.
    api.v1alpha1.org.LinkbackUpdateBroadcastTemplatesResponse:
      type: object
      properties: {}
      description: Response for updating broadcast template 'Record' property.
    api.v1alpha1.org.ListAgentProfileGroupsRequest:
      type: object
      properties: {}
    api.v1alpha1.org.ListAgentProfileGroupsResponse:
      type: object
      properties:
        agentProfileGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AgentProfileGroup'
    api.v1alpha1.org.ListAgentResponseAutoRulesRequest:
      type: object
      properties: {}
      description: Request message for the ListAgentResponseAutoRules RPC method.
    api.v1alpha1.org.ListAgentResponseAutoRulesResponse:
      type: object
      properties:
        rulesets:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AgentResponseAutoRuleSet'
          description: All Agent Response Auto Rule sets for the requested Org
      description: Response message for the ListAgentResponseAutoRules RPC method.
    api.v1alpha1.org.ListAgentTriggersRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group to get the triggers for
      description: "ListAgentTriggersRequest is the request message for the ListAgentTriggers
        RPC method.\n DEPRECATED: Use services.org.hunt_groups.v1alpha1.ListHuntGroupAgentTriggersRequest
        instead"
    api.v1alpha1.org.ListAgentTriggersResponse:
      type: object
      properties:
        agentTriggers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AgentTrigger'
          description: The list of agent triggers for the hunt group
      description: "ListAgentTriggersResponse is the response message for the ListAgentTriggers
        RPC method.\n DEPRECATED: Use services.org.hunt_groups.v1alpha1.ListHuntGroupAgentTriggersResponse
        instead"
    api.v1alpha1.org.ListAgentsRequest:
      type: object
      properties: {}
      description: Request message for listAgents rpc.
    api.v1alpha1.org.ListAgentsResponse:
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.ListAgentsResponse_AgentDetails'
          description: List of returned agents with masked data.
      description: Response message for listAgents rpc.
    api.v1alpha1.org.ListAgentsResponse_AgentDetails:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the agent
        orgId:
          type: string
          description: The ID of the agent's organization
        firstName:
          type: string
          description: The agent's first name
        lastName:
          type: string
          description: The agent's last name
        username:
          type: string
          description: The agents's username
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Skill'
          description: A list of the skills associated with the agent
        loginDisabled:
          type: boolean
          description: Whether or not the agent is disabled.
        huntGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.AgentDetails_HuntGroup'
          description: An object with the hunt group fields required for the call
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the agent
        delegated:
          type: boolean
          description: Whether the agent is delegated (sso related)
        trustIds:
          type: array
          items:
            type: string
          description: A list of the trust ids the user has been assigned.
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: A list of the (neo)permission groups the user belongs to
        agentSid:
          type: string
          description: The agent's agent sid
        name:
          type: string
          description: The agent's full name
        partnerAgentId:
          type: string
          description: The User's partner agent id.
        userCallerId:
          type: string
          description: User caller id
        created:
          type: string
          description: The date/time the user was created.
          format: date-time
        lastUpdated:
          type: string
          description: The date/time the user was last updated.
          format: date-time
        agentProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.AgentDetails_AgentProfileGroup'
          description: An object with the agent profile group fields required for
            the call
        agent:
          type: boolean
          description: a bool signalling whether or not the user is also an agent
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        email:
          type: string
          description: The email of the agent. Empty if none set.
        emailVerified:
          type: boolean
          description: Whether or not the agent's email is verified.
        mfaInfo:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: The agent's mfa information.
      description: Object for ListAgents to return a list of.
    api.v1alpha1.org.ListAllOrganizationsGloballyRequest:
      type: object
      properties: {}
      description: ListOrganizationsGloballyRequest request to list all organizations
        globally - gets archived and unarchived
    api.v1alpha1.org.ListAllOrganizationsGloballyResponse:
      type: object
      properties:
        organizationDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.ListAllOrganizationsGloballyResponse_OrganizationDetails'
          description: Organizations filtered by identifier.
      description: Response for the ListAllOrganizationsGlobally RPC, returning all
        organizations globally - gets archived and unarchived
    api.v1alpha1.org.ListAllOrganizationsGloballyResponse_OrganizationDetails:
      type: object
      properties:
        orgId:
          type: string
          description: An organization's globally unique identifier.
        name:
          type: string
          description: The organization name.
        clientSid:
          type: string
          description: "First enabled region's clientSid; will be deprecated for\n
            enabled_regions map."
        billingId:
          type: string
          description: Billing_prefix + clientSid. Used for integrations and billing.
        regionId:
          type: string
          description: Default region org was first enbabled for.
        addDate:
          type: string
          description: Date of organization creation.
          format: date-time
        lastScheduledDate:
          type: string
          description: "Date the last broadcast was scheduled.\n last_scheduled_date
            has three different states.\n 1. the field is a valid timestamp\n 2. the
            field is a zero value timestamp. This\n    means the organization is in
            the current region\n    but does not have a last scheduled date.\n 3.
            the field is nil. This means the organization\n    does not belong to
            the current region."
          format: date-time
        archived:
          type: boolean
          description: Whether the organization is archived.
    api.v1alpha1.org.ListArchivedOrganizationsRequest:
      type: object
      properties: {}
      description: Request for the ListArchivedOrganizations RPC, returning archived
        organizations in the current region.
    api.v1alpha1.org.ListArchivedOrganizationsResponse:
      type: object
      properties:
        organizationDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.ListArchivedOrganizationsResponse_OrganizationDetails'
          description: Organizations filtered by identifier.
      description: Response for the ListArchivedOrganizations RPC, returning archived
        organizations in the current region.
    api.v1alpha1.org.ListArchivedOrganizationsResponse_OrganizationDetails:
      type: object
      properties:
        orgId:
          type: string
          description: An organization's globally unique identifier.
        name:
          type: string
          description: The organization name.
        billingId:
          type: string
          description: Billing_prefix + clientSid. Used for integrations and billing.
        addDate:
          type: string
          description: Date of organization creation.
          format: date-time
        lastScheduledDate:
          type: string
          description: Date the last broadcast was scheduled.
          format: date-time
        clientSid:
          type: string
          description: "First enabled region's clientSid; will be deprecated for\n
            enabled_regions map."
        regionId:
          type: string
          description: Default region org was first enbabled for.
    api.v1alpha1.org.ListAssignableTrustsRequest:
      type: object
      properties: {}
      description: Request message for the CreateTrust RPC.
    api.v1alpha1.org.ListAssignableTrustsResponse:
      type: object
      properties:
        trusts:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.ListAssignableTrustsResponse_Payload'
          description: List of trusts.
      description: Response message for the CreateTrust RPC.
    api.v1alpha1.org.ListAssignableTrustsResponse_Payload:
      type: object
      properties:
        trust:
          $ref: '#/components/schemas/api.commons.org.Trust'
        grantorName:
          type: string
        granteeName:
          type: string
    api.v1alpha1.org.ListAuthTokensByUserIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: user id to get list of auth tokens
      description: Request message for the ListAuthTokensByUserIdRequest rpc.
    api.v1alpha1.org.ListAuthTokensByUserIdResponse:
      type: object
      properties:
        authTokens:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AuthToken'
          description: list of requested users auth tokens
      description: Response message for the ListAuthTokensByUserIdResponse rpc.
    api.v1alpha1.org.ListAuthTokensRequest:
      type: object
      properties: {}
      description: Request message for the ListAuthTokensRequest rpc.
    api.v1alpha1.org.ListAuthTokensResponse:
      type: object
      properties:
        authTokens:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AuthToken'
          description: list of current users auth tokens
      description: Response message for the ListAuthTokensResponse rpc.
    api.v1alpha1.org.ListBroadcastTemplateGeneralDetailsRequest:
      type: object
      properties: {}
      description: Request message for ListBroadcastTemplateGeneralDetails RPC method
    api.v1alpha1.org.ListBroadcastTemplateGeneralDetailsResponse:
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.ListBroadcastTemplateGeneralDetailsResponse_Data'
          description: A list of broadcast tempaltes
      description: Response message for ListBroadcastTemplateGeneralDetails RPC method
    api.v1alpha1.org.ListBroadcastTemplateGeneralDetailsResponse_Data:
      type: object
      properties:
        templateSid:
          type: string
          description: The unique sid of the template
        name:
          type: string
          description: The template name
        broadcastType:
          type: integer
          description: The broadcast template type
          format: enum
        lastScheduledDate:
          type: string
          description: The last scheduled date of the template
          format: date-time
    api.v1alpha1.org.ListBusinessHoursRequest:
      type: object
      properties: {}
      description: Request for listing business hours.
    api.v1alpha1.org.ListBusinessHoursResponse:
      type: object
      properties:
        businessHours:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.BusinessHours'
          description: The list of business hours
      description: Response for listing business hours.
    api.v1alpha1.org.ListCallerIdBucketsRequest:
      type: object
      properties: {}
      description: Request messsage for getting the org related list of Caller ID
        Bucket Data.
    api.v1alpha1.org.ListCallerIdBucketsResponse:
      type: object
      properties:
        callerIdBucketData:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.CallerIdBucketData'
          description: list of caller ID bucket data.
      description: Response message for getting the org related list of Caller ID
        Bucket Data.
    api.v1alpha1.org.ListCertificateInfoRequest:
      type: object
      properties: {}
      description: "ListCertificateInfoRequest is the request for listing certificate
        info.\n DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.ListCertificateInfoRequest
        instead"
    api.v1alpha1.org.ListCertificateInfoResponse:
      type: object
      properties:
        certificateInfoList:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.CertificateInfo'
          description: The list of certificate info.
      description: "ListCertificateInfoResponse is the response for listing certificate
        info.\n DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.ListCertificateInfoResponse
        instead"
    api.v1alpha1.org.ListDataDipTemplatesRequest:
      type: object
      properties:
        filter:
          type: integer
          description: The filter for limiting the returned templates.
          format: enum
      description: Request message for ListDataDipTemplates RPC method.
    api.v1alpha1.org.ListDataDipTemplatesResponse:
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.DataDipConfig'
          description: list of the organizations templates.
      description: Response message for ListDataDipTemplates RPC method.
    api.v1alpha1.org.ListGivenTrustsRequest:
      type: object
      properties: {}
      description: Request message for the ListGivenTrusts RPC.
    api.v1alpha1.org.ListGivenTrustsResponse:
      type: object
      properties:
        trusts:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.ListGivenTrustsResponse_Payload'
          description: List of trusts.
      description: Response message for the ListGivenTrusts RPC.
    api.v1alpha1.org.ListGivenTrustsResponse_Payload:
      type: object
      properties:
        trust:
          $ref: '#/components/schemas/api.commons.org.Trust'
        grantorName:
          type: string
        granteeName:
          type: string
    api.v1alpha1.org.ListHuntGroupIntegrationLinksRequest:
      type: object
      properties:
        orgId:
          type: string
          description: The ID of the organization which the hunt group belongs to.
        huntGroupSid:
          type: string
          description: The ID of the hunt group to list integration links for.
      description: ListHuntGroupIntegrationLinksRequest is the request message for
        the ListHuntGroupIntegrationLinks RPC method.
    api.v1alpha1.org.ListHuntGroupIntegrationLinksResponse:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.IntegrationLink'
          description: The list of integration links for the hunt group.
      description: ListHuntGroupIntegrationLinksResponse is the response message for
        the ListHuntGroupIntegrationLinks RPC method.
    api.v1alpha1.org.ListHuntGroupScriptsRequest:
      type: object
      properties: {}
      description: The request message for ListHuntGroupScript
    api.v1alpha1.org.ListHuntGroupScriptsResponse:
      type: object
      properties:
        scripts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.HuntGroupScript'
          description: The scripts belonging to an org
      description: The response message for ListHuntGroupScript
    api.v1alpha1.org.ListHuntGroupWebLinksRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid of the desired web links
      description: Request message for ListHuntGroupWebLinks
    api.v1alpha1.org.ListHuntGroupWebLinksResponse:
      type: object
      properties:
        webLinks:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.WebLink'
          description: The web links list from a givne hunt group
      description: Response message for ListHuntGroupWebLinks
    api.v1alpha1.org.ListHuntGroupsWithClientInfoTemplateDataRequest:
      type: object
      properties:
        filter:
          type: integer
          description: The filter to list the hunt groups with their client info display
            template.
          format: enum
      description: ListHuntGroupsWithClientInfoTemplateDataRequest is the request
        message for the ListHuntGroupsWithClientInfoTemplateData RPC method.
    api.v1alpha1.org.ListHuntGroupsWithClientInfoTemplateDataResponse:
      type: object
      properties:
        huntGroupsWithTemplateData:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.HuntGroupWithClientInfoTemplateData'
          description: A list of hunt group with their client info display template
            data.
      description: ListHuntGroupsWithClientInfoTemplateDataResponse is the response
        message for the ListHuntGroupsWithClientInfoTemplateData RPC method.
    api.v1alpha1.org.ListIncomingTrustsRequest:
      type: object
      properties: {}
      description: Request message for the ListIncomingTrusts RPC.
    api.v1alpha1.org.ListIncomingTrustsResponse:
      type: object
      properties:
        trusts:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.ListIncomingTrustsResponse_Payload'
          description: List of trusts.
      description: Response message for the ListIncomingTrusts RPC.
    api.v1alpha1.org.ListIncomingTrustsResponse_Payload:
      type: object
      properties:
        trust:
          $ref: '#/components/schemas/api.commons.org.Trust'
        grantorName:
          type: string
        granteeName:
          type: string
    api.v1alpha1.org.ListLabelsRequest:
      type: object
      properties: {}
      description: Request message for the ListLabels rpc.
    api.v1alpha1.org.ListLabelsResponse:
      type: object
      properties:
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.Label'
      description: Response message for the ListLabels rpc.
    api.v1alpha1.org.ListOrgSubscriptionsRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Required.
        eventType:
          type: integer
          description: "Optional.\n Used by matrix-notify to get settings in bulk
            for a particular event type."
          format: enum
      description: Request for listing subscriptions (for many users) for an org.
    api.v1alpha1.org.ListOrgSubscriptionsResponse:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
      description: Response for listing subscriptions for multiple users.
    api.v1alpha1.org.ListOrganizationsByRegionRequest:
      type: object
      properties:
        regionId:
          type: string
          description: The region to get organizations in
      description: ListOrganizationsByRegionRequest request to list organizations
        in the given region - only gets unarchived
    api.v1alpha1.org.ListOrganizationsByRegionResponse:
      type: object
      properties:
        organizationDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.ListOrganizationsByRegionResponse_OrganizationDetails'
          description: Organizations filtered by identifier.
      description: Response for the ListOrganizationsByRegion RPC, lists organizations
        in the given region - only gets unarchived
    api.v1alpha1.org.ListOrganizationsByRegionResponse_OrganizationDetails:
      type: object
      properties:
        orgId:
          type: string
          description: An organization's globally unique identifier.
        name:
          type: string
          description: The organization name.
        clientSid:
          type: string
          description: "First enabled region's clientSid; will be deprecated for\n
            enabled_regions map."
        billingId:
          type: string
          description: Billing_prefix + clientSid. Used for integrations and billing.
        regionId:
          type: string
          description: Default region org was first enbabled for.
        addDate:
          type: string
          description: Date of organization creation.
          format: date-time
        lastScheduledDate:
          type: string
          description: "Date the last broadcast was scheduled.\n last_scheduled_date
            has three different states.\n 1. the field is a valid timestamp\n 2. the
            field is a zero value timestamp. This\n    means the organization is in
            the current region\n    but does not have a last scheduled date.\n 3.
            the field is nil. This means the organization\n    does not belong to
            the current region."
          format: date-time
    api.v1alpha1.org.ListOwnedOrgsRequest:
      type: object
      properties: {}
      description: "ListOwnedOrgsRequest request for listing p3 owned orgs for a specific
        org id.\n Org id is that of the calling user."
    api.v1alpha1.org.ListOwnedOrgsResponse:
      type: object
      properties:
        organizationDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.OrganizationDetails'
          description: List of orgs owned by requested org id.
      description: ListOwnedOrgsRequest response listing orgs owned by the requested
        org id.
    api.v1alpha1.org.ListP3PermissionGroupsRequest:
      type: object
      properties:
        orgId:
          type: string
          description: "Org's Id to list P3PermissionGroups for.\n Passing in Org
            Id requires PERMISSION_CUSTOMER_SUPPORT,\n otherwise it is taken off the
            user token and requires PERMISSION_ORG_VIEW."
      description: Request message for the ListP3PermissionGroups RPC.
    api.v1alpha1.org.ListP3PermissionGroupsResponse:
      type: object
      properties:
        p3PermissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.P3PermissionGroup'
          description: List of P3PermissionGroups for the requested org
      description: Response message for the ListP3PermissionGroups RPC.
    api.v1alpha1.org.ListPermissionGroupsByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Id of organization to get permission groups for
      description: Request message for the GetPermissions RPC.
    api.v1alpha1.org.ListPermissionGroupsByOrgIdResponse:
      type: object
      properties:
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: Permission groups in specified organization
      description: Response message for the GetPermissions RPC.
    api.v1alpha1.org.ListPermissionGroupsRequest:
      type: object
      properties: {}
      description: Request message for the GetPermissions RPC.
    api.v1alpha1.org.ListPermissionGroupsResponse:
      type: object
      properties:
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: Permission groups in caller's organization
      description: Response message for the GetPermissions RPC.
    api.v1alpha1.org.ListPublicUsersRequest:
      type: object
      properties:
        agentFilter:
          type: boolean
          description: Return a list of only user agents. When this is false all users
            are returned.
        archivedFilter:
          type: integer
          description: Filter by the user's archived status.
          format: enum
      description: Request message for ListPublicUsers rpc.
    api.v1alpha1.org.ListPublicUsersResponse:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        username:
          type: string
          description: The user's username
        users:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.ListPublicUsersResponse_User'
      description: Response message for ListPublicUsers rpc.
    api.v1alpha1.org.ListPublicUsersResponse_User:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        username:
          type: string
          description: The user's username
    api.v1alpha1.org.ListResponseEvaluatorsRequest:
      type: object
      properties: {}
      description: Request for the ListResponseEvaluators RPC.
    api.v1alpha1.org.ListResponseEvaluatorsResponse:
      type: object
      properties:
        evaluators:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.ResponseEvaluator'
          description: List of response evaluators for the organization.
      description: Response for the ListResponseEvaluators RPC.
    api.v1alpha1.org.ListUserSubscriptionsByUserIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: Required.
      description: Request for listing subscriptions for a given user.
    api.v1alpha1.org.ListUserSubscriptionsByUserIdResponse:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
      description: "Response for listing subscriptions for a given user.\n Contains
        a user subscriptions (plural) object."
    api.v1alpha1.org.ListUserSubscriptionsRequest:
      type: object
      properties: {}
      description: Request for listing subscriptions for the current user.
    api.v1alpha1.org.ListUserSubscriptionsResponse:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
      description: "Response for listing subscriptions for the current user.\n Contains
        a user subscriptions (plural) object."
    api.v1alpha1.org.ListUsersAllowedIpsRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: list of user ids to get mapping of restricted ips
    api.v1alpha1.org.ListUsersAllowedIpsResponse:
      type: object
      properties:
        userAllowedIpsMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.org.ListUsersAllowedIpsResponse_AllowedIps'
          description: user id to allowed ips map
    api.v1alpha1.org.ListUsersAllowedIpsResponse_AllowedIps:
      type: object
      properties:
        ips:
          type: array
          items:
            type: string
          description: list of ips for a given user
    api.v1alpha1.org.ListUsersByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Filter by org ID.
        archivedFilter:
          type: integer
          description: Filter by the user's archived status.
          format: enum
      description: Request message for the ListUsersByOrgId rpc.
    api.v1alpha1.org.ListUsersByOrgIdResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.ListUsersByOrgIdResponse_UserDetails'
          description: List of returned users with masked data.
      description: Response message for the ListsUsersByOrgId rpc.
    api.v1alpha1.org.ListUsersByOrgIdResponse_UserDetails:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        orgId:
          type: string
          description: The ID of the user's organization
        orgName:
          type: string
          description: The name of the user's organization
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        username:
          type: string
          description: The user's username
        loginDisabled:
          type: boolean
          description: Whether or not the user is disabled.
        permissionGroupIds:
          type: array
          items:
            type: string
          description: A list of the (neo)permission group Ids the agent belongs to
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        accountOwner:
          type: boolean
          description: Whether the user is an account owner
        agent:
          type: boolean
          description: Whether the user is also an agent
        trustIds:
          type: array
          items:
            type: string
          description: A list of the trust ids the user has been assigned.
        mfaInfo:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: MfaInfo of the user.
        emailVerified:
          type: boolean
          description: Whether or not the users email is verified.
      description: Object for ListUsersByOrgId to return a list of.
    api.v1alpha1.org.ListUsersByRegionRequest:
      type: object
      properties:
        regionId:
          type: string
          description: Filter by region.
        agent:
          type: boolean
          description: Return a list of only user agents (users whose default app
            is agent). When this is false all users are returned.
        archivedFilter:
          type: integer
          description: Filter by the user's archived status.
          format: enum
      description: Request message for the ListUsersByRegion rpc.
    api.v1alpha1.org.ListUsersByRegionResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.ListUsersByRegionResponse_UserDetails'
          description: List of returned users with masked data.
      description: Response message for the ListsUserByRegion rpc.
    api.v1alpha1.org.ListUsersByRegionResponse_UserDetails:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        orgId:
          type: string
          description: The ID of the user's organization
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        username:
          type: string
          description: The user's username
        loginDisabled:
          type: boolean
          description: Whether or not the user is disabled.
        permissionGroupIds:
          type: array
          items:
            type: string
          description: A list of the (neo)permission group Ids the agent belongs to
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        accountOwner:
          type: boolean
          description: Whether the user is an account owner
        agent:
          type: boolean
          description: Whether the user is also an agent
        trustIds:
          type: array
          items:
            type: string
          description: A list of the trust ids the user has been assigned.
        mfaInfo:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: MfaInfo of the user.
        emailVerified:
          type: boolean
          description: Whether or not the users email is verified.
      description: Object for ListUsersByRegion to return a list of.
    api.v1alpha1.org.ListUsersRequest:
      type: object
      properties: {}
      description: Request message for listUsers rpc.
    api.v1alpha1.org.ListUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.ListUsersResponse_UserDetails'
          description: List of returned users with masked data.
      description: Response message for listUsers rpc.
    api.v1alpha1.org.ListUsersResponse_UserDetails:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        orgId:
          type: string
          description: The ID of the user's organization
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        username:
          type: string
          description: The user's username
        loginDisabled:
          type: boolean
          description: Whether or not the user is disabled.
        permissionGroupIds:
          type: array
          items:
            type: string
          description: A list of the (neo)permission group Ids the agent belongs to
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        accountOwner:
          type: boolean
          description: Whether the user is an account owner
        agent:
          type: boolean
          description: Whether the user is also an agent
        trustIds:
          type: array
          items:
            type: string
          description: A list of the trust ids the user has been assigned.
        mfaInfo:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: MfaInfo of the user.
        emailVerified:
          type: boolean
          description: Whether or not the users email is verified.
      description: Object for ListUsers to return a list of.
    api.v1alpha1.org.ListVoiceAnalyticsPreferencesRequest:
      type: object
      properties: {}
      description: Request for the ListVoiceAnalyticsPreferences RPC.
    api.v1alpha1.org.ListVoiceAnalyticsPreferencesResponse:
      type: object
      properties:
        voiceAnalyticsPreferences:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.VoiceAnalyticsPreferences'
          description: List of voice analytics preferences.
      description: Response for the ListVoiceAnalyticsPreferences RPC.
    api.v1alpha1.org.OrganizationDetails:
      type: object
      properties:
        organization:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.Organization'
          description: Organization core entity.
        lastScheduledDate:
          type: string
          description: Date the last broadcast was scheduled.
          format: date-time
      description: Wrapper for associating non entity fields with an Organization
    api.v1alpha1.org.RecordEmailUnsubscribeAcknowledgementRequest:
      type: object
      properties: {}
      description: Request for recording email unsubscribe acknowledgement.
    api.v1alpha1.org.RecordEmailUnsubscribeAcknowledgementResponse:
      type: object
      properties: {}
      description: Response for recording email unsubscribe acknowledgement.
    api.v1alpha1.org.RefreshMfaLockoutByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The id of the user to refresh.
        orgId:
          type: string
          description: The id of the org the user belongs to.
      description: Request message for the RefreshMfaLockoutByOrgId rpc.
    api.v1alpha1.org.RefreshMfaLockoutByOrgIdResponse:
      type: object
      properties:
        timeout:
          type: string
          description: The new time that the user must setup mfa by.
          format: date-time
      description: Response message for the RefreshMfaLockoutByOrgId rpc.
    api.v1alpha1.org.RefreshMfaLockoutRequest:
      type: object
      properties:
        userId:
          type: string
          description: The id of the user to refresh.
      description: Request message for the RefreshMfaLockout rpc.
    api.v1alpha1.org.RefreshMfaLockoutResponse:
      type: object
      properties:
        timeout:
          type: string
          description: The new time that the user must setup mfa by.
          format: date-time
      description: Response message for the RefreshMfaLockout rpc.
    api.v1alpha1.org.RejectTrustRequest:
      type: object
      properties:
        trustId:
          type: string
          description: ID of the trust being rejected.
      description: Request message for the RejectTrust RPC.
    api.v1alpha1.org.RejectTrustResponse:
      type: object
      properties: {}
      description: Response message for the RejectTrust RPC.
    api.v1alpha1.org.RemoveGroupedUserIPRestrictionsRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: List of users to remove the restriction from.
        ips:
          type: array
          items:
            type: string
          description: List of IPs to un-restrict. Empty list will delete all restrictions
      description: Request message for the RemoveGroupedUserIPRestrictions rpc.
    api.v1alpha1.org.RemoveGroupedUserIPRestrictionsResponse:
      type: object
      properties: {}
      description: Response message for the RemoveGroupedUserIPRestrictions rpc.
    api.v1alpha1.org.RemoveIntervalFromBusinessHoursRequest:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the business hours to remove an interval
        dayInterval:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DayInterval'
          description: The day interval to be removed
      description: Request for removing an interval from a business hours object
    api.v1alpha1.org.RemoveIntervalFromBusinessHoursResponse:
      type: object
      properties: {}
      description: Response for removing an interval from a business hours object
    api.v1alpha1.org.RemovePermissionFromAllPermissionGroupsRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID to remove the permission from.
        permission:
          type: integer
          description: Permission to remove from all permission groups.
          format: enum
      description: Request message for the RemovePermissionFromAllPermissionGroupsRequest
        RPC.
    api.v1alpha1.org.RemovePermissionFromAllPermissionGroupsResponse:
      type: object
      properties: {}
      description: Response message for the RemovePermissionFromAllPermissionGroupsRequest
        RPC.
    api.v1alpha1.org.RemoveUserSubscriptionByUserIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: "Required.\n Primary key for subscriptions."
        subscriptionId:
          type: string
          description: Required.
      description: Request for removing a user subscription by id.
    api.v1alpha1.org.RemoveUserSubscriptionByUserIdResponse:
      type: object
      properties: {}
      description: Response for deleting a user subscription.
    api.v1alpha1.org.RemoveUserSubscriptionRequest:
      type: object
      properties:
        subscriptionId:
          type: string
          description: Required.
      description: Request for removing a user subscription by id.
    api.v1alpha1.org.RemoveUserSubscriptionResponse:
      type: object
      properties: {}
      description: Response for deleting a user subscription.
    api.v1alpha1.org.ResetMyPasswordRequest:
      type: object
      properties:
        password:
          type: string
          description: The new password to use for my user.
      description: Request message for the ResetMyPassword rpc.
    api.v1alpha1.org.ResetMyPasswordResponse:
      type: object
      properties: {}
      description: Response message for the ResetMyPassword rpc.
    api.v1alpha1.org.ResetUserPasswordByOrgIdRequest:
      type: object
      properties:
        password:
          type: string
          description: The new password to use for the specified user.
        userId:
          type: string
          description: The ID of the user password to be changed.
        orgId:
          type: string
          description: The organization ID of the user password to be changed.
      description: Request message for the ResetUserPasswordByOrgId rpc.
    api.v1alpha1.org.ResetUserPasswordByOrgIdResponse:
      type: object
      properties: {}
      description: Response message for the ResetUserPasswordByOrgId rpc.
    api.v1alpha1.org.ResetUserPasswordRequest:
      type: object
      properties:
        password:
          type: string
          description: The new password to use for the specified user.
        userId:
          type: string
          description: The ID of the user password to be changed.
      description: Request message for the ResetUserPassword rpc.
    api.v1alpha1.org.ResetUserPasswordResponse:
      type: object
      properties: {}
      description: Response message for the ResetUserPassword rpc.
    api.v1alpha1.org.RevokeAccountOwnerPermissionFromUserRequest:
      type: object
      properties:
        userId:
          type: string
          description: User which will be revoked the account owner permissions.
        orgId:
          type: string
          description: The organization which the target user belongs to
      description: Request message for the RevokeAccountOwnerPermissionFromUser RPC.
    api.v1alpha1.org.RevokeAccountOwnerPermissionFromUserResponse:
      type: object
      properties: {}
      description: Response message for the RevokeAccountOwnerPermissionFromUser RPC.
    api.v1alpha1.org.RevokeCertificateInfoRequest:
      type: object
      properties:
        certificateInfoId:
          type: string
          description: The id of the certificate info to delete.
      description: "RevokeCertificateInfoRequest is the request for revoking a certificate
        info.\n DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.RevokeCertificateInfoRequest
        instead"
    api.v1alpha1.org.RevokeCertificateInfoResponse:
      type: object
      properties: {}
      description: "RevokeCertificateInfoResponse is the response for revoking a certificate
        info.\n DEPRECATED: Use services.org.exile_certificate_manager.v1alpha1.RevokeCertificateInfoResponse
        instead"
    api.v1alpha1.org.RevokeLabelsRequest:
      type: object
      properties:
        labelIds:
          type: array
          items:
            type: string
          description: Ids of labels getting revoked from a permission group
        permissionGroupId:
          type: string
          description: Id of the permission group to have labels revoked.
      description: Request message for the RevokeLabelsRequest RPC.
    api.v1alpha1.org.RevokeLabelsResponse:
      type: object
      properties: {}
      description: Response message for the RevokeLabelsResponse RPC.
    api.v1alpha1.org.RevokeUsersP3PermissionGroupRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: List of users having P3PermissionGroup revoked
      description: Request message for the RevokeUsersP3PermissionGroup RPC.
    api.v1alpha1.org.RevokeUsersP3PermissionGroupResponse:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: List of users that had permissions revoked
      description: Response message for the RevokeUsersP3PermissionGroup RPC.
    api.v1alpha1.org.RevokeUsersPermissionGroupRequest:
      type: object
      properties:
        permissionGroupId:
          type: string
          description: Required. The ID of the permission group that is being revoked.
        revokeUserIds:
          type: array
          items:
            type: string
          description: Required. The IDs of the users the permission group is being
            revoked from.
      description: Request message for the RevokeUsersPermissionGroup RPC.
    api.v1alpha1.org.RevokeUsersPermissionGroupResponse:
      type: object
      properties: {}
      description: Response message for the RevokeUsersPermissionGroup RPC.
    api.v1alpha1.org.SendPasswordResetByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
          description: The organization ID of the user to be emailed.
        email:
          type: string
          description: The email address to send the password reset lnk to.
      description: Request message for the SendPasswordResetByOrgId rpc.
    api.v1alpha1.org.SendPasswordResetByOrgIdResponse:
      type: object
      properties: {}
      description: Response message for the SendPasswordResetByOrgId rpc.
    api.v1alpha1.org.SendPasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          description: The email address to send the password reset lnk to.
      description: Request message for the SendPasswordReset rpc.
    api.v1alpha1.org.SendPasswordResetResponse:
      type: object
      properties: {}
      description: Response message for the SendPasswordReset rpc.
    api.v1alpha1.org.SendUserEmailVerificationByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user to be verified.
        orgId:
          type: string
          description: The organization ID of the user.
      description: Request message for the SendUserEmailVerificationByOrgId rpc.
    api.v1alpha1.org.SendUserEmailVerificationByOrgIdResponse:
      type: object
      properties: {}
      description: Response message for the SendUserEmailVerificationByOrgId rpc.
    api.v1alpha1.org.SendUserEmailVerificationRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user to be verified.
      description: Request message for the SendUserEmailVerification rpc.
    api.v1alpha1.org.SendUserEmailVerificationResponse:
      type: object
      properties: {}
      description: Response message for the SendUserEmailVerification rpc.
    api.v1alpha1.org.SetAuthTokenExpirationByUserIdRequest:
      type: object
      properties:
        token:
          type: string
          description: token to reset expiration for that belongs to the given user
        userId:
          type: string
          description: user token belongs to
      description: Request message for the SetAuthTokenExpirationByUserIdRequest rpc.
    api.v1alpha1.org.SetAuthTokenExpirationByUserIdResponse:
      type: object
      properties: {}
      description: Response message for the SetAuthTokenExpirationByUserIdResponse
        rpc.
    api.v1alpha1.org.SetAuthTokenExpirationRequest:
      type: object
      properties:
        token:
          type: string
          description: token to reset expiration for that belongs to the current user
      description: Request message for the SetAuthTokenExpirationRequest rpc.
    api.v1alpha1.org.SetAuthTokenExpirationResponse:
      type: object
      properties: {}
      description: Response message for the SetAuthTokenExpirationResponse rpc.
    api.v1alpha1.org.SetBusinessHoursRequest:
      type: object
      properties:
        businessHoursName:
          type: string
          description: The name of the business hours
        description:
          type: string
          description: The description of the business hours
        dayIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.DayInterval'
          description: The list of day intervals for the business hours
        timezone:
          type: integer
          description: The timezone of the business hours
          format: enum
      description: Request for initializing a business hours object
    api.v1alpha1.org.SetBusinessHoursResponse:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the new business hours
      description: Response for initializing a business hours object
    api.v1alpha1.org.SetMfaTypeRequest:
      type: object
      properties:
        info:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: "The info object to pull the type from.\n The user id field
            must be provided."
      description: Request message for the SetMfaTypeRequest rpc.
    api.v1alpha1.org.SetMfaTypeResponse:
      type: object
      properties: {}
      description: Response message for the SetMfaTypeRequest rpc.
    api.v1alpha1.org.SetMyMfaTypeRequest:
      type: object
      properties:
        info:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: The info object to pull the type from.
      description: Request message for the SetMyMfaTypeRequest rpc.
    api.v1alpha1.org.SetMyMfaTypeResponse:
      type: object
      properties: {}
      description: Response message for the SetMyMfaTypeRequest rpc.
    api.v1alpha1.org.UnArchiveOrganizationRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Required. Unarchives the specified organization
      description: The request for UnArchiveOrganization
    api.v1alpha1.org.UnArchiveOrganizationResponse:
      type: object
      properties: {}
      description: The response for UnArchiveOrganization
    api.v1alpha1.org.UnassignLabelRequest:
      type: object
      properties:
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.LabelAssignment'
          description: "The assignments to be deleted.\n The type, entity_id, label_id,
            and org_id are used to\n delete a label."
      description: Request message for the UnassignLabel RPC.
    api.v1alpha1.org.UnassignLabelResponse:
      type: object
      properties: {}
      description: Response message for the UnassingLabel RPC.
    api.v1alpha1.org.UnassignScriptFromHuntGroupsRequest:
      type: object
      properties:
        scriptSid:
          type: string
          description: The script to be unassigned
        huntGroupSids:
          type: array
          items:
            type: string
          description: The target hunt groups to unassign the specified script
      description: The request message for UnassignScriptFromHuntGroups
    api.v1alpha1.org.UnassignScriptFromHuntGroupsResponse:
      type: object
      properties: {}
      description: The response message for UnassignScriptFromHuntGroups
    api.v1alpha1.org.UnassignTrustRequest:
      type: object
      properties:
        trustId:
          type: string
          description: ID of the trust being unassigned.
        userId:
          type: string
          description: User ID to unassign the trust from.
      description: Request message for the UnassignTrust RPC.
    api.v1alpha1.org.UnassignTrustResponse:
      type: object
      properties: {}
      description: Response message for the UnassignTrust RPC.
    api.v1alpha1.org.UpdateAdminBusinessPreferencesRequest:
      type: object
      properties:
        orgId:
          type: string
        businessPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.BusinessPreferences'
          description: Business preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateAdminBusinessPreferences RPC.
    api.v1alpha1.org.UpdateAdminBusinessPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateAdminBusinessPreferences RPC.
    api.v1alpha1.org.UpdateAdminClientPreferencesRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        adminClientPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AdminClientPreferences'
          description: Admin client preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateAdminClientPreferences RPC.
    api.v1alpha1.org.UpdateAdminClientPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateAdminClientPreferences RPC.
    api.v1alpha1.org.UpdateAgentPreferencesRequest:
      type: object
      properties:
        agentPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AgentPreferences'
          description: Agent preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateAgentPreferences RPC.
    api.v1alpha1.org.UpdateAgentPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateAgentPreferences RPC.
    api.v1alpha1.org.UpdateAgentProfileGroupRequest:
      type: object
      properties:
        agentProfileGroup:
          $ref: '#/components/schemas/api.commons.org.AgentProfileGroup'
    api.v1alpha1.org.UpdateAgentProfileGroupResponse:
      type: object
      properties: {}
    api.v1alpha1.org.UpdateAgentResponseAutoRulesRequest:
      type: object
      properties:
        rulesetSid:
          type: string
          description: Sid for the Agent Response Rule set to update
        ruleset:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AgentResponseAutoRuleSet'
          description: New values for the Agent Response Rule set
      description: Request message for the UpdateAgentResponseAutoRules RPC method.
    api.v1alpha1.org.UpdateAgentResponseAutoRulesResponse:
      type: object
      properties: {}
      description: Response message for the UpdateAgentResponseAutoRules RPC method.
    api.v1alpha1.org.UpdateAgentTriggersRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group to update the trigger for
        agentTriggers:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AgentTrigger'
          description: The list of agent triggers to update
      description: "UpdateAgentTriggersRequest is the request message for the UpdateAgentTriggers
        RPC method.\n DEPRECATED: Use services.org.hunt_groups.v1alpha1.UpdateHuntGroupAgentTriggersRequest
        instead"
    api.v1alpha1.org.UpdateAgentTriggersResponse:
      type: object
      properties: {}
      description: "UpdateAgentTriggersResponse is the response message for the UpdateAgentTriggers
        RPC method.\n DEPRECATED: Use services.org.hunt_groups.v1alpha1.UpdateHuntGroupAgentTriggersResponse
        instead"
    api.v1alpha1.org.UpdateAuthenticationPreferencesRequest:
      type: object
      properties:
        authenticationPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AuthenticationPreferences'
          description: Authentication preferences entity.
        duoClientSecret:
          type: string
          description: The duo client secret to be used for mfa
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateAuthenticationPreferences RPC.
    api.v1alpha1.org.UpdateAuthenticationPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateAuthenticationPreferences RPC.
    api.v1alpha1.org.UpdateBroadcastPreferencesRequest:
      type: object
      properties:
        broadcastPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.BroadcastPreferences'
          description: Broadcast preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateBroadcastPreferences RPC.
    api.v1alpha1.org.UpdateBroadcastPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateBroadcastPreferences RPC.
    api.v1alpha1.org.UpdateBusinessHoursInfoRequest:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the business hours object
        businessHoursName:
          type: string
          description: The updated name of the business hours
        description:
          type: string
          description: The updated description of the business hours
        timezone:
          type: integer
          description: The updated timezone of the business hours
          format: enum
        fieldMask:
          type: string
          description: Field mask for the update request
          format: field-mask
      description: Request for updating the business hours info
    api.v1alpha1.org.UpdateBusinessHoursInfoResponse:
      type: object
      properties: {}
      description: Response for updating the business hours info
    api.v1alpha1.org.UpdateBusinessHoursRequest:
      type: object
      properties:
        businessHours:
          $ref: '#/components/schemas/api.commons.org.BusinessHours'
      description: Request for updating business hours.
    api.v1alpha1.org.UpdateBusinessHoursResponse:
      type: object
      properties: {}
      description: Response for updating business hours.
    api.v1alpha1.org.UpdateBusinessPreferencesRequest:
      type: object
      properties:
        businessPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.BusinessPreferences'
          description: Business preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateBusinessPreferences RPC.
    api.v1alpha1.org.UpdateBusinessPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateBusinessPreferences RPC.
    api.v1alpha1.org.UpdateCompliancePreferencesRequest:
      type: object
      properties:
        compliancePreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CompliancePreferences'
          description: Compliance preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateCompliancePreferences RPC.
    api.v1alpha1.org.UpdateCompliancePreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateCompliancePreferences RPC.
    api.v1alpha1.org.UpdateContactPreferencesRequest:
      type: object
      properties:
        contactPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ContactPreferences'
          description: Contact preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateContactPreferences RPC.
    api.v1alpha1.org.UpdateContactPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateContactPreferences RPC.
    api.v1alpha1.org.UpdateDashboardGeneralPreferencesRequest:
      type: object
      properties:
        dashboardPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DashboardPreferences'
          description: Dashboard preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateDashboardGeneralPreferences RPC.
    api.v1alpha1.org.UpdateDashboardGeneralPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateDashboardGeneralPreferences RPC.
    api.v1alpha1.org.UpdateDashboardQueuePreferencesRequest:
      type: object
      properties:
        dashboardQueuePreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DashboardQueuePreferences'
          description: Dashboard queue preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateDashboardQueuePreferences RPC.
    api.v1alpha1.org.UpdateDashboardQueuePreferencesResponse:
      type: object
      properties: {}
      description: Respons for the UpdateDashboardQueuePreferences RPC.
    api.v1alpha1.org.UpdateDataDipTemplateRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        template:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DataDipConfig'
          description: The template to save.
      description: Request message for UpdateDataDipTemplate RPC method.
    api.v1alpha1.org.UpdateDataDipTemplateResponse:
      type: object
      properties: {}
      description: Response message for UpdateDataDipTemplate RPC method.
    api.v1alpha1.org.UpdateEmailSmsPreferencesRequest:
      type: object
      properties:
        emailSmsPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.EmailSmsPreferences'
          description: Email/SMS preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateEmailSmsPreferences RPC.
    api.v1alpha1.org.UpdateEmailSmsPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateEmailSmsPreferences RPC.
    api.v1alpha1.org.UpdateEndOfDayPreferencesRequest:
      type: object
      properties:
        endOfDayPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.EndOfDayPreferences'
          description: End-of-day preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateEndOfDayPreferences RPC.
    api.v1alpha1.org.UpdateEndOfDayPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateEndOfDayPreferences RPC.
    api.v1alpha1.org.UpdateFilterPreferencesRequest:
      type: object
      properties:
        filterPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.FilterPreferences'
          description: Filter preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateFilterPreferences RPC.
    api.v1alpha1.org.UpdateFilterPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateFilterPreferences RPC.
    api.v1alpha1.org.UpdateHuntGroupClientInfoDisplayTemplateRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid of the desired client info display template
            to update
        template:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ClientInfoDisplayTemplate'
          description: The template info of the updated client info display template
      description: Request message for UpdateHuntGroupClientInfoDisplayTemplate RPC
        method.
    api.v1alpha1.org.UpdateHuntGroupClientInfoDisplayTemplateResponse:
      type: object
      properties: {}
      description: Response message for UpdateHuntGroupClientInfoDisplayTemplate RPC
        method.
    api.v1alpha1.org.UpdateHuntGroupGeneralDetailsRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid.
        name:
          type: string
          description: The hunt group name.
        description:
          type: string
          description: The hunt group description.
        type:
          type: integer
          description: The hunt group type.
          format: enum
      description: UpdateHuntGroupGeneralDetailsRequest represents the request message
        for the UpdateHuntGroupGeneralDetails RPC method.
    api.v1alpha1.org.UpdateHuntGroupGeneralDetailsResponse:
      type: object
      properties: {}
      description: UpdateHuntGroupGeneralDetailsResponse represents the response message
        for the UpdateHuntGroupGeneralDetails RPC method.
    api.v1alpha1.org.UpdateHuntGroupIntegrationLinksRequest:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.IntegrationLink'
          description: The list of integration links to update.
        huntGroupSid:
          type: string
          description: The sid of the hunt group to update the integration links for.
      description: UpdateHuntGroupIntegrationLinksRequest is the request message for
        the UpdateHuntGroupIntegrationLinks RPC method.
    api.v1alpha1.org.UpdateHuntGroupIntegrationLinksResponse:
      type: object
      properties: {}
      description: UpdateHuntGroupIntegrationLinksResponse is the response message
        for the UpdateHuntGroupIntegrationLinks RPC method.
    api.v1alpha1.org.UpdateHuntGroupScriptRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid of where the script belongs
        huntGroupScript:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.HuntGroupScript'
          description: The script to be created
        scriptSid:
          type: string
          description: The sid of the script to be updated
      description: The request message for UpdateHuntGroupScript
    api.v1alpha1.org.UpdateHuntGroupScriptResponse:
      type: object
      properties: {}
      description: The response message for UpdateHuntGroupScript
    api.v1alpha1.org.UpdateHuntGroupSettingsRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: Hunt group sid.
        generalSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GeneralSettings'
          description: Hunt group general settings to be updated.
        communicationSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CommunicationSettings'
          description: Hunt group communication compliance settings to be updated.
        callbackSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.CallbackSettings'
          description: Hunt group scheduled callback settings to be updated.
        previewDialSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.PreviewDialSettings'
          description: Hunt group Preview Dial settings to be updated.
        manualDialSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ManualDialSettings'
          description: Hunt group Manual Dial settings to be updated.
        transferCallSettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.TransferCallSettings'
          description: Transfer Call hunt group settings.
        numberHistorySettings:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.NumberHistorySettings'
          description: Number History hunt group settings.
        fieldMask:
          type: string
          description: Field mask containing the fields to update.
          format: field-mask
      description: Request message for the UpdateHuntGroupSettings RPC method.
    api.v1alpha1.org.UpdateHuntGroupSettingsResponse:
      type: object
      properties: {}
      description: Response message for the UpdateHuntGroupSettings RPC method.
    api.v1alpha1.org.UpdateHuntGroupWebLinksRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid of the web links to be updated
        webLinks:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.WebLink'
          description: The list of web links to be updated
      description: Request message for UpdateHuntGroupWebLinks
    api.v1alpha1.org.UpdateHuntGroupWebLinksResponse:
      type: object
      properties: {}
      description: Response message for UpdateHuntGroupWebLinks
    api.v1alpha1.org.UpdateLabelRequest:
      type: object
      properties:
        label:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.Label'
          description: The label to be updated.
      description: Request message for the UpdateLabel RPC.
    api.v1alpha1.org.UpdateLabelResponse:
      type: object
      properties: {}
      description: Response message for the UpdateLabel RPC.
    api.v1alpha1.org.UpdateLicensesRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID to update the assigned licenses for.
        addedLicenses:
          type: array
          items:
            type: integer
            format: enum
          description: Permissions to add to license.
        revokedLicenses:
          type: array
          items:
            type: integer
            format: enum
          description: Permissions to revoke from license.
      description: Request message for the UpdateLicenses RPC.
    api.v1alpha1.org.UpdateLicensesResponse:
      type: object
      properties: {}
      description: Response message for the UpdateLicenses RPC.
    api.v1alpha1.org.UpdateMyUserRequest:
      type: object
      properties:
        linkbackNumbers:
          type: array
          items:
            type: string
          description: The linkback numbers the updated user will have.
        callerIds:
          type: array
          items:
            type: string
          description: The caller ids the updated user will have.
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone.
        defaultApp:
          type: integer
          description: Default app the user starts on
          format: enum
        localePreferencesOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: The override for the users locale preferences
        fieldMask:
          type: array
          items:
            type: string
          description: Mask to filter fields on organization entities in response.
      description: Request message for the UpdateMyUser rpc.
    api.v1alpha1.org.UpdateMyUserResponse:
      type: object
      properties: {}
      description: Response message for the UpdateMyUser rpc.
    api.v1alpha1.org.UpdateOrganizationPreferencesRequest:
      type: object
      properties:
        organizationPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.OrganizationPreferences'
          description: Organization preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateOrganizationPreferences RPC.
    api.v1alpha1.org.UpdateOrganizationPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateOrganizationPreferences RPC.
    api.v1alpha1.org.UpdateOrganizationRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Id of organization to update.
        timeZone:
          type: integer
          description: TimeZone to set.
          format: enum
        billingId:
          type: string
          description: BillingId to set.
        name:
          type: string
          description: Name to set.
        p3OwnerId:
          type: string
          description: Update the P3 owning org
        archived:
          type: boolean
          description: Status of being archived to set
        fieldMask:
          type: array
          items:
            type: string
      description: "UpdateOrganizationRequest request to update the mutable fields\n
        on the Organization entity using the provided field mask."
    api.v1alpha1.org.UpdateOrganizationResponse:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/api.commons.org.Organization'
      description: "UpdateOrganizationResponse response for updating an organization\n
        returns the organization."
    api.v1alpha1.org.UpdateP3PermissionGroupByOrgIdRequest:
      type: object
      properties:
        p3PermissionGroupId:
          type: string
          description: The Id of the P3PermissionGroup to be updated
        orgId:
          type: string
          description: Org Id is the org this group belongs to.
        p3PermissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.P3PermissionGroup'
          description: "P3 permission group values to update.\n The mutable fields
            are: name, description, permissions."
        fieldMask:
          type: string
          description: Field mask for selecting which fields to update.
          format: field-mask
      description: Request message for the UpdateP3PermissionGroupByOrgId RPC.
    api.v1alpha1.org.UpdateP3PermissionGroupByOrgIdResponse:
      type: object
      properties:
        p3PermissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.P3PermissionGroup'
          description: The updated P3PermissionGroup
      description: Response message for the UpdateP3PermissionGroupByOrgId RPC.
    api.v1alpha1.org.UpdateP3PermissionGroupRequest:
      type: object
      properties:
        p3PermissionGroupId:
          type: string
          description: The Id of the P3PermissionGroup to be updated
        p3PermissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.P3PermissionGroup'
          description: "P3 permission group values to update.\n The mutable fields
            are: name, description, permissions."
        fieldMask:
          type: string
          description: Field mask for selecting which fields to update.
          format: field-mask
      description: Request message for the UpdateP3PermissionGroup RPC.
    api.v1alpha1.org.UpdateP3PermissionGroupResponse:
      type: object
      properties:
        p3PermissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.P3PermissionGroup'
          description: The updated P3PermissionGroup
      description: Response message for the UpdateP3PermissionGroup RPC.
    api.v1alpha1.org.UpdatePermissionGroupRequest:
      type: object
      properties:
        permissionGroupId:
          type: string
          description: Id of the permission group to be updated.
        name:
          type: string
          description: Name of permission group
        description:
          type: string
          description: Description of permission group
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: Permissions to include in new permission group
      description: Request message for the UpdatePermissionGroup RPC.
    api.v1alpha1.org.UpdatePermissionGroupResponse:
      type: object
      properties:
        permissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: Updated permission group.
      description: Response message for the UpdatePermissionGroup RPC.
    api.v1alpha1.org.UpdatePhonePreferencesRequest:
      type: object
      properties:
        phonePreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.PhonePreferences'
          description: Phone preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdatePhonePreferences RPC.
    api.v1alpha1.org.UpdatePhonePreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdatePhonePreferences RPC.
    api.v1alpha1.org.UpdateRecordingPreferencesRequest:
      type: object
      properties:
        recordingPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.RecordingPreferences'
          description: Recording preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateRecordingPreferences RPC.
    api.v1alpha1.org.UpdateRecordingPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateRecordingPreferences RPC.
    api.v1alpha1.org.UpdateResponseEvaluatorRequest:
      type: object
      properties:
        evaluator:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ResponseEvaluator'
          description: Response evaluator to update, must provide full entity.
      description: Request for the UpdateResponseEvaluator RPC.
    api.v1alpha1.org.UpdateResponseEvaluatorResponse:
      type: object
      properties:
        evaluator:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ResponseEvaluator'
          description: Updated response evaluator.
      description: Response for the UpdateResponseEvaluator RPC.
    api.v1alpha1.org.UpdateSchedulePreferencesRequest:
      type: object
      properties:
        schedulePreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.SchedulePreferences'
          description: Schedule preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateSchedulePreferences RPC.
    api.v1alpha1.org.UpdateSchedulePreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateSchedulePreferences RPC.
    api.v1alpha1.org.UpdateScorecardsPreferencesRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID.
        scorecardsPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ScorecardsPreferences'
          description: Scorecards preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for UpdateScorecardsPreferences
    api.v1alpha1.org.UpdateScorecardsPreferencesResponse:
      type: object
      properties: {}
      description: Response for UpdateScorecardsPreferences
    api.v1alpha1.org.UpdateUserCallerIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user id of the user to be updated
        userCallerId:
          type: string
          description: The caller id for the updated user
      description: Request message for the UpdateUserCallerId rpc.
    api.v1alpha1.org.UpdateUserCallerIdResponse:
      type: object
      properties: {}
      description: Response message for the UpdateUserCallerId rpc.
    api.v1alpha1.org.UpdateUserDisabledByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user id of the user to be updated
        orgId:
          type: string
          description: The organization id of the user to be updated
        loginDisabled:
          type: boolean
          description: Whether the user is able to login
      description: Request message for the UpdateUserDisabledByOrgId rpc.
    api.v1alpha1.org.UpdateUserDisabledByOrgIdResponse:
      type: object
      properties: {}
      description: Response message for the UpdateUserDisabledByOrgId rpc.
    api.v1alpha1.org.UpdateUserDisabledRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user id of the user to be updated
        loginDisabled:
          type: boolean
          description: Whether the user is able to login
      description: Request message for the UpdateUserDisabled rpc.
    api.v1alpha1.org.UpdateUserDisabledResponse:
      type: object
      properties: {}
      description: Response message for the UpdateUserDisabled rpc.
    api.v1alpha1.org.UpdateUserLabelsRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user whose labels will be updated.
        orgId:
          type: string
          description: The organization ID of the user
        labelIds:
          type: array
          items:
            type: string
          description: Labels to update user to
      description: Request message for the UpdateUserLabels rpc.
    api.v1alpha1.org.UpdateUserLabelsResponse:
      type: object
      properties: {}
      description: Response message for the UpdateUserLabels rpc.
    api.v1alpha1.org.UpdateUserRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user id of the user to be updated
        firstName:
          type: string
          description: The first name the updated user will have.
        lastName:
          type: string
          description: The last name the updated user will have.
        partnerAgentId:
          type: string
          description: The partner agent id the updated user will have.
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone.
        linkbackNumbers:
          type: array
          items:
            type: string
          description: The linkback numbers the updated user will have.
        callerIds:
          type: array
          items:
            type: string
          description: The caller ids the updated user will have.
        defaultApp:
          type: integer
          description: Default app the user starts on
          format: enum
        passwordResetRequired:
          type: boolean
          description: Whether the updated user will require a password reset.
        agentProfileGroupId:
          type: string
          description: The agent profile group id the updated user will have.
        username:
          type: string
          description: The username the updated user will have.
        email:
          type: string
          description: The email the updated user will have.
        userCallerId:
          type: string
          description: The Agent Caller Id of the user
        labelIds:
          type: array
          items:
            type: string
          description: A list of labels to assign to the user
        localePreferencesOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: The override for the users locale preferences
        fieldMask:
          type: array
          items:
            type: string
          description: Mask to filter fields on organization entities in response.
      description: Request message for the UpdateUser rpc.
    api.v1alpha1.org.UpdateUserResponse:
      type: object
      properties: {}
      description: Response message for the UpdateUser rpc.
    api.v1alpha1.org.UpdateUserSubscriptionByUserIdRequest:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
          description: "Required.\n Must have org id, user id, and subscription id."
        fieldMask:
          type: string
          description: "Required. Only fields in field mask will be updated.\n Valid
            fields include: \"filters\", \"room303\""
          format: field-mask
      description: Request for updating a user subscription.
    api.v1alpha1.org.UpdateUserSubscriptionByUserIdResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
      description: "Response for updating a user subscription.\n Contains a single
        user subscription."
    api.v1alpha1.org.UpdateUserSubscriptionRequest:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
          description: "Required.\n Must have org id, user id, and subscription id."
        fieldMask:
          type: string
          description: "Required. Only fields in field mask will be updated.\n Valid
            fields include: \"filters\", \"room303\""
          format: field-mask
      description: Request for updating a user subscription.
    api.v1alpha1.org.UpdateUserSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription'
      description: "Response for updating a user subscription.\n Contains a single
        user subscription."
    api.v1alpha1.org.UpdateVoiceAnalyticsPreferencesRequest:
      type: object
      properties:
        voiceAnalyticsPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.VoiceAnalyticsPreferences'
          description: Voice analytics preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateVoiceAnalyticsPreferences RPC.
    api.v1alpha1.org.UpdateVoiceAnalyticsPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateVoiceAnalyticsPreferences RPC.
    api.v1alpha1.org.UpdateWebhookPreferencesRequest:
      type: object
      properties:
        webhookPreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.WebhookPreferences'
          description: Webhook preferences entity.
        fieldMask:
          type: string
          description: Field mask for filtering each field.
          format: field-mask
      description: Request for the UpdateWebhookPreferences RPC.
    api.v1alpha1.org.UpdateWebhookPreferencesResponse:
      type: object
      properties: {}
      description: Response for the UpdateWebhookPreferences RPC.
    api.v1alpha1.org.UserSubscription:
      type: object
      properties:
        subscriptionId:
          type: string
          description: "Required.\n The unique id given to the setting. Used for updating
            and deleting."
        eventType:
          type: integer
          description: "Required.\n\n Used by matrix-notify.\n It receives an event
            on a event type and\n uses it to look up the targets for that event type.\n
            e.g. api.commons.audit.EventType_DUMMY_EVENT_DID_SOMETHING"
          format: enum
        userId:
          type: string
          description: Required.
        room303:
          $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription_Room303'
        delivery:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.UserSubscription_Delivery'
          description: 'TODO: add email, sms, etc.'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.FieldValueFilter'
          description: "Optional.\n If set, user only notified for events that match
            ALL filters."
        version:
          type: string
          description: Optional. Updates must specify current version or be rejected.
      description: "UserSubscription contains the info to send a notification to a
        user.\n It contains a user, the event type, a delivery method, and custom
        app settings."
    api.v1alpha1.org.UserSubscription_Delivery:
      type: object
      properties:
        transferConfigName:
          type: string
          description: "Required.\n Used to lookup how the notification is going to
            happen through Delivery."
    api.v1alpha1.org.UserSubscription_Room303:
      type: object
      properties:
        roomName:
          type: string
    api.v1alpha1.org.User_RegionSids:
      type: object
      properties:
        loginSid:
          type: string
          description: The login sid for the region.
        agentSid:
          type: string
          description: THe agent sid for the region.
        clientSid:
          type: string
          description: THe client sid for the region.
      description: The entity object used in the region_sid_map.
    api.v1alpha1.org.VerifyTOTPCodeRequest:
      type: object
      properties:
        code:
          type: string
          description: The TOTP code the user has entered.
      description: VerifyTOTPCodeRequest is the request message for the VerifyTOTPCode
        rpc.
    api.v1alpha1.org.VerifyTOTPCodeResponse:
      type: object
      properties: {}
      description: VerifyTOTPCodeResponse is the response message for the VerifyTOTPCode
        rpc.
    api.v1alpha1.org.authconnection.CreateAuthConnectionRequest:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/api.commons.org.AuthConnectionSettings'
        clientSecret:
          type: string
          description: "client secret is the secret required for the provider.\n Some
            providers don't allow for non expiring secrets. If this\n is the case
            the secret_expiration field on the settings should\n be set.\n This field
            is not part of the ConnectionSettings message\n because it should never
            be stored."
      description: Request message for the CreateAuthConnection rpc.
    api.v1alpha1.org.authconnection.CreateAuthConnectionResponse:
      type: object
      properties:
        connectionId:
          type: string
          description: The id of the newly created auth connection.
      description: Response message for the CreateAuthConnection rpc.
    api.v1alpha1.org.authconnection.DeleteAuthConnectionRequest:
      type: object
      properties:
        connectionId:
          type: string
      description: Request message for the DeleteAuthConnection rpc.
    api.v1alpha1.org.authconnection.DeleteAuthConnectionResponse:
      type: object
      properties: {}
      description: Response message for the DeleteAuthConnection rpc.
    api.v1alpha1.org.authconnection.GetAuthConnectionRequest:
      type: object
      properties:
        connectionId:
          type: string
          description: The id of the connetion to retrieve.
      description: Request message for the GetAuthConnection rpc.
    api.v1alpha1.org.authconnection.GetAuthConnectionResponse:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/api.commons.org.AuthConnectionSettings'
      description: Response message for the GetAuthConnection rpc.
    api.v1alpha1.org.authconnection.GetAuthConnectionSettingsRequest:
      type: object
      properties: {}
      description: Request message for the GetAuthConnectionSettings rpc.
    api.v1alpha1.org.authconnection.GetAuthConnectionSettingsResponse:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/api.commons.org.AuthConnectionSettings'
      description: Response message for the GetConnectionSettings rpc.
    api.v1alpha1.org.authconnection.ListAuthConnectionIdsRequest:
      type: object
      properties: {}
      description: Request message for the ListAuthConnectionIds rpc.
    api.v1alpha1.org.authconnection.ListAuthConnectionIdsResponse:
      type: object
      properties:
        connections:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.authconnection.ListAuthConnectionIdsResponse_Connection'
      description: Response message for the ListAuthConnectionIds rpc.
    api.v1alpha1.org.authconnection.ListAuthConnectionIdsResponse_Connection:
      type: object
      properties:
        authConnectionId:
          type: string
        name:
          type: string
    api.v1alpha1.org.authconnection.UpdateAuthConnectionGroupsRequest:
      type: object
      properties:
        defaultGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.GroupItem'
          description: "The default group. This group is assigned to all users\n that
            don't match any custom groups."
        customGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.GroupItem'
          description: "Custom groups. These groups are assigned to users that belong\n
            to groups in the sso provider with the same name."
        connectionId:
          type: string
          description: the connection that will be updated.
      description: Request message for the UpdateAuthConnectionGroups rpc.
    api.v1alpha1.org.authconnection.UpdateAuthConnectionGroupsResponse:
      type: object
      properties: {}
      description: Response message for the UpdateAuthConnectionGroups rpc.
    api.v1alpha1.org.authconnection.UpdateAuthConnectionSecretRequest:
      type: object
      properties:
        connectionId:
          type: string
          description: the connection that will be updated.
        clientSecret:
          type: string
          description: A secret associated with the provider.
        secretExpiration:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.authconnection.UpdateAuthConnectionSecretRequest_SecretExpiration'
          description: 'OPTIONAL: The date the secret will expire.'
      description: Request message for the UpdateAuthConnectionSecret rpc.
    api.v1alpha1.org.authconnection.UpdateAuthConnectionSecretRequest_SecretExpiration:
      type: object
      properties:
        date:
          type: string
          format: date-time
    api.v1alpha1.org.authconnection.UpdateAuthConnectionSecretResponse:
      type: object
      properties: {}
      description: Response message for the UpdateAuthConnectionSecret rpc.
    api.v1alpha1.org.businesshours.AddIntervalToBusinessHoursRequest:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the business hours to add an interval
        dayInterval:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DayInterval'
          description: The day interval to be added
      description: Request for adding an interval to a business hours object
    api.v1alpha1.org.businesshours.AddIntervalToBusinessHoursResponse:
      type: object
      properties: {}
      description: Response for adding an interval to a business hours object
    api.v1alpha1.org.businesshours.DeleteBusinessHoursRequest:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the business hours object to be deleted
      description: Request for deleting business hours.
    api.v1alpha1.org.businesshours.DeleteBusinessHoursResponse:
      type: object
      properties: {}
      description: Response for deleting business hours.
    api.v1alpha1.org.businesshours.EvaluateBusinessHoursRequest:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the business hours to evaluate
      description: Request for EvaluateBusinessHours
    api.v1alpha1.org.businesshours.EvaluateBusinessHoursResponse:
      type: object
      properties:
        withinRange:
          type: boolean
          description: "Resulting boolean if the current time is within\n a day interval
            of a business hours object"
        resultExpiration:
          type: string
          description: indicates how long this result can be used.
          format: date-time
      description: Response for EvaluateBusinessHours
    api.v1alpha1.org.businesshours.GetBusinessHoursRequest:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the business hours object
      description: Request for fetching a business hours.
    api.v1alpha1.org.businesshours.GetBusinessHoursResponse:
      type: object
      properties:
        businessHours:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.BusinessHours'
          description: The retrieved business hours
      description: Response for fetching a business hours.
    api.v1alpha1.org.businesshours.ListBusinessHoursRequest:
      type: object
      properties: {}
      description: Request for listing business hours.
    api.v1alpha1.org.businesshours.ListBusinessHoursResponse:
      type: object
      properties:
        businessHours:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.BusinessHours'
          description: The list of business hours
      description: Response for listing business hours.
    api.v1alpha1.org.businesshours.RemoveIntervalFromBusinessHoursRequest:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the business hours to remove an interval
        dayInterval:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.DayInterval'
          description: The day interval to be removed
      description: Request for removing an interval from a business hours object
    api.v1alpha1.org.businesshours.RemoveIntervalFromBusinessHoursResponse:
      type: object
      properties: {}
      description: Response for removing an interval from a business hours object
    api.v1alpha1.org.businesshours.SetBusinessHoursRequest:
      type: object
      properties:
        businessHoursName:
          type: string
          description: The name of the business hours
        description:
          type: string
          description: The description of the business hours
        dayIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.DayInterval'
          description: The list of day intervals for the business hours
        timezone:
          type: integer
          description: The timezone of the business hours
          format: enum
      description: Request for initializing a business hours object
    api.v1alpha1.org.businesshours.SetBusinessHoursResponse:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the new business hours
      description: Response for initializing a business hours object
    api.v1alpha1.org.businesshours.UpdateBusinessHoursInfoRequest:
      type: object
      properties:
        businessHoursId:
          type: string
          description: The id of the business hours object
        businessHoursName:
          type: string
          description: The updated name of the business hours
        description:
          type: string
          description: The updated description of the business hours
        timezone:
          type: integer
          description: The updated timezone of the business hours
          format: enum
        fieldMask:
          type: string
          description: Field mask for the update request
          format: field-mask
      description: Request for updating the business hours info
    api.v1alpha1.org.businesshours.UpdateBusinessHoursInfoResponse:
      type: object
      properties: {}
      description: Response for updating the business hours info
    api.v1alpha1.org.idp.CreateClientRequest:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/api.commons.org.IdpClient'
      description: CreateClientRequest is a request to make a client.
    api.v1alpha1.org.idp.CreateClientResponse:
      type: object
      properties:
        alreadyExists:
          type: boolean
        client:
          $ref: '#/components/schemas/api.commons.org.IdpClient'
      description: CreateClientResponse returns the response from creating a client.
    api.v1alpha1.org.idp.DeleteClientRequest:
      type: object
      properties:
        id:
          type: string
          description: The ID of the client.
      description: DeleteClientRequest is a request to delete a client.
    api.v1alpha1.org.idp.DeleteClientResponse:
      type: object
      properties:
        notFound:
          type: boolean
      description: DeleteClientResponse determines if the client is deleted successfully.
    api.v1alpha1.org.idp.ListClientsRequest:
      type: object
      properties: {}
      description: ListClientsRequest is a request to list all existing clients.
    api.v1alpha1.org.idp.ListClientsResponse:
      type: object
      properties:
        clients:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.IdpClient'
      description: ListClientsResponse returns the response from listing all clients.
    api.v1alpha1.org.idp.UpdateClientRequest:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/api.commons.org.IdpClient'
      description: UpdateClientRequest is a request to update an existing client.
    api.v1alpha1.org.idp.UpdateClientResponse:
      type: object
      properties:
        notFound:
          type: boolean
      description: UpdateClientResponse returns the response from updating a client.
    api.v1alpha1.org.labels.AssignLabelsRequest:
      type: object
      properties:
        labelIds:
          type: array
          items:
            type: string
          description: Ids of labels getting assigned to a permission group.
        permissionGroupId:
          type: string
          description: Id of the permission group to be assigned labels.
      description: AssignLabelsRequest is the message for the AssignLabelsRequest
        RPC.
    api.v1alpha1.org.labels.AssignLabelsResponse:
      type: object
      properties: {}
      description: Response message for the AssignLabelsResponse RPC.
    api.v1alpha1.org.labels.AttachLabelRequest:
      type: object
      properties:
        labelId:
          type: string
          description: The label id to attach to the entity
        entityId:
          type: string
          description: The ID of the entity that is being labeled
        entityType:
          type: integer
          description: The given entity type to attach the label to
          format: enum
      description: Request message for the AttachLabel rpc.
    api.v1alpha1.org.labels.AttachLabelResponse:
      type: object
      properties: {}
      description: Response message for the AttachLabel rpc.
    api.v1alpha1.org.labels.CreateLabelRequest:
      type: object
      properties:
        label:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.Label'
          description: The label object that will be created
      description: Request message for the CreateLabel rpc.
    api.v1alpha1.org.labels.CreateLabelResponse:
      type: object
      properties:
        labelId:
          type: string
          description: The ID of the created label
      description: Response message for the CreateLabel rpc.
    api.v1alpha1.org.labels.DeleteLabelRequest:
      type: object
      properties:
        labelId:
          type: string
          description: The label id to delete the label
      description: Request message for the DeleteLabel rpc.
    api.v1alpha1.org.labels.DeleteLabelResponse:
      type: object
      properties: {}
      description: Response message for the DeleteLabel rpc.
    api.v1alpha1.org.labels.DetachLabelRequest:
      type: object
      properties:
        labelId:
          type: string
          description: The label id to detach from the entity
        entityId:
          type: string
          description: The ID of the entity that will have the label detached
        entityType:
          type: integer
          description: The entity type to detach the label from
          format: enum
      description: Request message for the DetachLabel rpc.
    api.v1alpha1.org.labels.DetachLabelResponse:
      type: object
      properties: {}
      description: Response message for the DetachLabel rpc.
    api.v1alpha1.org.labels.GetLabelRequest:
      type: object
      properties:
        labelId:
          type: string
          description: The label id to get the label
      description: Request message for the GetLabel rpc.
    api.v1alpha1.org.labels.GetLabelResponse:
      type: object
      properties:
        label:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.Label'
          description: The label that was requested
      description: Response message for the GetLabel rpc.
    api.v1alpha1.org.labels.GetLabeledEntityMapRequest:
      type: object
      properties:
        entityType:
          type: integer
          description: The entity type to get back
          format: enum
      description: Request message for the GetLabeledEntityMapRequest rpc.
    api.v1alpha1.org.labels.GetLabeledEntityMapResponse:
      type: object
      properties:
        entityMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.org.labels.GetLabeledEntityMapResponse_EntityLabels'
          description: The map of entity ID to its attached labels
      description: Response message for the GetLabeledEntityMapResponse rpc.
    api.v1alpha1.org.labels.GetLabeledEntityMapResponse_EntityLabels:
      type: object
      properties:
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: Attached labels of a given entity
    api.v1alpha1.org.labels.ListLabelsRequest:
      type: object
      properties: {}
      description: Request message for the ListLabels rpc.
    api.v1alpha1.org.labels.ListLabelsResponse:
      type: object
      properties:
        label:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: The labels for the users organization
      description: Response message for the ListLabels rpc.
    api.v1alpha1.org.labels.RevokeLabelsRequest:
      type: object
      properties:
        labelIds:
          type: array
          items:
            type: string
          description: Ids of labels getting revoked from a permission group.
        permissionGroupId:
          type: string
          description: Id of the permission group to have labels revoked.
      description: Request message for the RevokeLabelsRequest RPC.
    api.v1alpha1.org.labels.RevokeLabelsResponse:
      type: object
      properties: {}
      description: Response message for the RevokeLabelsResponse RPC.
    api.v1alpha1.org.labels.UpdateLabelRequest:
      type: object
      properties:
        label:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.Label'
          description: The label object that will be updated
        fieldMask:
          type: string
          description: The field to be updated
          format: field-mask
      description: Request message for the UpdateLabel rpc.
    api.v1alpha1.org.labels.UpdateLabelResponse:
      type: object
      properties:
        label:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.Label'
          description: The updated resource
      description: Response message for the UpdateLabel rpc.
    api.v1alpha1.org.legacy.Organization:
      type: object
      properties:
        isManualOnlyAccount:
          type: boolean
        backofficeTheme:
          type: integer
          description: "Requried. Must match one of the timezones returned by\n api.v0alpha.GetTimezones."
          format: enum
        contractNumber:
          type: string
        crmId:
          type: string
        timeZoneEnum:
          type: integer
          format: enum
        name:
          type: string
          description: Required
      description: "The message that serves as a datastore entity for the\n Organization
        table."
    api.v1alpha1.org.legacy.RegisterOrganizationRequest:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/api.v1alpha1.org.legacy.Organization'
        allowedCountries:
          type: array
          items:
            type: integer
            format: enum
          description: "allowed_countries is used to initialize the organization's\n
            allowed countries preference.\n This field is optional."
        p3ParentAccount:
          type: string
          description: Required. The id of new organization's parent account.
      description: The request for api.v0alpha.RegisterOrganization.
    api.v1alpha1.org.legacy.RegisterOrganizationResponse:
      type: object
      properties:
        orgId:
          type: string
      description: The response for api.v0alpha.RegisterOrganization
    api.v1alpha1.org.observedholidays.AddToObservedHolidaysRequest:
      type: object
      properties:
        observedHolidaysId:
          type: string
          description: The ID of the ObservedHolidays to be added to
        day:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ObservedHoliday'
          description: The ObservedHoliday to add (must not conflict with existing
            ObservedHoliday)
      description: AddToObservedHolidaysRequest is the request message for AddToObservedHolidays
    api.v1alpha1.org.observedholidays.AddToObservedHolidaysResponse:
      type: object
      properties: {}
      description: AddToObservedHolidaysResponse is the response message for AddToObservedHolidays
    api.v1alpha1.org.observedholidays.DeleteObservedHolidaysRequest:
      type: object
      properties:
        observedHolidaysId:
          type: string
          description: The ID of the ObservedHolidays to delete
      description: DeleteObservedHolidaysRequest is the request message for DeleteObservedHolidays
    api.v1alpha1.org.observedholidays.DeleteObservedHolidaysResponse:
      type: object
      properties:
        observedHolidaysId:
          type: string
          description: The ID of the deleted ObservedHolidays
      description: DeleteObservedHolidaysResponse is the response message for DeleteObservedHolidays
    api.v1alpha1.org.observedholidays.EvaluateObservedHolidaysRequest:
      type: object
      properties:
        observedHolidaysId:
          type: string
          description: The ID of the ObservedHolidays to evaluate
      description: EvaluateObservedHolidaysRequest is the request message for EvaluateObservedHolidays
    api.v1alpha1.org.observedholidays.EvaluateObservedHolidaysResponse:
      type: object
      properties:
        dateMatched:
          type: boolean
          description: The boolean to determine if the date is matched within the
            ObservedHolidays
        resultExpiration:
          type: string
          description: indicates how long this result can be used.
          format: date-time
      description: EvaluateObservedHolidaysResponse is the response message for EvaluateObservedHolidays
    api.v1alpha1.org.observedholidays.GetObservedHolidaysRequest:
      type: object
      properties:
        observedHolidaysId:
          type: string
          description: The ID of the desired ObservedHolidays
      description: GetObservedHolidaysRequest is the request message for GetObservedHolidays
    api.v1alpha1.org.observedholidays.GetObservedHolidaysResponse:
      type: object
      properties:
        observedHolidays:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ObservedHolidays'
          description: The retrieved ObservedHolidays
      description: GetObservedHolidaysResponse is the response message for GetObservedHolidays
    api.v1alpha1.org.observedholidays.ListObservedHolidaysRequest:
      type: object
      properties: {}
      description: ListObservedHolidaysRequest is the request message for ListObservedHolidays
    api.v1alpha1.org.observedholidays.ListObservedHolidaysResponse:
      type: object
      properties:
        observedHolidays:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.ObservedHolidays'
          description: A list of ObservedHolidays
      description: ListObservedHolidaysResponse is the response message for ListObservedHolidays
    api.v1alpha1.org.observedholidays.RemoveFromObservedHolidaysRequest:
      type: object
      properties:
        observedHolidaysId:
          type: string
          description: The ID of the ObservedHolidays to remove from
        day:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.ObservedHoliday'
          description: The specified ObservedHoliday to remove (must already exist
            within the ObservedHoliday)
      description: RemoveFromObservedHolidaysRequest is request message for RemoveFromObservedHolidays
    api.v1alpha1.org.observedholidays.RemoveFromObservedHolidaysResponse:
      type: object
      properties: {}
      description: RemoveFromObservedHolidaysResponse is the response message for
        RemoveFromObservedHolidays
    api.v1alpha1.org.observedholidays.SetObservedHolidaysRequest:
      type: object
      properties:
        observedHolidaysName:
          type: string
          description: The name of the ObservedHolidays
        description:
          type: string
          description: The description of the ObservedHolidays
        timezone:
          type: integer
          description: The timezone of the ObservedHolidays
          format: enum
        days:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.ObservedHoliday'
          description: The ObservedHoliday
      description: SetObservedHolidaysRequest is the request message for SetObservedHolidays
    api.v1alpha1.org.observedholidays.SetObservedHolidaysResponse:
      type: object
      properties:
        observedHolidaysId:
          type: string
          description: The ID of the created ObservedHolidays
      description: SetObservedHolidaysResponse is the response message for SetObservedHolidays
    api.v1alpha1.org.observedholidays.UpdateObservedHolidaysInfoRequest:
      type: object
      properties:
        observedHolidaysId:
          type: string
          description: The ID of the ObservedHolidays to update
        observedHolidaysName:
          type: string
          description: The updated name of the ObservedHolidays
        description:
          type: string
          description: The updated description of the ObservedHolidays
        timezone:
          type: integer
          description: The updated timezone
          format: enum
        fieldMask:
          type: string
          description: The FieldMask to determine which field to update
          format: field-mask
      description: UpdateObservedHolidaysInfoRequest is the request message for UpdateObservedHolidaysInfo
    api.v1alpha1.org.observedholidays.UpdateObservedHolidaysInfoResponse:
      type: object
      properties: {}
      description: UpdateObservedHolidaysInfoResponse is the response message for
        UpdateObservedHolidaysInfo
    api.v1alpha1.org.skills.AssignOwnSkillGroupsRequest:
      type: object
      properties:
        skillGroupIds:
          type: array
          items:
            type: string
          description: The ids of the skill groups to be assigned.
      description: Request message for the AssignOwnSkillGroups rpc.
    api.v1alpha1.org.skills.AssignOwnSkillGroupsResponse:
      type: object
      properties: {}
      description: Response message for the AssignOwnSkillGroups rpc.
    api.v1alpha1.org.skills.AssignSkillGroupsRequest:
      type: object
      properties:
        skillGroupIds:
          type: array
          items:
            type: string
          description: The ids of the skill groups to be assigned.
        userId:
          type: string
          description: The user id of the user.
      description: Request message for the AssignSkillGroups rpc.
    api.v1alpha1.org.skills.AssignSkillGroupsResponse:
      type: object
      properties: {}
      description: Response message for the AssignSkillGroups rpc.
    api.v1alpha1.org.skills.CreateSkillGroupRequest:
      type: object
      properties:
        skillGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.SkillGroup'
          description: The skill group object to create. It is expected to have the
            org id on it
      description: Request message for the CreateSkillGroup rpc.
    api.v1alpha1.org.skills.CreateSkillGroupResponse:
      type: object
      properties:
        skillGroupId:
          type: string
          description: The ID of the created skill group.
      description: Response message for the CreateSkillGroup rpc.
    api.v1alpha1.org.skills.DeleteSkillGroupRequest:
      type: object
      properties:
        skillGroupId:
          type: string
          description: The skill group id of the skill group to delete.
      description: Request message for the DeleteSkillGroup rpc.
    api.v1alpha1.org.skills.DeleteSkillGroupResponse:
      type: object
      properties: {}
      description: Response message for the DeleteSkillGroup rpc.
    api.v1alpha1.org.skills.GetAgentSkillsRequest:
      type: object
      properties: {}
      description: Response message for the GetAgentSkills RPC.
    api.v1alpha1.org.skills.GetAgentSkillsResponse:
      type: object
      properties:
        skills:
          type: object
          additionalProperties:
            type: string
          description: skills found for the given parameters, will be value pairs
            (name, level).
      description: Response message for the GetAgentSkills RPC.
    api.v1alpha1.org.skills.GetSkillGroupMembersRequest:
      type: object
      properties:
        skillGroupId:
          type: string
          description: The skill group id of the skill group.
      description: Request message for the GetSkillGroupMembers rpc.
    api.v1alpha1.org.skills.GetSkillGroupMembersResponse:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: The users ids which belong to the skill group.
      description: Response message for the GetSkillGroupMembers rpc.
    api.v1alpha1.org.skills.GetSkillGroupRequest:
      type: object
      properties:
        skillGroupId:
          type: string
          description: The skill group id of the skill group
        fieldMask:
          type: array
          items:
            type: string
          description: Mask to filter fields on skill group entity in response.
      description: Request message for the GetSkillGroup rpc.
    api.v1alpha1.org.skills.GetSkillGroupResponse:
      type: object
      properties:
        skillGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.SkillGroup'
          description: The requested skill group.
      description: Response message for the GetSkillGroup rpc.
    api.v1alpha1.org.skills.GetUserSkillGroupsRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user id of the user.
      description: Request message for the GetUserSkillGroups rpc.
    api.v1alpha1.org.skills.GetUserSkillGroupsResponse:
      type: object
      properties:
        skillGroupIds:
          type: array
          items:
            type: string
          description: The skill group ids assigned to the user.
      description: Response message for the GetUserSkillGroups rpc.
    api.v1alpha1.org.skills.GetUserSkillsRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user id of the user.
      description: Request message for the GetUserSkills rpc.
    api.v1alpha1.org.skills.GetUserSkillsResponse:
      type: object
      properties:
        skillSets:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.SkillSet'
          description: The skill sets a user has.
      description: Response message for the GetUserSkills rpc.
    api.v1alpha1.org.skills.ListAssignedSkillGroupsRequest:
      type: object
      properties: {}
      description: Request message for the ListAssignedSkillGroups RPC.
    api.v1alpha1.org.skills.ListAssignedSkillGroupsResponse:
      type: object
      properties:
        skillGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.SkillGroup'
          description: The returned list of skill groups for current user
      description: Response message for the ListAssignedSkillGroups RPC.
    api.v1alpha1.org.skills.ListSkillGroupsMembersRequest:
      type: object
      properties: {}
      description: Request message for the ListSkillGroupsMembers rpc.
    api.v1alpha1.org.skills.ListSkillGroupsMembersResponse:
      type: object
      properties:
        skillGroupMembers:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.skills.SkillGroupMembers'
      description: Response message for the ListSkillGroupsMembers rpc.
    api.v1alpha1.org.skills.ListSkillGroupsRequest:
      type: object
      properties:
        fieldMask:
          type: array
          items:
            type: string
          description: Mask to filter fields on skill group entities in response.
      description: Request message for the ListSkillGroups rpc.
    api.v1alpha1.org.skills.ListSkillGroupsResponse:
      type: object
      properties:
        skillGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.SkillGroup'
          description: The skill groups in the organization.
      description: Response message for the ListSkillGroups rpc.
    api.v1alpha1.org.skills.ListSkillsForCurrentAgentRequest:
      type: object
      properties: {}
      description: Request message for the ListSkillsForCurrentAgent RPC.
    api.v1alpha1.org.skills.ListSkillsForCurrentAgentResponse:
      type: object
      properties:
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.skills.ListSkillsForCurrentAgentResponse_AgentSkill'
          description: The returned list of skills belonging to the current agent.
      description: Response message for the ListSkillsForCurrentAgent RPC.
    api.v1alpha1.org.skills.ListSkillsForCurrentAgentResponse_AgentSkill:
      type: object
      properties:
        agentSkillSid:
          type: string
        name:
          type: string
        description:
          type: string
    api.v1alpha1.org.skills.RemoveSkillFromAllGroupsRequest:
      type: object
      properties:
        skillSid:
          type: string
          description: The skill sid of the skill to remove.
      description: Request message for the RemoveSkillFromAllGroups rpc.
    api.v1alpha1.org.skills.RemoveSkillFromAllGroupsResponse:
      type: object
      properties: {}
      description: Response message for the RemoveSkillFromAllGroups rpc.
    api.v1alpha1.org.skills.RevokeOwnSkillGroupsRequest:
      type: object
      properties:
        skillGroupIds:
          type: array
          items:
            type: string
          description: The ids of the skill groups to be revoked.
      description: Request message for the RevokeOwnSkillGroups rpc.
    api.v1alpha1.org.skills.RevokeOwnSkillGroupsResponse:
      type: object
      properties: {}
      description: Response message for the RevokeOwnSkillGroups rpc.
    api.v1alpha1.org.skills.RevokeSkillGroupsRequest:
      type: object
      properties:
        skillGroupIds:
          type: array
          items:
            type: string
          description: The ids of the skill groups to be revoked.
        userId:
          type: string
          description: The user id of the user.
      description: Request message for the RevokeSkillGroups rpc.
    api.v1alpha1.org.skills.RevokeSkillGroupsResponse:
      type: object
      properties: {}
      description: Response message for the RevokeSkillGroups rpc.
    api.v1alpha1.org.skills.SkillGroupMembers:
      type: object
      properties:
        skillGroupId:
          type: string
        userIds:
          type: array
          items:
            type: string
      description: Submessage for ListSkillGroupsMembersResponse.
    api.v1alpha1.org.skills.UpdateSkillGroupRequest:
      type: object
      properties:
        skillGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.SkillGroup'
          description: The desired updated skill group object. It is expected to have
            the skill group id and org id on it
        fieldMask:
          type: array
          items:
            type: string
          description: Mask to filter fields on skill group to update.
      description: Request message for the UpdateSkillGroup rpc.
    api.v1alpha1.org.skills.UpdateSkillGroupResponse:
      type: object
      properties: {}
      description: Response message for the UpdateSkillGroup rpc.
    api.v1alpha1.org.skills.UpdateUsersOnSkillGroupRequest:
      type: object
      properties:
        skillGroupId:
          type: string
          description: ID of the skill group the users are being assigned to.
        userIds:
          type: array
          items:
            type: string
          description: IDs of the users being assigned to the skill group.
      description: Request message for the UpdateUsersOnSkillGroup rpc.
    api.v1alpha1.org.skills.UpdateUsersOnSkillGroupResponse:
      type: object
      properties: {}
      description: Response message for the UpdateUsersOnSkillGroup rpc.
    api.v1alpha1.org.users.AddGroupedUserIPRestrictionsRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: List of users that can only use the provided IPs.
        ips:
          type: array
          items:
            type: string
          description: List of IPs to whitelist for the associated group of users.
      description: Request message for the AddGroupedUserIPRestrictions rpc.
    api.v1alpha1.org.users.AddGroupedUserIPRestrictionsResponse:
      type: object
      properties: {}
      description: Response message for the AddGroupedUserIPRestrictions rpc.
    api.v1alpha1.org.users.AddUserSubscriptionByUserIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: "Required.\n User assigned to subscription"
        subscription:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
          description: All fields (except subscription id) must be set.
      description: Request to add a user subscription by a specified user with editing
        users org.
    api.v1alpha1.org.users.AddUserSubscriptionByUserIdResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
      description: "Response to adding a user subscription.\n Contains a single user
        subscription."
    api.v1alpha1.org.users.AddUserSubscriptionRequest:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
          description: "Required.\n All fields (except subscription id) must be set."
      description: Request to add a user subscription.
    api.v1alpha1.org.users.AddUserSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
      description: "Response to adding a user subscription.\n Contains a single user
        subscription."
    api.v1alpha1.org.users.AgentDetails_AgentProfileGroup:
      type: object
      properties:
        agentProfileGroupId:
          type: string
          description: The id of the user's agent profile group
        agentProfileGroupName:
          type: string
          description: The name of the user's agent profile group
      description: Object to contain the agent profile group fields
    api.v1alpha1.org.users.AgentDetails_HuntGroup:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group the agent is assigned to
        huntGroupName:
          type: string
          description: The name of the hunt group the agent is assigned to
      description: Object to contain the hunt group fields
    api.v1alpha1.org.users.AssignAgentProfileGroupsRequest:
      type: object
      properties:
        agentProfileGroupId:
          type: string
          description: Agent profile group ID to assign to provided users.
        userIds:
          type: array
          items:
            type: string
          description: List of user IDs to assign to the agent profile group
      description: Request message for the AssignAgentProfileGroups rpc.
    api.v1alpha1.org.users.AssignAgentProfileGroupsResponse:
      type: object
      properties: {}
      description: Response message for the AssignAgentProfileGroups rpc.
    api.v1alpha1.org.users.CreateAgentProfileGroupRequest:
      type: object
      properties:
        agentProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AgentProfileGroup'
          description: Agent profile group to create.
      description: Request message for the CreateAgentProfileGroup rpc.
    api.v1alpha1.org.users.CreateAgentProfileGroupResponse:
      type: object
      properties:
        agentProfileGroupId:
          type: string
          description: Created agent profile group.
      description: Response message for the CreateAgentProfileGroup rpc.
    api.v1alpha1.org.users.CreateAuthTokenByUserIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: User id creating new token for.
      description: Request message for the CreateAuthTokenByUserId rpc.
    api.v1alpha1.org.users.CreateAuthTokenByUserIdResponse:
      type: object
      properties:
        authToken:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AuthToken'
          description: Newly generated auth token.
      description: Response message for the CreateAuthTokenByUserId rpc.
    api.v1alpha1.org.users.CreateAuthTokenRequest:
      type: object
      properties: {}
      description: Request message for the CreateAuthToken rpc.
    api.v1alpha1.org.users.CreateAuthTokenResponse:
      type: object
      properties:
        authToken:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AuthToken'
          description: Newly generated auth token.
      description: Response message for the CreateAuthToken rpc.
    api.v1alpha1.org.users.CreateDelegatedUserRequest:
      type: object
      properties:
        authUserId:
          type: string
          description: the user id provided by the auth (idp) connection.
        orgId:
          type: string
          description: "org_id for which the user will be created for.\n generally
            when org_id is passed, it requires\n customer support permission, but
            this is an\n un-authenticated request so it is an exception\n which is
            handled by envoy."
        email:
          type: string
          description: the user's email provided by the auth connection.
        username:
          type: string
          description: the username provided by the auth connection.
        firstName:
          type: string
          description: the user's first name.
        lastName:
          type: string
          description: the user's last name.
        groups:
          type: array
          items:
            type: string
          description: the user's groups provided by the auth connection.
        connectionId:
          type: string
          description: the id of the auth connection the user is coming from.
      description: Request message for the CreateDelegatedUser rpc.
    api.v1alpha1.org.users.CreateDelegatedUserResponse:
      type: object
      properties:
        userId:
          type: string
          description: The id of the created user.
      description: Response message for the CreateDelegatedUser rpc.
    api.v1alpha1.org.users.CreatePasswordResetLinkByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user.
        orgId:
          type: string
          description: The organization ID of the user
      description: Request message for the CreatePasswordResetLinkByOrgId rpc.
    api.v1alpha1.org.users.CreatePasswordResetLinkByOrgIdResponse:
      type: object
      properties:
        url:
          type: string
      description: Response message for the CreatePasswordResetLinkByOrgId rpc.
    api.v1alpha1.org.users.CreatePasswordResetLinkRequest:
      type: object
      properties:
        userId:
          type: string
      description: Request message for the CreatePasswordResetLink rpc.
    api.v1alpha1.org.users.CreatePasswordResetLinkResponse:
      type: object
      properties:
        url:
          type: string
      description: Response message for the CreatePasswordResetLink rpc.
    api.v1alpha1.org.users.CreateUserRequest:
      type: object
      properties:
        orgId:
          type: string
          description: "if org_id is set the user will be created for\n the given
            org_id. This requires the CUSTOMER_SUPPORT permission.\n if this field
            is not set it will get the org_id\n from the token. This only requires
            the USER_CREATE permission."
        firstName:
          type: string
          description: The first name for the new user.
        lastName:
          type: string
          description: The last name for the new user.
        email:
          type: string
          description: The email for the new user.
        userName:
          type: string
          description: The user name of the new user.
        password:
          type: string
          description: The password of the new user.
        permissionGroupIds:
          type: array
          items:
            type: string
          description: The ids of the permission groups that the new user will have.
        partnerAgentId:
          type: string
          description: The partner agent id of the new user.
        p3PermissionGroupId:
          type: string
          description: The id of the p3 permission group that the new user will have.
        linkbackNumbers:
          type: array
          items:
            type: string
          description: The linkback numbers the new user will have.
        callerIds:
          type: array
          items:
            type: string
          description: The caller ids the new user will have.
        defaultApp:
          type: integer
          description: Default app the user starts on
          format: enum
        userCallerId:
          type: string
          description: The caller id for the user.
        agentProfileGroupId:
          type: string
          description: The id of the agent profile group the user will belong to.
        labelIds:
          type: array
          items:
            type: string
          description: A list of labels to assign to the user
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        huntGroupSid:
          type: string
          description: The hunt group that the created user will belong to.
      description: Request message for the CreateUser rpc.
    api.v1alpha1.org.users.CreateUserResponse:
      type: object
      properties:
        userId:
          type: string
          description: The id of the created user.
      description: Response message for the CreateUser rpc.
    api.v1alpha1.org.users.DeleteAgentProfileGroupRequest:
      type: object
      properties:
        agentProfileGroupId:
          type: string
          description: Agent profile group ID to delete.
      description: Request message for the DeleteAgentProfileGroup rpc.
    api.v1alpha1.org.users.DeleteAgentProfileGroupResponse:
      type: object
      properties: {}
      description: Response message for the DeleteAgentProfileGroup rpc.
    api.v1alpha1.org.users.DeleteAuthTokenByUserIdRequest:
      type: object
      properties:
        token:
          type: string
          description: Token to delete.
        userId:
          type: string
          description: User token belongs to.
      description: Request message for the DeleteAuthTokenByUserIdRequest rpc.
    api.v1alpha1.org.users.DeleteAuthTokenByUserIdResponse:
      type: object
      properties: {}
      description: Response message for the DeleteAuthTokenByUserIdResponse rpc.
    api.v1alpha1.org.users.DeleteAuthTokenRequest:
      type: object
      properties:
        token:
          type: string
          description: Token to delete for current user.
      description: Request message for the DeleteAuthTokenRequest rpc.
    api.v1alpha1.org.users.DeleteAuthTokenResponse:
      type: object
      properties: {}
      description: Response message for the DeleteAuthTokenResponse rpc.
    api.v1alpha1.org.users.EnableMyUserMfaRequest:
      type: object
      properties: {}
      description: Request message for the EnableMyUserMfa rpc.
    api.v1alpha1.org.users.EnableMyUserMfaResponse:
      type: object
      properties: {}
      description: Response message for the EnableUserMfa rpc.
    api.v1alpha1.org.users.EnableUserMfaRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user to enable mfa for.
        enabled:
          type: boolean
          description: Whether or not mfa is enabled for the user.
      description: Request message for the EnableUserMfa rpc.
    api.v1alpha1.org.users.EnableUserMfaResponse:
      type: object
      properties: {}
      description: Response message for the EnableUserMfa rpc.
    api.v1alpha1.org.users.GetAgentProfileGroupRequest:
      type: object
      properties:
        agentProfileGroupId:
          type: string
          description: ID of the agent profile group.
      description: Request message for the GetAgentProfileGroup rpc.
    api.v1alpha1.org.users.GetAgentProfileGroupResponse:
      type: object
      properties:
        agentProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AgentProfileGroup'
          description: Agent response group corresponding to the ID.
      description: Response message for the GetAgentProfileGroup rpc.
    api.v1alpha1.org.users.GetMyUserMfaInfoRequest:
      type: object
      properties: {}
      description: Request message for the GetMyUserMfaInfo rpc.
    api.v1alpha1.org.users.GetMyUserMfaInfoResponse:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/api.commons.org.MfaInfo'
      description: Response message for the GetMyUserMfaInfo rpc.
    api.v1alpha1.org.users.GetMyUserPasswordResetLinkRequest:
      type: object
      properties:
        ttl:
          type: string
          description: The time to live (in seconds) of the generated link, defaults
            to 180 if unset.
      description: Request message for the GetMyUserPasswordResetLink rpc.
    api.v1alpha1.org.users.GetMyUserPasswordResetLinkResponse:
      type: object
      properties:
        url:
          type: string
          description: The generated password reset link URL.
      description: Response message for the GetMyUserPasswordResetLink rpc.
    api.v1alpha1.org.users.GetMyUserRequest:
      type: object
      properties: {}
      description: Request message for GetMyUser.
    api.v1alpha1.org.users.GetMyUserResponse:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        orgId:
          type: string
          description: The ID of the user's organization
        username:
          type: string
          description: The agents's username
        delegated:
          type: boolean
          description: Whether the user is delegated (sso related)
        orgName:
          type: string
          description: The name of the user's organization
        huntGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.GetMyUserResponse_HuntGroup'
          description: An object with the hunt group fields required for the call
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Skill'
          description: A list of the skills associated with the user
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: A list of the permission groups the user belongs to
        p3PermissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.P3PermissionGroup'
          description: The user's p3 permission group
        agentProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.GetMyUserResponse_AgentProfileGroup'
          description: An object with the agent profile group fields required for
            the call
        trusts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Trust'
          description: A list of the trusts assigned to the user.
        accountOwner:
          type: boolean
          description: Whether the user is an account owner
        emailVerified:
          type: boolean
          description: if the user email is verified
      description: Response message for GetMyUser.
    api.v1alpha1.org.users.GetMyUserResponse_AgentProfileGroup:
      type: object
      properties:
        agentProfileGroupId:
          type: string
          description: The id of the user's agent profile group
        agentProfileGroupName:
          type: string
          description: The name of the user's agent profile group
      description: Object to contain the agent profile group fields
    api.v1alpha1.org.users.GetMyUserResponse_HuntGroup:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group the agent is assigned to
        huntGroupName:
          type: string
          description: The name of the hunt group the agent is assigned to
      description: Object to contain the hunt group fields
    api.v1alpha1.org.users.GetUserByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: Get by UserId.
        orgId:
          type: string
          description: OrgId of the user being requested.
      description: Request message for GetUserByOrgId.
    api.v1alpha1.org.users.GetUserByOrgIdResponse:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        orgId:
          type: string
          description: The ID of the user's organization
        username:
          type: string
          description: The agents's username
        delegated:
          type: boolean
          description: Whether the user is delegated (sso related)
        orgName:
          type: string
          description: The name of the user's organization
        huntGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserByOrgIdResponse_HuntGroup'
          description: An object with the hunt group fields required for the call
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Skill'
          description: A list of the skills associated with the user
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: A list of the permission groups the user belongs to
        p3PermissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.P3PermissionGroup'
          description: The user's p3 permission group
        agentProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserByOrgIdResponse_AgentProfileGroup'
          description: An object with the agent profile group fields required for
            the call
        trusts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Trust'
          description: A list of trusts the user has been assigned.
        accountOwner:
          type: boolean
          description: Whether the user is an account owner
        emailVerified:
          type: boolean
          description: if the user's email is verified
      description: Response message for GetUserByOrgId.
    api.v1alpha1.org.users.GetUserByOrgIdResponse_AgentProfileGroup:
      type: object
      properties:
        agentProfileGroupId:
          type: string
          description: The id of the user's agent profile group
        agentProfileGroupName:
          type: string
          description: The name of the user's agent profile group
      description: Object to contain the agent profile group fields
    api.v1alpha1.org.users.GetUserByOrgIdResponse_HuntGroup:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group the agent is assigned to
        huntGroupName:
          type: string
          description: The name of the hunt group the agent is assigned to
      description: Object to contain the hunt group fields
    api.v1alpha1.org.users.GetUserEmailVerifiedByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user to be checked.
        orgId:
          type: string
          description: The organization ID of the user.
      description: Request message for the GetUserEmailVerifiedByOrgId rpc.
    api.v1alpha1.org.users.GetUserEmailVerifiedByOrgIdResponse:
      type: object
      properties:
        emailVerified:
          type: boolean
          description: Whether the user's email is verified
      description: Response message for the GetUserEmailVerifiedByOrgId rpc.
    api.v1alpha1.org.users.GetUserEmailVerifiedRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user to be checked.
      description: Request message for the GetUserEmailVerified rpc.
    api.v1alpha1.org.users.GetUserEmailVerifiedResponse:
      type: object
      properties:
        emailVerified:
          type: boolean
          description: Whether the user's email is verified
      description: Response message for the GetUserEmailVerified rpc.
    api.v1alpha1.org.users.GetUserLoginInfoRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user.
        orgId:
          type: string
          description: The organization ID of the user
      description: "This rpc used to be called GetUserBlocked\n Request message for
        the GetUserLoginInfo rpc."
    api.v1alpha1.org.users.GetUserLoginInfoResponse:
      type: object
      properties:
        blocked:
          type: boolean
          description: Whether the user is manually blocked in auth0
        lastIp:
          type: string
          description: The last IP the user used to login
        lastLogin:
          type: string
          description: The time of the user's latest login
          format: date-time
        lastPasswordReset:
          type: string
          description: The time of the user's latest password reset
          format: date-time
        loginsCount:
          type: string
          description: The number of times the user has logged in
        createdAt:
          type: string
          description: The time the user was created in auth0
          format: date-time
        updatedAt:
          type: string
          description: The last time the user was updated in auth0
          format: date-time
        hasBlockedIps:
          type: boolean
          description: Whether the user has specific IPs which are blocked
      description: Response message for the GetUserLoginInfo rpc.
    api.v1alpha1.org.users.GetUserMfaInfoRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user to get the mfa info of.
      description: Request message for the GetUserMfaInfo rpc.
    api.v1alpha1.org.users.GetUserMfaInfoResponse:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/api.commons.org.MfaInfo'
      description: Response message for the GetUserMfaInfo rpc.
    api.v1alpha1.org.users.GetUserPasswordResetLinkByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user whose password will be updated.
        orgId:
          type: string
          description: The organization ID of the user
        ttl:
          type: string
          description: The time to live (in seconds) of the generated link, defaults
            to 180 if unset.
      description: Request message for the GetUserPasswordResetLinkByOrgId rpc.
    api.v1alpha1.org.users.GetUserPasswordResetLinkByOrgIdResponse:
      type: object
      properties:
        url:
          type: string
          description: The generated password reset link URL.
      description: Response message for the GetUserPasswordResetLinkByOrgId rpc.
    api.v1alpha1.org.users.GetUserPasswordResetLinkRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user whose password will be updated.
        ttl:
          type: string
          description: The time to live (in seconds) of the generated link, defaults
            to 180 if unset.
      description: Request message for the GetUserPasswordResetLink rpc.
    api.v1alpha1.org.users.GetUserPasswordResetLinkResponse:
      type: object
      properties:
        url:
          type: string
          description: The generated password reset link URL.
      description: Response message for the GetUserPasswordResetLink rpc.
    api.v1alpha1.org.users.GetUserRequest:
      type: object
      properties:
        userId:
          type: string
          description: Get by UserId.
      description: Request message for GetUser.
    api.v1alpha1.org.users.GetUserResponse:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        orgId:
          type: string
          description: The ID of the user's organization
        delegated:
          type: boolean
          description: Whether the user is delegated (sso related)
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone.
        huntGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserResponse_HuntGroup'
          description: An object with the hunt group fields required for the call
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Skill'
          description: A list of the skills associated with the user
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: A list of the permission groups the user belongs to
        p3PermissionGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.P3PermissionGroup'
          description: The user's p3 permission group
        agentProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserResponse_AgentProfileGroup'
          description: An object with the agent profile group fields required for
            the call
        orgName:
          type: string
          description: name of users organization
        firstName:
          type: string
          description: users first name
        username:
          type: string
          description: The agents's username
        lastName:
          type: string
          description: users last name
        loginDisabled:
          type: boolean
          description: if the user is disabled from logging in
        partnerAgentId:
          type: string
          description: users partner agent sid
        userCallerId:
          type: string
          description: users caller id
        linkbackNumbers:
          type: array
          items:
            type: string
          description: a users array of linkback numbers
        callerIds:
          type: array
          items:
            type: string
          description: a users array of caller ids
        defaultApp:
          type: integer
          description: default application that is selected when signed in
          format: enum
        loginSid:
          type: string
          description: Login Sid of the user
        agentSid:
          type: string
          description: Agent Sid
        trusts:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Trust'
          description: A list of trusts the user has been assigned.
        email:
          type: string
          description: user's email
        defaultRegion:
          type: string
          description: user's default region
        createdAt:
          type: string
          description: user's created date
          format: date-time
        lastUpdated:
          type: string
          description: user's last updated date
          format: date-time
        passwordResetRequired:
          type: boolean
          description: user's password reset required
        accountOwner:
          type: boolean
          description: Whether the user is an account owner
        emailVerified:
          type: boolean
          description: if the user's email is verified
      description: Response message for GetUser.
    api.v1alpha1.org.users.GetUserResponse_AgentProfileGroup:
      type: object
      properties:
        agentProfileGroupId:
          type: string
          description: The id of the user's agent profile group
        agentProfileGroupName:
          type: string
          description: The name of the user's agent profile group
      description: Object to contain the agent profile group fields
    api.v1alpha1.org.users.GetUserResponse_HuntGroup:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group the agent is assigned to
        huntGroupName:
          type: string
          description: The name of the hunt group the agent is assigned to
      description: Object to contain the hunt group fields
    api.v1alpha1.org.users.GetUserSessionDataRequest:
      type: object
      properties: {}
      description: Request message for the GetUserSessionData rpc.
    api.v1alpha1.org.users.GetUserSessionDataResponse:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.GetUserSessionDataResponse_User'
          description: The user the data is about
        orgName:
          type: string
          description: The user's organizations's name
        p3Permissions:
          type: array
          items:
            type: integer
            format: enum
          description: List of legacy P3 permissions.
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: A list of the permission groups the user belongs to
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        orgAllowedMfa:
          type: boolean
          description: A boolean for if the organization allows multi factor authentication
        localePreferences:
          allOf:
          - $ref: '#/components/schemas/api.commons.LocalePreferences'
          description: The default locale preferences of the organization
      description: Response message for the GetUserSessionData rpc.
    api.v1alpha1.org.users.GetUserSessionDataResponse_User:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user
        orgId:
          type: string
          description: The ID of the org the user belongs to.
        username:
          type: string
          description: The Username of the user.
        p3PermissionGroupId:
          type: string
          description: The ID of the p3 permission group the user has.
        partnerAgentId:
          type: string
          description: The User's partner agent id.
        regionSidMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.org.users.User_RegionSids'
          description: The user's regional sids. The key of the map is a region id.
        defaultRegion:
          type: string
          description: region_id of a the user's default region
        apiKey:
          type: string
          description: payload
        email:
          type: string
          description: The User's email.
        loginDisabled:
          type: boolean
          description: Whether or not the user is disabled.
        callerIds:
          type: array
          items:
            type: string
          description: login preferences
        linkbackNumbers:
          type: array
          items:
            type: string
        authUserId:
          type: string
        firstName:
          type: string
          description: The user's first name.
        lastName:
          type: string
          description: The user's last name.
        created:
          type: string
          description: The date/time the user was created.
          format: date-time
        lastUpdated:
          type: string
          description: The date/time the user was last updated.
          format: date-time
        passwordResetRequired:
          type: boolean
          description: Whether or not the user must reset their password on next login.
        connectionId:
          type: string
          description: "connection id is the id of the auth connection that the\n
            user is coming from if it is a delgated user. If the user\n is not delgated
            this will be nil."
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        permissionGroupIds:
          type: array
          items:
            type: string
          description: "UserSettings\n List of permission groups ids the user is a
            member of"
        trustIds:
          type: array
          items:
            type: string
          description: List of trust ids the user has been assigned.
        defaultApplication:
          type: integer
          description: default_app for a user
          format: enum
        userCallerId:
          type: string
          description: User caller id
        agentProfileGroupId:
          type: string
          description: users assigned agent profile group
        agent:
          type: boolean
          description: a bool signalling whether or not the user is also an agent
        accountOwner:
          type: boolean
          description: a bool to determine whether or not user is account owner
        mfaTimestamp:
          type: string
          description: Timestamp beyond which the user is required to have multi factor
            authentication set up
          format: date-time
        passwordResetDate:
          type: string
          description: Timestamp of of when a user must reset their password before
          format: date-time
    api.v1alpha1.org.users.GetUserSubscriptionByUserIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: "Required.\n User assigned to subscription"
        subscriptionId:
          type: string
          description: Required.
      description: Request for getting a user subscription.
    api.v1alpha1.org.users.GetUserSubscriptionByUserIdResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
      description: "Response for getting a user subscription.\n Contains a single
        user subscription."
    api.v1alpha1.org.users.GetUserSubscriptionRequest:
      type: object
      properties:
        subscriptionId:
          type: string
          description: Required.
      description: Request for getting a user subscription.
    api.v1alpha1.org.users.GetUserSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
      description: "Response for getting a user subscription.\n Contains a single
        user subscription."
    api.v1alpha1.org.users.ListAgentProfileGroupsRequest:
      type: object
      properties: {}
      description: Request message for the ListAgentProfileGroups rpc.
    api.v1alpha1.org.users.ListAgentProfileGroupsResponse:
      type: object
      properties:
        agentProfileGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AgentProfileGroup'
          description: List of agent profile groups belonging to the org ID.
      description: Response message for the ListAgentProfileGroups rpc.
    api.v1alpha1.org.users.ListAgentsRequest:
      type: object
      properties: {}
      description: Request message for listAgents rpc.
    api.v1alpha1.org.users.ListAgentsResponse:
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.users.ListAgentsResponse_AgentDetails'
          description: List of returned agents with masked data.
      description: Response message for listAgents rpc.
    api.v1alpha1.org.users.ListAgentsResponse_AgentDetails:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the agent
        orgId:
          type: string
          description: The ID of the agent's organization
        firstName:
          type: string
          description: The agent's first name
        lastName:
          type: string
          description: The agent's last name
        username:
          type: string
          description: The agents's username
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Skill'
          description: A list of the skills associated with the agent
        loginDisabled:
          type: boolean
          description: Whether or not the agent is disabled.
        huntGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.AgentDetails_HuntGroup'
          description: An object with the hunt group fields required for the call
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the agent
        delegated:
          type: boolean
          description: Whether the agent is delegated (sso related)
        trustIds:
          type: array
          items:
            type: string
          description: A list of the trust ids the user has been assigned.
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.PermissionGroup'
          description: A list of the (neo)permission groups the user belongs to
        agentSid:
          type: string
          description: The agent's agent sid
        name:
          type: string
          description: The agent's full name
        partnerAgentId:
          type: string
          description: The User's partner agent id.
        userCallerId:
          type: string
          description: User caller id
        created:
          type: string
          description: The date/time the user was created.
          format: date-time
        lastUpdated:
          type: string
          description: The date/time the user was last updated.
          format: date-time
        agentProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.AgentDetails_AgentProfileGroup'
          description: An object with the agent profile group fields required for
            the call
        agent:
          type: boolean
          description: a bool signalling whether or not the user is also an agent
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone
        email:
          type: string
          description: The email of the agent. Empty if none set.
        emailVerified:
          type: boolean
          description: Whether or not the agent's email is verified.
        mfaInfo:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: The agent's mfa information.
      description: Object for ListAgents to return a list of.
    api.v1alpha1.org.users.ListAuthTokensByUserIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: User id to get list of auth tokens.
      description: Request message for the ListAuthTokensByUserIdRequest rpc.
    api.v1alpha1.org.users.ListAuthTokensByUserIdResponse:
      type: object
      properties:
        authTokens:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AuthToken'
          description: List of requested users auth tokens.
      description: Response message for the ListAuthTokensByUserIdResponse rpc.
    api.v1alpha1.org.users.ListAuthTokensRequest:
      type: object
      properties: {}
      description: Request message for the ListAuthTokensRequest rpc.
    api.v1alpha1.org.users.ListAuthTokensResponse:
      type: object
      properties:
        authTokens:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.AuthToken'
          description: List of current users' auth tokens.
      description: Response message for the ListAuthTokensResponse rpc.
    api.v1alpha1.org.users.ListOrgSubscriptionsRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Required.
        eventType:
          type: integer
          description: "Optional.\n Used by matrix-notify to get settings in bulk
            for a particular event type."
          format: enum
      description: Request for listing subscriptions (for many users) for an org.
    api.v1alpha1.org.users.ListOrgSubscriptionsResponse:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
      description: Response for listing subscriptions for multiple users.
    api.v1alpha1.org.users.ListPublicUsersRequest:
      type: object
      properties:
        agentFilter:
          type: boolean
          description: Return a list of only user agents. When this is false all users
            are returned.
        archivedFilter:
          type: integer
          description: Filter by the user's archived status.
          format: enum
      description: Request message for ListPublicUsers rpc.
    api.v1alpha1.org.users.ListPublicUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.users.ListPublicUsersResponse_User'
      description: Response message for ListPublicUsers rpc.
    api.v1alpha1.org.users.ListPublicUsersResponse_User:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        username:
          type: string
          description: The user's username
    api.v1alpha1.org.users.ListUserSubscriptionsByUserIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: Required.
      description: Request for listing subscriptions for a given user.
    api.v1alpha1.org.users.ListUserSubscriptionsByUserIdResponse:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
      description: "Response for listing subscriptions for a given user.\n Contains
        a user subscriptions (plural) object."
    api.v1alpha1.org.users.ListUserSubscriptionsRequest:
      type: object
      properties: {}
      description: Request for listing subscriptions for the current user.
    api.v1alpha1.org.users.ListUserSubscriptionsResponse:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
      description: "Response for listing subscriptions for the current user.\n Contains
        a user subscriptions (plural) object."
    api.v1alpha1.org.users.ListUsersAllowedIpsRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: list of user ids to get mapping of restricted ips
    api.v1alpha1.org.users.ListUsersAllowedIpsResponse:
      type: object
      properties:
        userAllowedIpsMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.org.users.ListUsersAllowedIpsResponse_AllowedIps'
          description: user id to allowed ips map
    api.v1alpha1.org.users.ListUsersAllowedIpsResponse_AllowedIps:
      type: object
      properties:
        ips:
          type: array
          items:
            type: string
          description: list of ips for a given user
    api.v1alpha1.org.users.ListUsersByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Filter by org ID.
        archivedFilter:
          type: integer
          description: Filter by the user's archived status.
          format: enum
      description: Request message for the ListUsersByOrgId rpc.
    api.v1alpha1.org.users.ListUsersByOrgIdResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.users.ListUsersByOrgIdResponse_UserDetails'
          description: List of returned users with masked data.
      description: Response message for the ListsUsersByOrgId rpc.
    api.v1alpha1.org.users.ListUsersByOrgIdResponse_UserDetails:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        orgId:
          type: string
          description: The ID of the user's organization
        orgName:
          type: string
          description: The name of the user's organization
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        username:
          type: string
          description: The user's username
        loginDisabled:
          type: boolean
          description: Whether or not the user is disabled.
        permissionGroupIds:
          type: array
          items:
            type: string
          description: A list of the (neo)permission group Ids the agent belongs to
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        accountOwner:
          type: boolean
          description: Whether the user is an account owner
        agent:
          type: boolean
          description: Whether the user is also an agent
        trustIds:
          type: array
          items:
            type: string
          description: A list of the trust ids the user has been assigned.
        mfaInfo:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: MfaInfo of the user.
        emailVerified:
          type: boolean
          description: Whether or not the users email is verified.
      description: Object for ListUsersByOrgId to return a list of.
    api.v1alpha1.org.users.ListUsersByRegionRequest:
      type: object
      properties:
        regionId:
          type: string
          description: Filter by region.
        agent:
          type: boolean
          description: Return a list of only user agents (users whose default app
            is agent). When this is false all users are returned.
        archivedFilter:
          type: integer
          description: Filter by the user's archived status.
          format: enum
      description: Request message for the ListUsersByRegion rpc.
    api.v1alpha1.org.users.ListUsersByRegionResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.users.ListUsersByRegionResponse_UserDetails'
          description: List of returned users with masked data.
      description: Response message for the ListsUserByRegion rpc.
    api.v1alpha1.org.users.ListUsersByRegionResponse_UserDetails:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        orgId:
          type: string
          description: The ID of the user's organization
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        username:
          type: string
          description: The user's username
        loginDisabled:
          type: boolean
          description: Whether or not the user is disabled.
        permissionGroupIds:
          type: array
          items:
            type: string
          description: A list of the (neo)permission group Ids the agent belongs to
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        accountOwner:
          type: boolean
          description: Whether the user is an account owner
        agent:
          type: boolean
          description: Whether the user is also an agent
        trustIds:
          type: array
          items:
            type: string
          description: A list of the trust ids the user has been assigned.
        mfaInfo:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: MfaInfo of the user.
        emailVerified:
          type: boolean
          description: Whether or not the users email is verified.
      description: Object for ListUsersByRegion to return a list of.
    api.v1alpha1.org.users.ListUsersRequest:
      type: object
      properties: {}
      description: Request message for listUsers rpc.
    api.v1alpha1.org.users.ListUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.org.users.ListUsersResponse_UserDetails'
          description: List of returned users with masked data.
      description: Response message for listUsers rpc.
    api.v1alpha1.org.users.ListUsersResponse_UserDetails:
      type: object
      properties:
        userId:
          type: string
          description: The user ID of the user
        orgId:
          type: string
          description: The ID of the user's organization
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        username:
          type: string
          description: The user's username
        loginDisabled:
          type: boolean
          description: Whether or not the user is disabled.
        permissionGroupIds:
          type: array
          items:
            type: string
          description: A list of the (neo)permission group Ids the agent belongs to
        labels:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.org.Label'
          description: A list of the labels associated with the user
        accountOwner:
          type: boolean
          description: Whether the user is an account owner
        agent:
          type: boolean
          description: Whether the user is also an agent
        trustIds:
          type: array
          items:
            type: string
          description: A list of the trust ids the user has been assigned.
        mfaInfo:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: MfaInfo of the user.
        emailVerified:
          type: boolean
          description: Whether or not the users email is verified.
      description: Object for ListUsers to return a list of.
    api.v1alpha1.org.users.RefreshMfaLockoutByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The id of the user to refresh.
        orgId:
          type: string
          description: The id of the org the user belongs to.
      description: Request message for the RefreshMfaLockoutByOrgId rpc.
    api.v1alpha1.org.users.RefreshMfaLockoutByOrgIdResponse:
      type: object
      properties:
        timeout:
          type: string
          description: The new time that the user must setup mfa by.
          format: date-time
      description: Response message for the RefreshMfaLockoutByOrgId rpc.
    api.v1alpha1.org.users.RefreshMfaLockoutRequest:
      type: object
      properties:
        userId:
          type: string
          description: The id of the user to refresh.
      description: Request message for the RefreshMfaLockout rpc.
    api.v1alpha1.org.users.RefreshMfaLockoutResponse:
      type: object
      properties:
        timeout:
          type: string
          description: The new time that the user must setup mfa by.
          format: date-time
      description: Response message for the RefreshMfaLockout rpc.
    api.v1alpha1.org.users.RemoveGroupedUserIPRestrictionsRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: List of users to remove the restriction from.
        ips:
          type: array
          items:
            type: string
          description: List of IPs to un-restrict. Empty list will delete all restrictions
      description: Request message for the RemoveGroupedUserIPRestrictions rpc.
    api.v1alpha1.org.users.RemoveGroupedUserIPRestrictionsResponse:
      type: object
      properties: {}
      description: Response message for the RemoveGroupedUserIPRestrictions rpc.
    api.v1alpha1.org.users.RemoveUserSubscriptionByUserIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: "Required.\n Primary key for subscriptions."
        subscriptionId:
          type: string
          description: Required.
      description: Request for removing a user subscription by id.
    api.v1alpha1.org.users.RemoveUserSubscriptionByUserIdResponse:
      type: object
      properties: {}
      description: Response for deleting a user subscription.
    api.v1alpha1.org.users.RemoveUserSubscriptionRequest:
      type: object
      properties:
        subscriptionId:
          type: string
          description: Required.
      description: Request for removing a user subscription by id.
    api.v1alpha1.org.users.RemoveUserSubscriptionResponse:
      type: object
      properties: {}
      description: Response for deleting a user subscription.
    api.v1alpha1.org.users.ResetMyPasswordRequest:
      type: object
      properties:
        password:
          type: string
          description: The new password to use for my user.
      description: Request message for the ResetMyPassword rpc.
    api.v1alpha1.org.users.ResetMyPasswordResponse:
      type: object
      properties: {}
      description: Response message for the ResetMyPassword rpc.
    api.v1alpha1.org.users.ResetUserPasswordByOrgIdRequest:
      type: object
      properties:
        password:
          type: string
          description: The new password to use for the specified user.
        userId:
          type: string
          description: The ID of the user password to be changed.
        orgId:
          type: string
          description: The organization ID of the user password to be changed.
      description: Request message for the ResetUserPasswordByOrgId rpc.
    api.v1alpha1.org.users.ResetUserPasswordByOrgIdResponse:
      type: object
      properties: {}
      description: Response message for the ResetUserPasswordByOrgId rpc.
    api.v1alpha1.org.users.ResetUserPasswordRequest:
      type: object
      properties:
        password:
          type: string
          description: The new password to use for the specified user.
        userId:
          type: string
          description: The ID of the user password to be changed.
      description: Request message for the ResetUserPassword rpc.
    api.v1alpha1.org.users.ResetUserPasswordResponse:
      type: object
      properties: {}
      description: Response message for the ResetUserPassword rpc.
    api.v1alpha1.org.users.SendPasswordResetByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
          description: The organization ID of the user to be emailed.
        email:
          type: string
          description: The email address to send the password reset lnk to.
      description: Request message for the SendPasswordResetByOrgId rpc.
    api.v1alpha1.org.users.SendPasswordResetByOrgIdResponse:
      type: object
      properties: {}
      description: Response message for the SendPasswordResetByOrgId rpc.
    api.v1alpha1.org.users.SendPasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          description: The email address to send the password reset lnk to.
      description: Request message for the SendPasswordReset rpc.
    api.v1alpha1.org.users.SendPasswordResetResponse:
      type: object
      properties: {}
      description: Response message for the SendPasswordReset rpc.
    api.v1alpha1.org.users.SendUserEmailVerificationByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user to be verified.
        orgId:
          type: string
          description: The organization ID of the user.
      description: Request message for the SendUserEmailVerificationByOrgId rpc.
    api.v1alpha1.org.users.SendUserEmailVerificationByOrgIdResponse:
      type: object
      properties: {}
      description: Response message for the SendUserEmailVerificationByOrgId rpc.
    api.v1alpha1.org.users.SendUserEmailVerificationRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user to be verified.
      description: Request message for the SendUserEmailVerification rpc.
    api.v1alpha1.org.users.SendUserEmailVerificationResponse:
      type: object
      properties: {}
      description: Response message for the SendUserEmailVerification rpc.
    api.v1alpha1.org.users.SetAuthTokenExpirationByUserIdRequest:
      type: object
      properties:
        token:
          type: string
          description: Token to reset expiration for that belongs to the given user.
        userId:
          type: string
          description: User token belongs to.
      description: Request message for the SetAuthTokenExpirationByUserIdRequest rpc.
    api.v1alpha1.org.users.SetAuthTokenExpirationByUserIdResponse:
      type: object
      properties: {}
      description: Response message for the SetAuthTokenExpirationByUserIdResponse
        rpc.
    api.v1alpha1.org.users.SetAuthTokenExpirationRequest:
      type: object
      properties:
        token:
          type: string
          description: Token to reset expiration for that belongs to the current user.
      description: Request message for the SetAuthTokenExpirationRequest rpc.
    api.v1alpha1.org.users.SetAuthTokenExpirationResponse:
      type: object
      properties: {}
      description: Response message for the SetAuthTokenExpirationResponse rpc.
    api.v1alpha1.org.users.SetMfaTypeRequest:
      type: object
      properties:
        info:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: "The info object to pull the type from.\n The user id field
            must be provided."
      description: Request message for the SetMfaTypeRequest rpc.
    api.v1alpha1.org.users.SetMfaTypeResponse:
      type: object
      properties: {}
      description: Response message for the SetMfaTypeRequest rpc.
    api.v1alpha1.org.users.SetMyMfaTypeRequest:
      type: object
      properties:
        info:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.MfaInfo'
          description: The info object to pull the type from.
      description: Request message for the SetMyMfaTypeRequest rpc.
    api.v1alpha1.org.users.SetMyMfaTypeResponse:
      type: object
      properties: {}
      description: Response message for the SetMyMfaTypeRequest rpc.
    api.v1alpha1.org.users.UpdateAgentProfileGroupRequest:
      type: object
      properties:
        agentProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.commons.org.AgentProfileGroup'
          description: Agent response group to update
      description: Request message for the UpdateAgentProfileGroup rpc.
    api.v1alpha1.org.users.UpdateAgentProfileGroupResponse:
      type: object
      properties: {}
      description: Response message for the UpdateAgentProfileGroup rpc.
    api.v1alpha1.org.users.UpdateMyUserRequest:
      type: object
      properties:
        linkbackNumbers:
          type: array
          items:
            type: string
          description: The linkback numbers the updated user will have.
        callerIds:
          type: array
          items:
            type: string
          description: The caller ids the updated user will have.
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone.
        defaultApp:
          type: integer
          description: Default app the user starts on
          format: enum
        fieldMask:
          type: array
          items:
            type: string
          description: Mask to filter fields on organization entities in response.
      description: Request message for the UpdateMyUser rpc.
    api.v1alpha1.org.users.UpdateMyUserResponse:
      type: object
      properties: {}
      description: Response message for the UpdateMyUser rpc.
    api.v1alpha1.org.users.UpdateUserCallerIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user id of the user to be updated
        userCallerId:
          type: string
          description: The caller id for the updated user
      description: Request message for the UpdateUserCallerId rpc.
    api.v1alpha1.org.users.UpdateUserCallerIdResponse:
      type: object
      properties: {}
      description: Response message for the UpdateUserCallerId rpc.
    api.v1alpha1.org.users.UpdateUserDisabledByOrgIdRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user id of the user to be updated
        orgId:
          type: string
          description: The organization id of the user to be updated
        loginDisabled:
          type: boolean
          description: Whether the user is able to login
      description: Request message for the UpdateUserDisabledByOrgId rpc.
    api.v1alpha1.org.users.UpdateUserDisabledByOrgIdResponse:
      type: object
      properties: {}
      description: Response message for the UpdateUserDisabledByOrgId rpc.
    api.v1alpha1.org.users.UpdateUserDisabledRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user id of the user to be updated
        loginDisabled:
          type: boolean
          description: Whether the user is able to login
      description: Request message for the UpdateUserDisabled rpc.
    api.v1alpha1.org.users.UpdateUserDisabledResponse:
      type: object
      properties: {}
      description: Response message for the UpdateUserDisabled rpc.
    api.v1alpha1.org.users.UpdateUserLabelsRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user whose labels will be updated.
        orgId:
          type: string
          description: The organization ID of the user
        labelIds:
          type: array
          items:
            type: string
          description: Labels to update user to
      description: Request message for the UpdateUserLabels rpc.
    api.v1alpha1.org.users.UpdateUserLabelsResponse:
      type: object
      properties: {}
      description: Response message for the UpdateUserLabels rpc.
    api.v1alpha1.org.users.UpdateUserRequest:
      type: object
      properties:
        userId:
          type: string
          description: The user id of the user to be updated
        firstName:
          type: string
          description: The first name the updated user will have.
        lastName:
          type: string
          description: The last name the updated user will have.
        partnerAgentId:
          type: string
          description: The partner agent id the updated user will have.
        timeZoneOverride:
          allOf:
          - $ref: '#/components/schemas/api.commons.TimeZoneWrapper'
          description: User TimeZone with wrapper for nullable timezone.
        linkbackNumbers:
          type: array
          items:
            type: string
          description: The linkback numbers the updated user will have.
        callerIds:
          type: array
          items:
            type: string
          description: The caller ids the updated user will have.
        defaultApp:
          type: integer
          description: Default app the user starts on
          format: enum
        passwordResetRequired:
          type: boolean
          description: Whether the updated user will require a password reset.
        agentProfileGroupId:
          type: string
          description: The agent profile group id the updated user will have.
        username:
          type: string
          description: The username the updated user will have.
        email:
          type: string
          description: The email the updated user will have.
        userCallerId:
          type: string
          description: The Agent Caller Id of the user
        labelIds:
          type: array
          items:
            type: string
          description: A list of labels to assign to the user
        fieldMask:
          type: array
          items:
            type: string
          description: Mask to filter fields on organization entities in response.
      description: Request message for the UpdateUser rpc.
    api.v1alpha1.org.users.UpdateUserResponse:
      type: object
      properties: {}
      description: Response message for the UpdateUser rpc.
    api.v1alpha1.org.users.UpdateUserSubscriptionByUserIdRequest:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
          description: "Required.\n Must have org id, user id, and subscription id."
        fieldMask:
          type: string
          description: "Required. Only fields in field mask will be updated.\n Valid
            fields include: \"filters\", \"room303\""
          format: field-mask
      description: Request for updating a user subscription.
    api.v1alpha1.org.users.UpdateUserSubscriptionByUserIdResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
      description: "Response for updating a user subscription.\n Contains a single
        user subscription."
    api.v1alpha1.org.users.UpdateUserSubscriptionRequest:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
          description: "Required.\n Must have org id, user id, and subscription id."
        fieldMask:
          type: string
          description: "Required. Only fields in field mask will be updated.\n Valid
            fields include: \"filters\", \"room303\""
          format: field-mask
      description: Request for updating a user subscription.
    api.v1alpha1.org.users.UpdateUserSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription'
      description: "Response for updating a user subscription.\n Contains a single
        user subscription."
    api.v1alpha1.org.users.UserSubscription:
      type: object
      properties:
        subscriptionId:
          type: string
          description: "Required.\n The unique id given to the setting. Used for updating
            and deleting."
        eventType:
          type: integer
          description: "Required.\n\n Used by matrix-notify.\n It receives an event
            on a event type and\n uses it to look up the targets for that event type.\n
            e.g. api.commons.audit.EventType_DUMMY_EVENT_DID_SOMETHING"
          format: enum
        userId:
          type: string
          description: Required.
        room303:
          $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription_Room303'
        delivery:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.org.users.UserSubscription_Delivery'
          description: 'TODO: add email, sms, etc.'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.FieldValueFilter'
          description: "Optional.\n If set, user only notified for events that match
            ALL filters."
        version:
          type: string
          description: Optional. Updates must specify current version or be rejected.
      description: "UserSubscription contains the info to send a notification to a
        user.\n It contains a user, the event type, a delivery method, and custom
        app settings."
    api.v1alpha1.org.users.UserSubscription_Delivery:
      type: object
      properties:
        transferConfigName:
          type: string
          description: "Required.\n Used to lookup how the notification is going to
            happen through Delivery."
    api.v1alpha1.org.users.UserSubscription_Room303:
      type: object
      properties:
        roomName:
          type: string
    api.v1alpha1.org.users.User_RegionSids:
      type: object
      properties:
        loginSid:
          type: string
          description: The login sid for the region.
        agentSid:
          type: string
          description: THe agent sid for the region.
        clientSid:
          type: string
          description: THe client sid for the region.
      description: The entity object used in the region_sid_map.
    api.v1alpha1.room303.AddRoomMemberRequest:
      type: object
      properties:
        roomId:
          type: string
        userId:
          type: string
        admin:
          type: boolean
    api.v1alpha1.room303.ArchiveRoomRequest:
      type: object
      properties:
        roomId:
          type: string
    api.v1alpha1.room303.BulkMarkMessageReadRequest:
      type: object
      properties:
        roomId:
          type: string
        messageIds:
          type: array
          items:
            type: string
    api.v1alpha1.room303.BulkMarkMessageReadResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Message'
    api.v1alpha1.room303.CreateMessageRequest:
      type: object
      properties:
        roomId:
          type: string
        payload:
          type: string
        nonce:
          type: string
          description: "nonce  is set by UI and used to tell if the message coming
            through the message update stream was created by that client.\n this is
            so when the user is logged in on multiple clients (different device, tabs,
            browser) they can see their updated message on those clients."
    api.v1alpha1.room303.CreateMessageResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/api.commons.Message'
    api.v1alpha1.room303.CreateRoomRequest:
      type: object
      properties:
        name:
          type: string
        type:
          type: integer
          format: enum
        members:
          type: array
          items:
            type: string
        permissionGroupId:
          type: string
          description: Optional id of the permission group assigned to this room.
    api.v1alpha1.room303.DeleteMessageRequest:
      type: object
      properties:
        messageId:
          type: string
        roomId:
          type: string
        nonce:
          type: string
          description: "nonce  is set by UI and used to tell if the message coming
            through the message update stream was created by that client.\n this is
            so when the user is logged in on multiple clients (different device, tabs,
            browser) they can see their updated message on those clients."
    api.v1alpha1.room303.DeleteMessageResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/api.commons.Message'
    api.v1alpha1.room303.EditMessageRequest:
      type: object
      properties:
        messageId:
          type: string
        payload:
          type: string
        roomId:
          type: string
        nonce:
          type: string
          description: "nonce  is set by UI and used to tell if the message coming
            through the message update stream was created by that client.\n this is
            so when the user is logged in on multiple clients (different device, tabs,
            browser) they can see their updated message on those clients."
    api.v1alpha1.room303.EditMessageResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/api.commons.Message'
    api.v1alpha1.room303.GetGlobalConfigRequest:
      type: object
      properties: {}
      description: request to get global configuration
    api.v1alpha1.room303.GetGlobalConfigResponse:
      type: object
      properties:
        editedBy:
          type: string
          description: last edited_by user
        config:
          allOf:
          - $ref: '#/components/schemas/api.commons.GlobalConfig'
          description: global configuration details
        dateCreated:
          type: string
          description: date created
          format: date-time
        lastEdited:
          type: string
          description: last edited on
          format: date-time
      description: response to get global configuration
    api.v1alpha1.room303.GetMessagesRequest:
      type: object
      properties:
        roomId:
          type: string
        offset:
          type: string
          format: date-time
    api.v1alpha1.room303.GetMessagesResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Message'
    api.v1alpha1.room303.GetRoomMemberRequest:
      type: object
      properties:
        roomId:
          type: string
        userId:
          type: string
    api.v1alpha1.room303.GetRoomRequest:
      type: object
      properties:
        roomId:
          type: string
    api.v1alpha1.room303.GetUnreadStatsRequest:
      type: object
      properties: {}
    api.v1alpha1.room303.GetUnreadStatsResponse:
      type: object
      properties:
        stats:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.MessageStat'
    api.v1alpha1.room303.JoinRoomRequest:
      type: object
      properties:
        roomId:
          type: string
    api.v1alpha1.room303.ListAllRoomsRequest:
      type: object
      properties: {}
    api.v1alpha1.room303.ListRoomMembersRequest:
      type: object
      properties:
        roomId:
          type: string
    api.v1alpha1.room303.ListRoomMembersResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Member'
    api.v1alpha1.room303.ListRoomsForMemberRequest:
      type: object
      properties: {}
    api.v1alpha1.room303.ListRoomsResponse:
      type: object
      properties:
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Room'
    api.v1alpha1.room303.ListUsersNamesRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Filter by org ID.
        agent:
          type: boolean
          description: Return a list of only user agents (users whose default app
            is agent). When this is false all users are returned.
        archivedFilter:
          type: integer
          description: Filter by the user's archived status
          format: enum
      description: Request message for the ListUsersNames rpc.
    api.v1alpha1.room303.ListUsersNamesResponse:
      type: object
      properties:
        userDetails:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.room303.UserDetails'
          description: List of returned users with names and ids
      description: Response message for the ListUsersNames rpc.
    api.v1alpha1.room303.MarkAllMessagesReadRequest:
      type: object
      properties:
        roomId:
          type: string
    api.v1alpha1.room303.MarkAllMessagesReadResponse:
      type: object
      properties:
        rowsUpdated:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Message'
    api.v1alpha1.room303.MarkMessageReadRequest:
      type: object
      properties:
        messageId:
          type: string
        memberId:
          type: string
    api.v1alpha1.room303.MarkMessageReadResponse:
      type: object
      properties: {}
    api.v1alpha1.room303.RemoveRoomMemberRequest:
      type: object
      properties:
        userId:
          type: string
        roomId:
          type: string
    api.v1alpha1.room303.RemoveRoomMemberResponse:
      type: object
      properties: {}
    api.v1alpha1.room303.SetAdminForRoomMemberRequest:
      type: object
      properties:
        roomId:
          type: string
        userId:
          type: string
    api.v1alpha1.room303.SetAdminForRoomMemberResponse:
      type: object
      properties: {}
    api.v1alpha1.room303.StreamMessageUpdatesRequest:
      type: object
      properties:
        roomId:
          type: string
        memberId:
          type: string
    api.v1alpha1.room303.StreamMessageUpdatesResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/api.commons.Message'
    api.v1alpha1.room303.UpdateGlobalConfigRequest:
      type: object
      properties:
        config:
          allOf:
          - $ref: '#/components/schemas/api.commons.GlobalConfig'
          description: global configuration details
        fieldMask:
          type: string
          description: list of global config options to be updated
          format: field-mask
      description: request to update global configuration
    api.v1alpha1.room303.UpdateGlobalConfigResponse:
      type: object
      properties:
        editedBy:
          type: string
          description: last edited_by user
        config:
          allOf:
          - $ref: '#/components/schemas/api.commons.GlobalConfig'
          description: global configuration details
        dateCreated:
          type: string
          description: date created
          format: date-time
        lastEdited:
          type: string
          description: last edited on
          format: date-time
      description: response to update global configuration
    api.v1alpha1.room303.UpdateRoomConfigRequest:
      type: object
      properties:
        roomId:
          type: string
          description: room id
        config:
          allOf:
          - $ref: '#/components/schemas/api.commons.RoomConfig'
          description: room configuration details
        fieldMask:
          type: string
          description: list of config options to be updated
          format: field-mask
      description: request to update room configuration
    api.v1alpha1.room303.UpdateRoomRequest:
      type: object
      properties:
        room:
          allOf:
          - $ref: '#/components/schemas/api.commons.Room'
          description: room details to be updated
        fieldMask:
          type: string
          description: field mask for room options that needs updated
          format: field-mask
      description: request to update room details
    api.v1alpha1.room303.UserDetails:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user
        userName:
          type: string
          description: The name of the user.
        firstName:
          type: string
          description: user first name
        lastName:
          type: string
          description: user last name
      description: wrapper for listing user names with ids
    api.v1alpha1.scorecards.BulkCreateQuestionsRequest:
      type: object
      properties:
        scorecardId:
          type: string
        useDefault:
          type: boolean
      description: BulkCreateQuestionsRequest creates questions from a given scorecard
    api.v1alpha1.scorecards.BulkCreateQuestionsResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Question'
      description: BulkCreateQuestionsResponse returns the created questions
    api.v1alpha1.scorecards.BulkDeleteAutoEvaluationsRequest:
      type: object
      properties:
        orgId:
          type: string
        autoEvaluationIds:
          type: array
          items:
            type: string
        completedAt:
          $ref: '#/components/schemas/api.commons.TimeFilter'
        scorecardIds:
          type: array
          items:
            type: string
        categoryIds:
          type: array
          items:
            type: string
        agentUserIds:
          type: array
          items:
            type: string
        riskLevels:
          type: array
          items:
            type: integer
            format: enum
      description: BulkDeleteAutoEvaluationsRequest is a request to delete auto evaluations
    api.v1alpha1.scorecards.BulkDeleteAutoEvaluationsResponse:
      type: object
      properties:
        count:
          type: string
      description: BulkDeleteAutoEvaluationsResponse is a response with deleted evaluations
    api.v1alpha1.scorecards.BulkDeleteEvaluationsRequest:
      type: object
      properties:
        orgId:
          type: string
        evaluationIds:
          type: array
          items:
            type: string
        completedAt:
          $ref: '#/components/schemas/api.commons.TimeFilter'
        categoryIds:
          type: array
          items:
            type: string
        agentUserIds:
          type: array
          items:
            type: string
        scorecardIds:
          type: array
          items:
            type: string
        scorerId:
          type: array
          items:
            type: string
      description: BulkDeleteEvaluationsRequest is a request to delete evaluations
    api.v1alpha1.scorecards.BulkDeleteEvaluationsResponse:
      type: object
      properties:
        count:
          type: string
      description: BulkDeleteEvaluationsResponse is a response with deleted evaluations
    api.v1alpha1.scorecards.CreateAutoQuestionRequest:
      type: object
      properties:
        autoQuestion:
          $ref: '#/components/schemas/api.commons.AutoQuestion'
      description: CreateAutoQuestionRequest is the request to create a new auto question.
    api.v1alpha1.scorecards.CreateAutoQuestionResponse:
      type: object
      properties:
        autoQuestion:
          $ref: '#/components/schemas/api.commons.AutoQuestion'
      description: CreateAutoQuestionResponse returns the created auto question.
    api.v1alpha1.scorecards.CreateCategoryRequest:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/api.commons.Category'
      description: CreateCategoryRequest is request to create a category.
    api.v1alpha1.scorecards.CreateCategoryResponse:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/api.commons.Category'
      description: CreateCategoryResponse returns the created category.
    api.v1alpha1.scorecards.CreateEvaluationQuestionRequest:
      type: object
      properties:
        evaluationQuestion:
          $ref: '#/components/schemas/api.commons.EvaluationQuestion'
      description: CreateEvaluationQuestionRequest is request to create an evaluation
        question
    api.v1alpha1.scorecards.CreateEvaluationQuestionResponse:
      type: object
      properties:
        evaluationQuestion:
          $ref: '#/components/schemas/api.commons.EvaluationQuestion'
      description: CreateEvaluationQuestionResponse is response with requested entity
    api.v1alpha1.scorecards.CreateEvaluationRequest:
      type: object
      properties:
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
      description: CreateEvaluationRequest is request to create a new evaluation
    api.v1alpha1.scorecards.CreateEvaluationResponse:
      type: object
      properties:
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
      description: CreateEvaluationResponse is response with created entity
    api.v1alpha1.scorecards.CreateQuestionCategoryRequest:
      type: object
      properties:
        questionId:
          type: string
          description: All Fields Required
        categoryId:
          type: string
      description: CreateQuestionCategoryRequest is request to link a scorecard question
        and category
    api.v1alpha1.scorecards.CreateQuestionCategoryResponse:
      type: object
      properties:
        questionId:
          type: string
        categoryId:
          type: string
        questionCategoryId:
          type: string
      description: CreateQuestionCategoryResponse returns the updated question
    api.v1alpha1.scorecards.CreateQuestionRequest:
      type: object
      properties:
        question:
          $ref: '#/components/schemas/api.commons.Question'
      description: CreateQuestionRequest is the request to create a new question in
        the library.
    api.v1alpha1.scorecards.CreateQuestionResponse:
      type: object
      properties:
        question:
          $ref: '#/components/schemas/api.commons.Question'
      description: CreateQuestionResponse contains the question that was created.
    api.v1alpha1.scorecards.CreateScorecardQuestionRequest:
      type: object
      properties:
        scorecardQuestion:
          $ref: '#/components/schemas/api.commons.ScorecardQuestion'
      description: CreateScorecardQuestionRequest is the request to create a new scorecard
        question.
    api.v1alpha1.scorecards.CreateScorecardQuestionResponse:
      type: object
      properties:
        scorecardQuestion:
          $ref: '#/components/schemas/api.commons.ScorecardQuestion'
      description: CreateScorecardQuestionResponse returns the created scorecard.
    api.v1alpha1.scorecards.CreateScorecardRequest:
      type: object
      properties:
        scorecard:
          $ref: '#/components/schemas/api.commons.Scorecard'
      description: CreateScorecardRequest is the request to create a scorecard.
    api.v1alpha1.scorecards.CreateScorecardResponse:
      type: object
      properties:
        scorecard:
          $ref: '#/components/schemas/api.commons.Scorecard'
      description: CreateScorecardResponse contains the scorecard that was created.
    api.v1alpha1.scorecards.CreateSectionRequest:
      type: object
      properties:
        section:
          $ref: '#/components/schemas/api.commons.Section'
      description: CreateSectionRequest is the request to create a new section.
    api.v1alpha1.scorecards.CreateSectionResponse:
      type: object
      properties:
        section:
          $ref: '#/components/schemas/api.commons.Section'
      description: CreateSectionResponse returns the created section.
    api.v1alpha1.scorecards.CreateSmartQuestionRequest:
      type: object
      properties:
        smartQuestion:
          $ref: '#/components/schemas/api.commons.SmartQuestion'
      description: CreateSmartQuestionRequest is the request to create a new smart
        question.
    api.v1alpha1.scorecards.CreateSmartQuestionResponse:
      type: object
      properties:
        smartQuestion:
          $ref: '#/components/schemas/api.commons.SmartQuestion'
      description: CreateSmartQuestionResponse returns the created smart question.
    api.v1alpha1.scorecards.DeleteAutoEvaluationByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
        autoEvaluationId:
          type: string
      description: DeleteAutoEvaluationByOrgIdRequest is the request to delete an
        auto evaluation (with sub-entities).
    api.v1alpha1.scorecards.DeleteAutoEvaluationRequest:
      type: object
      properties:
        autoEvaluationId:
          type: string
      description: DeleteAutoEvaluationRequest is the request to delete an auto evaluation
        (with sub-entities).
    api.v1alpha1.scorecards.DeleteAutoEvaluationResponse:
      type: object
      properties:
        autoEvaluation:
          $ref: '#/components/schemas/api.commons.AutoEvaluation'
      description: DeleteAutoEvaluationResponse returns the deleted auto evaluation.
    api.v1alpha1.scorecards.DeleteAutoQuestionRequest:
      type: object
      properties:
        autoQuestionId:
          type: string
      description: DeleteAutoQuestionRequest is the request to delete an auto question.
    api.v1alpha1.scorecards.DeleteAutoQuestionResponse:
      type: object
      properties:
        autoQuestion:
          $ref: '#/components/schemas/api.commons.AutoQuestion'
      description: DeleteAutoQuestionResponse returns the deleted auto question.
    api.v1alpha1.scorecards.DeleteCategoryRequest:
      type: object
      properties:
        categoryId:
          type: string
      description: DeleteCategoryRequest is request to delete a category by id.
    api.v1alpha1.scorecards.DeleteCategoryResponse:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/api.commons.Category'
      description: DeleteCategoryResponse returns the deleted category.
    api.v1alpha1.scorecards.DeleteEvaluationByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
        evaluationId:
          type: string
      description: DeleteEvaluationByOrgIdRequest is request to delete an evaluation
    api.v1alpha1.scorecards.DeleteEvaluationQuestionRequest:
      type: object
      properties:
        evaluationQuestionId:
          type: string
      description: DeleteEvaluationQuestionRequest is request to delete an evaluation
        question
    api.v1alpha1.scorecards.DeleteEvaluationQuestionResponse:
      type: object
      properties:
        evaluationQuestion:
          $ref: '#/components/schemas/api.commons.EvaluationQuestion'
      description: DeleteEvaluationQuestionResponse is response with deleted entity
    api.v1alpha1.scorecards.DeleteEvaluationRequest:
      type: object
      properties:
        evaluationId:
          type: string
      description: DeleteEvaluationRequest is request to delete an evaluation
    api.v1alpha1.scorecards.DeleteEvaluationResponse:
      type: object
      properties:
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
      description: DeleteEvaluationReponse is response with requested entity
    api.v1alpha1.scorecards.DeleteQuestionCategoryRequest:
      type: object
      properties:
        questionCategoryId:
          type: string
        bothIds:
          $ref: '#/components/schemas/api.v1alpha1.scorecards.DeleteQuestionCategoryRequest_BothIds'
      description: DeleteQuestionCategoryRequest deletes link between a scorecard
        question and category
    api.v1alpha1.scorecards.DeleteQuestionCategoryRequest_BothIds:
      type: object
      properties:
        questionId:
          type: string
        categoryId:
          type: string
      description: BothIds is question_id and category_id in a link
    api.v1alpha1.scorecards.DeleteQuestionCategoryResponse:
      type: object
      properties:
        questionId:
          type: string
        categoryId:
          type: string
        questionCategoryId:
          type: string
      description: DeleteQuestionCategoryResponse returns the updated question
    api.v1alpha1.scorecards.DeleteQuestionRequest:
      type: object
      properties:
        questionId:
          type: string
      description: DeleteQuestionRequest is the request to delete a question by id.
    api.v1alpha1.scorecards.DeleteQuestionResponse:
      type: object
      properties:
        question:
          $ref: '#/components/schemas/api.commons.Question'
      description: DeleteQuestionResponse returns the deleted question.
    api.v1alpha1.scorecards.DeleteScorecardQuestionRequest:
      type: object
      properties:
        scorecardQuestionId:
          type: string
      description: DeleteScorecardQuestionRequest is the request to delete a scorecard
        question.
    api.v1alpha1.scorecards.DeleteScorecardQuestionResponse:
      type: object
      properties:
        scorecardQuestion:
          $ref: '#/components/schemas/api.commons.ScorecardQuestion'
      description: DeleteScorecardQuestionResponse returns the deleted scorecard question.
    api.v1alpha1.scorecards.DeleteScorecardRequest:
      type: object
      properties:
        scorecardId:
          type: string
      description: DeleteScorecardRequest is the request to delete a scorecard.
    api.v1alpha1.scorecards.DeleteScorecardResponse:
      type: object
      properties:
        scorecard:
          $ref: '#/components/schemas/api.commons.Scorecard'
      description: DeleteScorecardResponse contains the deleted scorecard.
    api.v1alpha1.scorecards.DeleteSectionRequest:
      type: object
      properties:
        sectionId:
          type: string
      description: DeleteSectionRequest is the request to delete a section.
    api.v1alpha1.scorecards.DeleteSectionResponse:
      type: object
      properties:
        section:
          $ref: '#/components/schemas/api.commons.Section'
      description: DeleteSectionResponse returns the deleted section.
    api.v1alpha1.scorecards.DeleteSmartEvaluationRequest:
      type: object
      properties:
        smartEvaluationId:
          type: string
      description: DeleteSmartEvaluationRequest represents a request to delete a smart
        evaluation.
    api.v1alpha1.scorecards.DeleteSmartEvaluationResponse:
      type: object
      properties: {}
      description: DeleteSmartEvaluationResponse represents a response to delete a
        smart evaluation.
    api.v1alpha1.scorecards.DeleteSmartQuestionRequest:
      type: object
      properties:
        smartQuestionId:
          type: string
      description: DeleteSmartQuestionRequest is the request to delete a smart question.
    api.v1alpha1.scorecards.DeleteSmartQuestionResponse:
      type: object
      properties:
        smartQuestion:
          $ref: '#/components/schemas/api.commons.SmartQuestion'
      description: DeleteSmartQuestionResponse returns the deleted smart question.
    api.v1alpha1.scorecards.GetAutoEvaluationRequest:
      type: object
      properties:
        autoEvaluationId:
          type: string
      description: GetAutoEvaluationRequest is the request to get an auto evaluation
    api.v1alpha1.scorecards.GetAutoEvaluationResponse:
      type: object
      properties:
        autoEvaluation:
          $ref: '#/components/schemas/api.commons.AutoEvaluation'
      description: GetAutoEvaluationResponse returns the auto evaluation requested.
    api.v1alpha1.scorecards.GetAutoQuestionRequest:
      type: object
      properties:
        autoQuestionId:
          type: string
      description: GetAutoQuestionRequest is the request to get an auto question.
    api.v1alpha1.scorecards.GetAutoQuestionResponse:
      type: object
      properties:
        autoQuestion:
          $ref: '#/components/schemas/api.commons.AutoQuestion'
      description: GetAutoQuestionResponse returns the auto question requested.
    api.v1alpha1.scorecards.GetCategoryRequest:
      type: object
      properties:
        categoryId:
          type: string
        title:
          type: string
      description: GetCategoryRequest is request to get a category by id.
    api.v1alpha1.scorecards.GetCategoryResponse:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/api.commons.Category'
      description: GetCategoryResponse returns the category.
    api.v1alpha1.scorecards.GetEvaluationRequest:
      type: object
      properties:
        evaluationId:
          type: string
      description: GetEvaluationRequest is request to get an evaluation
    api.v1alpha1.scorecards.GetEvaluationResponse:
      type: object
      properties:
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
      description: GetEvaluationReponse is response with requested entity
    api.v1alpha1.scorecards.GetQuestionRequest:
      type: object
      properties:
        questionId:
          type: string
        question:
          type: string
      description: "GetQuestionRequest is the request to get a question by id.\n Must
        have one of either question_id or question"
    api.v1alpha1.scorecards.GetQuestionResponse:
      type: object
      properties:
        question:
          $ref: '#/components/schemas/api.commons.Question'
      description: GetQuestionResponse contains a question.
    api.v1alpha1.scorecards.GetScorecardQuestionRequest:
      type: object
      properties:
        scorecardQuestionId:
          type: string
      description: GetScorecardQuestionRequest is the request to get a scorecard question.
    api.v1alpha1.scorecards.GetScorecardQuestionResponse:
      type: object
      properties:
        scorecardQuestion:
          $ref: '#/components/schemas/api.commons.ScorecardQuestion'
      description: GetScorecardQuestionResponse returns the scorecard question requested.
    api.v1alpha1.scorecards.GetScorecardRequest:
      type: object
      properties:
        scorecardId:
          type: string
        useDefault:
          type: boolean
      description: GetScorecardRequest is the request for getting a scorecard.
    api.v1alpha1.scorecards.GetScorecardResponse:
      type: object
      properties:
        scorecard:
          $ref: '#/components/schemas/api.commons.Scorecard'
      description: GetScorecardResponse contains a scorecard.
    api.v1alpha1.scorecards.GetSectionRequest:
      type: object
      properties:
        sectionId:
          type: string
      description: GetSectionRequest is the request to get a section.
    api.v1alpha1.scorecards.GetSectionResponse:
      type: object
      properties:
        section:
          $ref: '#/components/schemas/api.commons.Section'
      description: GetSectionResponse is the response to getting a section.
    api.v1alpha1.scorecards.GetSmartEvaluationRequest:
      type: object
      properties:
        smartEvaluationId:
          type: string
      description: GetSmartEvaluationRequest represents a request to get a smart evaluation.
    api.v1alpha1.scorecards.GetSmartEvaluationResponse:
      type: object
      properties:
        smartEvaluation:
          $ref: '#/components/schemas/api.commons.SmartEvaluation'
      description: GetSmartEvaluationResponse represents a response to get a smart
        evaluation.
    api.v1alpha1.scorecards.ListAutoEvaluationsByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
        scorecardIds:
          type: array
          items:
            type: string
        completedAt:
          $ref: '#/components/schemas/api.commons.TimeFilter'
        categoryIds:
          type: array
          items:
            type: string
        callSid:
          $ref: '#/components/schemas/api.v1alpha1.scorecards.ListAutoEvaluationsByOrgIdRequest_CallSidFilter'
        agentUserIds:
          type: array
          items:
            type: string
        pageSize:
          type: integer
          format: int32
        orderBy:
          type: string
          description: "Optional. The order by which auto evaluations will be listed.
            Follows sql order by\n syntax. When not provided the order defaults to
            \"completed_at DESC\"."
        pageToken:
          type: string
          description: Optional. The next_page_token returned from a previous List
            request, if any.
        riskLevels:
          type: array
          items:
            type: integer
            format: enum
      description: ListAutoEvaluationsByOrgIdRequest is the request to get a list
        of auto evaluations.
    api.v1alpha1.scorecards.ListAutoEvaluationsByOrgIdRequest_CallSidFilter:
      type: object
      properties:
        anyOf:
          type: array
          items:
            type: string
        eq:
          type: string
          description: filter values must be non-zero to be applied
        gte:
          type: string
        lte:
          type: string
        gt:
          type: string
        lt:
          type: string
    api.v1alpha1.scorecards.ListAutoEvaluationsRequest:
      type: object
      properties:
        scorecardIds:
          type: array
          items:
            type: string
        completedAt:
          $ref: '#/components/schemas/api.commons.TimeFilter'
        categoryIds:
          type: array
          items:
            type: string
        callSid:
          $ref: '#/components/schemas/api.v1alpha1.scorecards.ListAutoEvaluationsRequest_CallSidFilter'
        agentUserIds:
          type: array
          items:
            type: string
        pageSize:
          type: integer
          format: int32
        orderBy:
          type: string
          description: "Optional. The order by which auto evaluations will be listed.
            Follows sql order by\n syntax. When not provided the order defaults to
            \"completed_at DESC\"."
        pageToken:
          type: string
          description: Optional. The next_page_token returned from a previous List
            request, if any.
        riskLevels:
          type: array
          items:
            type: integer
            format: enum
      description: ListAutoEvaluationsRequest is the request to get a list of auto
        evaluations.
    api.v1alpha1.scorecards.ListAutoEvaluationsRequest_CallSidFilter:
      type: object
      properties:
        anyOf:
          type: array
          items:
            type: string
        eq:
          type: string
          description: filter values must be non-zero to be applied
        gte:
          type: string
        lte:
          type: string
        gt:
          type: string
        lt:
          type: string
    api.v1alpha1.scorecards.ListAutoEvaluationsResponse:
      type: object
      properties:
        autoEvaluations:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AutoEvaluation'
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of auto evaluations, or empty
            if there are no\n more entries in the list."
      description: ListAutoEvaluationsResponse returns a list of evaluations.
    api.v1alpha1.scorecards.ListCategoriesByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
        authorIds:
          type: array
          items:
            type: string
        skillProfiles:
          type: array
          items:
            type: string
        categoryType:
          type: integer
          format: enum
      description: ListCategoriesByOrgIdRequest is the request to list categories
        by some criteria.
    api.v1alpha1.scorecards.ListCategoriesRequest:
      type: object
      properties:
        authorIds:
          type: array
          items:
            type: string
        skillProfiles:
          type: array
          items:
            type: string
        callTypes:
          type: array
          items:
            type: integer
            format: enum
        categoryType:
          type: integer
          format: enum
      description: ListCategoriesRequest is the request to list categories by some
        criteria.
    api.v1alpha1.scorecards.ListCategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Category'
      description: ListCategoriesResponse returns a list of categories.
    api.v1alpha1.scorecards.ListEvaluationsByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
        scorerId:
          type: array
          items:
            type: string
        completedAt:
          $ref: '#/components/schemas/api.commons.TimeFilter'
        categoryIds:
          type: array
          items:
            type: string
        agentUserIds:
          type: array
          items:
            type: string
        scorecardIds:
          type: array
          items:
            type: string
        returnFields:
          type: string
          description: "Optional. Fields to return. Defaults to all evaluation fields
            (no sub entities).\n\n Example selecting score, section points, and question
            answers:\n {\n   paths: [\n     \"score\",\n     \"evaluation_section.points\",\n
            \    \"evaluation_section.evaluation_question.answers\"\n   ]\n }"
          format: field-mask
      description: ListEvaluationsByOrgIdRequest is request to get list of evaluations
    api.v1alpha1.scorecards.ListEvaluationsRequest:
      type: object
      properties:
        scorerId:
          type: array
          items:
            type: string
        completedAt:
          $ref: '#/components/schemas/api.commons.TimeFilter'
        categoryIds:
          type: array
          items:
            type: string
        agentUserIds:
          type: array
          items:
            type: string
        scorecardIds:
          type: array
          items:
            type: string
        returnFields:
          type: string
          description: "Optional. Fields to return. Defaults to all evaluation fields
            (no sub entities).\n\n Example selecting score, section points, and question
            answers:\n {\n   paths: [\n     \"score\",\n     \"evaluation_section.points\",\n
            \    \"evaluation_section.evaluation_question.answers\"\n   ]\n }"
          format: field-mask
        isDeleted:
          type: boolean
      description: ListEvaluationsRequest is request to get list of evaluations
    api.v1alpha1.scorecards.ListEvaluationsResponse:
      type: object
      properties:
        evaluations:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Evaluation'
      description: ListEvaluationsResponse returns a list of evaluations
    api.v1alpha1.scorecards.ListQuestionsRequest:
      type: object
      properties:
        authorIds:
          type: array
          items:
            type: string
          description: 'TODO: Consider more flexible message type(s)'
        categoryIds:
          type: array
          items:
            type: string
      description: ListQuestionsRequest is the request to list questions by some criteria.
    api.v1alpha1.scorecards.ListQuestionsResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Question'
      description: ListQuestionsResponse contains a list of questions.
    api.v1alpha1.scorecards.ListScorecardsByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
        authorIds:
          type: array
          items:
            type: string
        categoryIds:
          type: array
          items:
            type: string
        states:
          type: array
          items:
            type: integer
            format: enum
        evaluationTypes:
          type: array
          items:
            type: integer
            format: enum
        callTypes:
          type: array
          items:
            type: integer
            format: enum
      description: ListScorecardsByOrgIdRequest is the request for listing scorecards
        by certain criteria.
    api.v1alpha1.scorecards.ListScorecardsRequest:
      type: object
      properties:
        authorIds:
          type: array
          items:
            type: string
        categoryIds:
          type: array
          items:
            type: string
        states:
          type: array
          items:
            type: integer
            format: enum
        evaluationTypes:
          type: array
          items:
            type: integer
            format: enum
        callTypes:
          type: array
          items:
            type: integer
            format: enum
      description: ListScorecardsRequest is the request for listing scorecards by
        certain criteria.
    api.v1alpha1.scorecards.ListScorecardsResponse:
      type: object
      properties:
        scorecards:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Scorecard'
      description: ListScorecardsResponse includes a list of scorecards.
    api.v1alpha1.scorecards.ListSectionsRequest:
      type: object
      properties:
        scorecardId:
          type: string
      description: ListSectionsRequest is request to list sections by scorecard id.
    api.v1alpha1.scorecards.ListSectionsResponse:
      type: object
      properties:
        sections:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Section'
      description: ListSectionsResponse returns a list of sections.
    api.v1alpha1.scorecards.ListSmartEvaluationsRequest:
      type: object
      properties:
        orderBy:
          type: string
          description: "Optional. The order by which smart evaluations will be listed.
            Follows sql\n order by syntax. Defaults to \"complete_time desc, smart_evaluation_id
            desc\"."
        pageSize:
          type: integer
          description: Optional - number of smart evaluations included in response.
            Defaults to 500.
          format: int32
        pageToken:
          type: string
          description: Optional. The next_page_token returned from a previous List
            request, if any.
        returnFields:
          type: string
          description: "Required. Fields to return.\n\n Example selecting score, section
            points, and question answer:\n {\n   paths: [\n     \"score\",\n     \"smart_evaluation_section.points\",\n
            \    \"smart_evaluation_section.smart_evaluation_question.answer\"\n   ]\n
            }"
          format: field-mask
        filter:
          type: string
          description: 'Optional. The standard list filter as described in https://google.aip.dev/160.

            Multiple comparisons can be provided when separated with a logical AND

            operator. Supported fields, operators and functions are listed below.


            +----------------------------+-----------+-----------------+-----------+

            |                      field |      type |       operators | functions
            |

            +----------------------------+-----------+-----------------+-----------+

            |               scorecard_id |   integer |               = |       any
            |

            |                category_id |   integer |               = |       any
            |

            |              agent_user_id |    string |               = |       any
            |

            |             transcript_sid |   integer | =, >=, <=, >, < |           |

            |              complete_time | timestamp | =, >=, <=, >, < |           |

            +----------------------------+-----------+-----------------+-----------+


            Examples:

            transcript_sid >= 1


            scorecard_id = 0 AND

            agent_user_id = any("00000000-0000-0000-0000-000000000000", "00000000-0000-0000-0000-000000000001")
            AND

            complete_time >= ''2012-04-21T11:30:00-04:00'''
      description: ListSmartEvaluationsRequest represents a request to list smart
        evaluations.
    api.v1alpha1.scorecards.ListSmartEvaluationsResponse:
      type: object
      properties:
        smartEvaluations:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SmartEvaluation'
        nextPageToken:
          type: string
          description: "Token to retrieve the next page, or empty if there are no\n
            more entries in the list."
      description: ListSmartEvaluationsResponse represents a response to list smart
        evaluations.
    api.v1alpha1.scorecards.PreviewEvaluationScoreRequest:
      type: object
      properties:
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
        scorecard:
          $ref: '#/components/schemas/api.commons.Scorecard'
    api.v1alpha1.scorecards.PreviewEvaluationScoreResponse:
      type: object
      properties:
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
    api.v1alpha1.scorecards.RestoreEvaluationRequest:
      type: object
      properties:
        evaluationId:
          type: string
        userId:
          type: string
      description: RestoreEvaluationRequest is request to restore a deleted evaluation
    api.v1alpha1.scorecards.RestoreEvaluationResponse:
      type: object
      properties:
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
      description: RestoreEvaluationReponse contains the restored evaluation
    api.v1alpha1.scorecards.SampleAgentCall:
      type: object
      properties:
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        callStart:
          type: string
          format: date-time
        callDuration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
        speech:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
        silence:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
        agentUserId:
          type: string
      description: SampleAgentCall is an Agent Call returned by SampleCallsByCategory
    api.v1alpha1.scorecards.SampleCallsByCategoryRequest:
      type: object
      properties:
        categoryId:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        scorerMaxEvaluations:
          type: integer
          format: int32
        samplePercentage:
          type: integer
          format: int32
        agentUserIds:
          type: array
          items:
            type: string
        scorecardId:
          type: string
      description: SampleCallsByCategoryRequest is a request to get some sample calls
        for evaluating
    api.v1alpha1.scorecards.SampleCallsByCategoryResponse:
      type: object
      properties:
        agentCalls:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.scorecards.SampleAgentCall'
      description: SampleCallsByCategoryResponse returns the agent calls
    api.v1alpha1.scorecards.ScoreEvaluationRequest:
      type: object
      properties:
        evaluationId:
          type: string
      description: ScoreEvaluationRequest is request to score an evaluation
    api.v1alpha1.scorecards.ScoreEvaluationResponse:
      type: object
      properties:
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
      description: ScoreEvaluationResponse returns the evaluation that was scored
    api.v1alpha1.scorecards.StreamAutoEvaluationsRequest:
      type: object
      properties:
        scorecardIds:
          type: array
          items:
            type: string
        completedAt:
          $ref: '#/components/schemas/api.commons.TimeFilter'
      description: StreamAutoEvaluationsRequest is the request to stream a list of
        auto evaluations.
    api.v1alpha1.scorecards.StreamAutoEvaluationsResponse:
      type: object
      properties:
        autoEvaluation:
          $ref: '#/components/schemas/api.commons.AutoEvaluation'
      description: StreamAutoEvaluationsResponse is the response object streamed.
    api.v1alpha1.scorecards.UpdateAutoQuestionRequest:
      type: object
      properties:
        autoQuestion:
          $ref: '#/components/schemas/api.commons.AutoQuestion'
        updateMask:
          type: string
          format: field-mask
      description: UpdateAutoQuestionRequest is the request to update an auto question.
    api.v1alpha1.scorecards.UpdateAutoQuestionResponse:
      type: object
      properties:
        autoQuestion:
          $ref: '#/components/schemas/api.commons.AutoQuestion'
      description: UpdateAutoQuestionResponse returns the updated auto question.
    api.v1alpha1.scorecards.UpdateCategoryRequest:
      type: object
      properties:
        category:
          allOf:
          - $ref: '#/components/schemas/api.commons.Category'
          description: Required.
        updateMask:
          type: string
          description: 'Required. Valid paths: [title, description].'
          format: field-mask
      description: UpdateCategoryRequest is the request to update a category by id.
    api.v1alpha1.scorecards.UpdateCategoryResponse:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/api.commons.Category'
      description: UpdateCategoryResponse returns the updated category.
    api.v1alpha1.scorecards.UpdateEvaluationQuestionRequest:
      type: object
      properties:
        evaluationQuestion:
          $ref: '#/components/schemas/api.commons.EvaluationQuestion'
        updateMask:
          type: string
          format: field-mask
      description: UpdateEvaluationQuestionRequest is request to update an existing
        evaluation question
    api.v1alpha1.scorecards.UpdateEvaluationQuestionResponse:
      type: object
      properties:
        evaluationQuestion:
          $ref: '#/components/schemas/api.commons.EvaluationQuestion'
      description: UpdateEvaluationQuestionResponse is response with updated entity
    api.v1alpha1.scorecards.UpdateEvaluationRequest:
      type: object
      properties:
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
        updateMask:
          type: string
          format: field-mask
    api.v1alpha1.scorecards.UpdateEvaluationResponse:
      type: object
      properties:
        evaluation:
          $ref: '#/components/schemas/api.commons.Evaluation'
    api.v1alpha1.scorecards.UpdateQuestionRequest:
      type: object
      properties:
        question:
          allOf:
          - $ref: '#/components/schemas/api.commons.Question'
          description: Required.
        updateMask:
          type: string
          description: "Required. Valid paths: [question, description].\n To update
            Categories, use *Category and *QuestionCategory methods."
          format: field-mask
      description: UpdateQuestionRequest is the request to update question by id.
    api.v1alpha1.scorecards.UpdateQuestionResponse:
      type: object
      properties:
        question:
          $ref: '#/components/schemas/api.commons.Question'
      description: UpdateQuestionResponse contains the updated question.
    api.v1alpha1.scorecards.UpdateScorecardQuestionRequest:
      type: object
      properties:
        scorecardQuestion:
          $ref: '#/components/schemas/api.commons.ScorecardQuestion'
        updateMask:
          type: string
          format: field-mask
      description: UpdateScorecardQuestionRequest is the request to update a scorecard
        question.
    api.v1alpha1.scorecards.UpdateScorecardQuestionResponse:
      type: object
      properties:
        scorecardQuestion:
          $ref: '#/components/schemas/api.commons.ScorecardQuestion'
      description: UpdateScorecardQuestionResponse returns the updated scorecard question.
    api.v1alpha1.scorecards.UpdateScorecardRequest:
      type: object
      properties:
        scorecard:
          allOf:
          - $ref: '#/components/schemas/api.commons.Scorecard'
          description: Required.
        updateMask:
          type: string
          description: "Required. Valid paths: [title, description, pass_score, score_type,\n
            evaluation_type, allow_feedback, distribute_weights, category.category_id].\n
            To update Sections, use *Section and *ScorecardQuestion methods."
          format: field-mask
      description: UpdateScorecardRequest is the request for updating a scorecard.
    api.v1alpha1.scorecards.UpdateScorecardResponse:
      type: object
      properties:
        scorecard:
          $ref: '#/components/schemas/api.commons.Scorecard'
      description: UpdateScorecardResponse returns the updated scorecard.
    api.v1alpha1.scorecards.UpdateSectionRequest:
      type: object
      properties:
        section:
          allOf:
          - $ref: '#/components/schemas/api.commons.Section'
          description: Required.
        updateMask:
          type: string
          description: "Required. Valid paths: [title, description, weight].\n To
            update Questions, use *ScorecardQuestion methods."
          format: field-mask
      description: UpdateSectionRequest is the request to update a section.
    api.v1alpha1.scorecards.UpdateSectionResponse:
      type: object
      properties:
        section:
          $ref: '#/components/schemas/api.commons.Section'
      description: UpdateSectionResponse returns the updated section.
    api.v1alpha1.scorecards.UpdateSmartQuestionRequest:
      type: object
      properties:
        smartQuestion:
          $ref: '#/components/schemas/api.commons.SmartQuestion'
        updateMask:
          type: string
          format: field-mask
      description: UpdateSmartQuestionRequest is the request to update a smart question.
    api.v1alpha1.scorecards.UpdateSmartQuestionResponse:
      type: object
      properties:
        smartQuestion:
          $ref: '#/components/schemas/api.commons.SmartQuestion'
      description: UpdateSmartQuestionResponse returns the updated smart question.
    api.v1alpha1.sentinel.LogEvent:
      type: object
      properties:
        traceId:
          type: string
        sessionId:
          type: string
          description: the browsers session id
        message:
          type: string
        location:
          type: string
          description: the browsers current uri
        stackTrace:
          type: string
        timestamp:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
        severity:
          type: integer
          format: enum
    api.v1alpha1.sentinel.SendEventsReq:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.sentinel.SentinelEvent'
    api.v1alpha1.sentinel.SendEventsRes:
      type: object
      properties: {}
    api.v1alpha1.sentinel.SentinelEvent:
      type: object
      properties:
        logEvent:
          $ref: '#/components/schemas/api.v1alpha1.sentinel.LogEvent'
    api.v1alpha1.soundboard.CreateSoundboardReq:
      type: object
      properties:
        soundboard:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.soundboard.SoundboardDetails'
          description: The metadata of the soundboard.
        ftsId:
          type: string
          description: The generated ID received from fts.GetUploadFileUrl.
      description: Request message for the CreateSoundboard RPC method.
    api.v1alpha1.soundboard.CreateSoundboardRes:
      type: object
      properties:
        soundboardId:
          type: string
          description: Generated snowflake ID which will correspond to the soundboard.
        ftsId:
          type: string
          description: The generated ID received from fts.GetUploadFileUrl.
      description: Response message for the CreateSoundboard RPC method.
    api.v1alpha1.soundboard.DeleteSoundboardReq:
      type: object
      properties:
        soundboardId:
          type: string
          description: ID of the soundboard whose file and details will be deleted.
      description: Request message for the DeleteSoundboard RPC method.
    api.v1alpha1.soundboard.DeleteSoundboardRes:
      type: object
      properties: {}
      description: Response message for the DeleteSoundboard RPC method.
    api.v1alpha1.soundboard.GetSoundboardFileReq:
      type: object
      properties:
        soundboardId:
          type: string
          description: ID of the requested soundboard whose file will be returned.
      description: Request message for the GetSoundboardFile RPC method.
    api.v1alpha1.soundboard.GetSoundboardFileRes:
      type: object
      properties:
        soundboardFile:
          type: string
          description: Segments of the audio file, sent in 3mb chunks.
          format: bytes
      description: Response message for the GetSoundboardFile RPC method.
    api.v1alpha1.soundboard.ListSoundboardsReq:
      type: object
      properties: {}
      description: Request message for the ListSoundboards RPC method.
    api.v1alpha1.soundboard.ListSoundboardsRes:
      type: object
      properties:
        soundboards:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.soundboard.SoundboardDetails'
          description: Each soundboard's metadata belonging to org.
      description: Response message for the ListSoundboards RPC method.
    api.v1alpha1.soundboard.SoundboardDetails:
      type: object
      properties:
        soundboardId:
          type: string
          description: ID of the soundboard, in the snowflake ID format.
        fileName:
          type: string
          description: Name of audio file (does not include path), e.g. 'file.wav'.
        fileType:
          type: integer
          description: Audio file format of soundboard (.wav or .mp3).
          format: enum
        title:
          type: string
          description: Soundboard title.
        description:
          type: string
          description: Soundboard description.
        dateCreated:
          type: string
          description: Timestamp of when the soundboard was created.
          format: date-time
        lastModified:
          type: string
          description: Timestamp of when the soundboard was last updated.
          format: date-time
        fileSize:
          type: string
          description: Soundboard audio file size as number of bytes, e.g. '3145728'
            = 3mb.
        recordingLength:
          type: string
          description: Length of audio file in seconds, e.g. '192' = 3:12.
      description: "SoundboardDetails is the core entity which contains metadata for
        soundboard\n audio files, along with their identifiers."
    api.v1alpha1.soundboard.UpdateSoundboardReq:
      type: object
      properties:
        soundboard:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.soundboard.SoundboardDetails'
          description: Soundboard details to be updated, must contain soundboard and
            org id.
      description: Request message for the UpdateSoundboard RPC method.
    api.v1alpha1.soundboard.UpdateSoundboardRes:
      type: object
      properties:
        soundboardId:
          type: string
          description: ID of the soundboard which was updated.
      description: Response message for the UpdateSoundboard RPC method.
    api.v1alpha1.srec.DeleteScreenRecordingRequest:
      type: object
      properties:
        sessionId:
          type: string
          description: Required. The unique id of the screen recording to be deleted.
      description: DeleteScreenRecordingRequest is a request for deleting a screen
        recording.
    api.v1alpha1.srec.DeleteScreenRecordingResponse:
      type: object
      properties: {}
      description: DeleteScreenRecordingResponse is a response for deleting a screen
        recording.
    api.v1alpha1.srec.GetScreenRecordingURLRequest:
      type: object
      properties:
        sessionId:
          type: string
          description: Required. The session id of this screen recording. Must be
            non empty.
      description: GetScreenRecordingURLRequest is a request for getting a screen
        recording url.
    api.v1alpha1.srec.GetScreenRecordingURLResponse:
      type: object
      properties:
        url:
          type: string
          description: The url for the screen recording.
      description: GetScreenRecordingURLResponse is a response for getting a screen
        recording url.
    api.v1alpha1.srec.ListScreenRecordingsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Optional. The number of screen recordings to include in a
            single response. When not\n provided this defaults to 100."
          format: uint32
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
      description: ListScreenRecordingsRequest is a request for listing screen recordings.
    api.v1alpha1.srec.ListScreenRecordingsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of screen recordings, or empty
            if there are no\n more screen recordings in the list."
        recordings:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.srec.ScreenRecording'
          description: List of screen recordings which contains at most one request
            page_size.
      description: ListScreenRecordingsResponse is a response for listing screen recordings.
    api.v1alpha1.srec.ScreenRecording:
      type: object
      properties:
        sessionId:
          type: string
          description: Output only. The unique id of this screen recording.
        agentFirstName:
          type: string
          description: Required. The agent first name.
        agentLastName:
          type: string
          description: Required. The agent last name.
        startTime:
          type: string
          description: Required. Start time is the start time of the screen recording.
          format: date-time
        audioTime:
          type: integer
          description: Required. Audio time in milliseconds.
          format: uint32
        audioBytes:
          type: string
          description: Required. Audio bytes of the screen recording.
      description: ScreenRecording is a resource in the SREC API.
    api.v1alpha1.tickets.AddEntityRefRequest:
      type: object
      properties:
        entityRef:
          $ref: '#/components/schemas/api.v1alpha1.tickets.EntityRef'
    api.v1alpha1.tickets.AddEntityRefResponse:
      type: object
      properties: {}
    api.v1alpha1.tickets.AssignProjectTemplateRequest:
      type: object
      properties:
        projectTemplate:
          $ref: '#/components/schemas/api.commons.AssignProjectTemplate'
        projectId:
          type: string
        templateDescription:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.TemplateDescription'
      description: AssignProjectTemplate
    api.v1alpha1.tickets.AssignProjectTemplateResponse:
      type: object
      properties:
        isAssigned:
          type: boolean
    api.v1alpha1.tickets.AssignTicketActionRequest:
      type: object
      properties:
        ticketActionId:
          type: string
    api.v1alpha1.tickets.AssignTicketActionResponse:
      type: object
      properties:
        isAssigned:
          type: boolean
    api.v1alpha1.tickets.AssignTicketReq:
      type: object
      properties:
        ticketSid:
          type: string
        assigneeList:
          type: string
        assignedId:
          type: string
      description: AssignTicketReq
    api.v1alpha1.tickets.AssignTicketRes:
      type: object
      properties:
        ticketSid:
          type: string
        assigneeList:
          type: string
        assignedId:
          type: string
      description: AssignTicketRes
    api.v1alpha1.tickets.AvailableTicketsFilter:
      type: object
      properties:
        agentSkillId:
          type: array
          items:
            type: string
      description: AvailableTicketsFilter
    api.v1alpha1.tickets.ChangeTicketStatusRequest:
      type: object
      properties:
        ticketId:
          type: string
        statusId:
          type: string
        ticketStatus:
          type: integer
          format: enum
    api.v1alpha1.tickets.ChangeTicketStatusResponse:
      type: object
      properties:
        isStatusEdited:
          type: boolean
    api.v1alpha1.tickets.CloseTicketActionRequest:
      type: object
      properties:
        ticketActionId:
          type: string
        ticketId:
          type: string
        comment:
          type: string
        ticketCode:
          type: string
          description: ticket_code
    api.v1alpha1.tickets.CloseTicketActionResponse:
      type: object
      properties:
        isClosed:
          type: boolean
    api.v1alpha1.tickets.CloseTicketReq:
      type: object
      properties:
        ticketSid:
          type: string
          description: ticket Id of the ticket which needs to be closed
        comment:
          type: string
          description: description of the comment
        fromStatus:
          type: string
          description: from status of the ticket
        ticketCode:
          type: string
          description: ticket_code
      description: CloseTicketReq - Close Ticket Request Messages
    api.v1alpha1.tickets.CloseTicketRes:
      type: object
      properties:
        isStatus:
          type: boolean
      description: CloseTicketRes - Close Ticket Response Messages
    api.v1alpha1.tickets.CreateCommentReq:
      type: object
      properties:
        ticketSid:
          type: string
        comment:
          type: string
          description: description of the comment
        ticketCode:
          type: string
          description: ticket_code
      description: Create CommentReq  - Create Comment Request From Client
    api.v1alpha1.tickets.CreateCommentRes:
      type: object
      properties:
        comment:
          allOf:
          - $ref: '#/components/schemas/api.commons.Comment'
          description: Returns the created comment row in the response
      description: CreateCommenttRes - Response from CreateComment BE API
    api.v1alpha1.tickets.CreateSelfAssignReq:
      type: object
      properties:
        ticketSid:
          type: string
      description: CreateSelfAssignReq -
    api.v1alpha1.tickets.CreateSelfAssignRes:
      type: object
      properties:
        isAssigned:
          type: boolean
      description: CreateSelfAssignRes -
    api.v1alpha1.tickets.CreateSlaReq:
      type: object
      properties:
        slaSid:
          type: string
          description: sla_sid of the sla to be created.
        name:
          type: string
          description: name of the sla
        description:
          type: string
          description: description of the sla
        interval:
          type: string
          description: sla interval
        duration:
          allOf:
          - $ref: '#/components/schemas/api.commons.Duration'
          description: SLA Duration
      description: Create CreateSlaReq  - Create Sla Request From Client
    api.v1alpha1.tickets.CreateSlaRes:
      type: object
      properties:
        sla:
          allOf:
          - $ref: '#/components/schemas/api.commons.TicketSla'
          description: Returns the created sla row in the response
      description: CreateSlaRes - Response from CreateSla BE API
    api.v1alpha1.tickets.CreateTicketActionRequest:
      type: object
      properties:
        ticketAction:
          $ref: '#/components/schemas/api.commons.TicketAction'
    api.v1alpha1.tickets.CreateTicketActionResponse:
      type: object
      properties:
        ticketAction:
          $ref: '#/components/schemas/api.commons.TicketAction'
    api.v1alpha1.tickets.CreateTicketReq:
      type: object
      properties:
        title:
          type: string
          description: title of the ticket to be created.
        description:
          type: string
          description: description of the ticket
        projectSid:
          type: string
          description: the enabled project sid. project must have been enabled/imported
            from omni.project.project_sid to tickets_db.ticket_project.project_sid
        dueDate:
          type: string
          description: ticket due date
          format: date-time
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Metadata'
          description: A list of conversation context meatadatgit stata
        ticketSkills:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Skills'
          description: A list of skills assotiated with a ticket
        status:
          type: string
          description: 'Status - Ticket status : 1 open, 2 doing, 3 close etc'
        ticketSla:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Sla'
          description: A list of sla assotiated with a ticket
        assignSelf:
          type: boolean
        assignOther:
          type: string
        ticketAction:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.TicketAction'
        ticketAssignee:
          type: array
          items:
            type: string
          description: assignee list
        contactEntryId:
          type: string
      description: CreateTicketReq - Request for CreateTicket
    api.v1alpha1.tickets.CreateTicketRes:
      type: object
      properties:
        ticket:
          allOf:
          - $ref: '#/components/schemas/api.commons.Ticket'
          description: Returns the created ticket row in the response
      description: CreateTicketRes - Response from CreateTicket BE API
    api.v1alpha1.tickets.CreateTicketTemplateRequest:
      type: object
      properties:
        ticketTemplate:
          $ref: '#/components/schemas/api.commons.TicketTemplate'
    api.v1alpha1.tickets.CreateTicketTemplateResponse:
      type: object
      properties:
        ticketTemplate:
          $ref: '#/components/schemas/api.commons.TicketTemplate'
    api.v1alpha1.tickets.EditMaskTicketReq:
      type: object
      properties:
        ticketSid:
          type: string
          description: Ticket Id
        editValue:
          allOf:
          - $ref: '#/components/schemas/api.commons.Ticket'
          description: Ticket Object
        editedFieldsMask:
          type: array
          items:
            type: string
            format: field-mask
          description: Field to be edited in DB
        ticketCode:
          type: string
          description: ticket_code
        contactEntryId:
          type: string
      description: "EditMaskTicketReq - Request for EditMaskTicket\n EditTicketReq
        would be deprecated"
    api.v1alpha1.tickets.EditMaskTicketRes:
      type: object
      properties:
        isEdited:
          type: boolean
      description: "EditMaskTicketRes - Response for EditMaskTicketReq\n EditTicketRes
        would be deprecated"
    api.v1alpha1.tickets.EditTicketReq:
      type: object
      properties:
        ticketSid:
          type: string
        editValue:
          allOf:
          - $ref: '#/components/schemas/api.commons.EditAttribute'
          description: The comment text
      description: EditTicketReq - Request for EditTicketReq
    api.v1alpha1.tickets.EditTicketRes:
      type: object
      properties:
        isEdited:
          type: boolean
      description: EditTicketRes - Response for EditTicketReq
    api.v1alpha1.tickets.EditTicketTemplateRequest:
      type: object
      properties:
        ticketTemplateId:
          type: string
        editValue:
          $ref: '#/components/schemas/api.commons.TicketTemplate'
        editedFieldsMask:
          type: string
          format: field-mask
    api.v1alpha1.tickets.EditTicketTemplateResponse:
      type: object
      properties:
        isEdited:
          type: boolean
    api.v1alpha1.tickets.EnableProjectReq:
      type: object
      properties:
        projectSid:
          type: string
          description: project seq id of project to be enabled
        projectCode:
          type: string
          description: Project code to be set
        projectTitle:
          type: string
          description: Project title pulled from Omni
        isActive:
          type: boolean
          description: Is project enabled for ticketing
      description: EnableProjectReq - Details of project to be enabled in the ticketing
        system
    api.v1alpha1.tickets.EnableProjectRes:
      type: object
      properties:
        success:
          type: boolean
          description: result of project mapped to ticket was successful
      description: EnableProjectRes - Indicates result of the project enable request
    api.v1alpha1.tickets.EntityRef:
      type: object
      properties:
        orgId:
          type: string
        regionId:
          type: string
        ticketCode:
          type: string
        uri:
          type: string
      description: should this be in a separate folder / file
    api.v1alpha1.tickets.GetActionTypeRequest:
      type: object
      properties: {}
      description: Request all the Action Types
    api.v1alpha1.tickets.GetActionTypeResponse:
      type: object
      properties:
        actionType:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ActionType'
      description: Returns all the Action Types
    api.v1alpha1.tickets.GetPhoneNumberTypeRequest:
      type: object
      properties:
        phoneNumber:
          type: string
      description: Reqiest For Phone Number Validation - Mobile/Other/Invalid
    api.v1alpha1.tickets.GetPhoneNumberTypeResponse:
      type: object
      properties:
        phoneType:
          type: integer
          format: enum
    api.v1alpha1.tickets.ListAgentTicketsRequest:
      type: object
      properties:
        selectFieldMask:
          type: string
          format: field-mask
        filterMask:
          type: string
          format: field-mask
      description: ListAgentTicketsRequest -
    api.v1alpha1.tickets.ListAgentTicketsResponse:
      type: object
      properties:
        ticket:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Ticket'
      description: ListAgentTicketsResponse -
    api.v1alpha1.tickets.ListAllocatedTicketReq:
      type: object
      properties: {}
      description: ListAllocatedTicketReq -
    api.v1alpha1.tickets.ListAllocatedTicketRes:
      type: object
      properties:
        ticketSid:
          type: array
          items:
            type: string
      description: ListAllocatedTicketRes -
    api.v1alpha1.tickets.ListAvailableAgentTicketsRequest:
      type: object
      properties:
        selectFieldMask:
          type: string
          format: field-mask
        availableFilter:
          $ref: '#/components/schemas/api.v1alpha1.tickets.AvailableTicketsFilter'
        agentViewLimit:
          type: string
      description: ListAvailableAgentTicketsRequest -
    api.v1alpha1.tickets.ListAvailableAgentTicketsResponse:
      type: object
      properties:
        ticketSid:
          type: array
          items:
            type: string
        ticket:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Ticket'
      description: ListAvailableAgentTicketsResponse -
    api.v1alpha1.tickets.ListEnabledProjectsReq:
      type: object
      properties: {}
      description: ListEnabledProjectsReq - Request to list enabled projects in ticketing
        system
    api.v1alpha1.tickets.ListEnabledProjectsRes:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.TicketProject'
          description: enabled projects list
      description: ListEnabledProjectsRes - Response wraps list of projects enabled
        for ticketing system
    api.v1alpha1.tickets.ListEntityRefsByTicketRequest:
      type: object
      properties:
        ticketCode:
          type: string
    api.v1alpha1.tickets.ListEntityRefsByTicketResponse:
      type: object
      properties:
        entityRef:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.tickets.EntityRef'
    api.v1alpha1.tickets.ListSkillsRequest:
      type: object
      properties: {}
      description: ListSkillsRequest - request message
    api.v1alpha1.tickets.ListSkillsResponse:
      type: object
      properties:
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.tickets.Skill'
      description: ListSkillsResponse - response message wraps p3 skills Id and name
    api.v1alpha1.tickets.ListSlaConditionReq:
      type: object
      properties: {}
      description: ListSlaConditionReq -
    api.v1alpha1.tickets.ListSlaConditionRes:
      type: object
      properties:
        slaCondition:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.SlaConditions'
      description: ListSlaConditionRes -
    api.v1alpha1.tickets.ListSlaReq:
      type: object
      properties: {}
      description: ListSlaReq -
    api.v1alpha1.tickets.ListSlaRes:
      type: object
      properties:
        ticketsSla:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.TicketSla'
      description: ListSlaRes -
    api.v1alpha1.tickets.ListTicketAuditLogReq:
      type: object
      properties:
        ticketSid:
          type: string
          description: ticket_sid  scoping filter
        ticketCode:
          type: string
          description: ticket_code
      description: ListTicketAuditLogReq -
    api.v1alpha1.tickets.ListTicketAuditLogRes:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.audit.AuditEvent'
          description: the retrieved audit events
      description: ListTicketAuditLogRes -
    api.v1alpha1.tickets.ListTicketTemplateRequest:
      type: object
      properties:
        ticketTemplateId:
          type: string
        projectId:
          type: string
        requestMask:
          type: string
          description: List values based on TemplateId OR ProjectId. If no mask is
            sent, return all template's based on ORG Id
          format: field-mask
        templateId:
          type: string
        templateProjectId:
          type: string
    api.v1alpha1.tickets.ListTicketTemplateResponse:
      type: object
      properties:
        enabledTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ListTemplate'
        ticketProjectTemplate:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.TicketProjectTemplate'
    api.v1alpha1.tickets.ListTicketsByEntityRefRequest:
      type: object
      properties:
        uri:
          type: string
    api.v1alpha1.tickets.ListTicketsByEntityRefResponse:
      type: object
      properties:
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Ticket'
    api.v1alpha1.tickets.ListTicketsReq:
      type: object
      properties: {}
      description: ListTicketsReq
    api.v1alpha1.tickets.ListTicketsRes:
      type: object
      properties:
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Ticket'
    api.v1alpha1.tickets.ListUsersRequest:
      type: object
      properties: {}
      description: ListUsersRequest - Users request message
    api.v1alpha1.tickets.ListUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.tickets.User'
      description: ListUsersResponse - response wraps userId, first_name, last_name
    api.v1alpha1.tickets.ReplyCommentReq:
      type: object
      properties:
        commentSid:
          type: string
          description: The snowflake id of a comment row in ticket_comment.
        ticketSid:
          type: string
          description: The ticket reference where the comment was added.
        reply:
          type: string
          description: The comment text
        createdById:
          type: string
          description: commenter by id
        ticketCode:
          type: string
          description: ticket_code
      description: ReplyCommentReq - Reply Comment Request Messages
    api.v1alpha1.tickets.ReplyCommentRes:
      type: object
      properties:
        isCreated:
          allOf:
          - $ref: '#/components/schemas/api.commons.ConfirmReplyComment'
          description: Returns boolen true OR False in the response
      description: ReplyCommentRes - Reply Comment Response Messages
    api.v1alpha1.tickets.Skill:
      type: object
      properties:
        skillId:
          type: string
        name:
          type: string
    api.v1alpha1.tickets.UpdateSlaReq:
      type: object
      properties:
        slaSid:
          type: string
          description: sla_sid of the sla to be created.
        isActive:
          type: string
          description: sla is_active
      description: UpdateSlaReq -
    api.v1alpha1.tickets.UpdateSlaRes:
      type: object
      properties:
        ticketsSla:
          $ref: '#/components/schemas/api.commons.TicketSla'
      description: ListSlaRes -
    api.v1alpha1.tickets.User:
      type: object
      properties:
        userId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        isActive:
          type: boolean
    api.v1alpha1.tickets.ViewTicketReq:
      type: object
      properties:
        ticketSid:
          type: string
        ticketCode:
          type: string
          description: ticket_code
      description: ViewTicketReq -
    api.v1alpha1.tickets.ViewTicketRes:
      type: object
      properties:
        ticket:
          $ref: '#/components/schemas/api.commons.Ticket'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.Comment'
        replyComment:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.ReplyComment'
      description: ViewTicketRes -
    api.v1alpha1.vanalytics.AgentCallLogQuery:
      type: object
      properties:
        callSkillsInitial:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.CallSkillsInitialQuery'
          description: call skills initial will query the initial call skills.
      description: AgentCallLogQuery is a query for the agent call log.
    api.v1alpha1.vanalytics.AgentResponse:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
      description: AgentResponse contains the agent responses aka dispositions.
    api.v1alpha1.vanalytics.AgentResponse_Key:
      type: object
      properties:
        in:
          type: array
          items:
            type: string
          description: Optional. Queries where key in list provided.
        startsWith:
          type: string
          description: Optional. Queries where key starts with given string.
        contains:
          type: string
          description: Optional. Queries where key contains given string.
      description: Key defines a query on keys.
    api.v1alpha1.vanalytics.AgentResponse_Numbers:
      type: object
      properties:
        in:
          type: array
          items:
            type: number
            format: double
          description: Optional. Queries where value in list provided.
        gte:
          type: number
          description: Optional. Queries where greater than or equal.
          format: double
        lte:
          type: number
          description: Optional. Queries where less than or equal.
          format: double
        gt:
          type: number
          description: Optional. Queries where greater than.
          format: double
        lt:
          type: number
          description: Optional. Queries where less than.
          format: double
        eq:
          type: number
          description: Optional. Queries where equal to.
          format: double
      description: Numbers defines a query on values as numbers.
    api.v1alpha1.vanalytics.AgentResponse_Values:
      type: object
      properties:
        in:
          type: array
          items:
            type: string
          description: Optional. Queries where value in list provided.
        startsWith:
          type: string
          description: Optional. Queries where value for key starts with given string.
        contains:
          type: string
          description: Optional. Queries where value for key contains given string.
      description: Values defines a query on values.
    api.v1alpha1.vanalytics.Agent_UserName:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: any is a set of agent user names which the transcript must
            contain at least one of
        all:
          type: array
          items:
            type: string
          description: all is a set of agent user names which the transcript must
            contain
    api.v1alpha1.vanalytics.AuditRequest:
      type: object
      properties:
        since:
          type: string
          format: date-time
        until:
          type: string
          format: date-time
    api.v1alpha1.vanalytics.AuditResponse:
      type: object
      properties:
        audioTime:
          type: number
          description: audio time in seconds within billing period
          format: double
        billedAudioTime:
          type: number
          description: billed_audio time in seconds within billing period
          format: double
        lastUsage:
          type: string
          description: "last_usage is the date of the last transcription\n within
            the billing period"
          format: date-time
        billedTranscripts:
          type: string
          description: "billed_transcripts is the number of billed transcripts\n within
            the billing period"
    api.v1alpha1.vanalytics.BillingSpan:
      type: object
      properties:
        calls:
          type: string
          description: Number of calls/transcripts in the billing period.
        hours:
          type: string
          description: "Total hours in the billing period. Each call is rounded up
            to\n the next 15 seconds and the total for the month is rounded up to\n
            the next hour."
        cost:
          type: number
          description: Cost is the total cost for the billing period.
          format: double
        startTime:
          type: string
          description: "Start time is the start time of the billing span. Transcripts
            in this span\n must have create_time >= start_time."
          format: date-time
        endTime:
          type: string
          description: "End time is the end time of the billing span. Transcripts
            in this span must\n have a create_time < end_time."
          format: date-time
    api.v1alpha1.vanalytics.BoolExpr_Filter:
      type: object
      properties:
        filterSid:
          type: string
          description: Required. Filter sid.
      description: Filter defines a filter.
    api.v1alpha1.vanalytics.BulkCreateFlagReviewRequest:
      type: object
      properties:
        flagSid:
          type: string
          description: "Optional. The ID of the flag for the flag reviews. When not
            provided\n all deleted flags will be given a review."
        notes:
          type: string
          description: Optional. Any notes written for the flag reviews.
      description: BulkCreateFlagReviewRequest is a request for creating many flag
        reviews.
    api.v1alpha1.vanalytics.BulkCreateFlagReviewResponse:
      type: object
      properties: {}
      description: BulkCreateFlagReviewResponse is a response for creating many flag
        reviews.
    api.v1alpha1.vanalytics.BulkDeleteTranscriptsRequest:
      type: object
      properties:
        query:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest'
          description: Required. A query which determines which transcripts to delete.
      description: BulkDeleteTranscriptsRequest defines the bulk delete transcripts
        request.
    api.v1alpha1.vanalytics.BulkDeleteTranscriptsResponse:
      type: object
      properties:
        total:
          type: integer
          description: The number of transcripts deleted.
          format: uint32
      description: BulkDeleteTranscriptsResponse defines the bulk delete transcripts
        response.
    api.v1alpha1.vanalytics.BulkRestoreTranscriptsRequest:
      type: object
      properties:
        query:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest'
          description: Required. A query which determines which transcripts to restore.
      description: BulkRestoreTranscriptsRequest defines the bulk restore transcripts
        request.
    api.v1alpha1.vanalytics.BulkRestoreTranscriptsResponse:
      type: object
      properties:
        total:
          type: integer
          description: The number of transcripts restored.
          format: uint32
      description: BulkRestoreTranscriptsResponse defines the bulk restore transcripts
        response.
    api.v1alpha1.vanalytics.CallSkillsInitialQuery:
      type: object
      properties:
        need:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.VanaTermsQuery'
          description: Optional. Needed initial call skills to filter on.
        want:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.VanaTermsQuery'
          description: Optional. Wanted initial call skills to filter on.
      description: CallSkillsInitialQuery is a query for the initial call skills.
    api.v1alpha1.vanalytics.Correction:
      type: object
      properties:
        correctionSid:
          type: string
          description: Output only. The unique id of this correction.
        transcriptSid:
          type: string
          description: Required. The transcript sid of the transcript that the correction
            is on.
        startOffset:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Required. Start offset of the selected words in the transcript.
        endOffset:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Required. End offset of the selected words in the transcript.
        proposedText:
          type: string
          description: Required. Proposed text of what the transcript selected text
            should be.
        channel:
          type: integer
          description: Required. Channel that the words were spoken on.
          format: uint32
      description: Correction is a resource in the Vanalytics API.
    api.v1alpha1.vanalytics.CreateCorrectionRequest:
      type: object
      properties:
        correction:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Correction'
          description: The correction resource to create.
      description: CreateCorrectionRequest is a request for creating a correction.
    api.v1alpha1.vanalytics.CreateCorrectionResponse:
      type: object
      properties:
        correction:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Correction'
          description: The correction resource that was created.
      description: CreateCorrectionResponse is a response for creating a correction.
    api.v1alpha1.vanalytics.CreateFilterRequest:
      type: object
      properties:
        filter:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Filter'
          description: The filter resource to create.
    api.v1alpha1.vanalytics.CreateFlagFilterRequest:
      type: object
      properties:
        flagFilter:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagFilter'
          description: The flag filter resource to create.
      description: "CreateFlagFilterRequest is a request for creating a flag filter.\n
        DEPRECATED"
    api.v1alpha1.vanalytics.CreateFlagRequest:
      type: object
      properties:
        flag:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag'
          description: The flag resource to create.
      description: CreateFlagRequest is a request for creating a flag.
    api.v1alpha1.vanalytics.CreateFlagReviewRequest:
      type: object
      properties:
        flagReview:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagReview'
          description: FlagReview resource to create.
      description: CreateFlagReviewRequest is a request for creating a flag review.
    api.v1alpha1.vanalytics.CreateFlagTranscriptRequest:
      type: object
      properties:
        transcriptSids:
          type: array
          items:
            type: string
          description: Required. The transcript sids to be flagged.
        flag:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag'
          description: Required. The flag for flagging the transcripts.
      description: CreateFlagTranscriptRequest is a request for creating a flag transcript.
    api.v1alpha1.vanalytics.CreateFlagTranscriptResponse:
      type: object
      properties: {}
      description: CreateFlagTranscriptResponse is a response for creating a flag
        transcript.
    api.v1alpha1.vanalytics.DeleteCorrectionRequest:
      type: object
      properties:
        correctionSid:
          type: string
          description: Required. The unique id of the correction to be deleted.
        return:
          type: boolean
          description: Optional. Return the correction that was deleted.
    api.v1alpha1.vanalytics.DeleteCorrectionResponse:
      type: object
      properties:
        correction:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Correction'
          description: Optional. The correction that was deleted.
    api.v1alpha1.vanalytics.DeleteFilterRequest:
      type: object
      properties:
        filterSid:
          type: string
          description: Required. The unique id of the filter to be deleted.
        return:
          type: boolean
          description: Optional. Return the filter that was deleted.
    api.v1alpha1.vanalytics.DeleteFilterResponse:
      type: object
      properties:
        filter:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Filter'
          description: Optional. The filter that was deleted.
    api.v1alpha1.vanalytics.DeleteFlagFilterRequest:
      type: object
      properties:
        flagSid:
          type: string
          description: Optional. The unique id of the flag on the flag filter to be
            deleted.
        filterSid:
          type: string
          description: Optional. The unique id of the filter on the flag filter to
            be deleted.
        all:
          type: boolean
          description: "Optional. If true, then all flag filters with the given flag
            sid and/or\n filter sid will be deleted."
      description: "DeleteFlagFilterRequest is a request for deleting a flag filter.\n
        DEPRECATED"
    api.v1alpha1.vanalytics.DeleteFlagFilterResponse:
      type: object
      properties: {}
      description: "DeleteFlagFilterResponse is a response for deleting a flag filter.\n
        DEPRECATED"
    api.v1alpha1.vanalytics.DeleteFlagRequest:
      type: object
      properties:
        flagSid:
          type: string
          description: Required. The unique id of the flag to be deleted.
        return:
          type: boolean
          description: Optional. Return the flag that was deleted.
      description: DeleteFlagRequest is a request for deleting a flag.
    api.v1alpha1.vanalytics.DeleteFlagResponse:
      type: object
      properties:
        flag:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag'
          description: Optional. The flag that was deleted.
      description: DeleteFlagResponse is a response for deleting a flag.
    api.v1alpha1.vanalytics.DeleteFlagTranscriptRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Required. The org id of the flag transcripts to be deleted.
        transcriptSids:
          type: array
          items:
            type: string
          description: Deprecated. Use string filter instead.
        filter:
          type: string
          description: 'Optional. The standard list filter as described in https://google.aip.dev/160.

            Multiple comparisons can be provided when separated with a logical AND

            operator. Supported fields, operators and functions are listed below.


            +----------------------------+-----------+--------------+-----------+

            |                      field |      type |    operators | functions |

            +----------------------------+-----------+--------------+-----------+

            |             transcript_sid |   integer |            = |       any |

            |                 start_time | timestamp | >=, <=, >, < | timestamp |

            |         flag_summary.count |   integer | >=, <=, >, < |           |

            | flag_summary.review_status |      enum |            = |       any |

            +----------------------------+-----------+--------------+-----------+


            Examples:

            transcript_sid = any(1, 2, 3)


            flag_summary.count > 0 AND

            flag_summary.review_status = any(done, none) AND

            start_time >= timestamp(''2012-04-21T11:30:00-04:00'')'
      description: DeleteFlagTranscriptRequest is a request for deleting a flag transcript.
    api.v1alpha1.vanalytics.DeleteFlagTranscriptResponse:
      type: object
      properties: {}
      description: DeleteFlagTranscriptResponse is a response for deleting a flag
        transcript.
    api.v1alpha1.vanalytics.DnclList:
      type: object
      properties:
        listId:
          type: string
          description: Required. Dncl list id to add the item to.
        contentType:
          type: integer
          description: Required. Specifies the dncl list content type.
          format: enum
        expirePeriod:
          type: integer
          description: Optional. Expected duration to keep item in DNCL.
          format: enum
        expireOffset:
          type: string
          description: "Optional. Specifies how many expire periods\n to calculate.
            i.e. number of weeks."
        agentResponseKey:
          type: string
          description: Optional. Specifies an agent response to get the scrub value
            from.
    api.v1alpha1.vanalytics.Filter:
      type: object
      properties:
        filterSid:
          type: string
          description: Output only. The unique id of this filter.
        name:
          type: string
          description: "Required. The name of this filter. Must be non empty and unique
            across all\n filters within an organization."
        searchRequest:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest'
          description: The search request to be used to filter transcripts.
        createTime:
          type: string
          description: "Output only. The timestamp when this filter was created. Assigned
            by the\n server."
          format: date-time
        version:
          type: string
          description: Output only. The version of this filter.
      description: A filter resource in the Vanalytics API.
    api.v1alpha1.vanalytics.FilterSnapshot:
      type: object
      properties:
        filterSnapshotSid:
          type: string
          description: Output only. The unique id of this filter snapshot.
        filterSid:
          type: string
          description: Output only. The unique id of this filter.
        name:
          type: string
          description: "Required. The name of this filter. Must be non empty and unique
            across all\n filters within an organization."
        searchRequest:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest'
          description: The search request to be used to filter transcripts.
        createTime:
          type: string
          description: "Output only. Assigned by the server. The timestamp when this
            filter was\n created."
          format: date-time
        version:
          type: string
          description: Output only. The version of this filter.
      description: Filter snapshot resource.
    api.v1alpha1.vanalytics.Flag:
      type: object
      properties:
        flagSid:
          type: string
          description: Output only. The unique id of this flag.
        name:
          type: string
          description: "Required. The name of this flag. Must be non empty and unique
            across all\n flags within an organization."
        reviewGroupId:
          type: string
          description: "Optional. The org permission group id which users must have
            in order to\n to review flagged transcripts. When not provided flagged
            transcripts will\n not require review."
        notifyGroupId:
          type: string
          description: Optional. The notify group id for this flag.
        priority:
          type: integer
          description: Optional. The priority of the flag. Defaults to 0.
          format: int32
        version:
          type: string
          description: Output only. The version of this flag.
        filters:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Filter'
          description: Output only. Filters associated with this flag.
        mustReview:
          type: boolean
          description: Output only. Determines whether this flag must be reviewed.
        mustNotify:
          type: boolean
          description: Output only. Determines whether this flag must be notified.
        boolExpr:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag_BoolExpr'
          description: "Required. Boolean expression of filters which a transcript
            must match\n for this flag to be applied."
        dnclList:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.DnclList'
          description: "Optional. Specifies dncl lists to update\n if a transcript
            is flagged."
      description: Flag is a resource in the Vanalytics API.
    api.v1alpha1.vanalytics.FlagFilter:
      type: object
      properties:
        flagFilterSid:
          type: string
          description: Output only. The unique id of this flag filter.
        filterSid:
          type: string
          description: Required. The unique id of the filter.
        flagSid:
          type: string
          description: Required. The unique id of the flag.
        flag:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag'
          description: Output only. The flag for this flag filter.
        filter:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Filter'
          description: Output only. The filter for this flag filter.
      description: FlagFilter is a resource in the Vanalytics API.
    api.v1alpha1.vanalytics.FlagReview:
      type: object
      properties:
        flagReviewSid:
          type: string
          description: Output only. The unique id of this flag review.
        transcriptSid:
          type: string
          description: Required. The transcript_sid of the reviewed transcript.
        flagSid:
          type: string
          description: DEPRECATED. Use flag_snapshot_sid instead.
        createTime:
          type: string
          description: "Output only. The timestamp when this flag review was created.
            Assigned by the\n server."
          format: date-time
        notes:
          type: string
          description: Optional. Any notes written for the flag review.
        flagSnapshotSid:
          type: string
          description: The ID of the flag snapshot for this flag review.
      description: "FlagReview resource in the Vanalytics API. It represents a flag
        review\n for transcripts that have been flagged."
    api.v1alpha1.vanalytics.FlagSnapshot:
      type: object
      properties:
        flagSnapshotSid:
          type: string
          description: Output only. The unique id of this flag.
        flagSid:
          type: string
          description: Output only. The unique id of this flag.
        name:
          type: string
          description: "Required. The name of this flag. Must be non empty and unique
            across all\n flags within an organization."
        reviewGroupId:
          type: string
          description: "Optional. The org permission group id which users must have
            in order to\n to review flagged transcripts. When not provided flagged
            transcripts will\n not require review."
        notifyGroupId:
          type: string
          description: Optional. The notify group id for this flag.
        priority:
          type: integer
          description: Optional. The priority of the flag. Defaults to 0.
          format: int32
        version:
          type: string
          description: Output only. The version of this flag.
        createTime:
          type: string
          description: "Output only. The timestamp when this flag snapshot was created.
            Assigned by the\n server."
          format: date-time
        mustReview:
          type: boolean
          description: Output only. Determines whether this flag must be reviewed.
        mustNotify:
          type: boolean
          description: Output only. Determines whether this flag must be notified.
        boolExpr:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSnapshot_BoolExpr'
          description: "Required. Boolean expression of filters which a transcript
            must match\n for this flag to be applied."
        dnclList:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.DnclList'
          description: "Optional. Specifies dncl lists to update\n if a transcript
            is flagged."
      description: FlagSnapshot is a resource in the Vanalytics API.
    api.v1alpha1.vanalytics.FlagSnapshot_BoolExpr:
      type: object
      properties:
        and:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSnapshot_BoolExpr'
          description: Optional. Boolean and operator.
        or:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSnapshot_BoolExpr'
          description: Optional. Boolean or operator.
        filter:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.BoolExpr_Filter'
          description: Optional. Filter to match.
        not:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSnapshot_BoolExpr'
          description: Optional. Boolean not operator.
      description: BoolExpr defines a boolean expression of filters.
    api.v1alpha1.vanalytics.FlagSummary:
      type: object
      properties:
        count:
          type: integer
          description: The number of flags associated with the transcript.
          format: int32
        prioritySum:
          type: integer
          description: The sum of the priorities of the flags associated with the
            transcript.
          format: int32
        priorityMax:
          type: integer
          description: The highest priority of the flags associated with the transcript.
          format: int32
        needReview:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSummary_NeedReview'
          description: Need Review provides info on the flags that need review.
        flags:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSummary_Flag'
          description: Flags contain the flags and filters that are associated with
            the transcript.
        reviewStatus:
          type: integer
          description: The review status of the flagged transcript.
          format: enum
      description: FlagSummary defines a summary of flags which were applied to a
        transcript.
    api.v1alpha1.vanalytics.FlagSummary_Count:
      type: object
      properties:
        gte:
          type: integer
          description: Optional. Queries count greater than or equal.
          format: int32
        lte:
          type: integer
          description: Optional. Queries count less than or equal.
          format: int32
        gt:
          type: integer
          description: Optional. Queries count greater than.
          format: int32
        lt:
          type: integer
          description: Optional. Queries count less than.
          format: int32
        eq:
          type: integer
          description: Optional. Queries count equal to.
          format: int32
      description: Count defines a query on count.
    api.v1alpha1.vanalytics.FlagSummary_Filter:
      type: object
      properties:
        joinKey:
          type: string
          description: The join key in form [flag_sid:filter_sid].
        flagSid:
          type: string
          description: The flag sid this filter belongs to.
        filterSid:
          type: string
          description: The unique id of this filter.
        version:
          type: string
          description: The version of this filter.
        name:
          type: string
          description: The name of this filter.
      description: Filter defines a filter which applied some flag to some transcript.
    api.v1alpha1.vanalytics.FlagSummary_Flag:
      type: object
      properties:
        flagSid:
          type: string
          description: The unique id of this flag.
        name:
          type: string
          description: The name of this flag.
        priority:
          type: integer
          description: The priority of this flag.
          format: int32
        version:
          type: string
          description: The version of this flag.
        filters:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSummary_Filter'
          description: Filters which applied this flag.
        mustReview:
          type: boolean
          description: Determines whether this flag must be reviewed.
        mustNotify:
          type: boolean
          description: Determines whether this flag must be notified.
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSummary_Review'
          description: The reviews of this flag.
      description: "Flag defines a flag that was applied to a transcript by one or
        more filters\n along with a user review when one exists."
    api.v1alpha1.vanalytics.FlagSummary_Flags:
      type: object
      properties:
        flagSid:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flags_FlagSid'
          description: Optional. Queries flag sid.
      description: Flags defines a query on flags.
    api.v1alpha1.vanalytics.FlagSummary_NeedReview:
      type: object
      properties:
        prioritySum:
          type: integer
          description: The sum of the priorities of the flags that need review.
          format: int32
        priorityMax:
          type: integer
          description: The highest priority of the flags that need review.
          format: int32
        count:
          type: integer
          description: The number of flags that need review.
          format: int32
        flagSids:
          type: array
          items:
            type: string
          description: The Flag sids that need review.
      description: NeedReview defines flags which need to be reviewed.
    api.v1alpha1.vanalytics.FlagSummary_Review:
      type: object
      properties:
        joinKey:
          type: string
          description: The join key in form [flag_sid:user_id].
        flagSid:
          type: string
          description: The flag sid this review belongs to.
        userId:
          type: string
          description: The user id of the reviewer.
      description: Review contains info on the flag review when one exists.
    api.v1alpha1.vanalytics.FlagSummary_ReviewStatus:
      type: object
      properties:
        any:
          type: array
          items:
            type: integer
            format: enum
          description: Optional. Must have any provided review status.
      description: ReviewStatus defines a query on review status.
    api.v1alpha1.vanalytics.FlagTranscriptFilter:
      type: object
      properties:
        flagSnapshot:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSnapshot'
          description: FlagSnapshot which flagged target transcript.
        filterSnapshot:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.FilterSnapshot'
          description: FilterSnapshot which filtered target transcript.
      description: Flag transcript filter resource.
    api.v1alpha1.vanalytics.Flag_BoolExpr:
      type: object
      properties:
        and:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag_BoolExpr'
          description: Optional. Boolean and operator.
        or:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag_BoolExpr'
          description: Optional. Boolean or operator.
        filter:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.BoolExpr_Filter'
          description: Optional. Filter to match.
        not:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag_BoolExpr'
          description: Optional. Boolean not operator.
      description: BoolExpr defines a boolean expression of filters.
    api.v1alpha1.vanalytics.Flags_FlagSid:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Must have any of the provided flag sids.
        all:
          type: array
          items:
            type: string
          description: Optional. Must have all of the provided flag sids.
      description: FlagSid defines a query on flag sid.
    api.v1alpha1.vanalytics.GetCorrectionRequest:
      type: object
      properties:
        correctionSid:
          type: string
          description: Required. The unique id of the correction.
    api.v1alpha1.vanalytics.GetFilterRequest:
      type: object
      properties:
        searchRequest:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest'
          description: The search request to be used to filter transcripts.
        name:
          type: string
          description: The name of the filter.
        filterSid:
          type: string
          description: The unique id of the filter.
    api.v1alpha1.vanalytics.GetFlagRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the flag.
        flagSid:
          type: string
          description: The unique id of the flag.
      description: GetFlagRequest is a request for getting a flag.
    api.v1alpha1.vanalytics.GetRecordingUrlRequest:
      type: object
      properties:
        transcriptSid:
          type: string
        kind:
          type: string
          description: Optional. Defaults to "wav". Can be "", "wav" or "mp3".
    api.v1alpha1.vanalytics.GetRecordingUrlResponse:
      type: object
      properties:
        url:
          type: string
    api.v1alpha1.vanalytics.GetTranscriptSummaryRequest:
      type: object
      properties:
        transcriptSid:
          type: string
          description: Required - transcript to get summary of.
      description: GetTranscriptSummaryRequest is a request for getting a transcript
        summary.
    api.v1alpha1.vanalytics.GetTranscriptSummaryResponse:
      type: object
      properties:
        transcriptSummary:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.TranscriptSummary'
      description: GetTranscriptSummaryResponse is a response for getting a transcript
        summary.
    api.v1alpha1.vanalytics.ListAgentResponseValuesRequest:
      type: object
      properties:
        key:
          type: string
      description: ListAgentResponseValuesRequest is a request for listing agent reponse
        values.
    api.v1alpha1.vanalytics.ListAgentResponseValuesResponse:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: Values are the transcript agent response values.
      description: ListAgentResponseValuesResponse is a response for listing agent
        response values.
    api.v1alpha1.vanalytics.ListBillingSpanRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: Optional. Page size is based on months from now. Defaults to
            12.
          format: uint32
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
    api.v1alpha1.vanalytics.ListBillingSpanResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of billing spans, or empty
            if there are no\n more billing spans in the list."
        spans:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.BillingSpan'
          description: List of billing spans which contains at most one request page_size.
    api.v1alpha1.vanalytics.ListCorrectionsRequest:
      type: object
      properties:
        transcriptSid:
          type: string
          description: Required. The transcript sid of the transcript that the corrections
            are on.
      description: ListCorrectionsRequest is a request for listing corrections.
    api.v1alpha1.vanalytics.ListCorrectionsResponse:
      type: object
      properties:
        corrections:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Correction'
          description: List of corrections.
      description: ListCorrectionsResponse is a response for listing corrections.
    api.v1alpha1.vanalytics.ListFiltersRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Optional. The number of filters to include in a single response.
            When not\n provided this defaults to 100."
          format: uint32
        orderBy:
          type: string
          description: "Optional. The order by which filters will be listed. Follows
            sql order by\n syntax. When not provided the order defaults to \"name\".\n
            Supported order by includes:\n   + (name)\n   + (name desc)"
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
        conflict:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Filter'
          description: "Optional. The filter by which to find other filters which
            have conflicting\n name or search request field(s)."
        flagSid:
          type: string
          description: Optional. Lists filters which are associated with given flag
            sid.
    api.v1alpha1.vanalytics.ListFiltersResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of filters, or empty if there
            are no\n more filters in the list."
        filters:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Filter'
          description: List of filters which contains at most one request page_size.
    api.v1alpha1.vanalytics.ListFlagFiltersRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Optional. The number of flag filters to include in a single
            response. When not\n provided this defaults to 100."
          format: uint32
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
        flagMask:
          type: string
          description: "Optional. Field mask for response flag. A missing or empty
            field mask is\n interpreted as a field mask containing all possible fields."
          format: field-mask
        filterMask:
          type: string
          description: "Optional. Field mask for response filter. A missing or empty
            field mask is\n interpreted as a field mask containing all possible fields."
          format: field-mask
        flagSids:
          type: array
          items:
            type: string
          description: "Optional. List of flag sids. Requires response filters to
            be associated\n with at least one of the provided flag sids."
      description: ListFlagFiltersRequest is a request for listing flag filters.
    api.v1alpha1.vanalytics.ListFlagFiltersResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page. Empty when there are no more
            pages.
        flagFilters:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagFilter'
          description: List of flag filters.
      description: ListFlagFiltersResponse is a response for listing flag filters.
    api.v1alpha1.vanalytics.ListFlagReviewsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Optional. The number of reviews to include in a single response.
            When not\n provided this defaults to 100."
          format: uint32
        orderBy:
          type: string
          description: "Optional. The order by which reviews will be listed. Follows
            sql order by\n syntax. When not provided the order defaults to \"flag_review_sid
            desc\".\n Supported order by includes:\n   + (flag_review_sid desc)\n
            \  + (flag_review_sid)"
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
        transcriptSid:
          type: string
          description: Optional. The transcript sid to look for reviews on.
      description: ListFlagReviewsRequest is a request for listing reviews on a transcript.
    api.v1alpha1.vanalytics.ListFlagReviewsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of reviews, or empty if there
            are no\n more reviews in the list."
        flagReviews:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagReview'
          description: List of flag reviews.
      description: ListFlagReviewsResponse is a response for listing reviews on a
        transcript.
    api.v1alpha1.vanalytics.ListFlagSnapshotsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Optional. The number of snapshots to include in a single response.
            When not\n provided this defaults to 100."
          format: uint32
        orderBy:
          type: string
          description: "Optional. The order by which snapshots will be listed. Follows
            sql order by\n syntax. When not provided the order defaults to \"flag_snapshot_sid
            desc\".\n Supported order by includes:\n   + (flag_snapshot_sid desc)\n
            \  + (flag_snapshot_sid)"
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
        flagSnapshotSids:
          type: array
          items:
            type: string
          description: Optional. List of flag_snapshots to filter on.
        mask:
          type: string
          description: "Optional. mask contains a list of fields to be returned. Possible
            paths include\n flag_snapshot_sid, flag_sid, name, review_group_id, notify_group_id,
            create_time,\n version, and priority. If no mask is provided it defaults
            to using all paths."
          format: field-mask
        transcriptSid:
          type: string
          description: Optional. Transcript sid to filter on.
      description: ListFlagSnapshotsRequest is a request for listing flag snapshots.
    api.v1alpha1.vanalytics.ListFlagSnapshotsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of snapshots, or empty if
            there are no\n more snapshots in the list."
        flagSnapshots:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSnapshot'
          description: List of flag snapshots.
      description: ListFlagSnapshotsResponse is a response for listing flag snapshots.
    api.v1alpha1.vanalytics.ListFlagTranscriptFiltersRequest:
      type: object
      properties:
        transcriptSid:
          type: string
          description: Required. The target transcript sid.
        flagSnapshotMask:
          type: string
          description: Optional. Flag snapshot fields to include in response. All
            when empty.
          format: field-mask
        filterSnapshotMask:
          type: string
          description: Optional. Filter snapshot fields to include in response. All
            when empty.
          format: field-mask
      description: ListFlagTranscriptFiltersRequest is a request for listing flag
        transcript filters.
    api.v1alpha1.vanalytics.ListFlagTranscriptFiltersResponse:
      type: object
      properties:
        flagTranscriptFilters:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagTranscriptFilter'
      description: ListFlagTranscriptFiltersResponse is a response for listing flag
        transcript filters.
    api.v1alpha1.vanalytics.ListFlagsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Optional. The number of flags to include in a single response.
            When not\n provided this defaults to 100."
          format: uint32
        orderBy:
          type: string
          description: "Optional. The order by which flags will be listed. Follows
            sql order by\n syntax. When not provided the order defaults to \"name\".\n
            Supported order by includes:\n   + (name)\n   + (name desc)"
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
        filterSid:
          type: string
          description: Optional. Lists flags which are associated with given filter
            sid.
        flagSids:
          type: array
          items:
            type: string
          description: Optional. Lists flags which have given flag sids.
        readMask:
          type: string
          description: "Optional. Field mask which determines which flag reads will
            be read and\n included in the response."
          format: field-mask
        names:
          type: array
          items:
            type: string
          description: Optional. Listed flags must have one of the provided names.
        priorities:
          type: array
          items:
            type: integer
            format: int32
          description: Optional. Listed flags must have one of the provided priorities.
        mustReview:
          type: array
          items:
            type: boolean
          description: "Optional. Filter by flags that require a review. This does
            not mean\n that the flag has/hasn't been reviewed. This is whether it
            requires one."
        mustNotify:
          type: array
          items:
            type: boolean
          description: Optional. Filter by flags that send notifications.
      description: ListFlagsRequest is a request for listing flags.
    api.v1alpha1.vanalytics.ListFlagsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of flags, or empty if there
            are no\n more flags in the list."
        flags:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag'
          description: List of flags which contains at most one request page_size.
        total:
          type: string
          description: Total number of flags.
      description: ListFlagsResponse is a response for listing flags.
    api.v1alpha1.vanalytics.ListTranscriptGroupNamesRequest:
      type: object
      properties: {}
      description: ListTranscriptGroupNamesRequest is a request for listing group
        names.
    api.v1alpha1.vanalytics.ListTranscriptGroupNamesResponse:
      type: object
      properties:
        groupNames:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.TranscriptGroupName'
          description: Group names are the transcript group names.
      description: ListTranscriptGroupNamesResponse is a response for listing group
        names.
    api.v1alpha1.vanalytics.Location_ZipCodeProximity:
      type: object
      properties:
        countryCode:
          type: string
          description: Required. Queries on phone number country code.
        zipCode:
          type: string
          description: Required. Queries where phone location is within distance of
            zipcode.
        distance:
          type: string
          description: 'Required. Queries where phone location is within distance
            (km or mi) of zipcode. For example: 100km.'
    api.v1alpha1.vanalytics.Moment:
      type: object
      properties:
        timeZone:
          type: string
          description: Required. Timezone of the client.
        interval:
          type: integer
          description: "Optional. Dynamic time period to match which\n defaults to
            today."
          format: enum
    api.v1alpha1.vanalytics.Phrase_Highlight:
      type: object
      properties:
        preTags:
          type: array
          items:
            type: string
          description: "pre_tags are tags that will come before any highlighted word\n
            to show it is highlighted. Defaults to [\"<em>\"]"
        postTags:
          type: array
          items:
            type: string
          description: "post_tags are tags that will come after any highlighted word\n
            to show it is highlighted. Defaults to [\"</em>\"]"
    api.v1alpha1.vanalytics.Phrase_Word:
      type: object
      properties:
        value:
          type: string
        fuzziness:
          type: string
    api.v1alpha1.vanalytics.Result:
      type: object
      properties:
        channel:
          type: integer
          format: int32
        segments:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Segment'
        agentFirstName:
          type: string
        agentLastName:
          type: string
        agentUserName:
          type: string
        beginTime:
          type: integer
          format: uint32
        duration:
          type: integer
          format: uint32
        text:
          type: string
        huntGroupSid:
          type: string
    api.v1alpha1.vanalytics.Results_AgentUserName:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
        all:
          type: array
          items:
            type: string
    api.v1alpha1.vanalytics.Results_Channel:
      type: object
      properties:
        eq:
          type: integer
          format: uint32
    api.v1alpha1.vanalytics.Results_Segments:
      type: object
      properties:
        text:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Segments_Text'
    api.v1alpha1.vanalytics.SearchByOrgIdRequest:
      type: object
      properties:
        orgId:
          type: string
          description: Required. The organization id to search by.
        pageSize:
          type: integer
          description: "Optional. The number of hits included in response.\n Will
            default to 10 if not provided"
          format: uint32
        sort:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Sort'
          description: Optional. The sort order.
        transcriptMask:
          type: string
          description: "Optional. Transcript mask contains a list of transcript fields
            to be returned.\n If no transcript mask is provided it defaults to returning
            all fields."
          format: field-mask
        flagSummary:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_FlagSummary'
          description: Optional. Defines a query on flag summary.
        filter:
          type: string
          description: 'Optional. The standard list filter as described in https://google.aip.dev/160.

            Multiple comparisons can be provided when separated with a logical AND

            operator. Supported fields, operators and functions are listed below.


            +----------------------------+-----------+--------------+-----------+

            |                      field |      type |    operators | functions |

            +----------------------------+-----------+--------------+-----------+

            |             transcript_sid |   integer |            = |       any |

            |                 start_time | timestamp | >=, <=, >, < | timestamp |

            |         flag_summary.count |   integer | >=, <=, >, < |           |

            | flag_summary.review_status |      enum |            = |       any |

            +----------------------------+-----------+--------------+-----------+


            Examples:

            transcript_sid = any(1, 2, 3)


            flag_summary.count > 0 AND

            flag_summary.review_status = any(done, none) AND

            start_time >= timestamp(''2012-04-21T11:30:00-04:00'')'
      description: SearchByOrgIdRequest is a support-only request for searching transcripts
        by org id.
    api.v1alpha1.vanalytics.SearchFlagTranscriptsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Optional. The number of hits to include in a single response.
            When not\n provided this defaults to 100."
          format: uint32
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
        flagSid:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchFlagTranscriptsRequest_FlagSid'
          description: Optional. Filter by flag sid.
        flagReviewStatus:
          type: integer
          description: Optional. Filters transcripts by review status.
          format: enum
        notifyGroupId:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchFlagTranscriptsRequest_NotifyGroupId'
          description: Optional. Filter by notify group id.
        reviewGroupId:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchFlagTranscriptsRequest_ReviewGroupId'
          description: Optional. Filter by review group id.
        startTranscriptSid:
          type: string
          description: Optional. Filter where transript sid >= start transcript sid.
        endTranscriptSid:
          type: string
          description: Optional. Filter where transript sid <= end transcript sid.
        orderBy:
          type: string
          description: "Optional. The order by which flag transcripts will be listed.
            Follows sql order by\n syntax. When not provided the order defaults to
            \"transcript_sid\".\n Supported order by includes:\n   + (transcript_sid)\n
            \  + (transcript_sid desc)\n   + (create_time, transcript_sid)\n   + (create_time
            desc, transcript_sid desc)\n   + (audio_time, transcript_sid)\n   + (audio_time
            desc, transcript_sid desc)"
      description: SearchFlagTranscriptsRequest is a request for searching flagged
        transcripts.
    api.v1alpha1.vanalytics.SearchFlagTranscriptsRequest_FlagSid:
      type: object
      properties:
        filter:
          type: array
          items:
            type: string
          description: Required. The flag sids to filter by.
        match:
          type: integer
          description: "Optional. Minimum number of flags sids within the filter that
            must be\n matched on each flagged transcript. All flag sids must be matched
            when\n (match <= 0) or (match >= len(filter))."
          format: int32
      description: FlagSid filtering.
    api.v1alpha1.vanalytics.SearchFlagTranscriptsRequest_NotifyGroupId:
      type: object
      properties:
        isNull:
          type: boolean
          description: "Optional. When true include, when false exclude, transcripts
            which are\n flagged with an undefined notify group id."
        filter:
          type: array
          items:
            type: string
          description: Optional. The notify group ids to filter by.
        match:
          type: integer
          description: "Optional. Minimum number of notify group ids within the filter
            that must\n be matched on each flagged transcript. All notify group ids
            must be\n matched when (match <= 0) or (match >= len(filter))."
          format: int32
      description: NotifyGroupId filtering.
    api.v1alpha1.vanalytics.SearchFlagTranscriptsRequest_ReviewGroupId:
      type: object
      properties:
        isNull:
          type: boolean
          description: "Optional. When true include, when false exclude, transcripts
            which are\n flagged with an undefined review group id."
        filter:
          type: array
          items:
            type: string
          description: Optional. The review group ids to filter by.
        match:
          type: integer
          description: "Optional. Minimum number of review group ids within the filter
            that must\n be matched on each flagged transcript. All review group ids
            must be\n matched when (match <= 0) or (match >= len(filter))."
          format: int32
      description: ReviewGroupId filtering.
    api.v1alpha1.vanalytics.SearchFlagTranscriptsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of transcripts, or empty if
            there are no\n more transcripts in the list."
        hits:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchFlagTranscriptsResponse_Hit'
          description: List of hits.
        total:
          type: string
          description: Total number of hits in query.
      description: SearchFlagTranscriptsResponse is a response for searching flagged
        transcripts.
    api.v1alpha1.vanalytics.SearchFlagTranscriptsResponse_Hit:
      type: object
      properties:
        transcript:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Transcript'
          description: Transcript that is flaggged.
        flagSnapshotSids:
          type: array
          items:
            type: string
          description: List of flag_snapshot_sids that the transcript is flagged with.
        reviewed:
          type: object
          additionalProperties:
            type: boolean
          description: "Map of review statuses. If it exists in the map and has value
            true it has\n been reviewed. If it exists in the map and has value false
            it needs to be\n reviewed. If it does not exist in the map then it does
            not require review."
        flagSids:
          type: array
          items:
            type: string
          description: List of flag_sids that the transcript is flagged with.
      description: Hits for searching flag transcripts.
    api.v1alpha1.vanalytics.SearchQuery:
      type: object
      properties:
        transcriptSid:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_TranscriptSid'
          description: Optional. Queries transcript sid.
        flagSummary:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_FlagSummary'
          description: Optional. Queries flag summary.
        or:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery'
          description: Optional. Groups query conditions with logical or.
        and:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery'
          description: Optional. Groups query conditions with logical and.
        audioTime:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_AudioTime'
          description: Optional. Queries on audio time.
        deleteTime:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_DeleteTime'
          description: Optional. By default all transcripts (including deleted) will
            be shown.
        not:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery'
          description: Optional. Queries for what does not match the query.
        results:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_Results'
        agentResponse:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_AgentResponse'
          description: Optional. Queries on agent responses.
        agentCallLog:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_AgentCallLog'
          description: Optional. Queries on agent call log.
        phone:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_Phone'
          description: Optional. Queries on phone.
      description: SearchQuery defines a query on transcript fields.
    api.v1alpha1.vanalytics.SearchQuery_AgentCallLog:
      type: object
      properties:
        callSkillsInitial:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_CallSkillsInitial'
          description: Optional. Call skills initial will query the initial call skills.
        callEnded:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_CallEnded'
          description: Optional. Call ended will query on the reason the call ended.
      description: AgentCallLog is a query for the agent call log.
    api.v1alpha1.vanalytics.SearchQuery_AgentResponse:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.AgentResponse_Key'
          description: Optional. Key to query on.
        values:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.AgentResponse_Values'
          description: "Optional. Queries values for the given keys. If no keys are
            provided then\n it will run the query on all values."
        numbers:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.AgentResponse_Numbers'
          description: Optional. Queries values as numbers for the given keys.
      description: AgentResponse defines a query on agent responses.
    api.v1alpha1.vanalytics.SearchQuery_AudioTime:
      type: object
      properties:
        gte:
          type: integer
          description: Optional. Queries where greater than or equal.
          format: int32
        lte:
          type: integer
          description: Optional. Queries where less than or equal.
          format: int32
        gt:
          type: integer
          description: Optional. Queries where greater than.
          format: int32
        lt:
          type: integer
          description: Optional. Queries where less than.
          format: int32
      description: AudioTime defines a query on audio_time.
    api.v1alpha1.vanalytics.SearchQuery_CallEnded:
      type: object
      properties:
        reasons:
          type: array
          items:
            type: integer
            format: enum
          description: Required. The reasons to be filtered on.
      description: CallEnded is a query for the call ended.
    api.v1alpha1.vanalytics.SearchQuery_CallSkillsInitial:
      type: object
      properties:
        need:
          type: array
          items:
            type: string
          description: Optional. Needed initial call skills to filter on.
        want:
          type: array
          items:
            type: string
          description: Optional. Wanted initial call skills to filter on.
      description: CallSkillsInitial is a query for the initial call skills.
    api.v1alpha1.vanalytics.SearchQuery_Cc:
      type: object
      properties:
        in:
          type: array
          items:
            type: string
          description: Optional. Queries where cc in list provided.
      description: Cc defines a query on the phone country code.
    api.v1alpha1.vanalytics.SearchQuery_City:
      type: object
      properties:
        in:
          type: array
          items:
            type: string
          description: Optional. Queries where city in list provided.
      description: City defines a query on the phone city.
    api.v1alpha1.vanalytics.SearchQuery_DeleteTime:
      type: object
      properties:
        exists:
          type: boolean
          description: "Optional. Queries on if delete time field exists.\n If value
            is true then only deleted transcripts are returned.\n If value is false
            then only non-deleted transcripted are returned."
      description: DeleteTime defines a query on delete time.
    api.v1alpha1.vanalytics.SearchQuery_FlagSummary:
      type: object
      properties:
        needReview:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSummary_NeedReview'
          description: Optional. Queries need review.
        reviewStatus:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSummary_ReviewStatus'
          description: Optional. Queries review status.
        flags:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSummary_Flags'
          description: Optional. Queries flags.
        count:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSummary_Count'
          description: Optional. Queries count.
      description: FlagSummary defines a query on flag summary fields.
    api.v1alpha1.vanalytics.SearchQuery_Iso2:
      type: object
      properties:
        in:
          type: array
          items:
            type: string
          description: Optional. Queries where iso2 in list provided.
      description: Iso2 defines a query on the phone Iso2.
    api.v1alpha1.vanalytics.SearchQuery_Location:
      type: object
      properties:
        zipCodeProximity:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Location_ZipCodeProximity'
      description: Location defines a query on the phone location.
    api.v1alpha1.vanalytics.SearchQuery_Ndc:
      type: object
      properties:
        in:
          type: array
          items:
            type: string
          description: Optional. Queries where ndc in list provided.
      description: Ndc defines a query on the phone ndc.
    api.v1alpha1.vanalytics.SearchQuery_Phone:
      type: object
      properties:
        cc:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_Cc'
          description: Optional. Queries on phone country code.
        ndc:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_Ndc'
          description: Optional. Queries on phone ndc (area code).
        prefix:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_Prefix'
          description: Optional. Queries on phone subscriber number prefix.
        city:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_City'
          description: Optional. Queries on phone city.
        iso2:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_Iso2'
          description: Optional. Queries on phone iso2 country code.
        regionCode:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_RegionCode'
          description: Optional. Queries on phone region code.
        regionName:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_RegionName'
          description: Optional. Queries on phone region name.
        timeZone:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_TimeZone'
          description: Optional. Queries on phone time zone.
        type:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_Type'
          description: Optional. Queries on phone number type.
        utc:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_Utc'
          description: Optional. Queries on phone number utc.
        location:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery_Location'
          description: Optional. Queries on phone number location.
      description: Phone defines a query on the phone.
    api.v1alpha1.vanalytics.SearchQuery_Prefix:
      type: object
      properties:
        in:
          type: array
          items:
            type: string
          description: Optional. Queries where prefix in list provided.
      description: Prefix defines a query on the phone prefix.
    api.v1alpha1.vanalytics.SearchQuery_RegionCode:
      type: object
      properties:
        in:
          type: array
          items:
            type: string
          description: Optional. Queries where region code in list provided.
      description: RegionCode defines a query on the phone region code.
    api.v1alpha1.vanalytics.SearchQuery_RegionName:
      type: object
      properties:
        in:
          type: array
          items:
            type: string
          description: Optional. Queries where region name in list provided.
      description: RegionName defines a query on the phone region name.
    api.v1alpha1.vanalytics.SearchQuery_Results:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Results_Channel'
        agentUserName:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Results_AgentUserName'
        segments:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Results_Segments'
    api.v1alpha1.vanalytics.SearchQuery_TimeZone:
      type: object
      properties:
        in:
          type: array
          items:
            type: string
          description: Optional. Queries where time zone in list provided.
      description: TimeZone defines a query on the phone time zone.
    api.v1alpha1.vanalytics.SearchQuery_TranscriptSid:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Must have any provided transcript sid.
        gte:
          type: string
          description: Optional. Queries where greater than or equal.
      description: TranscriptSid defines a query on transcript sid.
    api.v1alpha1.vanalytics.SearchQuery_Type:
      type: object
      properties:
        in:
          type: array
          items:
            type: string
          description: Optional. Queries where type in list provided.
      description: Type defines a query on the phone type.
    api.v1alpha1.vanalytics.SearchQuery_Utc:
      type: object
      properties:
        in:
          type: array
          items:
            type: number
            format: float
          description: Optional. Queries where utc in list provided.
      description: Utc defines a query on the phone utc.
    api.v1alpha1.vanalytics.SearchRequest:
      type: object
      properties:
        silence:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest_Silence'
        talkTime:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Uint32Expr'
          description: talk time in milliseconds
        agent:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest_Agent'
          description: agent defines query constraints on agent specific fields
        pageSize:
          type: integer
          description: number of hits included in response
          format: uint32
        sort:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Sort'
        createTime:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.TimestampExpr'
        talkOver:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest_TalkOver'
        terms:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest_Terms'
        channel:
          type: integer
          description: channel when set requires search terms to be matched on a specific
            channel
          format: uint32
        phrase:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest_Phrase'
          description: phrase is words to search for that are close together
        transcriptMask:
          type: string
          description: "Optional. transcript_mask contains a list of transcript fields
            to be returned.\n If no transcript_mask is provided it defaults to returning
            all fields."
          format: field-mask
        transcriptSid:
          type: string
          description: Optional. When not zero filter on transcript_sid.
        phoneNumber:
          type: string
          description: Optional. Phone number to search for.
        callerId:
          type: string
          description: Optional. Caller id to search for.
        transcriptSids:
          type: array
          items:
            type: string
          description: Optional. When not empty filter on transcript_sids.
        callStartTime:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.TimestampExpr'
          description: Optional. Call start time to filter on.
        callTypes:
          type: array
          items:
            type: integer
            format: enum
          description: "Optional. Call types to filter on. Possible call types are
            INBOUND, OUTBOUND,\n PREVIEW, and MANUAL."
        callSids:
          type: array
          items:
            type: string
          description: Optional. Call sids to filter on.
        huntGroupSids:
          type: array
          items:
            type: string
          description: Optional. Hunt group sids to filter on.
        groupNames:
          type: array
          items:
            type: string
          description: Optional. Group names to filter on.
        agentCallLog:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.AgentCallLogQuery'
          description: Optional. Agent call log to filter on.
        where:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchQuery'
          description: Optional. Query on transcript fields.
        timeFrame:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Uint32Range'
          description: "Optional. Time frame to filter on in milliseconds. For example,
            this can be used to\n filter for a term or phrase that is within the first
            500 milliseconds of a transcript."
    api.v1alpha1.vanalytics.SearchRequest_Agent:
      type: object
      properties:
        userName:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Agent_UserName'
    api.v1alpha1.vanalytics.SearchRequest_Phrase:
      type: object
      properties:
        words:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Phrase_Word'
          description: words that will be searched for
        slop:
          type: integer
          description: "slop is the number of extra terms that can be in the query
            that\n are not being searched for. For example: slop of 2 when searching
            for\n \"This is my dog\" would allow \"This is my quick brown dog\"."
          format: uint32
        inOrder:
          type: boolean
          description: when in_order is true then the terms must be found in the order
            given.
        highlight:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Phrase_Highlight'
          description: highlight contains settings for highlighting the words in the
            response
        not:
          type: boolean
          description: When true the phrase must not be matched.
        agent:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest_Agent'
          description: "When set, phrase must be spoken during agent session.\n Use
            with channel to target (a) speaker(s).\n   - e.g. caller spoke phrase
            to this specific agent"
        channel:
          type: integer
          description: "When set, targets side of call (caller or agent).\n Use 1
            for caller, 2 for agent.\n Use with agent to target (a) speaker(s).\n
            \  - e.g. caller spoke phrase to this specific agent"
          format: uint32
        positionOffset:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest_PositionOffset'
          description: "PositionOffset defines where a phrase will be searched for\n
            in a transcript. For example:\n [  0,   0] match anywhere\n [ 30,  60]
            match between (start + 30) and (start + 60)\n [  0,  30] match between
            \ (start + 0) and (start + 30)\n [  0, -30] match between  (start + 0)
            and (stop - 30)\n [-60, -30] match between  (stop - 60) and (stop - 30)\n
            [-30,   0] match between  (stop - 30) and (stop - 0)"
    api.v1alpha1.vanalytics.SearchRequest_PositionOffset:
      type: object
      properties:
        start:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
        stop:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
    api.v1alpha1.vanalytics.SearchRequest_Silence:
      type: object
      properties:
        durationTotal:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Uint32Expr'
          description: duration_total is the total silence duration within a transcript
            in milliseconds
        durationMax:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Uint32Expr'
          description: duration_max is the max individual duration of silence within
            a transcript in milliseconds
        occurrenceTotal:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Uint32Expr'
        durationPercentage:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Uint32Expr'
          description: "duration_percentage is a number from 0-100 representing the
            percent\n of the transcript that is silence"
    api.v1alpha1.vanalytics.SearchRequest_TalkOver:
      type: object
      properties:
        durationTotal:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Uint32Expr'
          description: duration_total is the total talkover duration within a transcript
            in milliseconds
        durationMax:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Uint32Expr'
          description: duration_max is the max individual duration of talkover within
            a transcript in milliseconds
        occurrenceTotal:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Uint32Expr'
        durationPercentage:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Uint32Expr'
          description: "duration_percentage is a number from 0-100 representing the
            percent\n of the transcript that is talkover"
    api.v1alpha1.vanalytics.SearchRequest_Terms:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: any is a set of terms which the transcript must contain at
            least one of
        all:
          type: array
          items:
            type: string
          description: all is a set of terms which the transcript must contain
        not:
          type: boolean
          description: When true the terms must not be matched.
        agent:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest_Agent'
          description: "When set, terms must be spoken during agent session.\n Use
            with channel to target (a) speaker(s).\n   - e.g. caller spoke terms to
            this specific agent"
        channel:
          type: integer
          description: "When set, targets side of call (caller or agent).\n Use 1
            for caller, 2 for agent.\n Use with agent to target (a) speaker(s).\n
            \  - e.g. caller spoke terms to this specific agent"
          format: uint32
        positionOffset:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchRequest_PositionOffset'
          description: "PositionOffset defines where terms will be searched for\n
            in a transcript. For example:\n [  0,   0] match anywhere\n [ 30,  60]
            match between (start + 30) and (start + 60)\n [  0,  30] match between
            \ (start + 0) and (start + 30)\n [  0, -30] match between  (start + 0)
            and (stop - 30)\n [-60, -30] match between  (stop - 60) and (stop - 30)\n
            [-30,   0] match between  (stop - 30) and (stop - 0)"
    api.v1alpha1.vanalytics.SearchResponse:
      type: object
      properties:
        total:
          type: string
          description: total number of hits in query
        hits:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.SearchResponse_Hit'
          description: one page of hits
        sort:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Sort'
          description: "Sort is the original sort but also includes after values of
            last search\n hit. This is intended to be used on a subsequent search
            request to get the\n next page of search hits."
    api.v1alpha1.vanalytics.SearchResponse_Hit:
      type: object
      properties:
        transcript:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Transcript'
    api.v1alpha1.vanalytics.Segment:
      type: object
      properties:
        beginTime:
          type: integer
          description: begin time in milliseconds
          format: uint32
        confidence:
          type: integer
          description: confidence from 0 to 100
          format: uint32
        duration:
          type: integer
          description: duration in milliseconds
          format: uint32
        text:
          type: string
        words:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Word'
    api.v1alpha1.vanalytics.Segments_Text:
      type: object
      properties:
        phrase:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Text_Phrase'
    api.v1alpha1.vanalytics.Silence:
      type: object
      properties:
        duration:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Silence_Duration'
        segments:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Silence_Segment'
        occurrence:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Silence_Occurrence'
        threshold:
          type: integer
          description: "threshold in milliseconds is the minimum duration of silence\n
            to be counted as silence in a transcript"
          format: uint32
    api.v1alpha1.vanalytics.Silence_Duration:
      type: object
      properties:
        total:
          type: integer
          description: total in milliseconds
          format: uint32
        max:
          type: integer
          description: max in milliseconds
          format: uint32
        percentage:
          type: integer
          description: percentage of silence in transcript from 0-100
          format: uint32
    api.v1alpha1.vanalytics.Silence_Occurrence:
      type: object
      properties:
        total:
          type: integer
          description: total in milliseconds
          format: uint32
    api.v1alpha1.vanalytics.Silence_Segment:
      type: object
      properties:
        beginTime:
          type: integer
          description: begin time in milliseconds
          format: uint32
        duration:
          type: integer
          description: duration in milliseconds
          format: uint32
    api.v1alpha1.vanalytics.Sort:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Sort_Field'
          description: "Fields to sort by with names in json notation. i.e.\n audio_time,
            silence.duration.total, result.text"
        after:
          type: array
          items:
            type: string
          description: "After values define the starting offset of response hits.
            i.e.\n given sort {\"fields\":[{\"name\":\"silence.duration.total\"}],\"after\":[\"3200\"]}\n
            then the search response is sorted by ascending silence duration where\n
            silence duration total is greater than 3200. The after values are used\n
            to scroll through the paginated search hits."
    api.v1alpha1.vanalytics.Sort_Field:
      type: object
      properties:
        name:
          type: string
        desc:
          type: boolean
    api.v1alpha1.vanalytics.TalkOver:
      type: object
      properties:
        occurrence:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.TalkOver_Occurrence'
        duration:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.TalkOver_Duration'
        results:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.TalkOver_Result'
        threshold:
          type: integer
          description: "threshold in milliseconds is the minimum duration of talk
            over\n to be counted as talk over in a transcript"
          format: uint32
    api.v1alpha1.vanalytics.TalkOver_Duration:
      type: object
      properties:
        total:
          type: integer
          description: total in milliseconds
          format: uint32
        max:
          type: integer
          description: max in milliseconds
          format: uint32
        percentage:
          type: integer
          description: percentage of talkover in transcript from 0-100
          format: uint32
    api.v1alpha1.vanalytics.TalkOver_Occurrence:
      type: object
      properties:
        total:
          type: integer
          description: total in milliseconds
          format: uint32
    api.v1alpha1.vanalytics.TalkOver_Result:
      type: object
      properties:
        channel:
          type: integer
          format: int32
        occurrence:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.TalkOver_Occurrence'
        duration:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.TalkOver_Duration'
        segments:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.TalkOver_Segment'
        agentUserName:
          type: string
        agentSessionSid:
          type: string
    api.v1alpha1.vanalytics.TalkOver_Segment:
      type: object
      properties:
        beginTime:
          type: integer
          description: begin time in milliseconds
          format: uint32
        duration:
          type: integer
          description: duration in milliseconds
          format: uint32
    api.v1alpha1.vanalytics.Text_Phrase:
      type: object
      properties:
        words:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Phrase_Word'
        slop:
          type: integer
          format: uint32
        inOrder:
          type: boolean
    api.v1alpha1.vanalytics.TimestampExpr:
      type: object
      properties:
        range:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.TimestampRange'
          description: Optional. Static time period to match.
        moment:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Moment'
          description: Optional. Dynamic time period to match.
    api.v1alpha1.vanalytics.TimestampRange:
      type: object
      properties:
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        includeFrom:
          type: boolean
        includeTo:
          type: boolean
    api.v1alpha1.vanalytics.Transcript:
      type: object
      properties:
        transcriptSid:
          type: string
        callSid:
          type: string
        callType:
          type: integer
          format: enum
        results:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.Result'
        silence:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Silence'
        talkTime:
          type: integer
          description: talk time in milliseconds
          format: uint32
        createTime:
          type: string
          format: date-time
        callStartTime:
          type: string
          format: date-time
        talkOver:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.TalkOver'
        callerId:
          type: string
        phoneNumber:
          type: string
        audioTime:
          type: integer
          description: audio time in milliseconds
          format: uint32
        audioBytes:
          type: string
        groupName:
          type: string
        agentCallLog:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.aclpb.AgentCallLog'
        flagSummary:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.FlagSummary'
        deleteTime:
          type: string
          description: delete time is the time the transcript was marked as deleted.
          format: date-time
        numberFormat:
          type: string
        agentResponse:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.AgentResponse'
        summary:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.TranscriptSummary'
    api.v1alpha1.vanalytics.TranscriptGroupName:
      type: object
      properties:
        value:
          type: string
          description: value is a group name value.
      description: TranscriptGroupName is the transcript group name.
    api.v1alpha1.vanalytics.TranscriptSummary:
      type: object
      properties:
        bulletPoints:
          type: array
          items:
            type: string
          description: Summary content provided in multiple bullet points.
        status:
          type: integer
          description: Status of the summary.
          format: enum
      description: TranscriptSummary is an AI generated summary based on a parent
        transcript.
    api.v1alpha1.vanalytics.Uint32Expr:
      type: object
      properties:
        gt:
          type: integer
          format: uint32
        gte:
          type: integer
          format: uint32
        lt:
          type: integer
          format: uint32
        lte:
          type: integer
          format: uint32
        eq:
          type: integer
          format: uint32
        notEq:
          type: integer
          format: uint32
        range:
          $ref: '#/components/schemas/api.v1alpha1.vanalytics.Uint32Range'
    api.v1alpha1.vanalytics.Uint32Range:
      type: object
      properties:
        from:
          type: integer
          format: uint32
        to:
          type: integer
          format: uint32
        includeFrom:
          type: boolean
        includeTo:
          type: boolean
    api.v1alpha1.vanalytics.UpdateCorrectionRequest:
      type: object
      properties:
        correction:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Correction'
          description: The correction resource to update.
        updateMask:
          type: string
          description: The fields to update.
          format: field-mask
      description: UpdateCorrectionRequest is a request for updating a correction.
    api.v1alpha1.vanalytics.UpdateCorrectionResponse:
      type: object
      properties:
        correction:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Correction'
          description: The correction resource that was updated.
      description: UpdateCorrectionResponse is a response for updating a correction.
    api.v1alpha1.vanalytics.UpdateFilterRequest:
      type: object
      properties:
        filter:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Filter'
          description: The new filter data.
        updateMask:
          type: string
          description: "Optional. update_mask contains a list of paths to be updated.
            Possible paths include\n name and search_request. If no update_mask is
            provided it defaults to\n using both name and search_request."
          format: field-mask
        filterSid:
          type: string
          description: The ID of the filter to be updated.
    api.v1alpha1.vanalytics.UpdateFlagRequest:
      type: object
      properties:
        flagSid:
          type: string
          description: The ID of the flag to be updated.
        flag:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.Flag'
          description: The flag resource to update.
        updateMask:
          type: string
          description: "Optional. update_mask contains a list of paths to be updated.
            Possible paths include\n name, review_group_id, notify_group_id, and priority.
            If no update_mask\n is provided it defaults to using all paths."
          format: field-mask
      description: UpdateFlagRequest is a request for updating a flag.
    api.v1alpha1.vanalytics.VanaTermsQuery:
      type: object
      properties:
        terms:
          type: array
          items:
            type: string
          description: Required. The terms to be filtered on.
        lacks:
          type: boolean
          description: Optional. If true then filters out where terms match.
        all:
          type: boolean
          description: Optional. If true then all terms must match.
      description: VanaTermsQuery is a query for none, all, or any terms.
    api.v1alpha1.vanalytics.Word:
      type: object
      properties:
        beginTime:
          type: integer
          description: begin time in milliseconds
          format: uint32
        confidence:
          type: integer
          description: confidence from 0 to 100
          format: uint32
        duration:
          type: integer
          description: duration in milliseconds
          format: uint32
        spoken:
          type: string
        redacted:
          type: boolean
    api.v1alpha1.vanalytics.aclpb.Action:
      type: object
      properties:
        callSkillsInitial:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.vanalytics.aclpb.CallSkillsInitial'
          description: CallSkillsInitial are the initial call skills on a call.
        callEnded:
          type: string
          description: CallEnded is the reason the call ended.
      description: Action is an agent call log action.
    api.v1alpha1.vanalytics.aclpb.AgentCallLog:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vanalytics.aclpb.Action'
          description: actions are the agent call log actions.
      description: AgentCallLog resource.
    api.v1alpha1.vanalytics.aclpb.CallSkillsInitial:
      type: object
      properties:
        need:
          type: array
          items:
            type: string
          description: need is all the call skills that are needed.
        want:
          type: array
          items:
            type: string
          description: want is all the call skills that are wanted.
      description: CallSkillsInitial are the initial call skills on a call.
    api.v1alpha1.vanalytics.notifier.GetNotifyRequest:
      type: object
      properties:
        notifyId:
          type: string
          description: The unique id of this notify.
      description: GetNotifyRequest is a request for getting a notify.
    api.v1alpha1.vanalytics.notifier.Notify:
      type: object
      properties:
        notifyId:
          type: string
          description: The unique id of this notify.
        startTranscriptSid:
          type: string
          description: Required. The start transcript_sid of the flagged transcripts.
        endTranscriptSid:
          type: string
          description: Required. The end transcript_sid of the flagged transcripts.
        flagSid:
          type: string
          description: Required. The flag_sid of the flagged transcripts.
        createTime:
          type: string
          description: Output only. The timestamp when this was created. Assigned
            by the server.
          format: date-time
      description: A notify resource in the vana notifier API.
    api.v1alpha1.vmds.DownloadSpecifiedMessagesRequest:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.vmds.DownloadSpecifiedMessagesRequest_MessageRequest'
    api.v1alpha1.vmds.DownloadSpecifiedMessagesRequest_MessageRequest:
      type: object
      properties:
        mailBox:
          type: string
        callerSid:
          type: string
        callerType:
          type: integer
          format: enum
    api.v1alpha1.vmds.DownloadSpecifiedMessagesResponse:
      type: object
      properties:
        url:
          type: string
    api.v1alpha1.wfm.AgentAvailabilityPattern:
      type: object
      properties:
        agentAvailabilityPatternSid:
          type: string
          description: ID of this pattern.
        parentEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Parent entity of this pattern.
        datetimePattern:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.DatetimePattern'
          description: Datetime pattern that represents this agent availability pattern.
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that this agent availability pattern
            belongs to.
        schedulingActivitySid:
          type: string
          description: "An optional value to relate the availability pattern to a
            specific type of scheduling activity, such as time off.\n If left as nil,
            this will be treated as a standard agent availability pattern."
      description: Represents and Agent Availability Pattern
    api.v1alpha1.wfm.AgentGroup:
      type: object
      properties:
        agentGroupSid:
          type: string
          description: ID of this agent group
        parentEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Parent entity of the agent group
        name:
          type: string
          description: Agent group name
        description:
          type: string
          description: Agent group description.
        datetimeSetToInactive:
          type: string
          description: Datetime that the agent group was set to inactive, if not set
            then the agent group is currently active.
          format: date-time
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the agent group belongs to.
        memberConstraintRules:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ConstraintRule'
          description: List of constraint rule that apply to this agent group.
        memberWfmAgents:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.WFMAgent'
          description: List of WFM agents that are members of this agent group.
        memberSkillProficiencies:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProficiency'
          description: List of skill proficiencies associated with this agent group.
        memberAgentAvailabilityPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentAvailabilityPattern'
          description: List of agent availability patterns associated with this agent
            group.
      description: Represents a group of agents that have the same parent and other
        common properties.
    api.v1alpha1.wfm.ArchiveAgentLeavePetitionRequest:
      type: object
      properties:
        agentLeavePetitionId:
          type: string
          description: ID of the agent leave petition to archive.
      description: Request message for the ArchiveAgentLeavePetition.
    api.v1alpha1.wfm.ArchiveAgentLeavePetitionResponse:
      type: object
      properties:
        agentLeavePetition:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentLeavePetition'
          description: The archived Agent Leave Petition.
      description: Response message for the ArchiveAgentLeavePetition.
    api.v1alpha1.wfm.AvailabilityBitmapSet:
      type: object
      properties:
        ownBitmap:
          type: array
          items:
            type: integer
            format: enum
          description: Map of availability options belonging to the node being checked.
        inheritedBitmap:
          type: array
          items:
            type: integer
            format: enum
          description: Map of availability options inherited from parent nodes.
        resultingBitmap:
          type: array
          items:
            type: integer
            format: enum
          description: Map of availability options resulting from combining the inherited
            and own bitmap.
        parentEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Entity that the bitmaps belong to.
      description: Contains a set of bitmaps for an entity.
    api.v1alpha1.wfm.BuildAgentDiagnosticsReq:
      type: object
      properties:
        wfmAgentSid:
          type: string
          description: ID of the wfm agent to build diagnostics for.
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the wfm agent belongs to.
        agentGroupSid:
          type: string
          description: "ID of the agent_group to build diagnostics for.\n If this
            field is set, the diagnostics will be built for every wfm agent in that
            agent group, and the @wfm-agent_sid field in this req will be ignored."
      description: Request message for the BuildAgentDiagnostics RPC
    api.v1alpha1.wfm.BuildAgentDiagnosticsRes:
      type: object
      properties:
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostics'
          description: "Diagnostics built for the given req.\n Will only contain one
            element if build for a single @wfm_agent_sid.\n Will contain one element
            for each WFM agent if build for an @agent_group_sid.a"
      description: Response message for the BuildAgentDiagnostics RPC
    api.v1alpha1.wfm.BuildCallProfileTemplateForSkillProfileReq:
      type: object
      properties:
        skillProfileSid:
          type: string
          description: ID of the skill profile of the training data used to generate
            the template.
        timeZone:
          type: string
          description: Time zone in IANA format that the call profile template built
            will be in.
      description: "Request message for the BuildCallProfileTemplateForSkillProfile
        RPC.\n DEPRECATED as of Sep/7/2023 - Use BuildCallProfileTemplate instead."
    api.v1alpha1.wfm.BuildCallProfileTemplateForSkillProfileRes:
      type: object
      properties:
        callProfileTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.CallProfileTemplate'
          description: call profile template found in the training data set.
      description: "Response message for the BuildCallProfileTemplateForSkillProfile
        RPC.\n DEPRECATED as of Sep/7/2023 - Use BuildCallProfileTemplate instead."
    api.v1alpha1.wfm.BuildCallProfileTemplateReq:
      type: object
      properties:
        skillProfileCategory:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Skill profile category of the training data used to generate
            the template.
        timeZone:
          type: string
          description: Time zone in IANA format that the call profile template built
            will be in.
      description: Request message for the BuildCallProfileTemplate RPC.
    api.v1alpha1.wfm.BuildCallProfileTemplateRes:
      type: object
      properties:
        callProfileTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.CallProfileTemplate'
          description: call profile template found in the training data set.
      description: Response message for the BuildCallProfileTemplate RPC.
    api.v1alpha1.wfm.BuildDOWAndMOYProfilesReq:
      type: object
      properties:
        profileTod:
          allOf:
          - $ref: '#/components/schemas/api.commons.ProfileTOD'
          description: ProfileTOD to use to build the ProfileDOW and ProfileMOY
        profileWoms:
          allOf:
          - $ref: '#/components/schemas/api.commons.ProfileWOMS'
          description: ProfileWOMS to use to build the ProfileDOW and ProfileMOY
        isAverageProfile:
          type: boolean
          description: Indicates if the @profile_tod and @profile_woms belongs to
            the average fields of a call profile template.
      description: Request message for the BuildDOWAndMOYProfiles RPC
    api.v1alpha1.wfm.BuildDOWAndMOYProfilesRes:
      type: object
      properties:
        profileDow:
          allOf:
          - $ref: '#/components/schemas/api.commons.ProfileDOW'
          description: Generated ProfileDOW from the request parameters.
        profileMoy:
          allOf:
          - $ref: '#/components/schemas/api.commons.ProfileMOY'
          description: Generated ProfileMOY from the request parameters.
      description: Response message for the BuildDOWAndMOYProfiles RPC
    api.v1alpha1.wfm.BuildDraftScheduleReq:
      type: object
      properties:
        draftScheduleSid:
          type: string
          description: ID of the draft schedule.
        scheduleScenarioSid:
          type: string
          description: ID of the node's schedule scenario sid.
        scheduleScenarioSchedulingRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: "Datetime range to set for the schedule scenario used to make
            the draft schedule.\n If left blank, the current scheduling range for
            the scenario will be used"
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: The node that the shifts should be associated with.
        includeShiftInstances:
          type: boolean
          description: Set to true to include shift instances.
        includeShiftTemplate:
          type: boolean
          description: "Set to true to include shift template in each of the returned
            shift instances.\n Only effective when include_shift_instances is also
            set to true."
        includeShiftSegments:
          type: boolean
          description: "Set to true to include shift segments in each of the returned
            shift instances.\n Only effective when include_shift_instances is also
            set to true."
        includeSchedulingActivity:
          type: boolean
          description: "Set to true to include scheduling activity in each of the
            returned shift segments.\n Only effective when include_shift_instances
            and include_shift_segments are also set to true."
        includeActivity:
          type: boolean
          description: "Set to true to include non skill activity in each of the returned
            scheduling activities.\n Only effective when include_scheduling_activity,
            include_shift_segments and include_shift_instances are also set to true."
        autoGenerateAgents:
          type: boolean
          description: "Set to true to automatically generate agents to meet the requirements
            of the shift templates min and max agents.\n Otherwise, no agents will
            be generated to meet these requirements."
      description: Request message for the BuildDraftSchedule RPC.
    api.v1alpha1.wfm.BuildDraftScheduleRes:
      type: object
      properties:
        draftSchedule:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.DraftSchedule'
          description: The built draft schedule.
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Set of diagnostic reports for the given @draft_schedule_sid.
        schedulingResultMetric:
          allOf:
          - $ref: '#/components/schemas/api.commons.SchedulingResultMetric'
          description: The scheduling result metric for the built schedule range.
      description: Response message for the BuildDraftSchedule RPC
    api.v1alpha1.wfm.BuildGlobalDiagnosticsReq:
      type: object
      properties:
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario to get diagnostics for.
      description: Request message for the BuildGlobalDiagnostics RPC
    api.v1alpha1.wfm.BuildGlobalDiagnosticsRes:
      type: object
      properties:
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Set of diagnostic reports for the given @schedule_scenario_sid.
        nodesChecked:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Set of all nodes checked during the diagnostics.
      description: Response message for the BuildGlobalDiagnostics RPC
    api.v1alpha1.wfm.BuildNodeDiagnosticsReq:
      type: object
      properties:
        nodeToCheck:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: The node that @diagnostics will be associated with.
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that @node_to_check belongs to.
      description: Request message for the BuildNodeDiagnostics RPC
    api.v1alpha1.wfm.BuildNodeDiagnosticsRes:
      type: object
      properties:
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Set of diagnostic reports for the given @node_to_check.
        nodesChecked:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Set of all nodes checked during the diagnostics.
      description: Response message for the BuildNodeDiagnostics RPC
    api.v1alpha1.wfm.BuildProfileForecastByIntervalReq:
      type: object
      properties:
        callProfileTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.CallProfileTemplate'
          description: Template to use to generate the profile forecast.
        fixedAveragesForecast:
          type: boolean
          description: "If @fixed_averages_forecast is set to true it will do a fixed
            averages forecast,\n and will only use the fixed averages fields and @total_calls_profile
            from the @call_profile_template.\n Otherwise, it will do a regular profile
            forecast and only the fixed averages fields @call_profile_template will
            be ignored."
        skillProfileSid:
          type: string
          description: "ID of the skill profile that the forecast will belong to.\n
            Deprecated as of Sep/8/2023: use skill_profile_category instead."
        skillProfileCategory:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Skill profile category that the forecast belongs to.
      description: Request message for the BuildProfileForecastByInterval RPC
    api.v1alpha1.wfm.BuildProfileForecastByIntervalWithStatsReq:
      type: object
      properties:
        callProfileTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.CallProfileTemplate'
          description: Template to use to generate the profile forecast.
        fixedAveragesForecast:
          type: boolean
          description: "If @fixed_averages_forecast is set to true it will do a fixed
            averages forecast,\n and will only use the fixed averages fields and @total_calls_profile
            from the @call_profile_template.\n Otherwise, it will do a regular profile
            forecast and only the fixed averages fields @call_profile_template will
            be ignored."
        skillProfileSid:
          type: string
          description: "ID of the skill profile that the forecast will belong to.\n
            Deprecated as of Sep/8/2023: use skill_profile_category instead."
        skillProfileCategory:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Skill profile category that the forecast belongs to.
      description: Request message for the BuildProfileForecastByIntervalWithStats
        RPC
    api.v1alpha1.wfm.BuildProfileForecastByIntervalWithStatsRes:
      type: object
      properties:
        callData:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.CallDataByInterval'
          description: Forecast data intervals generated from the forecast
        forecastStats:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.GetForecastStatisticsRes'
          description: "Statistics comparing the historical data during the test interval
            with the prediction data during the same period.\n This will only be the
            type of the first message returned."
      description: Response message for BuildProfileForecastByIntervalWithStats RPC
    api.v1alpha1.wfm.BuildRegressionForecastByIntervalReq:
      type: object
      properties:
        averageSpeedOfAnswerInSeconds:
          type: number
          description: "the following only apply for avgs_processing_type=RegressionForecasterAvgsProcessingType.FIXED_AVERAGES\n
            optional"
          format: float
        averageHandleTimeInSeconds:
          type: number
          description: optional
          format: float
        averageAfterCallWorkInSeconds:
          type: number
          description: optional
          format: float
        averageTimeToAbortInSeconds:
          type: number
          description: optional
          format: float
        regressionTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.RegressionTemplate'
          description: Template to use to generate the regression forecast
        skillProfileSidsToForecast:
          type: array
          items:
            type: string
          description: IDs of the skill profiles to generate the forecasts,
      description: Request message for the BuildRegressionForecastByInterval RPC
    api.v1alpha1.wfm.BuildRegressionForecastByIntervalWithStatsReq:
      type: object
      properties:
        averageSpeedOfAnswerInSeconds:
          type: number
          description: "the following only apply for avgs_processing_type=RegressionForecasterAvgsProcessingType.FIXED_AVERAGES\n
            optional"
          format: float
        averageHandleTimeInSeconds:
          type: number
          description: optional
          format: float
        averageAfterCallWorkInSeconds:
          type: number
          description: optional
          format: float
        averageTimeToAbortInSeconds:
          type: number
          description: optional
          format: float
        regressionTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.RegressionTemplate'
          description: Template to use to generate the regression forecast
        skillProfileSidsToForecast:
          type: array
          items:
            type: string
          description: IDs of the skill profiles to generate the forecasts,
      description: Request message for the BuildRegressionForecastByIntervalWithStats
        RPC
    api.v1alpha1.wfm.BuildRegressionForecastByIntervalWithStatsRes:
      type: object
      properties:
        callData:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.CallDataByInterval'
          description: Forecast data intervals generated from the forecast
        forecastStats:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.GetForecastStatisticsRes'
          description: "Statistics comparing the historical data during the test interval
            with the prediction data during the same period.\n This will only be the
            type of the first message returned."
      description: Response message for BuildRegressionForecastByIntervalWithStats
        RPC
    api.v1alpha1.wfm.BuildShiftTemplateDiagnosticsReq:
      type: object
      properties:
        shiftTemplateSid:
          type: string
          description: ID of the shift template to build diagnostics for.
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the shift template belongs
            to.
      description: Request message for BuildShiftTemplateDiagnostics RPC
    api.v1alpha1.wfm.BuildShiftTemplateDiagnosticsRes:
      type: object
      properties:
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Diagnostic reports for the shift template associated with @shift_template_sid.
      description: Response message for BuildShiftTemplateDiagnostics RPC
    api.v1alpha1.wfm.CalculateTrainingDataAveragesForSkillProfileReq:
      type: object
      properties:
        skillProfileSid:
          type: string
          description: The training data used to calculate the averages will belong
            to this skill profile.
      description: Request message for the CalculateTrainingDataAveragesForSkillProfile
        RPC
    api.v1alpha1.wfm.CalculateTrainingDataAveragesForSkillProfileRes:
      type: object
      properties:
        averageSpeedOfAnswerInSeconds:
          type: number
          description: averages found in the training data set.
          format: float
        averageHandleTimeInSeconds:
          type: number
          format: float
        averageAfterCallWorkInSeconds:
          type: number
          format: float
        averageTimeToAbortInSeconds:
          type: number
          format: float
      description: Response message for the CalculateTrainingDataAveragesForSkillProfile
        RPC
    api.v1alpha1.wfm.CallCenterNode:
      type: object
      properties:
        callCenterNodeSid:
          type: string
          description: Node unique id (genereated on the backend when sent for creation).
        name:
          type: string
          description: Node name
        description:
          type: string
          description: Node description.
        datetimeSetToInactive:
          type: string
          description: Datetime that the node was set to inactive, if not set then
            the node is currently active.
          format: date-time
        timeZoneVal:
          type: integer
          description: Call Center TimeZone
          format: enum
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the call center node belongs
            to.
        memberClientNodes:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ClientNode'
          description: client nodes that are children of call center node
        memberNonSkillActivities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.NonSkillActivity'
          description: non skill activities that are children of call center node
        memberOpenTimesPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.OpenTimesPattern'
          description: open times patterns that are children of call center node
        memberAgentAvailabilityPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentAvailabilityPattern'
          description: agent availability patterns that are children of call center
            node
        memberConstraintRules:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ConstraintRule'
          description: constraint rules that are children of call center node
        memberAgentGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentGroup'
          description: agent groups that are children of call center node
        originSid:
          type: string
          description: "ID of the original Call Center Node that this node was copied
            from.\n If this node is the original, field will be set as nil."
        shrinkage:
          type: number
          description: the shrinkage percentage [0.0, 100.0]. 0.0 = no shrinkage,  100
            = no agents
          format: float
      description: Call Center node
    api.v1alpha1.wfm.CallDataByInterval:
      type: object
      properties:
        startDatetime:
          type: string
          description: Start time of the interval.
          format: date-time
        skillProfileSid:
          type: string
          description: "ID of the skill profile to forecast for (not set in profile
            forecasts).\n Deprecated as of Sep/8/2023: use skill_profile_category
            instead."
        totalCalls:
          type: integer
          description: the number of calls in this interval with this skill profile
            (answered + unanswered).
          format: int32
        averageSpeedOfAnswerInSeconds:
          type: number
          description: optional
          format: float
        averageHandleTimeInSeconds:
          type: number
          description: optional
          format: float
        averageAfterCallWorkInSeconds:
          type: number
          description: optional
          format: float
        averageTimeToAbortInSeconds:
          type: number
          description: optional
          format: float
        totalAbandonedCalls:
          type: integer
          description: the number of abandoned calls in this interval for this skill
            profile.
          format: int32
        isDelta:
          type: boolean
          description: Whether the interval has been modified or not
        forecastDataIntervalSid:
          type: string
          description: ID of the forecast interval that the delta/interval belongs
            to
        intervalWidthInMinutes:
          type: integer
          description: "Interval width minutes that the interval used on creation.\n
            Only set for forecast intervals."
          format: int32
        skillProfileCategory:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Skill profile category that the interval belongs to.
      description: Message type specifying calls in an interval for a specific skill
        profile
    api.v1alpha1.wfm.CallProfileTemplate:
      type: object
      properties:
        callProfileTemplateSid:
          type: string
          description: ID of the template
        name:
          type: string
          description: Name of the template.
        totalCallsProfile:
          allOf:
          - $ref: '#/components/schemas/api.commons.CallProfileGroupCalls'
          description: call profile for total calls
        totalAbandonedCallsProfile:
          allOf:
          - $ref: '#/components/schemas/api.commons.CallProfileGroupCalls'
          description: call profile for total abandoned calls
        averageSpeedOfAnswerProfile:
          allOf:
          - $ref: '#/components/schemas/api.commons.CallProfileGroupAvgs'
          description: call profile for ASA
        averageHandleTimeProfile:
          allOf:
          - $ref: '#/components/schemas/api.commons.CallProfileGroupAvgs'
          description: call profile for AHT
        averageAfterCallWorkProfile:
          allOf:
          - $ref: '#/components/schemas/api.commons.CallProfileGroupAvgs'
          description: call profile for ACW
        averageTimeToAbortProfile:
          allOf:
          - $ref: '#/components/schemas/api.commons.CallProfileGroupAvgs'
          description: call profile for ATAB
        fixedAverageSpeedOfAnswer:
          type: number
          description: Fixed average for speed of answer
          format: float
        fixedAverageHandleTime:
          type: number
          description: Fixed average for handle time
          format: float
        fixedAverageAfterCallWork:
          type: number
          description: Fixed average for after call work
          format: float
        fixedAverageTimeToAbort:
          type: number
          description: Fixed average for time to abort
          format: float
        defaultToFixedAveragesForecast:
          type: boolean
          description: Indicates if fixed averages is the default forecast that this
            template should be used for.
        timeZone:
          type: string
          description: Time zone in IANA format that the call profile template is
            in.
      description: Message type specifying parameters used to generate a profile forecast
    api.v1alpha1.wfm.CancelAgentLeavePetitionRequest:
      type: object
      properties:
        agentLeavePetitionId:
          type: string
          description: ID of the agent leave petition to cancel.
      description: Request message for the CancelAgentLeavePetition.
    api.v1alpha1.wfm.CancelAgentLeavePetitionResponse:
      type: object
      properties:
        agentLeavePetition:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentLeavePetition'
          description: The canceled Agent Leave Petition.
      description: Response message for the CancelAgentLeavePetition.
    api.v1alpha1.wfm.ClearScheduleReq:
      type: object
      properties:
        scheduleSelector:
          allOf:
          - $ref: '#/components/schemas/api.commons.ScheduleSelector'
          description: The schedule to be cleared.
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: "If set, node the shifts to be delete will all be related to.\n
            Otherwise, deleted shifts will not be filtered based on the node they
            are related to."
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: "If set, acts as a range to clear all shifts from.\n Otherwise,
            all shifts belonging to @schedule_selector are considered within range
            to be cleared."
        invertDatetimeRange:
          type: boolean
          description: "Set to delete all shifts starting before or ending after the
            given @datetime range.\n Otherwise shifts overlapping the @datetime_range
            will be deleted.\n Cannot be set to true if no datetime range is provided."
        startDatetimesOnly:
          type: boolean
          description: "If set to true, only checks the start datetime of shifts when
            checking the @datetime_range.\n Otherwise, any shifts that overlap the
            @datetime_range will be cleared.\n If @invert_datetime_range is true,
            any shifts that start before or start after the @datetime_range will be
            deleted.\n Cannot be set to true if no datetime range is provided."
        deleteLocked:
          type: boolean
          description: "Set to true to delete locked and unlocked shifts in the range
            to be cleared.\n Otherwise, only shift instances with is_locked set to
            false will be deleted."
      description: Request message for the ClearSchedule RPC
    api.v1alpha1.wfm.ClearScheduleRes:
      type: object
      properties:
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Set of diagnostic reports for the any issues encountered.
      description: Response message for the ClearSchedule RPC
    api.v1alpha1.wfm.ClientNode:
      type: object
      properties:
        clientNodeSid:
          type: string
          description: Node unique id
        name:
          type: string
          description: Node name
        description:
          type: string
          description: Node description.
        parentSid:
          type: string
          description: Parent node id -- should only have CallCenter nodes as parents
        datetimeSetToInactive:
          type: string
          description: Datetime that the node was set to inactive, if not set then
            the node is currently active.
          format: date-time
        timeZoneVal:
          type: integer
          description: Client TimeZone
          format: enum
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the client node belongs to.
        memberLocationNodes:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.LocationNode'
          description: Location Nodes associated with @program_node_sid.
        memberNonSkillActivities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.NonSkillActivity'
          description: Non Skill Activities associated with @program_node_sid.
        memberOpenTimesPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.OpenTimesPattern'
          description: Open Times Patterns associated with @program_node_sid.
        memberAgentAvailabilityPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentAvailabilityPattern'
          description: Agent Availability Patterns associated with @program_node_sid.
        memberConstraintRules:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ConstraintRule'
          description: Constraint Rules associated with @program_node_sid.
        memberAgentGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentGroup'
          description: Agent Groups associated with @program_node_sid.
        originSid:
          type: string
          description: "ID of the original Client Node that this node was copied from.\n
            If this node is the original, field will be set as nil."
        shrinkage:
          type: number
          description: the shrinkage percentage [0.0, 100.0]. 0.0 = no shrinkage,  100
            = no agents
          format: float
      description: Client node
    api.v1alpha1.wfm.ConstraintRule:
      type: object
      properties:
        constraintRuleSid:
          type: string
          description: ID of this constraint rule
        parentEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Parent entity that the rule will be applied to.
        name:
          type: string
          description: Name of the constraint rule
        description:
          type: string
          description: Description of the constraint rule.
        valCount:
          type: integer
          description: Ammount of time that the rule will be applied for.
          format: int32
        valUnit:
          type: integer
          description: Measuring unit to be used by @val_count.
          format: enum
        perCount:
          type: integer
          description: Specifies often @val_count will be repeated.
          format: int32
        perUnit:
          type: integer
          description: Measuring unit to be used by @per_count.
          format: enum
        priority:
          type: integer
          description: Priority value, higher value means higher priority.
          format: int32
        isPriorityInfinite:
          type: boolean
          description: Whether or not the rule has infinite priority
        ruleType:
          type: integer
          description: The type that this rule whill be.
          format: enum
        targetSid:
          type: string
          description: Refers to a skill_proficiency_sid if @rule_type is MIN_SKILL_LEVEL,
            and otherwise refers to a scheduling_activity.
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the constraint rule belongs
            to.
        schedulingActivity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingActivity'
          description: The scheduling_activity associated with @target_sid.
        skillProficiency:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProficiency'
          description: The skill_proficienct associated with @target_sid.
    api.v1alpha1.wfm.CopyScenarioReq:
      type: object
      properties:
        scenarioSidToCopy:
          type: string
          description: ID of the scenario that we are going to copy from.
        includeInactive:
          type: boolean
          description: If the new scenario should include the inactive entities associated
            with the scenario_sid_to_copy.
        name:
          type: string
          description: 'If no input is given, this should be "Copy of: copied_scenario.name",
            otherwise use the given input.'
        description:
          type: string
          description: If no input is given, use copied_scenario.description, otherwise
            use the given input.
        scheduleRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime range that the schedules for the new scenario will
            cover when built using the copied schedule scenario.
      description: Request message for the CopyScenario RPC
    api.v1alpha1.wfm.CopyScenarioRes:
      type: object
      properties:
        scheduleScenarioSid:
          type: string
          description: ID of the new scenario
      description: Response message for the CopyScenario RPC
    api.v1alpha1.wfm.CopyScheduleToScheduleReq:
      type: object
      properties:
        sourceScheduleSelector:
          allOf:
          - $ref: '#/components/schemas/api.commons.ScheduleSelector'
          description: The schedule that shifts will be copied from.
        destinationScheduleSelector:
          allOf:
          - $ref: '#/components/schemas/api.commons.ScheduleSelector'
          description: The schedule that the shifts will be copied to.
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: The node that the shifts to copy should be associated with.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: "The datetime range over which to get the shift instance sids.\n
            If no range is provided, the scheduling range for the @destination_schedule_selector
            will be used if it is a draft schedule, otherwise the range of the @source_schedule_selector
            will be used."
        startDatetimesOnly:
          type: boolean
          description: Set to true to copy shifts that start within the range being
            copied, otherwise any shift that overlaps the range will be copied.
        overlapAsWarning:
          type: boolean
          description: "Set to true to allow the shifts to be copied when there is
            a resulting overlap conflict for an agents shifts, with diagnostic warnings
            being returned after.\n Otherwise, overlap conflicts will return diagnostic
            errors and cause no shifts to be copied."
      description: Request message for the CopyScheduleToSchedule RPC
    api.v1alpha1.wfm.CopyScheduleToScheduleRes:
      type: object
      properties:
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: "A list of diagnostics for any errors encountered, which prevented
            the copy.\n If @overlap_as_warning is set to true, warning diagnostics
            for overlaps may be returned after a sucessful copy."
      description: Response message for the CopyScheduleToScheduleRes RPC
    api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq:
      type: object
      properties:
        destinationSchedule:
          allOf:
          - $ref: '#/components/schemas/api.commons.ScheduleSelector'
          description: Schedule that the @shift_instance_sids will be copied into.
        shiftInstanceSids:
          type: array
          items:
            type: string
          description: IDs of the shift instances to copy into @destination_schedule.
        overlapAsWarning:
          type: boolean
          description: "If set to true, overlapping shifts will be permitted, and
            return a warning diagnostic after persisting.\n Otherwise, any overlapping
            shifts for agents in the @destination_schedule will return an error diagnostic
            and no shifts will be copied."
      description: Request message for the CopyShiftInstancesToSchedule RPC
    api.v1alpha1.wfm.CopyShiftInstancesToScheduleRes:
      type: object
      properties:
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: "A list of diagnostics for any errors encountered, which prevented
            the copy.\n If @overlap_as_warning is set to true, warning diagnostics
            for overlaps may be returned after a sucessful copy."
      description: Response message for the CopyShiftInstancesToSchedule RPC
    api.v1alpha1.wfm.CopyWFMAgentMembershipsRequest:
      type: object
      properties:
        originatingWfmAgentSid:
          type: string
          description: ID of the wfm agent to copy the associations from.
        targetWfmAgentSid:
          type: string
          description: ID of the wfm agent to copy the associations to.
      description: Request message for the CopyWFMAgentMemberships RPC
    api.v1alpha1.wfm.CopyWFMAgentMembershipsResponse:
      type: object
      properties: {}
      description: Response message for CopyWFMAgentMemberships RPC
    api.v1alpha1.wfm.CreateAdherenceAgentRuleClauseRequest:
      type: object
      properties:
        clause:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceAgentRuleClause'
          description: Agent rule clause to create for the org sending the request.
      description: Request message for CreateAdherenceAgentRuleClause.
    api.v1alpha1.wfm.CreateAdherenceAgentRuleClauseResponse:
      type: object
      properties:
        adherenceAgentRuleClauseId:
          type: string
          description: ID of the created agent rule clause.
      description: Response message for CreateAdherenceAgentRuleClause.
    api.v1alpha1.wfm.CreateAdherenceAgentRuleRequest:
      type: object
      properties:
        rule:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceAgentRule'
          description: Agent rule to create for the org sending the request.
      description: Request message for CreateAdherenceAgentRule.
    api.v1alpha1.wfm.CreateAdherenceAgentRuleResponse:
      type: object
      properties:
        adherenceAgentRuleId:
          type: string
          description: ID of the created agent rule.
      description: Response message for CreateAdherenceAgentRule.
    api.v1alpha1.wfm.CreateAdherenceDepartmentalRuleClauseRequest:
      type: object
      properties:
        clause:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceDepartmentalRuleClause'
          description: Departmental rule clause to create for the org sending the
            request.
      description: Request message for CreateAdherenceDepartmentalRuleClause.
    api.v1alpha1.wfm.CreateAdherenceDepartmentalRuleClauseResponse:
      type: object
      properties:
        adherenceDepartmentalRuleClauseId:
          type: string
          description: ID of the created departmental rule clause.
      description: Response message for CreateAdherenceDepartmentalRuleClause.
    api.v1alpha1.wfm.CreateAdherenceDepartmentalRuleRequest:
      type: object
      properties:
        rule:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceDepartmentalRule'
          description: Departmental rule to create for the org sending the request.
      description: Request message for CreateAdherenceDepartmentalRule.
    api.v1alpha1.wfm.CreateAdherenceDepartmentalRuleResponse:
      type: object
      properties:
        adherenceDepartmentalRuleId:
          type: string
          description: ID of the created departmental rule.
      description: Response message for CreateAdherenceDepartmentalRule.
    api.v1alpha1.wfm.CreateAdherenceRuleNotificationConfigEntryRequest:
      type: object
      properties:
        notificationConfigEntry:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceRuleNotificationConfigEntry'
          description: Notification config entry to create for the org sending the
            request.
      description: Request message for CreateAdherenceRuleNotificationConfigEntry.
    api.v1alpha1.wfm.CreateAdherenceRuleNotificationConfigEntryResponse:
      type: object
      properties:
        adherenceRuleNotificationConfigEntryId:
          type: string
          description: ID of the created notification config entry.
      description: Response message for CreateAdherenceRuleNotificationConfigEntry.
    api.v1alpha1.wfm.CreateAdherenceRuleNotificationConfigRequest:
      type: object
      properties:
        notificationConfig:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceRuleNotificationConfig'
          description: Notification config to create for the org sending the request.
      description: Request message for CreateAdherenceRuleNotificationConfig.
    api.v1alpha1.wfm.CreateAdherenceRuleNotificationConfigResponse:
      type: object
      properties:
        adherenceRuleNotificationConfigId:
          type: string
          description: ID of the created notification config.
      description: Response message for CreateAdherenceRuleNotificationConfig.
    api.v1alpha1.wfm.CreateAgentAvailabilityPatternReq:
      type: object
      properties:
        agentAvailabilityPattern:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.AgentAvailabilityPattern'
          description: AgentAvailabilityPattern to be created, the @agent_availability_pattern_sid
            doesn't need to be set since it won't be used.
      description: Request message for the AgentAvailabilityPattern RPC
    api.v1alpha1.wfm.CreateAgentAvailabilityPatternRes:
      type: object
      properties:
        agentAvailabilityPatternSid:
          type: string
          description: ID of the newly create agent availability pattern.
      description: Response message for the AgentAvailabilityPattern RPC
    api.v1alpha1.wfm.CreateAgentGroupReq:
      type: object
      properties:
        agentGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.AgentGroup'
          description: AgentGroup to create, the @agent_group_sid doesn't need to
            be set since it won't be used.
      description: Request message for the CreateAgentGroup RPC
    api.v1alpha1.wfm.CreateAgentGroupRes:
      type: object
      properties:
        agentGroupSid:
          type: string
          description: ID of the newly created agent group
      description: Response message for the CreateAgentGroup RPC
    api.v1alpha1.wfm.CreateAgentLeavePetitionRequest:
      type: object
      properties:
        requestedDatetimeRanges:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: "All datetime ranges being requested for the time off.\n No
            overlap is allowed between the datetime ranges."
        petitionComment:
          type: string
          description: A comment describing the reason for the time off request.
        wfmAgentSid:
          type: string
          description: The wfm agent requesting the time off.
        requestedHoursOff:
          type: number
          description: "The number of working hours requested off.\n This does not
            need to relate directly to the datetime range being requested off,\n For
            example in the case where a 14 hour schedulable range is being taken off
            but 8 hours of work will be paid out with PTO."
          format: float
      description: Request message for CreateAgentLeavePetition.
    api.v1alpha1.wfm.CreateAgentLeavePetitionResponse:
      type: object
      properties:
        agentLeavePetition:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentLeavePetition'
          description: The newly created agent leave petition.
      description: Response message for CreateAgentLeavePetition.
    api.v1alpha1.wfm.CreateCallProfileTemplateReq:
      type: object
      properties:
        callProfileTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.CallProfileTemplate'
          description: Template to store in the db.
      description: Request message for the CreateCallProfileTemplate RPC
    api.v1alpha1.wfm.CreateCallProfileTemplateRes:
      type: object
      properties: {}
      description: Response message for the CreateCallProfileTemplate RPC
    api.v1alpha1.wfm.CreateClientNodeReq:
      type: object
      properties:
        node:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ClientNode'
          description: Node to create, the @client_node_sid doesn't need to be set
            since it won't be used.
      description: Request message for the CreateClientNode RPC
    api.v1alpha1.wfm.CreateClientNodeRes:
      type: object
      properties:
        clientNodeSid:
          type: string
          description: ID of the newly created client node
      description: Response message for the CreateClientNode RPC
    api.v1alpha1.wfm.CreateConstraintRuleReq:
      type: object
      properties:
        constraintRule:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ConstraintRule'
          description: Rule to create, the @constraint_rule_sid doesn't need to be
            set since it won't be used.
      description: Request message for the CreateConstraintRule RPC
    api.v1alpha1.wfm.CreateConstraintRuleRes:
      type: object
      properties:
        constraintRuleSid:
          type: string
          description: ID of the newly created constraint rule.
        skillProficiencySid:
          type: string
          description: ID of the newly created skill proficiency (will be 0 if rule
            was a non skill one).
      description: Response message for the CreateConstraintRule RPC
    api.v1alpha1.wfm.CreateDraftScheduleReq:
      type: object
      properties:
        name:
          type: string
          description: Name of the draft schedule.
        description:
          type: string
          description: Description of the draft schedule.
        schedulingRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Range to retrieve shift instances and segments from the published
            schedule to use for this draft schedule.
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the draft schedule will be
            associated with.
      description: Request message for the CreateDraftSchedule RPC
    api.v1alpha1.wfm.CreateDraftScheduleRes:
      type: object
      properties:
        draftScheduleSid:
          type: string
          description: ID of the newly created draft schedule.
      description: Response message for the CreateDraftSchedule RPC
    api.v1alpha1.wfm.CreateInactiveSkillProfileMappingReq:
      type: object
      properties:
        inactiveSkillProfileSid:
          type: string
          description: ID of the inactive skill profile that will be mapped to the
            active_skill_profile_sid.
        activeSkillProfileSid:
          type: string
          description: ID of the active skill profile that the inactive_skill_profile_sid
            will be mapped to.
      description: "Request message for the CreateInactiveSkillProfileMapping RPC.\n
        DEPRECATED as of Sep/27/2023 - Use skill profile groups instead."
    api.v1alpha1.wfm.CreateInactiveSkillProfileMappingRes:
      type: object
      properties: {}
      description: "Response message for the CreateInactiveSkillProfileMapping RPC.\n
        DEPRECATED as of Sep/27/2023 - Use skill profile groups instead."
    api.v1alpha1.wfm.CreateInitialDemoActivitiesRequest:
      type: object
      properties: {}
      description: Request message for the CreateInitialDemoActivities RPC.
    api.v1alpha1.wfm.CreateInitialDemoActivitiesResponse:
      type: object
      properties: {}
      description: Response message for the CreateInitialDemoActivities RPC.
    api.v1alpha1.wfm.CreateLocationNodeReq:
      type: object
      properties:
        node:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.LocationNode'
          description: Node to create, the @location_node_sid doesn't need to be set
            since it won't be used.
      description: Request message for the CreateLocationNode RPC
    api.v1alpha1.wfm.CreateLocationNodeRes:
      type: object
      properties:
        locationNodeSid:
          type: string
          description: ID of the newly created location node.
      description: Response message for the CreateLocationNode RPC
    api.v1alpha1.wfm.CreateNonSkillActivityReq:
      type: object
      properties:
        nonSkillActivity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.NonSkillActivity'
          description: Non skill activity to create, the @non_skill_activity_sid doesn't
            need to be set since it won't be used.
      description: Request message for the CreateNonSkillActivity RPC
    api.v1alpha1.wfm.CreateNonSkillActivityRes:
      type: object
      properties:
        nonSkillActivitySid:
          type: string
          description: ID of the newly created non skill activity.
        schedulingActivitySid:
          type: string
          description: ID of the newly created scheduling activity wrapper for @non_skill_activity.
      description: Response message for the CreateNonSkillActivity RPC
    api.v1alpha1.wfm.CreateOpenTimesPatternReq:
      type: object
      properties:
        openTimesPattern:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.OpenTimesPattern'
          description: Open times pattern to create, the @open_times_pattern_sid doesn't
            need to be set since it won't be used.
      description: Request message for the CreateOpenTimesPattern RPC
    api.v1alpha1.wfm.CreateOpenTimesPatternRes:
      type: object
      properties:
        openTimesPatternSid:
          type: string
          description: ID of the newly created open times pattern.
      description: Response message for the CreateOpenTimesPattern RPC
    api.v1alpha1.wfm.CreatePlacementRuleReq:
      type: object
      properties:
        placementRule:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.PlacementRule'
          description: Placement rule to create, the @placement_rule_sid doesn't need
            to be set since it won't be used
      description: Request message for the CreatePlacementRule RPC
    api.v1alpha1.wfm.CreatePlacementRuleRes:
      type: object
      properties:
        placementRuleSid:
          type: string
          description: ID of the newly created placement rule
      description: Response message for the CreatePlacementRule RPC
    api.v1alpha1.wfm.CreateProgramNodeReq:
      type: object
      properties:
        node:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ProgramNode'
          description: Node to create, the @program_node_sid doesn't need to be set
            since it won't be used.
      description: Request message for the CreateProgramNode RPC
    api.v1alpha1.wfm.CreateProgramNodeRes:
      type: object
      properties:
        programNodeSid:
          type: string
          description: ID of the newly created program node.
      description: Response message for the CreateProgramNode RPC
    api.v1alpha1.wfm.CreateRegressionTemplateReq:
      type: object
      properties:
        regressionTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.RegressionTemplate'
          description: Regression template to be stored in the db.
      description: Request message for the CreateRegressionTemplate RPC
    api.v1alpha1.wfm.CreateRegressionTemplateRes:
      type: object
      properties: {}
      description: Response message for the CreateRegressionTemplate RPC
    api.v1alpha1.wfm.CreateRgbaColorRequest:
      type: object
      properties:
        color:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.RgbaColor'
          description: The RGBA color to create.
      description: Request message for CreateRgbaColor.
    api.v1alpha1.wfm.CreateRgbaColorResponse:
      type: object
      properties:
        rgbaColorId:
          type: string
          description: ID of the newly created rgba color
      description: Response message for CreateRgbaColor.
    api.v1alpha1.wfm.CreateScheduleScenarioWithNodesReq:
      type: object
      properties:
        scheduleScenario:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ScheduleScenario'
          description: ScheduleScenario to be stored in the db.
        callCenterNodeName:
          type: string
          description: Name for the created call center node.
        callCenterNodeDescription:
          type: string
          description: Description for the created call center node.
        clientNodeName:
          type: string
          description: Name for the created client node.
        clientNodeDescription:
          type: string
          description: Description for the created client node.
        locationNodeName:
          type: string
          description: Name for the created location node.
        locationNodeDescription:
          type: string
          description: Description for the location center node.
        programNodeName:
          type: string
          description: Name for the created program node.
        programNodeDescription:
          type: string
          description: Description for the created program node.
        timeZoneVal:
          type: integer
          description: TimeZoneVal is the desired timezone for the created nodes.
          format: enum
        skillProfileCategory:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: "Skill Profile Category to associate with the program node
            to create.\n The predicted calls of this skill profile category will be
            used when scheduling."
      description: Request message for the CreateScheduleScenarioWithNodes RPC
    api.v1alpha1.wfm.CreateScheduleScenarioWithNodesRes:
      type: object
      properties:
        scheduleScenarioSid:
          type: string
          description: ID of the scenario just created.
      description: Response message for the CreateScheduleScenarioWithNodes RPC
    api.v1alpha1.wfm.CreateShiftInstanceReq:
      type: object
      properties:
        draftScheduleSid:
          type: string
          description: ID of the draft schedule for the shift instance.
        shiftTemplateSid:
          type: string
          description: ID of the shift template for the shift instance.
        startDatetime:
          type: string
          description: Start datetime of the shift instance.
          format: date-time
        widthInMinutes:
          type: integer
          description: Width in minutes of the shift instance.
          format: int32
        isLocked:
          type: boolean
          description: Indicates whether the shift instance is locked.
        wfmAgentSid:
          type: string
          description: "ID of the wfm agent for the shift instance. If null it will\n
            create a new unassigned WfmAgent for the shift instance."
        metricTypes:
          type: array
          items:
            type: integer
            format: enum
          description: Metric types for the shift instance.
      description: "Request message for the CreateShiftInstance RPC\n Method is Unimplimented.
        Use CreateShiftInstanceV2 instead."
    api.v1alpha1.wfm.CreateShiftInstanceRes:
      type: object
      properties:
        shiftInstance:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: Shift instance that was created.
        performanceMetrics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetric'
          description: Deprecated. Performance metrics that this shift instance has.
        performanceMetricsV2:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetricV2'
          description: Performance metrics that this shift instance has.
      description: Response message for the CreateShiftInstance RPC
    api.v1alpha1.wfm.CreateShiftInstanceV2Req:
      type: object
      properties:
        draftScheduleSid:
          type: string
          description: ID of the draft schedule for the shift instance.
        shiftTemplateSid:
          type: string
          description: ID of the shift template for the shift instance.
        startDatetime:
          type: string
          description: Start datetime of the shift instance.
          format: date-time
        isLocked:
          type: boolean
          description: Indicates whether the shift instance is locked.
        wfmAgentSids:
          type: array
          items:
            type: string
          description: "ID of the wfm agents for the shift instance.\n If empty it
            will create a new unassigned WfmAgent for the shift instance.\n If given
            more than one sid, then a copy of the instance will be created for each
            agent."
      description: Request message for the CreateShiftInstanceV2 RPC
    api.v1alpha1.wfm.CreateShiftInstanceV2Res:
      type: object
      properties:
        shiftInstances:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: Any shift instances that were created.
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Diagnostics to report cause if shift instances fail to build.
      description: Response message for the CreateShiftInstanceV2 RPC
    api.v1alpha1.wfm.CreateShiftInstanceWithSegmentsRequest:
      type: object
      properties:
        shiftInstance:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: Shift instance with any member shift segments and shift segment
            call stats to create.
        ignoreDiagnosticsErrors:
          type: boolean
          description: "If set to true, it will create the shift regardless of any
            diagnostics errors,\n otherwise it will return those diagnostic errors
            and not create the shift."
      description: Request message for the CreateShiftInstanceWithSegments RPC.
    api.v1alpha1.wfm.CreateShiftInstanceWithSegmentsResponse:
      type: object
      properties:
        shiftInstance:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: The newly created shift instance and any created shift instances
            and shift segment call stats.
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: "Any diagnostics encountered when creating @shift_instance.\n
            If ignore_diagnostics_errors is true, then any diagnostic errors will
            be returned as warnings."
      description: Response message for the CreateShiftInstanceWitSegments RPC.
    api.v1alpha1.wfm.CreateShiftTemplateReq:
      type: object
      properties:
        shiftTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftTemplate'
          description: Shift template to create, the @shift_template_sid doesn't need
            to be set since it won't be used
      description: Request message for the CreateShiftTemplate RPC
    api.v1alpha1.wfm.CreateShiftTemplateRes:
      type: object
      properties:
        shiftTemplateSid:
          type: string
          description: ID of the newly created shift template
      description: Response message for the CreateShiftTemplate RPC
    api.v1alpha1.wfm.CreateSkillProficienciesReq:
      type: object
      properties:
        proficiencies:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProficiency'
          description: Skill proficiencies to create, the @skill_proficiency_sid's
            don't need to be set since they won't be used.
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the @parent_entity in each
            @proficiency belongs to.
      description: Request message for the CreateSkillProficiencies RPC
    api.v1alpha1.wfm.CreateSkillProficienciesRes:
      type: object
      properties: {}
      description: Response message for the CreateSkillProficiencies RPC
    api.v1alpha1.wfm.CreateSkillProfileGroupReq:
      type: object
      properties:
        skillProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProfileGroup'
          description: "Skill profile group to create.\n @skill_profile_group_sid
            will be ignored since that field is generated upon creation of the entity.\n
            @skill_profile_group_sids will be ignored since associations cannot be
            created by this method."
      description: Request message for the CreateSkillProfileGroup RPC.
    api.v1alpha1.wfm.CreateSkillProfileGroupRes:
      type: object
      properties:
        skillProfileGroupSid:
          type: string
          description: ID of the skill profile group created.
      description: Response message for the CreateSkillProfileGroup RPC.
    api.v1alpha1.wfm.CreateTourAgentCollectionReq:
      type: object
      properties:
        tourAgentCollection:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.TourAgentCollection'
          description: The Tour Agent Collection to create.
      description: Request message for the CreateTourAgentCollection RPC.
    api.v1alpha1.wfm.CreateTourAgentCollectionRes:
      type: object
      properties:
        tourAgentCollectionSid:
          type: string
          description: ID of the newly created Tour Agent Collection.
      description: Response message for the CreateTourAgentCollection RPC.
    api.v1alpha1.wfm.CreateTourAgentCollectionWFMAgentsReq:
      type: object
      properties:
        wfmAgentSids:
          type: array
          items:
            type: string
          description: ID of the wfm agents to add to @tour_agent_collection_sid.
        tourAgentCollectionSid:
          type: string
          description: ID of the Tour Agent Collection that the @wfm_agent_sids will
            belong to.
      description: Request message for the CreateTourAgentCollectionWFMAgents RPC.
    api.v1alpha1.wfm.CreateTourAgentCollectionWFMAgentsRes:
      type: object
      properties: {}
      description: Response message for the CreateTourAgentCollectionWFMAgents RPC.
    api.v1alpha1.wfm.CreateTourPatternReq:
      type: object
      properties:
        shiftTemplateSid:
          type: string
          description: ID of the Shift Template to create the Tour Pattern for.
      description: Request message for the CreateTourPattern RPC.
    api.v1alpha1.wfm.CreateTourPatternRes:
      type: object
      properties:
        tourPatternSid:
          type: string
          description: ID of the newly created Tour Pattern
      description: Response message for the CreateTourPattern RPC.
    api.v1alpha1.wfm.CreateTourShiftInstanceConfigReq:
      type: object
      properties:
        tourShiftInstanceConfig:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.TourShiftInstanceConfig'
          description: The Tour Shift Instance Config to create.
      description: Request message for the CreateTourShiftInstanceConfig RPC.
    api.v1alpha1.wfm.CreateTourShiftInstanceConfigRes:
      type: object
      properties:
        tourShiftInstanceConfigSid:
          type: string
          description: ID of the newly created Tour Shift Instance Config.
      description: Response message for the CreateTourShiftInstanceConfig RPC.
    api.v1alpha1.wfm.CreateTourShiftSegmentConfigReq:
      type: object
      properties:
        tourShiftSegmentConfig:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.TourShiftSegmentConfig'
          description: The tour Shift Segment Config to Create.
      description: Request message for the CreateTourShiftSegmentConfig RPC.
    api.v1alpha1.wfm.CreateTourShiftSegmentConfigRes:
      type: object
      properties:
        tourShiftSegmentConfigSid:
          type: string
          description: ID of the newly created Tour shift Segment Config.
      description: Response message for the CreateTourPattern RPC.
    api.v1alpha1.wfm.CreateTourWeekPatternReq:
      type: object
      properties:
        tourPatternSid:
          type: string
          description: ID of the Tour Pattern to create the tour week pattern for.
      description: Request message for the CreateTourWeekPattern RPC.
    api.v1alpha1.wfm.CreateTourWeekPatternRes:
      type: object
      properties:
        tourWeekPatternSid:
          type: string
          description: ID of the newly created Tour Pattern.
      description: Response message for the CreateTourWeekPattern RPC.
    api.v1alpha1.wfm.CreateUnassignedWFMAgentRequest:
      type: object
      properties:
        wfmAgentSidToCopyAgentGroupAssociations:
          type: string
          description: ID of the wfm agent to copy the agent group associations onto
            the new agent.
        name:
          type: string
          description: "Optional: name to give the agent, it will always have the
            following random string postfixed to it:\n ' - <random_upper_letter><random_upper_letter><random_number_from_100_to_999>'.\n
            If left blank, the name will have 'Unassigned Agent' as its prefix."
      description: Request message for the CreateUnassignedWFMAgent RPC
    api.v1alpha1.wfm.CreateUnassignedWFMAgentResponse:
      type: object
      properties:
        wfmAgentSid:
          type: string
          description: ID of the newly created agent.
      description: Response message for CreateUnassignedWFMAgent RPC
    api.v1alpha1.wfm.CreateWFMAgentMembershipsReq:
      type: object
      properties:
        wfmAgentSids:
          type: array
          items:
            type: string
          description: ID of the wfm agents to create the association of.
        agentGroupSid:
          type: string
          description: ID of the agent group to that the agents associate with.
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the sids belong to.
      description: Request message for the CreateWFMAgentMemberships RPC
    api.v1alpha1.wfm.CreateWFMAgentMembershipsRes:
      type: object
      properties: {}
      description: Response message for CreateWFMAgentMemberships RPC
    api.v1alpha1.wfm.DOWPlacement:
      type: object
      properties:
        startMinute:
          type: integer
          description: Minute in the day for the placement to start.
          format: int32
        endMinute:
          type: integer
          description: Minute in the day for the placement to end.
          format: int32
        placementType:
          type: integer
          description: The type of placement.
          format: enum
        dayOfWeek:
          type: integer
          description: "The day of the week that the placement belongs to.\n Each
            week always starts on Sunday."
          format: enum
        weekNumber:
          type: integer
          description: "The week number, specifying which week of the template the
            placement belongs to.\n The first week should be set to 0."
          format: int32
      description: DOW Placement
    api.v1alpha1.wfm.DatetimePattern:
      type: object
      properties:
        weekMaps:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.DatetimePattern_WeekMap'
          description: All week maps that the pattern has.
        calendarItems:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.DatetimePattern_CalendarItem'
          description: All calendar items that the pattern has.
      description: Represents a datetime pattern that can be used for open times or
        agent availability
    api.v1alpha1.wfm.DatetimePattern_CalendarItem:
      type: object
      properties:
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime range of the calendar item.
        value:
          allOf:
          - $ref: '#/components/schemas/api.commons.OptionTypes'
          description: Value that this calendar item has.
    api.v1alpha1.wfm.DatetimePattern_WeekMap:
      type: object
      properties:
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime range of the week map.
        dayMaps:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.WeekMap_WeekMapDOW'
          description: Days of the week that the week map has.
    api.v1alpha1.wfm.DeleteAdherenceAgentRuleClauseRequest:
      type: object
      properties:
        adherenceAgentRuleClauseId:
          type: string
          description: ID of the agent rule clause to delete.
      description: Request message for DeleteAdherenceAgentRuleClause.
    api.v1alpha1.wfm.DeleteAdherenceAgentRuleClauseResponse:
      type: object
      properties: {}
      description: Response message for DeleteAdherenceAgentRuleClause.
    api.v1alpha1.wfm.DeleteAdherenceDepartmentalRuleClauseRequest:
      type: object
      properties:
        adherenceDepartmentalRuleClauseId:
          type: string
          description: ID of the departmental rule clause to delete.
      description: Request message for DeleteAdherenceDepartmentalRuleClause.
    api.v1alpha1.wfm.DeleteAdherenceDepartmentalRuleClauseResponse:
      type: object
      properties: {}
      description: Response message for DeleteAdherenceDepartmentalRuleClause.
    api.v1alpha1.wfm.DeleteAdherenceRuleNotificationConfigEntryRequest:
      type: object
      properties:
        adherenceRuleNotificationConfigEntryId:
          type: string
          description: ID of the notification config entry to delete.
      description: Request message for DeleteAdherenceRuleNotificationConfigEntry.
    api.v1alpha1.wfm.DeleteAdherenceRuleNotificationConfigEntryResponse:
      type: object
      properties: {}
      description: Response message for DeleteAdherenceRuleNotificationConfigEntry.
    api.v1alpha1.wfm.DeleteAgentAvailabilityPatternReq:
      type: object
      properties:
        agentAvailabilityPatternSid:
          type: string
          description: ID of the agent availability pattern to delete.
      description: Request message for the DeleteAgentAvailabilityPattern RPC
    api.v1alpha1.wfm.DeleteAgentAvailabilityPatternRes:
      type: object
      properties: {}
      description: Response message for the DeleteAgentAvailabilityPattern RPC
    api.v1alpha1.wfm.DeleteCallProfileTemplateReq:
      type: object
      properties:
        callProfileTemplateSid:
          type: string
          description: ID of the call profile template to delete.
      description: Request message for the DeleteCallProfileTemplate RPC
    api.v1alpha1.wfm.DeleteCallProfileTemplateRes:
      type: object
      properties: {}
      description: Response message for the DeleteCallProfileTemplate RPC
    api.v1alpha1.wfm.DeleteConstraintRuleReq:
      type: object
      properties:
        constraintRuleSid:
          type: string
          description: ID of the constraint rule to delete.
      description: Request message for the DeleteConstraintRule RPC
    api.v1alpha1.wfm.DeleteConstraintRuleRes:
      type: object
      properties: {}
      description: Response message for the DeleteConstraintRule RPC
    api.v1alpha1.wfm.DeleteDraftScheduleReq:
      type: object
      properties:
        draftScheduleSid:
          type: string
          description: ID of draft schedule to delete.
      description: Request message for the DeleteDraftSchedule RPC
    api.v1alpha1.wfm.DeleteDraftScheduleRes:
      type: object
      properties: {}
      description: Response message for the DeleteDraftSchedule RPC
    api.v1alpha1.wfm.DeleteForecastIntervalsReq:
      type: object
      properties:
        skillProfileSid:
          type: string
          description: "ID of the skill profile of which to delete the intervas/deltas.\n
            Deprecated as of Sep/13/2023: use skill_profile_category instead."
        forecastIntervalSids:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.DeleteForecastIntervalsReq_IntervalSids'
          description: Wrapper for SIDs of intervals to be deleted
        skillProfileCategory:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Skill profile category of which to delete the intervals/deltas.
        forecastIntervalDeleteType:
          type: integer
          description: Type of interval to delete
          format: enum
      description: Request message for the DeleteForecastIntervals RPC
    api.v1alpha1.wfm.DeleteForecastIntervalsReq_IntervalSids:
      type: object
      properties:
        sids:
          type: array
          items:
            type: string
          description: sids of the intervals/deltas to be deleted
      description: Can't use "repeated" in a "oneof" so this field is nested in its
        own message
    api.v1alpha1.wfm.DeleteForecastIntervalsRes:
      type: object
      properties: {}
      description: Response message for the DeleteForecastIntervals RPC
    api.v1alpha1.wfm.DeleteHistoricalDataDeltasReq:
      type: object
      properties:
        skillProfileSid:
          type: string
          description: ID of the skill profile of which to delete the deltas.
        startDatetimes:
          type: array
          items:
            type: string
            format: date-time
          description: "start datetimes of the deltas to delete.\n If no datetimes
            are given, it will delete all the deltas that the given @skill_profile_sid
            has."
      description: Request message for the DeleteHistoricalDataDeltas RPC.
    api.v1alpha1.wfm.DeleteHistoricalDataDeltasRes:
      type: object
      properties: {}
      description: Response message for the DeleteHistoricalDataDeltas RPC.
    api.v1alpha1.wfm.DeleteOpenTimesPatternReq:
      type: object
      properties:
        openTimesPatternSid:
          type: string
          description: ID of the open times pattern to delete.
      description: Request message for the DeleteOpenTimesPattern RPC
    api.v1alpha1.wfm.DeleteOpenTimesPatternRes:
      type: object
      properties: {}
      description: Response message for the DeleteOpenTimesPattern RPC
    api.v1alpha1.wfm.DeletePlacementRuleReq:
      type: object
      properties:
        placementRuleSid:
          type: string
          description: ID of the placement rule to delete.
      description: Request message for the DeletePlacementRule RPC
    api.v1alpha1.wfm.DeletePlacementRuleRes:
      type: object
      properties: {}
      description: Response message for the DeletePlacementRule RPC
    api.v1alpha1.wfm.DeleteRealTimeManagementStateColorRequest:
      type: object
      properties:
        state:
          type: integer
          description: "State to delete the state color association for.\n State will
            be associated with the system default color instead."
          format: enum
      description: Request message for DeleteRealTimeManagementStateColor.
    api.v1alpha1.wfm.DeleteRealTimeManagementStateColorResponse:
      type: object
      properties: {}
      description: Response message for DeleteRealTimeManagementStateColor.
    api.v1alpha1.wfm.DeleteRegressionTemplateReq:
      type: object
      properties:
        regressionTemplateSid:
          type: string
          description: ID of the regression template to delete.
      description: Request message for the DeleteRegressionTemplate RPC
    api.v1alpha1.wfm.DeleteRegressionTemplateRes:
      type: object
      properties: {}
      description: Response message for the DeleteRegressionTemplate RPC
    api.v1alpha1.wfm.DeleteRgbaColorRequest:
      type: object
      properties:
        rgbaColorId:
          type: string
          description: ID of the rgba color to delete.
      description: Request message for DeleteRgbaColor.
    api.v1alpha1.wfm.DeleteRgbaColorResponse:
      type: object
      properties: {}
      description: Request message for DeleteRgbaColor.
    api.v1alpha1.wfm.DeleteSchedulingTargetReq:
      type: object
      properties:
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: The node to delete the scheduling target for.
      description: DeleteSchedulingTarget request.
    api.v1alpha1.wfm.DeleteSchedulingTargetRes:
      type: object
      properties: {}
      description: DeleteSchedulingTarget response.
    api.v1alpha1.wfm.DeleteShiftInstancesReq:
      type: object
      properties:
        shiftInstanceSids:
          type: array
          items:
            type: string
          description: IDs of shift instances to delete.
      description: Request message for the DeleteShiftInstances RPC
    api.v1alpha1.wfm.DeleteShiftInstancesRes:
      type: object
      properties: {}
      description: Response message for the DeleteShiftInstances RPC
    api.v1alpha1.wfm.DeleteSkillProficiencyReq:
      type: object
      properties:
        skillProficiencySid:
          type: string
          description: ID of skill proficiency to delete.
      description: Request message for the DeleteSkillProficiency RPC
    api.v1alpha1.wfm.DeleteSkillProficiencyRes:
      type: object
      properties: {}
      description: Response message for the DeleteSkillProficiency RPC
    api.v1alpha1.wfm.DeleteTourAgentCollectionWFMAgentsReq:
      type: object
      properties:
        wfmAgentSids:
          type: array
          items:
            type: string
          description: "ID of the WFM Agents to delete from @tour_agent_collection_sid.\n
            If no wfm_angent_sids are provided, all will be removed for @tour_agent_collection_sid."
        tourAgentCollectionSid:
          type: string
          description: ID of the tour agent collection that the @wfm_agent_sids will
            be deleted from.
      description: Request message for the DeleteTourAgentCollectionWFMAgents RPC.
    api.v1alpha1.wfm.DeleteTourAgentCollectionWFMAgentsRes:
      type: object
      properties: {}
      description: Response message for the DeleteTourAgentCollectionWFMAgents RPC.
    api.v1alpha1.wfm.DeleteTourAgentCollectionsReq:
      type: object
      properties:
        tourAgentCollectionSids:
          type: array
          items:
            type: string
          description: "IDs of the Tour Agent Collections to be deleted.\n Any associations
            with WFM Agent SIDS for these Collections will also be deleted."
      description: Request message for the DeleteTourAgentCollections RPC.
    api.v1alpha1.wfm.DeleteTourAgentCollectionsRes:
      type: object
      properties: {}
      description: Response message for the DeleteTourAgentCollections RPC.
    api.v1alpha1.wfm.DeleteTourPatternReq:
      type: object
      properties:
        tourPatternSid:
          type: string
          description: "ID of the tour pattern to delete.\n If any entities belong
            to @tour_pattern_sid they will be deleted too."
      description: Request message for the DeleteTourPattern RPC.
    api.v1alpha1.wfm.DeleteTourPatternRes:
      type: object
      properties: {}
      description: Request message for the DeleteTourPattern RPC.
    api.v1alpha1.wfm.DeleteTourShiftInstanceConfigsReq:
      type: object
      properties:
        tourShiftInstanceConfigSids:
          type: array
          items:
            type: string
          description: IDs of the Tour Shift Instance Configs to be deleted.
      description: Request message for the DeleteTourShiftInstanceConfigs RPC.
    api.v1alpha1.wfm.DeleteTourShiftInstanceConfigsRes:
      type: object
      properties: {}
      description: Response message for the DeleteTourShiftInstanceConfigs RPC.
    api.v1alpha1.wfm.DeleteTourShiftSegmentConfigsReq:
      type: object
      properties:
        tourShiftSegmentConfigSids:
          type: array
          items:
            type: string
          description: IDs of the Tour Shift Segment Configs to delete.
      description: Request message for the DeleteTourShiftSegmentConfigs RPC.
    api.v1alpha1.wfm.DeleteTourShiftSegmentConfigsRes:
      type: object
      properties: {}
      description: Response message for the DeleteTourShiftSegmentConfigs RPC.
    api.v1alpha1.wfm.DeleteTourWeekPatternsReq:
      type: object
      properties:
        tourWeekPatternSids:
          type: array
          items:
            type: string
          description: "IDs of the tour week patterns to be deleted.\n Any member
            Configs will be deletes as well.\n If any Tour Agent Collections are using
            the @tour_week_pattern_sids, they must be deleted first."
      description: Request message for the DeleteTourWeekPatterns RPC.
    api.v1alpha1.wfm.DeleteTourWeekPatternsRes:
      type: object
      properties: {}
      description: Response message for the DeleteTourWeekPatterns RPC.
    api.v1alpha1.wfm.DeleteWFMAgentMembershipsReq:
      type: object
      properties:
        wfmAgentSids:
          type: array
          items:
            type: string
          description: ID of the wfm agents to delete the association of.
        agentGroupSid:
          type: string
          description: ID of the agent group to that the agents associate with.
      description: Request message for the DeleteWFMAgentMemberships RPC
    api.v1alpha1.wfm.DeleteWFMAgentMembershipsRes:
      type: object
      properties: {}
      description: Response message for DeleteWFMAgentMemberships RPC
    api.v1alpha1.wfm.DeleteWFMAgentsMembershipsReq:
      type: object
      properties:
        wfmAgentSids:
          type: array
          items:
            type: string
          description: ID of the wfm agents to delete the association of.
        agentGroupSids:
          type: array
          items:
            type: string
          description: ID of the agent groups that the agents associate with.
      description: Request message for the DeleteWFMAgentsMemberships RPC
    api.v1alpha1.wfm.DeleteWFMAgentsMembershipsRes:
      type: object
      properties: {}
      description: Response message for DeleteWFMAgentsMemberships RPC
    api.v1alpha1.wfm.Diagnostic:
      type: object
      properties:
        level:
          type: integer
          description: The diagnostic level describes the class of the diagnostic
            message.
          format: enum
        code:
          type: integer
          description: A code to describe the diagnostic when possible. Default value
            of General when a more specific code is not available.
          format: enum
        message:
          type: string
          description: The message detailing the diagnostic.
        sourceEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: The entity that the diagnostic was built in reference to.
      description: Message type specifying the parameters of a diagnostic
    api.v1alpha1.wfm.Diagnostics:
      type: object
      properties:
        sourceEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: The entity that the diagnostics built reference.
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Diagnostics generated for the @source_entity
      description: Represents a group of diagnostics for a single entity
    api.v1alpha1.wfm.DisconnectInactiveSkillProfileMappingReq:
      type: object
      properties:
        inactiveSkillProfileSid:
          type: string
          description: IDs of the inactive skill profile to disconnect.
      description: "Request message for the DisconnectInactiveSkillProfileMapping
        RPC.\n DEPRECATED as of Sep/27/2023 - Use skill profile groups instead."
    api.v1alpha1.wfm.DisconnectInactiveSkillProfileMappingRes:
      type: object
      properties: {}
      description: "Response message for the DisconnectInactiveSkillProfileMapping
        RPC.\n DEPRECATED as of Sep/27/2023 - Use skill profile groups instead."
    api.v1alpha1.wfm.DraftSchedule:
      type: object
      properties:
        draftScheduleSid:
          type: string
          description: ID of the draft schedule.
        createdAt:
          type: string
          description: Time that this the schedule was created.
          format: date-time
        lastUpdatedAt:
          type: string
          description: Time that this schedule was last updated.
          format: date-time
        name:
          type: string
          description: Name of the draft schedule.
        description:
          type: string
          description: A description of the draft schedule.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: "Datetime range over which this draft schedule spans.\n Is
            the range used when copying shifts from published schedule.\n Also used
            when publishing shifts from the draft to the published schedule."
        createdByUserId:
          type: string
          description: ID of the user who originally drafted the schedule.
        shiftInstances:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: "The following field is only return of List requests of the
            entity.\n Shifts that this schedule has."
        performanceMetrics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetric'
          description: Deprecated. Performance metrics that this schedule has.
        scheduleScenarioSid:
          type: string
          description: Schedule Scenario of the draft schedule.
        performanceMetricsV2:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetricV2'
          description: Performance metrics that this schedule has.
      description: Represents a draft schedule
    api.v1alpha1.wfm.FTERequiredVsAchievedInterval:
      type: object
      properties:
        startDatetime:
          type: string
          description: The start time of the interval.
          format: date-time
        requiredCalls:
          type: integer
          description: Number of required calls in the interval.
          format: int32
        achievedFtes:
          type: integer
          description: Number of achieved FTE's in the interval.
          format: int32
      description: "Deprecated.\n Represents an fte required vs achieved interval."
    api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval:
      type: object
      properties:
        startDatetime:
          type: string
          format: date-time
        requiredFteOccupancy:
          type: number
          format: float
        achievedFteOccupancy:
          type: number
          format: float
        requiredFte:
          type: number
          description: Number of required FTE in the interval.
          format: float
        achievedFte:
          type: number
          description: Number of achieved FTE's in the interval.
          format: float
        productiveFte:
          type: number
          description: Count of FTE scheduled to be on the phone / productive for
            a specific interval / duration of time.
          format: float
        achievedFteWithShrinkageApplied:
          type: number
          description: Number of achieved FTE's, minus shrinkage, in the interval.
          format: float
        productiveFteWithShrinkageApplied:
          type: number
          description: Count of FTE, minus shrinkage, scheduled to be on the phone
            / productive / duration of time.
          format: float
    api.v1alpha1.wfm.GenerateTourWeekPatternsReq:
      type: object
      properties:
        targetShiftTemplateSid:
          type: string
          description: ID of the shift template to create the tour week patterns for.
        numWeeksInTour:
          type: integer
          description: The number of week patterns to be generated.
          format: int32
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that @target_shift_template_sid
            belong to.
      description: Request message for the GenerateTourWeekPatterns RPC.
    api.v1alpha1.wfm.GenerateTourWeekPatternsRes:
      type: object
      properties:
        tourWeekPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.TourWeekPattern'
          description: A list of tour week patterns containing the newly generated
            tour pattern weeks in the member field.
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Reports any errors preventing @tour_pattern from being generated.
      description: Response message for the GenerateTourWeekPatterns RPC.
    api.v1alpha1.wfm.GetAvailabilityBitmapsReq:
      type: object
      properties:
        entitiesToCheck:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: "The entities that @bitmaps will be associated with.\n Must
            be nodes, wfm agents, and agent groups only. For agent groups, bitmaps
            will be returned for each of the groups member agents,"
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that @entities_to_check belong
            to.
        includeInactive:
          type: boolean
          description: Whether or not to include inactive nodes. Will need to be set
            to true if @entities_to_check or any of it's parents are inactive.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime range that bitmaps will cover when generated for @entities_to_check.
        bitmapType:
          type: integer
          description: Indicates the type of bitmaps to generate.
          format: enum
      description: Request message for the GetAvailabilityBitmaps RPC
    api.v1alpha1.wfm.GetAvailabilityBitmapsRes:
      type: object
      properties:
        bitmaps:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AvailabilityBitmapSet'
          description: Requested bitmaps, with a pointer to the entity that the bitmaps
            belong.
      description: Response message for the GetAvailabilityBitmaps RPC
    api.v1alpha1.wfm.GetAvailableRegressionForecasterModelTypesReq:
      type: object
      properties: {}
      description: Request message for the GetAvailableRegressionForecasterModelTypes
        RPC.
    api.v1alpha1.wfm.GetAvailableRegressionForecasterModelTypesRes:
      type: object
      properties:
        modelTypes:
          type: array
          items:
            type: integer
            format: enum
          description: List of all the available forecaster types currently available.
      description: Response message for the GetAvailableRegressionForecasterModelTypes
        RPC.
    api.v1alpha1.wfm.GetClientHistoryCacheInfoReq:
      type: object
      properties: {}
      description: "Request message for the GetClientHistoryCacheInfo RPC.\n DEPRECATED
        as of Dec/13/2023 - Use PerformInitialClientSetup instead."
    api.v1alpha1.wfm.GetClientHistoryCacheInfoRes:
      type: object
      properties:
        cacheInfo:
          allOf:
          - $ref: '#/components/schemas/api.commons.ClientHistoryCacheInfo'
          description: Cache info for the requested client.
      description: "Response message for the GetClientHistoryCacheInfo RPC.\n DEPRECATED
        as of Dec/13/2023 - Use PerformInitialClientSetup instead."
    api.v1alpha1.wfm.GetDefaultSchedulingTargetReq:
      type: object
      properties: {}
      description: GetDefaultSchedulingTargetReq is a request mesage.
    api.v1alpha1.wfm.GetDefaultSchedulingTargetRes:
      type: object
      properties:
        schedulingTarget:
          $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingTarget'
      description: GetDefaultSchedulingTargetRes is a response mesage.
    api.v1alpha1.wfm.GetDraftScheduleReq:
      type: object
      properties:
        draftScheduleSid:
          type: string
          description: ID of the draft schedule to return.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: "Datetime range to set for the schedule scenario used to make
            the draft schedule.\n If left blank, the current scheduling range for
            the scenario will be used"
        includeShiftInstances:
          type: boolean
          description: Set to true to include shift instances.
        includeShiftTemplate:
          type: boolean
          description: "Set to true to include shift template in each of the returned
            shift instances.\n Only effective when include_shift_instances is also
            set to true."
        includeShiftSegments:
          type: boolean
          description: "Set to true to include shift segments in each of the returned
            shift instances.\n Only effective when include_shift_instances is also
            set to true."
        includeSchedulingActivity:
          type: boolean
          description: "Set to true to include scheduling activity in each of the
            returned shift segments.\n Only effective when include_shift_instances
            and include_shift_segments are also set to true."
        includeActivity:
          type: boolean
          description: "Set to true to include non skill activity in each of the returned
            scheduling activities.\n Only effective when include_scheduling_activity,
            include_shift_segments and include_shift_instances are also set to true."
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Optional field, if left nil all matching the given parameters
            will be included.
      description: Request message for the GetDraftSchedule RPC
    api.v1alpha1.wfm.GetDraftScheduleRequiredCallsReq:
      type: object
      properties:
        draftScheduleSid:
          type: string
          description: Id of the draft schedule.
        viewingRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Date range to return.
        intervalWidthInMinutes:
          type: integer
          description: Width of each interval in minutes.
          format: int32
      description: Request message for the GetDraftScheduleRequiredCalls RPC
    api.v1alpha1.wfm.GetDraftScheduleRequiredCallsRes:
      type: object
      properties:
        intervalWidthInMinutes:
          type: integer
          description: Width of each interval in minutes.
          format: int32
        requiredCallsIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.RequiredCallsInterval'
          description: Required-calls intervals for the published schedule.
      description: Response message for the GetDraftScheduleRequiredCalls RPC
    api.v1alpha1.wfm.GetDraftScheduleRes:
      type: object
      properties:
        draftSchedule:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.DraftSchedule'
          description: Draft schedule found.
      description: Response message for the GetDraftSchedule RPC
    api.v1alpha1.wfm.GetForecastStatisticsRes:
      type: object
      properties:
        numIntervalsMeasured:
          type: integer
          description: the total number of intervals measured
          format: int32
        totalCallsHistorical:
          type: integer
          description: total number of actual historical calls
          format: int32
        totalCallsPredicted:
          type: integer
          description: total number of predicted calls
          format: int32
        percentCallsOverUnder:
          type: number
          description: percentage over predicted (+ve) or under predicted (-ve)
          format: float
        rmsErrorCalls:
          type: number
          description: root-mean-squared error between actual and predicted calls
          format: float
        rmsErrorATAB:
          type: number
          description: root-mean-squared error between actual and predicted atab
          format: float
        rmsErrorASA:
          type: number
          description: root-mean-squared error between actual and predicted asa
          format: float
        rmsErrorACW:
          type: number
          description: root-mean-squared error between actual and predicted acw
          format: float
        rmsErrorAHT:
          type: number
          description: root-mean-squared error between actual and predicted aht
          format: float
        areStatsInvalid:
          type: boolean
          description: Indicates whether or not the stats generated were invalid
        invalidReason:
          type: string
          description: Message explaining why the stats were invalid
      description: Represents the statistics of a given forecast
    api.v1alpha1.wfm.GetForecastingParametersReq:
      type: object
      properties: {}
      description: Request message for the GetForecastingParameters RPC.
    api.v1alpha1.wfm.GetForecastingParametersRes:
      type: object
      properties:
        forecastingParameters:
          allOf:
          - $ref: '#/components/schemas/api.commons.ForecastingParameters'
          description: parameters used for forecasts and training data samples.
      description: Response message for the GetForecastingParameters RPC.
    api.v1alpha1.wfm.GetLastSkillProfileResyncDateReq:
      type: object
      properties: {}
      description: Request message for the GetLastSkillProfileResyncDate RPC.
    api.v1alpha1.wfm.GetLastSkillProfileResyncDateRes:
      type: object
      properties:
        resyncDate:
          type: string
          description: "last date that the org resynced their skill profiles.\n if
            not set, then the org hasn't done a resync of the skill profiles at any
            point in time."
          format: date-time
      description: Response message for the GetLastSkillProfileResyncDate RPC.
    api.v1alpha1.wfm.GetOnCallSchedulingActivityReq:
      type: object
      properties: {}
      description: Request message for the GetOnCallSchedulingActivity RPC
    api.v1alpha1.wfm.GetOnCallSchedulingActivityRes:
      type: object
      properties:
        onCallSchedulingActivity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingActivity'
          description: The on call scheduling activity
    api.v1alpha1.wfm.GetOpenTimesBitmapsReq:
      type: object
      properties:
        nodeToCheck:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: The node that @own_bitmap and @resulting_bitmap will be associated
            with.
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that @node_to_check belongs to.
        includeInactive:
          type: boolean
          description: Whether or not to include inactive nodes. Will need to be set
            to true if @node_to_check or any of it's parents are inactive.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime range that bitmaps will cover when generated for @node_to_check.
        bitmapType:
          type: integer
          description: Indicates the type of bitmaps to generate.
          format: enum
      description: Request message for the GetOpenTimesBitmaps RPC
    api.v1alpha1.wfm.GetOpenTimesBitmapsRes:
      type: object
      properties:
        inheritedBitmap:
          type: array
          items:
            type: integer
            format: enum
          description: Map of open times options inherited from parent nodes.
        ownBitmap:
          type: array
          items:
            type: integer
            format: enum
          description: Map of open times options belonging to the node being checked.
        resultingBitmap:
          type: array
          items:
            type: integer
            format: enum
          description: Map of open times options resulting from combining the inherited
            and own bitmap.
      description: Response message for the GetOpenTimesBitmaps RPC
    api.v1alpha1.wfm.GetPerformanceMetricsReq:
      type: object
      properties:
        scheduleSelector:
          allOf:
          - $ref: '#/components/schemas/api.commons.ScheduleSelector'
          description: The schedule that the performance metric should be associated
            with.
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: The node that the performance metrics should be associated
            with.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: The datetime range over which the metrics will be collected.
        metricParams:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetricParameter'
          description: Parameters to get metrics for.
        intervalWidthInMinutes:
          type: integer
          description: "The number of minutes to consolidate each metric interval
            into.\n Must be a multiple of 5."
          format: int32
        resyncCallStats:
          type: boolean
          description: "If set to true, the call stats will be recalculated for any
            changes made to the shift instances or segments on the schedule.\n    Requires
            that @node_selector be set to a call center node, as resync effects the
            entire schedule.\n If set to false, this step will be skipped."
      description: Request message for the GetPerformanceMetrics RPC.
    api.v1alpha1.wfm.GetPerformanceMetricsRes:
      type: object
      properties:
        performanceMetrics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetric'
          description: Deprecated. Requested set of performance metrics.
        performanceMetricsV2:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetricV2'
          description: Requested set of performance metrics.
      description: Response message for the GetPerformanceMetrics RPC.
    api.v1alpha1.wfm.GetPublishedScheduleReq:
      type: object
      properties:
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Date range to of the published to return.
        includeShiftInstances:
          type: boolean
          description: Set to true to include shift instances.
        includeShiftTemplate:
          type: boolean
          description: "Set to true to include shift template in each of the returned
            shift instances.\n Only effective when include_shift_instances is also
            set to true."
        includeShiftSegments:
          type: boolean
          description: "Set to true to include shift segments in each of the returned
            shift instances.\n Only effective when include_shift_instances is also
            set to true."
        includeSchedulingActivity:
          type: boolean
          description: "Set to true to include scheduling activity in each of the
            returned shift segments.\n Only effective when include_shift_instances
            and include_shift_segments are also set to true."
        includeActivity:
          type: boolean
          description: "Set to true to include non skill activity in each of the returned
            scheduling activities.\n Only effective when include_scheduling_activity,
            include_shift_segments and include_shift_instances are also set to true."
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Optional field, if left nil all matching the given parameters
            will be included.
      description: Request message for the GetPublishedSchedule RPC
    api.v1alpha1.wfm.GetPublishedScheduleRequiredCallsReq:
      type: object
      properties:
        viewingRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Date range to return.
        intervalWidthInMinutes:
          type: integer
          description: Width of each interval in minutes.
          format: int32
      description: Request message for the GetPublishedScheduleRequiredCalls RPC
    api.v1alpha1.wfm.GetPublishedScheduleRequiredCallsRes:
      type: object
      properties:
        intervalWidthInMinutes:
          type: integer
          description: Width of each interval in minutes.
          format: int32
        requiredCallsIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.RequiredCallsInterval'
          description: Required-calls intervals for the published schedule.
      description: Response message for the GetPublishedScheduleRequiredCalls RPC
    api.v1alpha1.wfm.GetPublishedScheduleRes:
      type: object
      properties:
        publishedSchedule:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.PublishedSchedule'
          description: Published schedule found.
      description: Response message for the GetPublishedSchedule RPC
    api.v1alpha1.wfm.GetSchedulingTargetReq:
      type: object
      properties:
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Node to get the scheduling target from.
      description: GetSchedulingTarget request.
    api.v1alpha1.wfm.GetSchedulingTargetRes:
      type: object
      properties:
        inheritedSchedulingTarget:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingTarget'
          description: The scheduling target that the node is inheriting from a parent.
        ownSchedulingTarget:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingTarget'
          description: The node's own scheduling target.
        resultingSchedulingTarget:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingTarget'
          description: "The resulting scheduling target for the node.\n If there is
            no value for @inherited_scheduling_target or @own_scheduling_target the
            system default value will be used."
      description: GetSchedulingTarget reponse.
    api.v1alpha1.wfm.GetSkillProfileReq:
      type: object
      properties:
        skillProfileSid:
          type: string
          description: ID of the desired skill profile.
      description: Request message for the GetSkillProfile RPC.
    api.v1alpha1.wfm.GetSkillProfileRes:
      type: object
      properties:
        skillProfile:
          $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProfile'
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.GetSkillProfileRes_Mapping'
          description: "Inactive skill profile mappings that the requested skill profile
            has.\n If the profile's @inactive_as_of_date is nil then the mapping is
            of inactive profiles to this one.\n If the profile's @inactive_as_of_date
            is NOT nil then the mapping is of this profile to an active one."
      description: Response message for the GetSkillProfile RPC.
    api.v1alpha1.wfm.GetSkillProfileRes_Mapping:
      type: object
      properties:
        skillProfileSid:
          type: string
          description: ID of the skill profile mapped to the requested skill profile.
        name:
          type: string
          description: Name of the skill profile mapped to the requested skill profile.
    api.v1alpha1.wfm.GetSkillProfilesCountReq:
      type: object
      properties: {}
      description: Request message for the GetSkillProfilesCount RPC
    api.v1alpha1.wfm.GetSkillProfilesCountRes:
      type: object
      properties:
        count:
          type: integer
          description: number of skill profiles that the org has.
          format: int32
      description: Response message for the GetSkillProfilesCount RPC
    api.v1alpha1.wfm.GetTimeOffSchedulingActivityRequest:
      type: object
      properties: {}
      description: Request message for the GetTimeOffSchedulingActivity RPC
    api.v1alpha1.wfm.GetTimeOffSchedulingActivityResponse:
      type: object
      properties:
        schedulingActivity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingActivity'
          description: The time off scheduling activity
      description: Response message for the GetTimeOffSchedulingActivity RPC
    api.v1alpha1.wfm.GetTourPatternDiagnosticsReq:
      type: object
      properties:
        tourPattern:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.TourPattern'
          description: The tour pattern and members to validate.
      description: Request message for the GetTourPatternDiagnostics RPC.
    api.v1alpha1.wfm.GetTourPatternDiagnosticsRes:
      type: object
      properties:
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Diagnostics for any issues encountered with the fields on the
            given @tour_pattern, or an OK diagnostic if there are no issues.
      description: Response message for the GetTourPatternDiagnostics RPC.
    api.v1alpha1.wfm.GetTourPatternReq:
      type: object
      properties:
        shiftTemplateSid:
          type: string
          description: ID of the Shift Template to get the Tour Pattern for.
      description: Request message for the GetTourPattern RPC.
    api.v1alpha1.wfm.GetTourPatternRes:
      type: object
      properties:
        tourPattern:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.TourPattern'
          description: The requested Tour Pattern
      description: Request message for the GetTourPattern RPC.
    api.v1alpha1.wfm.GetTourPatternWithMembersReq:
      type: object
      properties:
        shiftTemplateSid:
          type: string
          description: ID of the Shift Template to get the Tour Pattern for.
      description: Request message for the GetTourPatternWithMembers RPC.
    api.v1alpha1.wfm.GetTourPatternWithMembersRes:
      type: object
      properties:
        tourPattern:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.TourPattern'
          description: The requested Tour Pattern with all member entities.
      description: Request message for the GetTourPatternWithMembers RPC.
    api.v1alpha1.wfm.HelloWorldWFMAdherenceRequest:
      type: object
      properties: {}
      description: Request message for the HelloWorldWFMAdherence RPC.
    api.v1alpha1.wfm.HelloWorldWFMAdherenceResponse:
      type: object
      properties:
        helloMessage:
          type: string
          description: A string containing the hello world message
      description: Response message for the HelloWorldWFMAdherence RPC.
    api.v1alpha1.wfm.HistoricalDataInterval:
      type: object
      properties:
        startDatetime:
          type: string
          description: time that this interval starts at.
          format: date-time
        skillProfileSid:
          type: string
          description: "ID of the skill profile that this interval belongs to.\n Deprecated
            as of Sep/8/2023: use skill_profile_category instead."
        averageSpeedOfAnswerInSeconds:
          type: number
          description: "the following are averages for all the calls found for this
            interval.\n average time that calls took to be answered."
          format: float
        averageHandleTimeInSeconds:
          type: number
          description: average duration of answered calls.
          format: float
        averageAfterCallWorkInSeconds:
          type: number
          description: average time that agents spent in wrap up.
          format: float
        averageTimeToAbortInSeconds:
          type: number
          description: average time that callers waited before hanging unanswered
            calls.
          format: float
        totalCalls:
          type: integer
          description: total calls found for this interval (answered + unanswered).
          format: int32
        totalAbandonedCalls:
          type: integer
          description: total number of calls that were abandoned
          format: int32
        isDelta:
          type: boolean
          description: true=interval w/ delta applied, false=historical interval
        originalAverageSpeedOfAnswerInSeconds:
          type: number
          description: "The following are only set by the server when requesting the
            training data intervals and the interval is a delta.\n They will contain
            the non delta values for that interval.\n original average time that calls
            took to be answered."
          format: float
        originalAverageHandleTimeInSeconds:
          type: number
          description: original average duration of answered calls.
          format: float
        originalAverageAfterCallWorkInSeconds:
          type: number
          description: original average time that agents spent in wrap up.
          format: float
        originalAverageTimeToAbortInSeconds:
          type: number
          description: original average time that callers waited before hanging unanswered
            calls.
          format: float
        originalTotalCalls:
          type: integer
          description: original total calls found for this interval (answered + unanswered).
          format: int32
        originalTotalAbandonedCalls:
          type: integer
          description: original total number of calls that were abandoned
          format: int32
        skillProfileCategory:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Skill profile category that the interval belongs to.
      description: Message type specifying an interval of calls linked to a skill
        profile used for historical the forecaster
    api.v1alpha1.wfm.ListAdherenceAgentRulesRequest:
      type: object
      properties: {}
      description: Request message for ListAdherenceAgentRules.
    api.v1alpha1.wfm.ListAdherenceAgentRulesResponse:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AdherenceAgentRule'
          description: Agent rules found for the org sending the request.
      description: Response message for ListAdherenceAgentRules.
    api.v1alpha1.wfm.ListAdherenceDepartmentalRulesRequest:
      type: object
      properties: {}
      description: Request message for ListAdherenceDepartmentalRules.
    api.v1alpha1.wfm.ListAdherenceDepartmentalRulesResponse:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AdherenceDepartmentalRule'
          description: Departmental rules found for the org sending the request.
      description: Response message for ListAdherenceDepartmentalRules.
    api.v1alpha1.wfm.ListAdherenceRuleNotificationConfigsRequest:
      type: object
      properties: {}
      description: Request message for ListAdherenceRuleNotificationConfigs.
    api.v1alpha1.wfm.ListAdherenceRuleNotificationConfigsResponse:
      type: object
      properties:
        notificationConfigs:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AdherenceRuleNotificationConfig'
          description: Notification configs found for the org sending the request.
      description: Response message for ListAdherenceRuleNotificationConfigs.
    api.v1alpha1.wfm.ListAgentLeavePetitionsRequest:
      type: object
      properties:
        wfmAgentSids:
          type: array
          items:
            type: string
          description: "The wfm agents to list agent leave petitions for.\n If no
            SIDs are provided, all agent leave petitions within the @datetime_range
            will be returned."
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: "Datetime range over which agent leave petitions should be
            retrieved.\n Any agent leave petitions overlapping the datetime range
            may be returned."
        includeArchived:
          type: boolean
          description: "If true, archived agent leave petitions will be included in
            the response.\n Otherwise, no archived requests will be included in the
            response."
      description: Request message for ListAgentLeavePetitions.
    api.v1alpha1.wfm.ListAgentLeavePetitionsResponse:
      type: object
      properties:
        agentLeavePetitions:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AgentLeavePetition'
          description: All agent leave petitions requests matching the parameters
            in the request.
      description: Response message for ListAgentLeavePetitions.
    api.v1alpha1.wfm.ListAgentScheduleGroupsRequest:
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Any node or shift template that the agent groups belong to.
      description: Request message for ListAgentScheduleGroups.
    api.v1alpha1.wfm.ListAgentScheduleGroupsResponse:
      type: object
      properties:
        agentGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentGroup'
          description: The agent_groups found. They will be filled with member_wfm_agents
            only.
      description: Response message for ListAgentScheduleGroups.
    api.v1alpha1.wfm.ListAgentStatesForDayRequest:
      type: object
      properties:
        startDatetime:
          type: string
          description: The datetime to start getting agent states from.
          format: date-time
        endDatetime:
          type: string
          description: "An optional parameter.\n If set, all agent states will be
            retrieved for the given datetime range.\n If not set, all agent states
            will be retrieved for either a 24 hour period or until the current time,
            whichever is shorter."
          format: date-time
      description: Request message for the ListAgentStatesForDay RPC.
    api.v1alpha1.wfm.ListAgentStatesForDayResponse:
      type: object
      properties:
        agentStates:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AgentStateSequence'
          description: The list of requested agent states.
      description: Response message for the ListAgentStatesForDay RPC.
    api.v1alpha1.wfm.ListAllWFMAgentsReq:
      type: object
      properties:
        includeInactive:
          type: boolean
          description: Indicates if the result should include the inactive wfm agents.
        includeSkillProficiencies:
          type: boolean
          description: Indicates if the resulting WFM agents should include skill
            proficiencies.
        includeAgentGroups:
          type: boolean
          description: Indicates if the resulting WFM agents should include the groups
            that they are members of.
        agentGroupScheduleScenarioSid:
          type: string
          description: "Indicates the schedule scenario that returned @agent_groups
            belong to.\n If set to zero, the agent groups will not be filtered by
            schedule scenario.\n Does not effect which @wfm_agents are returned."
      description: Request message for the ListAllWFMAgents RPC
    api.v1alpha1.wfm.ListAllWFMAgentsRes:
      type: object
      properties:
        wfmAgents:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.WFMAgent'
          description: List of all wfm agents that belong to the org sending the request.
        agentGroupsByAgent:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ListAllWFMAgentsRes_AgentGroupsByAgent'
          description: "Correlating list of agent groups that the agent with the same
            index is a member of.\n Agents with no agent groups will index to an empty
            slice."
      description: Response message for the ListAllWFMAgents RPC
    api.v1alpha1.wfm.ListAllWFMAgentsRes_AgentGroupsByAgent:
      type: object
      properties:
        agentGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentGroup'
      description: Represents a list of agent groups which are associated with an
        agent.
    api.v1alpha1.wfm.ListCallProfileTemplatesReq:
      type: object
      properties: {}
      description: Request message for the ListCallProfileTemplates RPC
    api.v1alpha1.wfm.ListCallProfileTemplatesRes:
      type: object
      properties:
        callProfileTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.CallProfileTemplate'
          description: List of all the call profile templates for the requesting org
      description: Response message for the ListCallProfileTemplates RPC
    api.v1alpha1.wfm.ListCandidateSchedulingActivitiesReq:
      type: object
      properties:
        parentOfRule:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: "The parent who the rule will inherit candidate scheduling
            activities from.\n May be any node, an agent_group, or shift template.\n
            To get candidate scheduling activities for rules belonging to a wfm agent,
            @parent_of_rule should be the agent group the wfm agent belongs to."
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that this activity belongs to.
      description: Request message for the ListCandidateSchedulingActivitiesReq RPC
    api.v1alpha1.wfm.ListCandidateSchedulingActivitiesRes:
      type: object
      properties:
        schedulingActivities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingActivity'
      description: Response message for the ListCandidateSchedulingActivitiesRes RPC
    api.v1alpha1.wfm.ListCandidateWFMAgentsReq:
      type: object
      properties:
        agentGroupSid:
          type: string
          description: ID of the agent group to find candidate wfm agents for.
      description: Request message for the ListCandidateWFMAgents RPC
    api.v1alpha1.wfm.ListCandidateWFMAgentsRes:
      type: object
      properties:
        wfmAgents:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.WFMAgent'
          description: List of all wfm agents who are candidates for the given @agent_group_sid.
      description: Response message for the ListCandidateWFMAgents RPC
    api.v1alpha1.wfm.ListConfigEntitiesReq:
      type: object
      properties:
        entityType:
          type: integer
          description: Entity type of the entities to retrieve.
          format: enum
        belongsToEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Entity that the entities to return will belong to.
        includeInactive:
          type: boolean
          description: Indicates whether or not to retrieve inactive entities (true=active
            and inactive, false=active only).
        memberDepth:
          type: integer
          description: "Depth to go down the config tree for children and member entities.\n
            e.g: a value of 0 will only get the entities requested with no children/member.\n
            \     a value of 1 will get the entities with children/member entities
            included 1 level down."
          format: int32
        scheduleScenarioSid:
          type: string
          description: ID of the scenario that the entities desired belong to, must
            match the scenario of @belongs_to_entity.
      description: Request message for the ListConfigEntities RPC
    api.v1alpha1.wfm.ListConfigEntitiesRes:
      type: object
      properties:
        callCenterNode:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.CallCenterNode'
          description: "Call Center Node entity retrieved when @entity_type in the
            request is CallCenterNode.\n When this entity is requested, the @belongs_to_entity.type
            will be ignored and assumed as if were ScheduleScenario."
        clientNodes:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_ClientNodeEntities'
          description: "Client Node entities retrieved when @entity_type in the request
            is ClientNode.\n When this entity is requested, the @belongs_to_entity.type
            will be ignored and assumed as if were CallCenterNode."
        locationNodes:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_LocationNodeEntities'
          description: "Location Node entities retrieved when @entity_type in the
            request is LocationNode.\n When this entity is requested, the @belongs_to_entity.type
            will be ignored and assumed as if were ClientNode."
        programNodes:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_ProgramNodeEntities'
          description: "Program Node entities retrieved when @entity_type in the request
            is ProgramNode.\n When this entity is requested, the @belongs_to_entity.type
            will be ignored and assumed as if were LocationNode."
        agentGroups:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_AgentGroupEntities'
          description: "Agent Group entities retrieved when @entity_type in the request
            is AgentGroup.\n Member WFM Agents returned will only include agents that
            have a not nil @tcn_agent_sid."
        shiftTemplates:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_ShiftTemplateEntities'
          description: "Shift Template entities retrieved when @entity_type in the
            request is ShiftTemplate.\n When this entity is requested, the @belongs_to_entity.type
            will be ignored and assumed as if were ProgramNode."
        wfmAgents:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_WFMAgentEntities'
          description: "WFM Agent entities retrieved when @entity_type in the request
            is WFMAgent.\n When this entity is requested, the @belongs_to_entity.type
            will be ignored and assumed as if were AgentGroup."
        placementRules:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_PlacementRuleEntities'
          description: Placement Rules entities retrieved when @entity_type in the
            request is PlacementRule.
        constraintRules:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_ConstraintRuleEntities'
          description: Constraint Rule entities retrieved when @entity_type in the
            request is ConstraintRule.
        nonSkillActivities:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_NonSkillActivityEntities'
          description: "Non Skill Activity entities retrieved when @entity_type in
            the request is NonSkillActivity.\n This entity supports a @belongs_to_entity.type
            of ScheduleScenario, and will return all non skill activities in the specified
            scenario."
        agentAvailabilityPatterns:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_AgentAvailabilityPatternEntities'
          description: Agent Availability entities retrieved when @entity_type in
            the request is AgentAvailabilityPattern.
        openTimesPatterns:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_OpenTimesPatternEntities'
          description: Open Times Pattern entities retrieved when @entity_type in
            the request is OpenTimesPattern.
        schedulingActivity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingActivity'
          description: Scheduling Activity retrieved when @entity_type in the request
            is SchedulingActivity.
        skillProficiencies:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_SkillProficiencyEntities'
          description: Skill Proficiency entities retrieved when @entity_type in the
            request is SkillProficiency.
        scheduleScenarios:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ListConfigEntitiesRes_ScheduleScenarioEntities'
          description: "Schedule Scenario entities retrieved when @entity_type in
            the request is ScheduleScenario.\n When this entity is requested, no children
            will be returned regardless of the @member_depth."
      description: Response message for the ListConfigEntities RPC
    api.v1alpha1.wfm.ListConfigEntitiesRes_AgentAvailabilityPatternEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentAvailabilityPattern'
          description: Agent Availability Patterns.
      description: Group of AgentAvailabilityPatterns.
    api.v1alpha1.wfm.ListConfigEntitiesRes_AgentGroupEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentGroup'
          description: Agent Groups.
      description: Group of Agent Groups.
    api.v1alpha1.wfm.ListConfigEntitiesRes_ClientNodeEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ClientNode'
          description: Client Nodes.
      description: Group containing Client Nodes.
    api.v1alpha1.wfm.ListConfigEntitiesRes_ConstraintRuleEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ConstraintRule'
          description: Constraint Rules.
      description: Group containing Constraint Rules.
    api.v1alpha1.wfm.ListConfigEntitiesRes_LocationNodeEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.LocationNode'
          description: Location Nodes.
      description: Group containing Location Nodes.
    api.v1alpha1.wfm.ListConfigEntitiesRes_NonSkillActivityEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.NonSkillActivity'
          description: Non Skill Activities.
      description: Group of Non Skill Activities.
    api.v1alpha1.wfm.ListConfigEntitiesRes_OpenTimesPatternEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.OpenTimesPattern'
          description: Open Times Patterns.
      description: Group of OpenTimesPatterns.
    api.v1alpha1.wfm.ListConfigEntitiesRes_PlacementRuleEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PlacementRule'
          description: Placement Rules.
      description: Group containing Placement Rules.
    api.v1alpha1.wfm.ListConfigEntitiesRes_ProgramNodeEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ProgramNode'
          description: Program Nodes.
      description: Group containing Program Nodes.
    api.v1alpha1.wfm.ListConfigEntitiesRes_ScheduleScenarioEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ScheduleScenario'
          description: Schedule Scenarios.
      description: Group of Schedule Scenarios.
    api.v1alpha1.wfm.ListConfigEntitiesRes_ShiftTemplateEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftTemplate'
          description: Shift Templates.
      description: Group containing Shift Templates.
    api.v1alpha1.wfm.ListConfigEntitiesRes_SkillProficiencyEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProficiency'
          description: Skill Proficiencies.
      description: Group of Skill Proficiencies.
    api.v1alpha1.wfm.ListConfigEntitiesRes_WFMAgentEntities:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.WFMAgent'
          description: WFM Agents.
      description: Group of WFM Agents.
    api.v1alpha1.wfm.ListDraftSchedulesReq:
      type: object
      properties:
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: "Date range to of the drafts to return.\n If left blank, then
            all draft schedules for the org will be returned."
      description: Request message for the ListDraftSchedules RPC
    api.v1alpha1.wfm.ListDraftSchedulesRes:
      type: object
      properties:
        draftSchedules:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.DraftSchedule'
          description: Draft schedules found.
      description: Response message for the ListDraftSchedules RPC
    api.v1alpha1.wfm.ListForecastIntervalsForSkillProfileReq:
      type: object
      properties:
        skillProfileSid:
          type: string
          description: ID of skill profile to get the forecast of.
      description: "Request message for the ListForecastIntervalsForSkillProfile RPC\n
        DEPRECATED as of Sep/13/2023 - Use ListForecastIntervals instead."
    api.v1alpha1.wfm.ListForecastIntervalsReq:
      type: object
      properties:
        skillProfileCategory:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Category to get the forecast data intervals for.
      description: "Request message for the ListForecastIntervals RPC\n DEPRECATED
        as of Sep/13/2023 - Use ListForecastIntervals instead."
    api.v1alpha1.wfm.ListHistoricalDataForAllSkillProfilesReq:
      type: object
      properties: {}
      description: Request message for the ListHistoricalDataForAllSkillProfiles RPC
    api.v1alpha1.wfm.ListHistoricalDataForAllSkillProfilesRes:
      type: object
      properties:
        history:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.HistoricalDataInterval'
          description: History intervals sorted by @start_datetime.
      description: Response message for the ListHistoricalDataForAllSkillProfiles
        RPC
    api.v1alpha1.wfm.ListHistoricalDataReq:
      type: object
      properties:
        skillProfileSid:
          type: string
          description: "ID of the skill profile used to examine matching calls in
            the client's historical data.\n Deprecated as of Sep/8/2023: use skill_profile_category
            instead."
        skillProfileCategory:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Skill profile category that the desired calls will belong to.
      description: Request message for the ListHistoricalData RPC
    api.v1alpha1.wfm.ListHistoricalDataRes:
      type: object
      properties:
        historicalDataIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.HistoricalDataInterval'
          description: historical data intervals for the skill profile that the org
            requested.
      description: Response message for the ListHistoricalData RPC
    api.v1alpha1.wfm.ListNonSkillActivitiesReq:
      type: object
      properties: {}
      description: Request message for the ListNonSkillActivities RPC
    api.v1alpha1.wfm.ListNonSkillActivitiesRes:
      type: object
      properties:
        nonSkillActivities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.NonSkillActivity'
          description: ID of the non skill activities found to belong to the org sending
            the request
      description: Response message for the ListNonSkillActivities RPC
    api.v1alpha1.wfm.ListNonSkillActivityAssociationsReq:
      type: object
      properties:
        associatedEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Entity to check for relationships with the non skill activities.
        relationshipType:
          type: integer
          description: Type of relationship between non skill activity and the @associated_entity.
          format: enum
      description: Request message for the ListNonSkillActivityAssociations RPC
    api.v1alpha1.wfm.ListNonSkillActivityAssociationsRes:
      type: object
      properties:
        nonSkillActivitySids:
          type: array
          items:
            type: string
          description: ID of the non skill activities found to have the @relationship_type
            with the @associated_entity in the request.
      description: Response message for the ListNonSkillActivityAssociations RPC
    api.v1alpha1.wfm.ListOpenDateRangesForNodeOpenTimesBitmapsRequest:
      type: object
      properties:
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime range that the @open_close_ranges will cover for @node_selector.
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: The node that @open_close_ranges will be associated with.
        scheduleScenarioSid:
          type: string
          description: ID of the scenario that @node_selector belongs to.
      description: Request message for the ListOpenDateRangesForNodeOpenTimesBitmaps
        RPC
    api.v1alpha1.wfm.ListOpenDateRangesForNodeOpenTimesBitmapsResponse:
      type: object
      properties:
        openCloseRanges:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime ranges over which the @node_selector is open throughout
            @datetime_range.
      description: Request message for the ListOpenDateRangesForNodeOpenTimesBitmaps
        RPC
    api.v1alpha1.wfm.ListPatternsForSchedulingActivityClassificationsRequest:
      type: object
      properties:
        parentEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Entity to list the the patterns for.
        schedulingActivityClassifications:
          type: array
          items:
            type: integer
            format: enum
          description: Scheduling Activity Classifications to get patterns for.
      description: Request message for the ListPatternsForSchedulingActivityClassifications
        RPC
    api.v1alpha1.wfm.ListPatternsForSchedulingActivityClassificationsResponse:
      type: object
      properties:
        openTimesPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.OpenTimesPattern'
          description: The requested open times patterns.
        agentAvailabilityPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentAvailabilityPattern'
          description: The requested agent availability patterns.
    api.v1alpha1.wfm.ListProgramNodesBySidReq:
      type: object
      properties:
        programNodeSids:
          type: array
          items:
            type: string
          description: IDs of the program nodes to list.
      description: Request message for the ListProgramNodesBySid RPC
    api.v1alpha1.wfm.ListProgramNodesBySidRes:
      type: object
      properties:
        programNodes:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ProgramNode'
          description: The program nodes matching the given @program_node_sids.
      description: Response message for the ListProgramNodesBySid RPC
    api.v1alpha1.wfm.ListRealTimeManagementStateColorsRequest:
      type: object
      properties: {}
      description: Request message for ListRealTimeManagementStateColors.
    api.v1alpha1.wfm.ListRealTimeManagementStateColorsResponse:
      type: object
      properties:
        stateColors:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.RealTimeManagementStateColor'
          description: The states and their associated colors.
      description: Response message for ListRealTimeManagementStateColors.
    api.v1alpha1.wfm.ListRealTimeManagementStatesRequest:
      type: object
      properties: {}
      description: Request message for ListRealTimeManagementStates.
    api.v1alpha1.wfm.ListRealTimeManagementStatesResponse:
      type: object
      properties:
        states:
          type: array
          items:
            type: integer
            format: enum
          description: The states.
      description: Response message for ListRealTimeManagementStates.
    api.v1alpha1.wfm.ListRegressionTemplatesReq:
      type: object
      properties: {}
      description: Request message for the ListRegressionTemplates RPC
    api.v1alpha1.wfm.ListRegressionTemplatesRes:
      type: object
      properties:
        regressionTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.RegressionTemplate'
          description: List of all existing regression templates retrieved for an
            org.
      description: Response message for the ListRegressionTemplates RPC
    api.v1alpha1.wfm.ListRequiredCallsIntervalsReq:
      type: object
      properties:
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: The that the required call intervals will be associated with.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: The datetime range across which required call intervals will
            be collected.
        intervalWidthInMinutes:
          type: integer
          description: "The number of minutes to consolidate each metric interval
            into.\n Must be a multiple of 5."
          format: int32
      description: Request message for the ListRequiredCallsIntervals RPC.
    api.v1alpha1.wfm.ListRequiredCallsIntervalsRes:
      type: object
      properties:
        intervalWidthInMinutes:
          type: integer
          description: The width of each interval in minutes.
          format: int32
        requiredCallsIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.RequiredCallsInterval'
          description: Requested required call intervals.
      description: Response message for the ListRequiredCallsIntervals RPC.
    api.v1alpha1.wfm.ListRgbaColorsRequest:
      type: object
      properties: {}
      description: Request message for ListRgbaColors.
    api.v1alpha1.wfm.ListRgbaColorsResponse:
      type: object
      properties:
        colors:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.RgbaColor'
          description: The rgba colors for the org sending the request.
      description: Response message for ListRgbaColors.
    api.v1alpha1.wfm.ListShiftInstanceSidsForAgentReq:
      type: object
      properties:
        scheduleSelector:
          allOf:
          - $ref: '#/components/schemas/api.commons.ScheduleSelector'
          description: Schedule to get the shift instance sids from.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: The datetime range over which to get the shift instance sids.
        wfmAgentSid:
          type: string
          description: wfm agent to get shifts for.
      description: Request message for the ListShiftInstanceSidsForAgent RPC
    api.v1alpha1.wfm.ListShiftInstanceSidsForAgentRes:
      type: object
      properties:
        shiftInstanceSids:
          type: array
          items:
            type: string
          description: Requested shift instance sids.
      description: ListShiftInstanceSidsForAgent response RPC.
    api.v1alpha1.wfm.ListShiftInstanceSidsForScheduleRequest:
      type: object
      properties:
        scheduleSelector:
          allOf:
          - $ref: '#/components/schemas/api.commons.ScheduleSelector'
          description: Schedule to get the shift instance sids from.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: The datetime range over which to get the shift instance sids.
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Optional field, if left nil all shift sids matching the given
            parameters will be included.
        scheduleScenarioSid:
          type: string
          description: Only required if @node_selector is not nil.
      description: Request message for the ListShiftInstanceSidsForSchedule RPC
    api.v1alpha1.wfm.ListShiftInstanceSidsForScheduleResponse:
      type: object
      properties:
        shiftInstanceSids:
          type: array
          items:
            type: string
          description: Requested shift instance sids.
      description: ListShiftInstanceSidsForSchedule response RPC.
    api.v1alpha1.wfm.ListShiftInstancesBySidReq:
      type: object
      properties:
        shiftInstanceSids:
          type: array
          items:
            type: string
          description: ID of the shift instances to list.
        includeShiftSegments:
          type: boolean
          description: "If true, the shift segments will be included in the returned
            shift instances.\n If false, the instances will be returned without any
            shift segments."
        includeShiftTemplate:
          type: boolean
          description: Set to true to include shift template in the returned shift
            instance.
        includeSchedulingActivity:
          type: boolean
          description: "Set to true to include scheduling activity in each of the
            returned shift segments.\n Only effective when include_shift_segments
            is also set to true."
        includeActivity:
          type: boolean
          description: "Set to true to include non skill activity in each of the returned
            scheduling activities.\n Only effective when include_scheduling_activity
            and include_shift_segments are also set to true."
        includeShiftSegmentCallStats:
          type: boolean
          description: "Set to true to include shift segment call stats in each of
            the returned shift segments.\n Only effective when @include_shift_segments
            is also set to true."
      description: Request message for the ListShiftInstancesBySid RPC
    api.v1alpha1.wfm.ListShiftInstancesBySidRes:
      type: object
      properties:
        shiftInstances:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: The shift instances that match the given @shift_instance_sids.
      description: Response message for the ListShiftInstancesBySid RPC
    api.v1alpha1.wfm.ListShiftSegmentsByShiftInstanceSidsReq:
      type: object
      properties:
        shiftInstanceSids:
          type: array
          items:
            type: string
          description: IDs of shift instances referenced by requested shift segments.
        includeSchedulingActivity:
          type: boolean
          description: Set to true to include the scheduling activity in each of the
            returned shift segments.
        includeActivity:
          type: boolean
          description: Set to true to include the non skill activity for the scheduling
            activities returned (if those are set to be included).
      description: ListShiftSegmentsByShiftInstanceSids request.
    api.v1alpha1.wfm.ListShiftSegmentsByShiftInstanceSidsRes:
      type: object
      properties:
        shiftSegments:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftSegment'
          description: Requested shift segments.
      description: ListShiftSegmentsByShiftInstanceSids response.
    api.v1alpha1.wfm.ListShiftTemplatesBySidsReq:
      type: object
      properties:
        shiftTemplateSids:
          type: array
          items:
            type: string
          description: IDs of the shift templates to list.
        includePlacementRules:
          type: boolean
          description: Indicates whether the @shift_templates in the response should
            include member placement rules.
      description: Request message for the ListShiftTemplatesBySids RPC
    api.v1alpha1.wfm.ListShiftTemplatesBySidsRes:
      type: object
      properties:
        shiftTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftTemplate'
          description: Requested shift templates.
      description: Response message for the ListShiftTemplatesBySids RPC
    api.v1alpha1.wfm.ListSkillProfileGroupsReq:
      type: object
      properties:
        skillProfileGroupSids:
          type: array
          items:
            type: string
          description: "IDs of the skill profile groups to get.\n If left empty it
            will get all the skill profile groups for the org"
        includeInactive:
          type: boolean
          description: Indicates whether inactive profile groups will be included
            in the result.
      description: Request message for the ListSkillProfileGroups RPC.
    api.v1alpha1.wfm.ListSkillProfileGroupsRes:
      type: object
      properties:
        skillProfileGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProfileGroup'
          description: Skill profile groups found.
      description: Response message for the ListSkillProfileGroups RPC.
    api.v1alpha1.wfm.ListSkillProfilesReq:
      type: object
      properties:
        activeOnly:
          type: boolean
          description: If set to true only active skill profiles will be returned,
            otherwise active and inactive skill profiles will be returned.
        withSkills:
          type: boolean
          description: If set to true the skills of skill profiles will be returned,
            otherwise they will not.
      description: Request message for the ListSkillProfiles RPC.
    api.v1alpha1.wfm.ListSkillProfilesRes:
      type: object
      properties:
        skillProfiles:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProfile'
      description: Response message for the ListSkillProfiles RPC.
    api.v1alpha1.wfm.ListSkillsReq:
      type: object
      properties: {}
      description: Request message for the ListSkills RPC
    api.v1alpha1.wfm.ListSkillsRes:
      type: object
      properties:
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Skill'
          description: skills found for the given parameters.
      description: Response message for the ListSkills RPC
    api.v1alpha1.wfm.ListTopSkillProfilesReq:
      type: object
      properties:
        maxNumberOfProfiles:
          type: integer
          description: max number of top skill profiles to get.
          format: int32
      description: Request message for the ListTopSkillProfiles RPC.
    api.v1alpha1.wfm.ListTopSkillProfilesRes:
      type: object
      properties:
        skillProfiles:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProfile'
          description: skill profiles found for the given parameters.
      description: Response message for the ListTopSkillProfiles RPC.
    api.v1alpha1.wfm.ListTourAgentCollectionWFMAgentsReq:
      type: object
      properties:
        tourAgentCollectionSids:
          type: array
          items:
            type: string
          description: ID of the Tour Agent Collections to get the @wfm_agent_pairings
            for.
      description: Request message for the ListTourAgentCollectionWFMAgents RPC.
    api.v1alpha1.wfm.ListTourAgentCollectionWFMAgentsRes:
      type: object
      properties:
        wfmAgentPairings:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ListTourAgentCollectionWFMAgentsRes_SidMapping'
          description: Requested WFM Agent SIDs.
      description: Response message for the ListTourAgentCollectionWFMAgents RPC.
    api.v1alpha1.wfm.ListTourAgentCollectionWFMAgentsRes_SidMapping:
      type: object
      properties:
        agentCollectionSid:
          type: string
          description: ID of the Tour Agent Collection that the @wfm_agent_sid is
            associated with.
        wfmAgentSids:
          type: array
          items:
            type: string
          description: ID of the WFM Agent that the agent_collection_sid is associated
            with.
      description: Pair of IDs, to relate a Tour Agent Collection and a WFM Agent.
    api.v1alpha1.wfm.ListTourAgentCollectionsReq:
      type: object
      properties:
        tourPatternSid:
          type: string
          description: ID of the tour pattern to get the child Tour Agent Collections
            for.
      description: Request message for the ListTourAgentCollections RPC.
    api.v1alpha1.wfm.ListTourAgentCollectionsRes:
      type: object
      properties:
        tourAgentCollections:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.TourAgentCollection'
          description: Requested Tour Agent Collections.
      description: Response message for the ListTourAgentCollections RPC.
    api.v1alpha1.wfm.ListTourShiftInstanceConfigsReq:
      type: object
      properties:
        tourWeekPatternSids:
          type: array
          items:
            type: string
          description: IDs of the tour week patterns to get the child Tour Shift Instance
            Configs for.
      description: Request message for the ListTourShiftInstanceConfigs RPC.
    api.v1alpha1.wfm.ListTourShiftInstanceConfigsRes:
      type: object
      properties:
        tourShiftInstanceConfigs:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.TourShiftInstanceConfig'
          description: Requested Tour Shift Instance Configs.
      description: Response message for the ListTourShiftInstanceConfigs RPC.
    api.v1alpha1.wfm.ListTourShiftSegmentConfigsReq:
      type: object
      properties:
        tourShiftInstanceConfigSids:
          type: array
          items:
            type: string
          description: IDs of the Tour Shift Instance Configs to get the child Tour
            Shift Segment Configs for.
      description: Request message for the ListTourShiftSegmentConfigs RPC.
    api.v1alpha1.wfm.ListTourShiftSegmentConfigsRes:
      type: object
      properties:
        tourShiftSegmentConfigs:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.TourShiftSegmentConfig'
          description: Requested Tour Shift Segment Configs.
      description: Response message for the ListTourShiftSegmentConfigs RPC.
    api.v1alpha1.wfm.ListTourWeekPatternsReq:
      type: object
      properties:
        tourPatternSid:
          type: string
          description: ID of the tour pattern that the @tour_week_patterns to retrieve
            belong to.
      description: Request message for the ListTourWeekPatterns RPC.
    api.v1alpha1.wfm.ListTourWeekPatternsRes:
      type: object
      properties:
        tourWeekPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.TourWeekPattern'
          description: The requested Tour Week Patterns.
      description: Response message for the ListTourWeekPatterns RPC.
    api.v1alpha1.wfm.ListUnassignedWFMAgentsRequest:
      type: object
      properties: {}
      description: Request message for the ListUnassignedWFMAgents RPC
    api.v1alpha1.wfm.ListUnassignedWFMAgentsResponse:
      type: object
      properties:
        wfmAgents:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.WFMAgent'
          description: List of found wfm agents.
      description: Response message for the ListUnassignedWFMAgents RPC
    api.v1alpha1.wfm.ListUngroupedWFMAgentsReq:
      type: object
      properties:
        scheduleScenarioSid:
          type: string
          description: "Optional, ID of the schedule scenario of agent groups to check
            for unnasigned wfm agents.\n If not set, it will check for unnasigned
            agents for all agent groups."
        createdAfterDatetime:
          type: string
          description: Ungrouped agents created after this date will be returned.
          format: date-time
        includeSkillProficiencies:
          type: boolean
          description: Indicates if the resulting WFM agents should include skill
            proficiencies.
      description: Request message for the ListUngroupedWFMAgents RPC
    api.v1alpha1.wfm.ListUngroupedWFMAgentsRes:
      type: object
      properties:
        wfmAgents:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.WFMAgent'
          description: List of all unnasigned wfm agents for the given @schedule_scenario_sid.
      description: Response message for the ListUngroupedWFMAgents RPC
    api.v1alpha1.wfm.ListValidAgentsForReplacementReq:
      type: object
      properties:
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario to check for WFM agents.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: "An optional field used to limit the datetime range of the
            shifts being checked.\n If left blank, the full schedule range will be
            updated."
        scheduleSelector:
          allOf:
          - $ref: '#/components/schemas/api.commons.ScheduleSelector'
          description: Indicates the schedule to be updated.
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: "An optional field indicating the node to get shifts from.\n
            Otherwise shifts will be checked for all nodes on the @schedule_selector."
        wfmAgentSidToReplace:
          type: string
          description: ID of the WFM Agent to be replaced.
        skipSkillProficiencySort:
          type: boolean
          description: "Indicates whether the step to sort agents by skill proficiency
            should be skipped.\n If left as False, the @wfm_agent_sids will be returned
            in descending order from most qualified to least qualified."
        includeSkillMismatches:
          type: boolean
          description: "Indicated whether agent sids should still be returned, even
            if they do not have a skill proficiency for all of the required skills.\n
            If left as False, only agents with a skill proficiency for all the updted
            shifts will be returned.\n Under no conditions are constraint rule requirements
            enforced by this endpoint."
        skipForceSameAgentGroups:
          type: boolean
          description: Indicated whether to skip the check for must be members of
            all of the same agent groups as @
      description: Request message for the ListValidAgentsForReplacement RPC.
    api.v1alpha1.wfm.ListValidAgentsForReplacementRes:
      type: object
      properties:
        wfmAgentSids:
          type: array
          items:
            type: string
          description: A list of valid WFM agent sids. In order of highest related
            skill proficiency to lowest, if not @skip_skill_proficiency_sort.
      description: Response message for the ListValidAgentsForReplacement RPC.
    api.v1alpha1.wfm.ListWFMAgentSidsReq:
      type: object
      properties:
        tcnAgentSids:
          type: array
          items:
            type: string
          description: IDs of the agents to get the related wfm_agent_sid for.
      description: Request message for the ListWFMAgentSids RPC
    api.v1alpha1.wfm.ListWFMAgentSidsRes:
      type: object
      properties:
        sids:
          type: object
          additionalProperties:
            type: string
          description: "Map of WFM agents found.\n Key: tcn_agent_sid - Value: wfm_agent_sid."
      description: Response message for the ListWFMAgentSids RPC
    api.v1alpha1.wfm.ListWFMAgentsAssociatedWithAgentGroupReq:
      type: object
      properties:
        agentGroupSid:
          type: string
          description: ID of the agent group that the wfm agents have a membership
            with.
      description: Request message for the ListWFMAgentsAssociatedWithAgentGroup RPC
    api.v1alpha1.wfm.ListWFMAgentsAssociatedWithAgentGroupRes:
      type: object
      properties:
        wfmAgentSids:
          type: array
          items:
            type: string
          description: ID of the wfm agents found to have a relationship with the
            @agent_group_sid in the request.
      description: Response message for the ListWFMAgentsAssociatedWithAgentGroup
        RPC
    api.v1alpha1.wfm.LocationNode:
      type: object
      properties:
        locationNodeSid:
          type: string
          description: Node unique id
        name:
          type: string
          description: Node name
        description:
          type: string
          description: Node description.
        clientNodeSid:
          type: string
          description: ID of the parent client node.
        datetimeSetToInactive:
          type: string
          description: Datetime that the node was set to inactive, if not set then
            the node is currently active.
          format: date-time
        timeZoneVal:
          type: integer
          description: Timezone of this node.
          format: enum
        shrinkageIsPercentage:
          type: boolean
          description: Indicates whether on not the @shrinkage_value is a percentage
            (true=percentage, false=agents).
        shrinkageValue:
          type: integer
          description: Value of the shrinkage.
          format: int32
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the location node belongs
            to.
        memberProgramNodes:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ProgramNode'
          description: Program Nodes associated with @location_node_sid.
        memberNonSkillActivities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.NonSkillActivity'
          description: Non Skill Activities associated with @location_node_sid.
        memberOpenTimesPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.OpenTimesPattern'
          description: Open Times Patterns associated with @location_node_sid.
        memberAgentAvailabilityPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentAvailabilityPattern'
          description: Agent Availability Patterns associated with @location_node_sid.
        memberConstraintRules:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ConstraintRule'
          description: Constraint Rules associated with @location_node_sid.
        memberAgentGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentGroup'
          description: Agent Groups associated with @location_node_sid.
        originSid:
          type: string
          description: "ID of the original Location Node that this node was copied
            from.\n If this node is the original, field will be set as nil."
        shrinkage:
          type: number
          description: the shrinkage percentage [0.0, 100.0]. 0.0 = no shrinkage,  100
            = no agents
          format: float
      description: Location node
    api.v1alpha1.wfm.NonSkillActivity:
      type: object
      properties:
        nonSkillActivitySid:
          type: string
          description: ID of this activity
        name:
          type: string
          description: Activity name (e.g., 'lunch', 'break', 'meeting', etc.)
        description:
          type: string
          description: Activity description
        datetimeSetToInactive:
          type: string
          description: Datetime that the activity was set to inactive, if not set
            then the activity is currently active.
          format: date-time
        red:
          type: integer
          description: "Display color for this activity\n Red value"
          format: int32
        green:
          type: integer
          description: Green value
          format: int32
        blue:
          type: integer
          description: Blue value
          format: int32
        transparency:
          type: number
          description: Transparency value (between 0.0 and 1.0)
          format: float
        inheritedFromEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: The highest parent node on the tree that this activity is associated
            with.
      description: "Represents Agent activity not related to any SkillProfile or\n
        handling a call/email/sms/etc."
    api.v1alpha1.wfm.OpenTimesPattern:
      type: object
      properties:
        openTimesPatternSid:
          type: string
          description: ID of this pattern.
        parentEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Parent entity of the pattern.
        datetimePattern:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.DatetimePattern'
          description: Datetime pattern that represents this open times pattern.
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the open times pattern belongs
            to.
        schedulingActivitySid:
          type: string
          description: "An optional value to relate the open times pattern to a specific
            type of scheduling activity, such as time off.\n If left as nil, this
            will be treated as a standard open times pattern."
      description: Represents an open times pattern
    api.v1alpha1.wfm.ParentEntity:
      type: object
      properties:
        parentSid:
          type: string
          description: ID of a parent entity
        parentType:
          type: integer
          description: Type of entity that the @parent_sid will reference.
          format: enum
    api.v1alpha1.wfm.PerformInitialClientSetupRequest:
      type: object
      properties: {}
      description: Request message for the PerformInitialClientSetup RPC.
    api.v1alpha1.wfm.PerformInitialClientSetupResponse:
      type: object
      properties:
        setupStatus:
          allOf:
          - $ref: '#/components/schemas/api.commons.InitialSetupStatus'
          description: Setup status for the requested client.
      description: Response message for the PerformInitialClientSetup RPC.
    api.v1alpha1.wfm.PerformanceMetric:
      type: object
      properties:
        dateRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime range over which the metrics were determined.
        totalCallsRequired:
          type: integer
          description: The total calls required over the @date_range, as determined
            by the forecast.
          format: int32
        totalFtesAchieved:
          type: integer
          description: The total calls the the schedule is likely to address with
            the current shift instances.
          format: int32
        numIntervalsWithRequiredCalls:
          type: integer
          description: The number of intervals with required calls.
          format: int32
        numIntervalsWithFtesButNoSchedules:
          type: integer
          description: The number of intervals with FTE's but no schedules.
          format: int32
        numIntervalsWithFtesButNoForecastedCalls:
          type: integer
          description: the number of intervals with FTE's but no forecasted calls.
          format: int32
        totalUnscheduledCalls:
          type: integer
          description: The total calls forecsted where there are no FTE's scheduled.
          format: int32
        totalUnnecessaryFtes:
          type: integer
          description: The total number of FTE's scheduled where there were no forecasted
            calls.
          format: int32
        intervalWidthInMinutes:
          type: integer
          description: Width of each interval in minutes.
          format: int32
        metricType:
          type: integer
          description: The type of metric being reported.
          format: enum
        fteIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.FTERequiredVsAchievedInterval'
          description: "One value will be set between @fte_intervals and @service_level_intervals,
            depending on @metric_type.\n If @metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE
            then the intervals will be stored in @fte_intervals\n If @metric_type
            is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in @service_level_intervals\n
            Interval set comparing the number of FTE required to the number achieved."
        serviceLevelIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ServiceLevelInterval'
          description: Interval set checking the service level achieved as a percentage.
        metricsBySkillCollection:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetricForSkillCollection'
          description: Per-skill metrics.
      description: "Deprecated.\n Represents a performance metric"
    api.v1alpha1.wfm.PerformanceMetricForSkillCollection:
      type: object
      properties:
        dateRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime range over which the metrics were determined.
        totalCallsRequired:
          type: integer
          description: The total calls required over the @date_range, as determined
            by the forecast.
          format: int32
        totalFtesAchieved:
          type: integer
          description: The total calls the the schedule is likely to address with
            the current shift instances.
          format: int32
        numIntervalsWithRequiredCalls:
          type: integer
          description: The number of intervals with required calls.
          format: int32
        numIntervalsWithFtesButNoSchedules:
          type: integer
          description: The number of intervals with FTE's but no schedules.
          format: int32
        numIntervalsWithFtesButNoForecastedCalls:
          type: integer
          description: the number of intervals with FTE's but no forecasted calls.
          format: int32
        totalUnscheduledCalls:
          type: integer
          description: The total calls forecsted where there are no FTE's scheduled.
          format: int32
        totalUnnecessaryFtes:
          type: integer
          description: The total number of FTE's scheduled where there were no forecasted
            calls.
          format: int32
        intervalWidthInMinutes:
          type: integer
          description: Width of each interval in minutes.
          format: int32
        metricType:
          type: integer
          description: The type of metric being reported.
          format: enum
        fteIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.FTERequiredVsAchievedInterval'
          description: "One value will be set between @fte_intervals and @service_level_intervals,
            depending on @metric_type.\n If @metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE
            then the intervals will be stored in @fte_intervals\n If @metric_type
            is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in @service_level_intervals\n
            Interval set comparing the number of FTE required to the number achieved."
        serviceLevelIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ServiceLevelInterval'
          description: Interval set checking the service level achieved as a percentage.
        skillCollection:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Pointer to skill collection.
      description: "Deprecated.\n PerformanceMetricForSkillCollection.\n Not a top-level
        entity:\n * No primary-key field.\n * No org_id field.\n * No rpc endpoints,
        part of PerformanceMetric only."
    api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2:
      type: object
      properties:
        dateRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime range over which the metrics were determined.
        totalFteIntervalsRequired:
          type: number
          format: float
        totalFteIntervalsAchieved:
          type: number
          format: float
        numIntervalsWithCallFtes:
          type: integer
          format: int32
        numIntervalsWithShiftFtes:
          type: integer
          format: int32
        numIntervalsWithCallFtesButNoShifts:
          type: integer
          format: int32
        numIntervalsWithShiftsButNoCallFtes:
          type: integer
          format: int32
        totalUnderscheduledCallFtes:
          type: number
          format: float
        totalOverscheduledCallFtes:
          type: number
          format: float
        intervalWidthInMinutes:
          type: integer
          description: Width of each interval in minutes.
          format: int32
        metricType:
          type: integer
          description: The type of metric being reported.
          format: enum
        fteOccupancyIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval'
          description: "One value will be set between @fte_occupancy_intervals and
            @service_level_intervals, depending on @metric_type.\n If @metric_type
            is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in
            @fte_occupancy_intervals\n If @metric_type is SERVICE_LEVEL_ANALYSIS then
            the intervals will be stored in @service_level_intervals\n Interval set
            comparing the number of FTE required to the number achieved."
        serviceLevelIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ServiceLevelInterval'
          description: Interval set checking the service level achieved as a percentage.
        skillCollection:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Pointer to skill collection.
        totalRequiredFte:
          type: number
          description: The total FTE required over the @date_range, as determined
            by the forecast.
          format: float
        totalAchievedFte:
          type: number
          description: The total FTE the the schedule is likely to address with the
            current shift instances.
          format: float
        totalProductiveFte:
          type: number
          description: Total count of FTE scheduled to be on the phone / productive
            for a specific interval / duration of time.
          format: float
        totalAchievedFteWithShrinkageApplied:
          type: number
          description: The total FTE, minus shrinkage, the the schedule is likely
            to address with the current shift instances.
          format: float
        totalProductiveFteWithShrinkageApplied:
          type: number
          description: Total count of FTE, minus shrinkage, scheduled to be on the
            phone / productive / duration of time.
          format: float
      description: "PerformanceMetricForSkillCollectionV2.\n Not a top-level entity:\n
        * No primary-key field.\n * No org_id field.\n * No rpc endpoints, part of
        PerformanceMetricV2 only."
    api.v1alpha1.wfm.PerformanceMetricParameter:
      type: object
      properties:
        metricType:
          type: integer
          description: The type of metric.
          format: enum
        serviceLevelTargetDurationSeconds:
          type: string
          description: "Number of seconds allowed to answer a call if the @metric_type
            is set to SERVICE_LEVEL_ANALYSIS.\n If @metric_type is not SERVICE_LEVEL_ANALYSIS
            then this field must be set to nil."
      description: Represents a Performance Metric Parameter.
    api.v1alpha1.wfm.PerformanceMetricV2:
      type: object
      properties:
        dateRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime range over which the metrics were determined.
        totalFteIntervalsRequired:
          type: number
          format: float
        totalFteIntervalsAchieved:
          type: number
          format: float
        numIntervalsWithCallFtes:
          type: integer
          format: int32
        numIntervalsWithShiftFtes:
          type: integer
          format: int32
        numIntervalsWithCallFtesButNoShifts:
          type: integer
          format: int32
        numIntervalsWithShiftsButNoCallFtes:
          type: integer
          format: int32
        totalUnderscheduledCallFtes:
          type: number
          format: float
        totalOverscheduledCallFtes:
          type: number
          format: float
        intervalWidthInMinutes:
          type: integer
          description: Width of each interval in minutes.
          format: int32
        metricType:
          type: integer
          description: The type of metric being reported.
          format: enum
        fteOccupancyIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval'
          description: "One value will be set between @fte_occupancy_intervals and
            @service_level_intervals, depending on @metric_type.\n If @metric_type
            is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in
            @fte_occupancy_intervals\n If @metric_type is SERVICE_LEVEL_ANALYSIS then
            the intervals will be stored in @service_level_intervals\n Interval set
            comparing the number of FTE required to the number achieved."
        serviceLevelIntervals:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ServiceLevelInterval'
          description: Interval set checking the service level achieved as a percentage.
        metricsBySkillCollection:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2'
          description: Per-skill metrics.
        totalRequiredFte:
          type: number
          description: The total FTE required over the @date_range, as determined
            by the forecast.
          format: float
        totalAchievedFte:
          type: number
          description: The total FTE the the schedule is likely to address with the
            current shift instances.
          format: float
        totalProductiveFte:
          type: number
          description: Total count of FTE scheduled to be on the phone / productive
            for a specific interval / duration of time.
          format: float
        totalAchievedFteWithShrinkageApplied:
          type: number
          description: The total FTE, minus shrinkage, the the schedule is likely
            to address with the current shift instances.
          format: float
        totalProductiveFteWithShrinkageApplied:
          type: number
          description: Total count of FTE, minus shrinkage, scheduled to be on the
            phone / productive / duration of time.
          format: float
      description: PerformanceMetricV2.
    api.v1alpha1.wfm.PlacementRule:
      type: object
      properties:
        placementRuleSid:
          type: string
          description: ID of this placement rule
        shiftTemplateSid:
          type: string
          description: ID of the parent shift this rule is associated with
        activityOrder:
          type: integer
          description: Ordinal that indicates order of rule within ShiftTemplate (1
            = first, 2 = second, etc.)
          format: int32
        minDurationMinutes:
          type: integer
          description: Minimum activity length in minutes
          format: int32
        maxDurationMinutes:
          type: integer
          description: Maximum activity length in minutes
          format: int32
        schedulingActivitySid:
          type: string
          description: ID of the scheduling activity this rule is associated with
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the placement rule belongs
            to.
        memberSchedulingActivity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingActivity'
          description: The scheduling activity associated with the @scheduling_activity_sid
      description: Represents rules that describe how shifts are placed in a schedule
    api.v1alpha1.wfm.ProgramNode:
      type: object
      properties:
        programNodeSid:
          type: string
          description: Node unique id
        name:
          type: string
          description: Node name
        description:
          type: string
          description: Node description.
        locationNodeSid:
          type: string
          description: ID of the parent location node.
        datetimeSetToInactive:
          type: string
          description: Datetime that the node was set to inactive, if not set then
            the node is currently active.
          format: date-time
        shrinkageIsPercentage:
          type: boolean
          description: Indicates whether on not the @shrinkage_value is a percentage
            (true=percentage, false=agents).
        shrinkageValue:
          type: integer
          description: Value of the shrinkage. Either 0-100 if @shrinkage_is_percentage
            is true, or a value greater than 0 otherwise.
          format: int32
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the program node belongs to.
        memberShiftTemplates:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftTemplate'
          description: Any shift templates associated with @program_node_sid.
        memberNonSkillActivities:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.NonSkillActivity'
          description: Any non skill activities associated with @program_node_sid.
        memberOpenTimesPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.OpenTimesPattern'
          description: Any open times patterns associated with @program_node_sid.
        memberAgentAvailabilityPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentAvailabilityPattern'
          description: Any agent availability patterns associated with @program_node_sid.
        memberConstraintRules:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ConstraintRule'
          description: Any constraint rules associated with @program_node_sid.
        memberAgentGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentGroup'
          description: Any agent groups associated with @program_node_sid.
        memberSkillProficiencies:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProficiency'
          description: Any skill proficiencies associated with @program_node_sid.
        originSid:
          type: string
          description: "ID of the original Program Node that this node was copied
            from.\n If this node is the original, field will be set as nil."
        skillProfileCategory:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: The predicted calls of this skill profile category will be
            used when scheduling.
        shrinkage:
          type: number
          description: the shrinkage percentage [0.0, 100.0]. 0.0 = no shrinkage,  100
            = no agents
          format: float
      description: Program node
    api.v1alpha1.wfm.PublishDraftScheduleReq:
      type: object
      properties:
        draftScheduleSid:
          type: string
          description: ID of the draft schedule being published.
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Node that the shift instances will belong to.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Date range to of the drafts to publish.
        includeShiftInstances:
          type: boolean
          description: "Include fields determine what the returned published schedule
            will include\n Set to true to include shift instances."
        includeShiftTemplate:
          type: boolean
          description: "Set to true to include shift template in each of the returned
            shift instances.\n Only effective when include_shift_instances is also
            set to true."
        includeShiftSegments:
          type: boolean
          description: "Set to true to include shift segments in each of the returned
            shift instances.\n Only effective when include_shift_instances is also
            set to true."
        includeSchedulingActivity:
          type: boolean
          description: "Set to true to include scheduling activity in each of the
            returned shift segments.\n Only effective when include_shift_instances
            and include_shift_segments are also set to true."
        includeActivity:
          type: boolean
          description: "Set to true to include non skill activity in each of the returned
            scheduling activities.\n Only effective when include_scheduling_activity,
            include_shift_segments and include_shift_instances are also set to true."
        ignoreDiagnosticsErrors:
          type: boolean
          description: "If set to true, it will publish the schedule regardless of
            any diagnostics errors,\n otherwise it will return those diagnostic errors
            and not publish the schedule"
      description: Request message for the PublishDraftSchedule RPC
    api.v1alpha1.wfm.PublishDraftScheduleRes:
      type: object
      properties:
        publishedSchedule:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.PublishedSchedule'
          description: Resulting Published schedule.
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Any diagnostics that were produced while publishing the schedule
      description: Response message for the PublishDraftSchedule RPC
    api.v1alpha1.wfm.PublishedSchedule:
      type: object
      properties:
        publishedScheduleSid:
          type: string
          description: ID of this published schedule.
        createdAt:
          type: string
          description: Datetime of creation.
          format: date-time
        lastUpdatedAt:
          type: string
          description: Datetime of last update.
          format: date-time
        shiftInstances:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: Shifts that this schedule has.
        performanceMetrics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetric'
          description: Deprecated. Performance metrics that this schedule has.
        performanceMetricsV2:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetricV2'
          description: Performance metrics that this schedule has.
    api.v1alpha1.wfm.RealTimeManagementStateColor:
      type: object
      properties:
        state:
          type: integer
          description: The state.
          format: enum
        color:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.RgbaColor'
          description: The color.
      description: Combines RealTimeManagementState and RgbaColor.
    api.v1alpha1.wfm.RegressionTemplate:
      type: object
      properties:
        regressionTemplateSid:
          type: string
          description: ID of the regression template.
        name:
          type: string
          description: Name of the regression template.
        modelType:
          type: integer
          description: Selected algorithmic method to be used
          format: enum
        excludeCallDataForNWeeks:
          type: integer
          description: Number of weeks of training data to exclude when building a
            forecast.
          format: int32
        numWeeksAgoToEmphasize:
          type: integer
          description: Number of weeks in the past to emphasize;
          format: int32
        maxDeviation:
          type: number
          description: "Value that especificies the max value of deviations to use.
            Greater deviations than the specified values will be excluded.\n optional"
          format: float
        trendSensitivity:
          type: number
          description: Percentage from 0 to 100 that specifies the trend sensitivity.
          format: float
        excludeIntervalsWithNoCalls:
          type: boolean
          description: Whether or not to exclude intervals with no calls.
        avgsProcessingType:
          type: integer
          description: Processing type for the averages.
          format: enum
        includeSeasonality:
          type: boolean
          description: Whether or not to include seasonality.
        includeTrend:
          type: boolean
          description: Whether or not to include trend.
      description: Message type specifying the parameters for a regression forecast
    api.v1alpha1.wfm.RemoveAgentFromFutureShiftsRequest:
      type: object
      properties:
        wfmAgentSidToRemove:
          type: string
          description: ID of the wfm agent sid to remove from the future schedules.
        replaceWithNewUnassignedAgent:
          type: boolean
          description: "If set to true, a new unassigned agent will be created and
            it will be assigned to the shifts and agent groups from @wfm_agent_sid_to_remove.\n
            If set to false, the shifts will just be deleted."
      description: Request message for the RemoveAgentFromFutureShifts RPC
    api.v1alpha1.wfm.RemoveAgentFromFutureShiftsResponse:
      type: object
      properties:
        unassignedAgentSid:
          type: string
          description: ID of the new unassigned agent if @replace_with_new_unassigned_agent
            was set to true.
      description: Response message for the RemoveAgentFromFutureShifts RPC
    api.v1alpha1.wfm.RemoveAgentFromScheduleRequest:
      type: object
      properties:
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime range over which the agent should be removed.
        wfmAgentSid:
          type: string
          description: ID of the agent to be removed.
        scheduleSelector:
          allOf:
          - $ref: '#/components/schemas/api.commons.ScheduleSelector'
          description: The schedule containing shifts for @wfm_agent_sid to be removed
            from.
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: "The node that the shifts to be removed are associated with.\n
            If left blank, the agent may be removed from shifts associated with the
            entire scenario."
        scheduleScenarioSid:
          type: string
          description: The schedule_scenario_sid that @node_selector and @wfm_agent_sid
            is associated with.
      description: Request message for the RemoveAgentFromSchedule RPC.
    api.v1alpha1.wfm.RemoveAgentFromScheduleResponse:
      type: object
      properties:
        unassignedWfmAgentSid:
          type: string
          description: ID of the newly created unassigned WFM agent.
        updatedShifts:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: All shifts updated by the method, now assigned to @unassigned_wfm_agent_sid.
      description: Response message for the RemoveAgentFromSchedule RPC.
    api.v1alpha1.wfm.ReplaceAgentOnScheduleReq:
      type: object
      properties:
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: "An optional field used to limit the datetime range of the
            shifts being updated.\n If left blank, the full schedule range will be
            updated."
        scheduleSelector:
          allOf:
          - $ref: '#/components/schemas/api.commons.ScheduleSelector'
          description: Indicates the schedule to be updated.
        nodeSelector:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: "An optional field indicating the node to get shifts from.\n
            Otherwise shifts will be updated for all nodes on the @schedule_selector."
        wfmAgentSidToRemove:
          type: string
          description: ID of the WFM agent to remove from the schedule.
        wfmAgentSidToAdd:
          type: string
          description: ID of the WFM agent to add to the schedule, in place of @wfm_agent_sid_to_remove.
        skipOverlappingShifts:
          type: boolean
          description: "If set to true, any overlapping shift conflicts will be skipped.\n
            Otherwise, any overlap conflicts will raise a diagnostic and prevent any
            shifts from being updated."
      description: Request message for the ReplaceAgentOnSchedule RPC.
    api.v1alpha1.wfm.ReplaceAgentOnScheduleRes:
      type: object
      properties:
        updatedShiftInstances:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: The updated shift instances which were transfered to @wfm_agent_sid_to_add.
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Any diagnostics raised due to overlap conflicts.
      description: Response message for the ReplaceAgentOnSchedule RPC.
    api.v1alpha1.wfm.RequiredCallsInterval:
      type: object
      properties:
        startDatetime:
          type: string
          description: The start time of the interval.
          format: date-time
        requiredCalls:
          type: integer
          description: Number of required calls in the interval.
          format: int32
      description: "Represents fte required\n Used in GetPublishedScheduleRequiredCallsRes
        and GetDraftScheduleRequiredCallsRes."
    api.v1alpha1.wfm.ResetDraftScheduleReq:
      type: object
      properties:
        draftScheduleSid:
          type: string
          description: ID of the draft schedule to reset.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: "Date range to of the draft to reset.\n If left blank, the
            full range for the draft schedule will be used by default."
        unlockedOnly:
          type: boolean
          description: Set to true to only delete unlocked shifts from @draft_schedule_sid.
      description: Request message for the ResetDraftSchedule RPC
    api.v1alpha1.wfm.ResetDraftScheduleRes:
      type: object
      properties:
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Set of diagnostic reports for any newly created overlap conflicts..
      description: Response message for the ResetDraftSchedule RPC
    api.v1alpha1.wfm.ResolveAgentLeavePetitionRequest:
      type: object
      properties:
        agentLeavePetitionId:
          type: string
          description: ID of the agent leave petition to approve or deny.
        petitionStatus:
          type: integer
          description: The status to resolve the petition to.
          format: enum
        responseComment:
          type: string
          description: An optional comment to explain the approval or denial of the
            leave petition.
        retainPartialShifts:
          type: boolean
          description: "If true, partial shifts overlapping the requested_datetime_ranges
            will have the remaining portion of the shift retained\n    if the remaining
            portion is at least 30 minutes wide.\n If false, the entirety of shifts
            overlapping the requested_datetime_ranges will be deleted or transfered,
            depending on @replace_with_unassigned_agent."
        replaceWithUnassignedAgent:
          type: boolean
          description: "If @replace_with_unassigned_agent is true, an unassigned agent
            sid will be assigned to the shifts instead of deleting them.\n If @retain_partial_shifts
            is also true, only the portion of the shift in the requested datetime
            ranges will be transfered.\n if @retain_partial_shifts is false, the entirety
            of any overlapping shifts will be transfered."
      description: Request message for the ResolveAgentLeavePetition.
    api.v1alpha1.wfm.ResolveAgentLeavePetitionResponse:
      type: object
      properties:
        agentLeavePetition:
          allOf:
          - $ref: '#/components/schemas/api.commons.AgentLeavePetition'
          description: The resolved Agent Leave Petition.
      description: Response message for the ResolveAgentLeavePetition.
    api.v1alpha1.wfm.ResyncSkillProfilesReq:
      type: object
      properties:
        fromHistoricalRangeStartDate:
          type: boolean
          description: "Whether or not to resync from the historical range start date
            time.\n If set to false resync will be done from the last resync date."
      description: Request message for the ResyncSkillProfiles RPC.
    api.v1alpha1.wfm.ResyncSkillProfilesRes:
      type: object
      properties:
        createdSkillProfileSids:
          type: array
          items:
            type: string
          description: IDs of the newly created skill profiles.
      description: Response message for the ResyncSkillProfiles RPC.
    api.v1alpha1.wfm.RgbaColor:
      type: object
      properties:
        red:
          type: number
          format: float
        green:
          type: number
          format: float
        blue:
          type: number
          format: float
        alpha:
          type: number
          format: float
        name:
          type: string
        rgbaColorId:
          type: string
          description: ID of the rgba color.
      description: An rgba color.
    api.v1alpha1.wfm.ScheduleScenario:
      type: object
      properties:
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario.
        name:
          type: string
          description: Name of the schedule scenario.
        description:
          type: string
          description: Description of the schedule scenario.
        creationDatetime:
          type: string
          description: Datetime that the scenario was created.
          format: date-time
        createdByUserId:
          type: string
          description: "ID of User/Agent in the TCN system that created the scenario.\n
            Field is ignored in all update requests."
        isDefault:
          type: boolean
          description: Whether this scenario was the last scenario built/used for
            scheduling.
        copiedFromScenarioSid:
          type: string
          description: ID of scenario that this scenario was copied from (if applicable).
        scheduleRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Datetime range that schedules will cover when built using this
            schedule scenario.
        datetimeSetToInactive:
          type: string
          description: Datetime that the sceneario was set to inactive.
          format: date-time
        isActive:
          type: boolean
          description: Indicates whether or not the scenario is active.
      description: Represents the data encapsulated by a schedule scenario.
    api.v1alpha1.wfm.SchedulingActivity:
      type: object
      properties:
        schedulingActivitySid:
          type: string
          description: ID of this scheduling activity.
        isSkillActivity:
          type: boolean
          description: If false, the @idActivity refers to the id for a non-skill
            activity, if true then @activity_sid refers to all calls for any skill.
        activitySid:
          type: string
          description: "ID for non-skill activity if @is_skill_activity is false,
            or for a skill activity if @is_skill_activity is true.\n This is nil by
            default, meaning the scheduling_activity refers to a call."
        memberNonSkillActivity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.NonSkillActivity'
          description: The non skill activity associated with @activity_sid if @is_skill_activity
            is false.
        activityClassification:
          type: integer
          description: Distinguishes if this is a special scheduling activity.
          format: enum
      description: Scheduling activity
    api.v1alpha1.wfm.SchedulingTarget:
      type: object
      properties:
        schedulingTargetSid:
          type: string
          description: ID of the scheduling target.
        schedulingTargetType:
          type: integer
          description: Target type for the @node to override the inherited value.
          format: enum
        schedulingTargetPercentage:
          type: number
          description: Target percentage for scheduling.
          format: float
        serviceLevelTargetDurationSeconds:
          type: string
          description: "Number of seconds allowed to answer call for the scheduling
            if @scheduling_target_type is set to SERVICE_LEVEL.\n If @scheduling_target_type
            is not SERVICE_LEVEL then this field must be set to nil"
        nodeEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: "The node that the scheduling target if used by.\n May be set
            to nil if associated with the master scheduling target."
    api.v1alpha1.wfm.ServiceLevelInterval:
      type: object
      properties:
        startDatetime:
          type: string
          description: The start time of the interval.
          format: date-time
        serviceLevelAchieved:
          type: number
          description: The service level achieved as a percent value, ranging from
            0.0 to 1.0
          format: float
      description: Represents a service level interval.
    api.v1alpha1.wfm.SetDefaultSchedulingTargetReq:
      type: object
      properties:
        schedulingTarget:
          $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingTarget'
      description: SetDefaultSchedulingTargetReq is a request mesage.
    api.v1alpha1.wfm.SetDefaultSchedulingTargetRes:
      type: object
      properties: {}
      description: SetDefaultSchedulingTargetRes is a response mesage.
    api.v1alpha1.wfm.SetSchedulingTargetReq:
      type: object
      properties:
        schedulingTarget:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingTarget'
          description: Scheduling target to create.
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the @node_entity belongs to.
      description: SetSchedulingTarget request.
    api.v1alpha1.wfm.SetSchedulingTargetRes:
      type: object
      properties:
        schedulingTargetSid:
          type: string
          description: ID of the newly created scheduling target.
      description: SetSchedulingTarget reponse.
    api.v1alpha1.wfm.ShiftInstance:
      type: object
      properties:
        shiftInstanceSid:
          type: string
          description: ID of the shift instance.
        startDatetime:
          type: string
          description: The start time for this shift instance
          format: date-time
        isLocked:
          type: boolean
          description: "Tells the scheduler to leave this instance in tact when performing
            'build schedule'.\n If set to false, the instance will not be locked and
            may be lost when a new schedule is built."
        widthInMinutes:
          type: integer
          description: The duration of this shift instance in minutes.
          format: int32
        shiftTemplateSid:
          type: string
          description: ID of shift template that this shift instance belongs to.
        originatingProgramNodeSid:
          type: string
          description: ID of the program node that the shift instance belongs to,
            which may be different that the one that the @parent_shift_template_sid
            belongs to.
        scheduleSid:
          type: string
          description: "ID of the schedule that this shift instance belongs to.\n
            May either point to a published or draft schedule."
        wfmAgentSid:
          type: string
          description: ID for the wfm agent that is scheduled to this shift.
        scheduleType:
          type: integer
          description: Type of schedule that this shift instance belongs to.
          format: enum
        shiftSegments:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftSegment'
          description: "The following field is only returned in List requests of the
            entity.\n The ordered set of shift segments for this shift instance."
        shiftTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftTemplate'
          description: The shift template used to create this shift instance.
        plannedShrinkagePercent:
          type: number
          description: the percentage shrinkage expected for this shift [0.0, 100.0].
            0.0 = no shrinkage,  100 = no agents
          format: float
      description: Represents a shift instance
    api.v1alpha1.wfm.ShiftSegment:
      type: object
      properties:
        shiftSegmentSid:
          type: string
          description: ID of this shift segment.
        shiftInstanceSid:
          type: string
          description: ID of the shift instance that this segment belongs to.
        orderInShiftInstance:
          type: integer
          description: Order that this segment has in it's parent shift instance.
          format: int32
        widthInMinutes:
          type: integer
          description: Width of this shift segment in minutes.
          format: int32
        startMinuteInShift:
          type: integer
          description: How long after the shift instance start time, the segment to
            begin.
          format: int32
        schedulingActivitySid:
          type: string
          description: Scheduling activity sid of this shift segment.
        schedulingActivity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SchedulingActivity'
          description: "The following field is only returned in List requests of the
            entity.\n The scheduling activity referred to by @scheduling_activity_sid"
        callStatsBySkillCollection:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftSegmentCallStat'
          description: Per-skill call stats.
      description: Represents a shift segment
    api.v1alpha1.wfm.ShiftSegmentCallStat:
      type: object
      properties:
        numCalls:
          type: number
          description: "Number of predicted calls.\n A float to account for predicted
            calls that would extend past end of shift_segment."
          format: float
        percentFit:
          type: number
          description: "The percentage fit\n 0.0 through 1.0, for 0% through 100%."
          format: float
        skillCollection:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Pointer to skill_collection.
      description: "ShiftSegmentCallStat.\n Not a top-level entity:\n * No primary-key
        field.\n * No org_id field.\n * No rpc endpoints, part of ShiftSegment only."
    api.v1alpha1.wfm.ShiftTemplate:
      type: object
      properties:
        shiftTemplateSid:
          type: string
          description: ID of this shift template.
        programNodeSid:
          type: string
          description: Parent node id -- parent will only be a program nodes
        name:
          type: string
          description: Template name
        description:
          type: string
          description: Template description
        datetimeSetToInactive:
          type: string
          description: Datetime that the template was set to inactive, if not set
            then the template is currently active.
          format: date-time
        isTourshift:
          type: boolean
          description: Type of Shift Template (true=tour shift, false=dynamic shift)
        minShiftWidth:
          type: integer
          description: Min shift width (minutes)
          format: int32
        maxShiftWidth:
          type: integer
          description: Max shift width (minutes)
          format: int32
        minAgents:
          type: integer
          description: Min number of agent shifts for shift template
          format: int32
        maxAgents:
          type: integer
          description: Max number of agent shifts for shift template
          format: int32
        shiftStartBoundaryMinutes:
          type: integer
          description: Intervals upon which shifts may start (minutes)
          format: int32
        sameTimeEachDOW:
          type: boolean
          description: Whether or not shifts in this shift template must start at
            the same time each day of the week
        sameLengthPerAgent:
          type: boolean
          description: Whether or not all of an Agent's shifts in this shift template
            will be the same length
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that the shift template belongs
            to.
        memberPlacementRules:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PlacementRule'
          description: The placement rules associated with @shift_template_sid.
        DOWPlacements:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.DOWPlacement'
          description: "The DOW_placements set the placement days for the shift template.\n
            The length of the list must be divisible by seven to represent days of
            the week.\n May include more sets of seven days to represent another sequential
            week (ie, 21 placements for 3 weeks).\n The DOWPlacements represents sequential
            days of the week, always starting on Sunday."
        memberAgentGroups:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentGroup'
          description: agent groups that are children of call center node
      description: Shift Template
    api.v1alpha1.wfm.Skill:
      type: object
      properties:
        skillSid:
          type: string
          description: ID of the skill profile skill.
        clientSkillType:
          type: integer
          description: type of the skill.
          format: enum
        name:
          type: string
          description: skill name.
        deleteDate:
          type: string
          description: approximate date that the skill was deleted, if absent, the
            skill has not been deleted.
          format: date-time
        clientSkillSid:
          type: string
          description: ID of the skill (as shown in backoffice) for the given skill
            type (agent, PBX, hunt_group, etc).
        proficiency:
          type: integer
          description: "Proficiency that this skill has for the skill profile containing
            it.\n This field will only be set when this skill is contained within
            a SkillProfile."
          format: int32
      description: "Message type specifying information regarding the skill that will
        associated with\n SkillProfile and other entities."
    api.v1alpha1.wfm.SkillProficiency:
      type: object
      properties:
        skillProficiencySid:
          type: string
          description: ID of the skill proficiency.
        skillSid:
          type: string
          description: ID of the skill that this proficiency belongs to.
        preferredSkillProfileSid:
          type: string
          description: "ID of the skill profile that contains the @skill_sid.\n If
            not set to NULL, then the proficiency value of the @skill_sid for that
            skill profile should be used,\n otherwise the @manual_proficiency_value
            is the preferred proficiency to use for the @skill_sid."
        manualProficiencyValue:
          type: integer
          description: Manual proficiency value (from 1 to 100), it will be used when
            @preferred_skill_profile_sid is NULL.
          format: int32
        parentEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Parent entity of the proficiency.
        skillName:
          type: string
          description: "The following fields are only used in the return of List requests
            of the entity.\n Name of the skill with @skill_sid."
        skillProfileName:
          type: string
          description: Name of the skill profile with @preferred_skill_profile_sid,
            will be blank if said field is NULL.
        skillProfileProficiencyValue:
          type: integer
          description: Proficiency value that @preferred_skill_profile_sid has for
            the given @skill_sid, it will be 0 if @preferred_skill_profile_sid is
            NULL.
          format: int32
      description: Represents a skill proficiency
    api.v1alpha1.wfm.SkillProfile:
      type: object
      properties:
        skillProfileSid:
          type: string
          description: ID of the skill profile.
        name:
          type: string
          description: name of the skill profile.
        description:
          type: string
          description: description about the skill profile.
        createDate:
          type: string
          description: date of creation of the skill profile.
          format: date-time
        unnamed:
          type: boolean
          description: indicates whether the autogenerated name of the skill profile
            has been modified by the org.
        inactiveAsOfDate:
          type: string
          description: date that the profile became inactive, if not set, then the
            profile is currently active.
          format: date-time
        skills:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Skill'
          description: skills of the skill profile.
        skillsCount:
          type: integer
          description: number of skills that this skill profile has.
          format: int32
        occurrence:
          type: number
          description: percentage of total calls that had this skill profile.
          format: float
        averageSpeedOfAnswerInSeconds:
          type: number
          description: average time that calls took to be answered.
          format: float
        averageHandleTimeInSeconds:
          type: number
          description: average duration of answered calls.
          format: float
        averageAfterCallWorkInSeconds:
          type: number
          description: average time that agents spent in wrap up.
          format: float
        averageTimeToAbortInSeconds:
          type: number
          description: average time that callers waited before hanging unanswered
            calls.
          format: float
        areAveragesManual:
          type: boolean
          description: indicates whether or not the averages were manually entered
            by the user (if false then the averages were automatically calculated
            from the historical data).
      description: Message type specifying a skill profile including specific skills
    api.v1alpha1.wfm.SkillProfileGroup:
      type: object
      properties:
        skillProfileGroupSid:
          type: string
          description: ID of the skill profile group.
        name:
          type: string
          description: name of the skill profile group.
        description:
          type: string
          description: description about the skill profile group.
        createTime:
          type: string
          description: date of creation of the skill profile group.
          format: date-time
        averageSpeedOfAnswerInSeconds:
          type: number
          description: average time that calls took to be answered.
          format: float
        averageHandleTimeInSeconds:
          type: number
          description: average duration of answered calls.
          format: float
        averageAfterCallWorkInSeconds:
          type: number
          description: average time that agents spent in wrap up.
          format: float
        averageTimeToAbortInSeconds:
          type: number
          description: average time that callers waited before hanging unanswered
            calls.
          format: float
        areAveragesManual:
          type: boolean
          description: indicates whether or not the averages were manually entered
            by the user (if false then the averages were automatically calculated
            from the historical data).
        skillProfileSids:
          type: array
          items:
            type: string
          description: IDs of the skill profiles that belong to this group.
        datetimeSetToInactive:
          type: string
          description: Datetime that the group was set to inactive, if not set then
            the group is currently active.
          format: date-time
    api.v1alpha1.wfm.SplitShiftInstanceReq:
      type: object
      properties:
        shiftInstanceSid:
          type: string
          description: ID of the shift instance to split.
        timeToSplit:
          type: string
          description: The datetime at which to split the @shift_instance_sid.
          format: date-time
      description: Request message for the SplitShiftInstance RPC
    api.v1alpha1.wfm.SplitShiftInstanceRes:
      type: object
      properties:
        shiftInstances:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: The newly split shift instances and their shift segments.
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Diagnostics to report if shift templates specify a larger minimum
            shift length than resulting shifts have.
      description: Response message for the SplitShiftInstance RPC
    api.v1alpha1.wfm.SwapShiftInstancesReq:
      type: object
      properties:
        wfmAgentSid1:
          type: string
          description: ID of the wfm agent that will swap instances with @wfm_agent_sid2.
        wfmAgentSid2:
          type: string
          description: ID of the wfm agent that will swap instances with @wfm_agent_sid1.
        shiftInstanceSids:
          type: array
          items:
            type: string
          description: IDs of the shift instances that will be swapped.
      description: Request message for the SwapShiftInstances RPC
    api.v1alpha1.wfm.SwapShiftInstancesRes:
      type: object
      properties:
        shiftInstances:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: Shift instances that were swapped.
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Diagnostics for any overlapping shift instances.
      description: Response message for the SwapShiftInstances RPC
    api.v1alpha1.wfm.TourAgentCollection:
      type: object
      properties:
        tourAgentCollectionSid:
          type: string
          description: The unique ID of this tour agent collection sid.
        tourPatternSid:
          type: string
          description: The ID of the tour pattern that the tour agent collection is
            associated with.
        minAgentsToSchedule:
          type: integer
          description: The minimum number of agents that are required to be scheduled
            using this collection.
          format: int32
        maxAgentsToSchedule:
          type: integer
          description: The maximum number of agents that are allowed to be scheduled
            using this collection.
          format: int32
        firstWeekPatternNumber:
          type: integer
          description: "The week pattern number to start scheduling this collection
            with.\n Each the next week pattern number in sequence will be scheduled,
            starting with the @first_week_pattern_number."
          format: int32
        name:
          type: string
          description: The name used to describe this tour agent collection to the
            user.
        wfmAgentSids:
          type: array
          items:
            type: string
          description: The IDs of any wfm agents associated with @tour_collection_sid.
      description: Represents a TourAgentCollection
    api.v1alpha1.wfm.TourPattern:
      type: object
      properties:
        tourPatternSid:
          type: string
          description: The unique ID of this tour pattern sid.
        shiftTemplateSid:
          type: string
          description: The ID of the shift template that the tour pattern belongs
            to.
        memberTourWeekPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.TourWeekPattern'
          description: The tour week patterns associated with @tour_pattern_sid.
        memberTourAgentCollections:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.TourAgentCollection'
          description: The tour agent collection associated with @tour_pattern_sid.
      description: Represents a TourPattern
    api.v1alpha1.wfm.TourShiftInstanceConfig:
      type: object
      properties:
        tourShiftInstanceConfigSid:
          type: string
          description: The unique ID of the tour shift instance config.
        tourWeekPatternSid:
          type: string
          description: The ID of the tour week pattern that the tour shift instance
            config belongs to.
        startMinuteInWeek:
          type: integer
          description: "The number of minutes after the start of week UTC for the
            shift instance config to start.\n May not be greater than 10080, as that
            would begin during the next week."
          format: int32
        widthInMinutes:
          type: integer
          description: The number of minutes wide that the tour shift instance config
            covers.
          format: int32
        memberTourShiftSegmentConfigs:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.TourShiftSegmentConfig'
          description: The tour shift segment configs that are associated with @tour_shift_instance_config_sid.
      description: Represents a TourShiftInstanceConfig
    api.v1alpha1.wfm.TourShiftSegmentConfig:
      type: object
      properties:
        tourShiftSegmentConfigSid:
          type: string
          description: The unique ID of the tour shift segment config.
        tourShiftInstanceConfigSid:
          type: string
          description: The ID of the parent tour shift instance config
        startMinuteInShift:
          type: integer
          description: The minute within the shift instance config where the shift
            segment config starts.
          format: int32
        widthInMinutes:
          type: integer
          description: The number of minutes wide that the segment covers.
          format: int32
        schedulingActivitySid:
          type: string
          description: The ID of the scheduling activity that the segment will schedule.
      description: Represents a TourShiftSegmentConfig
    api.v1alpha1.wfm.TourWeekPattern:
      type: object
      properties:
        tourWeekPatternSid:
          type: string
          description: The unique ID of the tour week pattern.
        tourPatternSid:
          type: string
          description: The ID of the tour pattern that the tour week pattern belongs
            to.
        weekPatternNumber:
          type: integer
          description: The tour week patterns place within the sequence of tour week
            patterns that belong to @tour_pattern_sid.
          format: int32
        memberTourShiftInstanceConfigs:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.TourShiftInstanceConfig'
          description: The tour shift instance configs associated with @tour_week_pattern_sid.
      description: Represents a TourWeekPattern
    api.v1alpha1.wfm.UpdateAdherenceAgentRuleClauseRequest:
      type: object
      properties:
        clause:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceAgentRuleClause'
          description: Agent rule clause to update.
      description: Request message for UpdateAdherenceAgentRuleClause.
    api.v1alpha1.wfm.UpdateAdherenceAgentRuleClauseResponse:
      type: object
      properties: {}
      description: Response message for UpdateAdherenceAgentRuleClause.
    api.v1alpha1.wfm.UpdateAdherenceAgentRuleRequest:
      type: object
      properties:
        rule:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceAgentRule'
          description: Agent rule to update.
      description: Request message for UpdateAdherenceAgentRule.
    api.v1alpha1.wfm.UpdateAdherenceAgentRuleResponse:
      type: object
      properties: {}
      description: Response message for UpdateAdherenceAgentRule.
    api.v1alpha1.wfm.UpdateAdherenceDepartmentalRuleClauseRequest:
      type: object
      properties:
        clause:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceDepartmentalRuleClause'
          description: Departmental rule clause to update.
      description: Request message for UpdateAdherenceDepartmentalRuleClause.
    api.v1alpha1.wfm.UpdateAdherenceDepartmentalRuleClauseResponse:
      type: object
      properties: {}
      description: Response message for UpdateAdherenceDepartmentalRuleClause.
    api.v1alpha1.wfm.UpdateAdherenceDepartmentalRuleRequest:
      type: object
      properties:
        rule:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceDepartmentalRule'
          description: Departmental rule to update.
      description: Request message for UpdateAdherenceDepartmentalRule.
    api.v1alpha1.wfm.UpdateAdherenceDepartmentalRuleResponse:
      type: object
      properties: {}
      description: Response message for UpdateAdherenceDepartmentalRule.
    api.v1alpha1.wfm.UpdateAdherenceRuleNotificationConfigEntryRequest:
      type: object
      properties:
        notificationConfigEntry:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceRuleNotificationConfigEntry'
          description: Notification config entry to update.
      description: Request message for UpdateAdherenceRuleNotificationConfigEntry.
    api.v1alpha1.wfm.UpdateAdherenceRuleNotificationConfigEntryResponse:
      type: object
      properties: {}
      description: Response message for UpdateAdherenceRuleNotificationConfigEntry.
    api.v1alpha1.wfm.UpdateAdherenceRuleNotificationConfigRequest:
      type: object
      properties:
        notificationConfig:
          allOf:
          - $ref: '#/components/schemas/api.commons.AdherenceRuleNotificationConfig'
          description: Notification config to update.
      description: Request message for UpdateAdherenceRuleNotificationConfig.
    api.v1alpha1.wfm.UpdateAdherenceRuleNotificationConfigResponse:
      type: object
      properties: {}
      description: Response message for UpdateAdherenceRuleNotificationConfig.
    api.v1alpha1.wfm.UpdateAgentAvailabilityPatternReq:
      type: object
      properties:
        agentAvailabilityPattern:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.AgentAvailabilityPattern'
          description: Agent availability pattern to update.
      description: Request message for the UpdateAgentAvailabilityPattern RPC
    api.v1alpha1.wfm.UpdateAgentAvailabilityPatternRes:
      type: object
      properties: {}
      description: Response message for the UpdateAgentAvailabilityPattern RPC
    api.v1alpha1.wfm.UpdateAgentGroupReq:
      type: object
      properties:
        agentGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.AgentGroup'
          description: AgentGroup to update
      description: Request message for the UpdateAgentGroup RPC
    api.v1alpha1.wfm.UpdateAgentGroupRes:
      type: object
      properties: {}
      description: Response message for the UpdateAgentGroup RPC
    api.v1alpha1.wfm.UpdateCallCenterNodeReq:
      type: object
      properties:
        node:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.CallCenterNode'
          description: "Node entity that will be updated with the values provided.\n
            If no change is desired for a given field in @node, then the current value
            must be set."
      description: Request message for the UpdateCallCenterNode RPC
    api.v1alpha1.wfm.UpdateCallCenterNodeRes:
      type: object
      properties: {}
      description: Response message for the UpdateCallCenterNode RPC
    api.v1alpha1.wfm.UpdateClientNodeReq:
      type: object
      properties:
        node:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ClientNode'
          description: Client Node to update
      description: Request message for the UpdateClientNode RPC
    api.v1alpha1.wfm.UpdateClientNodeRes:
      type: object
      properties: {}
      description: Response message for the UpdateClientNode RPC
    api.v1alpha1.wfm.UpdateConstraintRuleReq:
      type: object
      properties:
        constraintRule:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ConstraintRule'
          description: Constraint rule to update
      description: Request message for the UpdateConstraintRule RPC
    api.v1alpha1.wfm.UpdateConstraintRuleRes:
      type: object
      properties: {}
      description: Response message for the UpdateConstraintRule RPC
    api.v1alpha1.wfm.UpdateDraftScheduleReq:
      type: object
      properties:
        draftScheduleSid:
          type: string
          description: ID of the draft schedule to be updated.
        name:
          type: string
          description: Name of the draft schedule.
        description:
          type: string
          description: Description of the draft schedule.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: Range to retrieve shift instances and segments from the published
            schedule to use for this draft schedule.
        deleteShiftsNotInRange:
          type: boolean
          description: "Set to true to delete any shift instances belonging to the
            draft schedule, which are outside of the new @datetime_range.\n If false,
            instances outside of the new @datetime_range will be retained, for use
            if the datetime range is expanded to cover the instances in the future."
        copyShiftsIntoNewRange:
          type: boolean
          description: Set to true to copy shift instances from the published schedule
            into regions of the schedule with no shift instances.
        getUpdatedShifts:
          type: boolean
          description: Set to true to get the draft schedule with the updated schedule
            range, shift instances, and shift segments
      description: Request message for the UpdateDraftSchedule RPC.
    api.v1alpha1.wfm.UpdateDraftScheduleRes:
      type: object
      properties:
        draftSchedule:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.DraftSchedule'
          description: The newly updated draft schedule.
      description: Response message for the UpdateDraftSchedule RPC.
    api.v1alpha1.wfm.UpdateLocationNodeReq:
      type: object
      properties:
        locationNode:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.LocationNode'
          description: Location node to update
      description: Request message for the UpdateLocationNode RPC
    api.v1alpha1.wfm.UpdateLocationNodeRes:
      type: object
      properties: {}
      description: Response message for the UpdateLocationNode RPC
    api.v1alpha1.wfm.UpdateNonSkillActivityReq:
      type: object
      properties:
        nonSkillActivity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.NonSkillActivity'
          description: Non skill activity to update.
      description: Request message for the UpdateNonSkillActivity RPC
    api.v1alpha1.wfm.UpdateNonSkillActivityRes:
      type: object
      properties: {}
      description: Response message for the UpdateNonSkillActivity RPC
    api.v1alpha1.wfm.UpdateOpenTimesPatternReq:
      type: object
      properties:
        openTimesPattern:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.OpenTimesPattern'
          description: Open times pattern to update.
      description: Request message for the UpdateOpenTimesPattern RPC
    api.v1alpha1.wfm.UpdateOpenTimesPatternRes:
      type: object
      properties: {}
      description: Response message for the UpdateOpenTimesPattern RPC
    api.v1alpha1.wfm.UpdatePlacementRuleReq:
      type: object
      properties:
        placementRule:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.PlacementRule'
          description: Placement rule to update.
      description: Request message for the UpdatePlacementRule RPC
    api.v1alpha1.wfm.UpdatePlacementRuleRes:
      type: object
      properties: {}
      description: Response message for the UpdatePlacementRule RPC
    api.v1alpha1.wfm.UpdateProgramNodeReq:
      type: object
      properties:
        programNode:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ProgramNode'
          description: Program node to update.
      description: Request message for the UpdateProgramNode RPC
    api.v1alpha1.wfm.UpdateProgramNodeRes:
      type: object
      properties: {}
      description: Response messsage for the UpdateProgramNode RPC
    api.v1alpha1.wfm.UpdateRgbaColorRequest:
      type: object
      properties:
        color:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.RgbaColor'
          description: The rgba color to update.
      description: Request message for UpdateRgbaColor.
    api.v1alpha1.wfm.UpdateRgbaColorResponse:
      type: object
      properties:
        color:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.RgbaColor'
          description: The updated rgba color.
      description: Response message for UpdateRgbaColor.
    api.v1alpha1.wfm.UpdateScheduleScenarioReq:
      type: object
      properties:
        scheduleScenario:
          $ref: '#/components/schemas/api.v1alpha1.wfm.ScheduleScenario'
      description: Request message for the UpdateScheduleScenario RPC
    api.v1alpha1.wfm.UpdateScheduleScenarioRes:
      type: object
      properties: {}
      description: Request message for the UpdateScheduleScenario RPC
    api.v1alpha1.wfm.UpdateShiftInstanceReq:
      type: object
      properties:
        shiftInstanceSid:
          type: string
          description: ID of the shift instance.
        startDatetime:
          type: string
          description: The start time for this shift instance
          format: date-time
        isLocked:
          type: boolean
          description: "Tells the scheduler to leave this instance in tact when performing
            'build schedule'.\n If set to false, the instance will not be locked and
            may be lost when a new schedule is built."
        widthInMinutes:
          type: integer
          description: The duration of this shift instance in minutes.
          format: int32
        wfmAgentSid:
          type: string
          description: "ID of the wfm agent for the shift instance. If null it will\n
            create a new unassigned WfmAgent for the shift instance."
        metricTypes:
          type: array
          items:
            type: integer
            format: enum
          description: Types of metrics.
      description: Request message for the UpdateShiftInstance RPC
    api.v1alpha1.wfm.UpdateShiftInstanceRes:
      type: object
      properties:
        shiftInstance:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: Shift instance that was updated.
        performanceMetrics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetric'
          description: Deprecated. Performance metrics that this shift instance has.
        performanceMetricsV2:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.PerformanceMetricV2'
          description: Performance metrics that this shift instance has.
      description: Response message for the UpdateShiftInstance RPC
    api.v1alpha1.wfm.UpdateShiftInstanceV2Req:
      type: object
      properties:
        shiftInstanceSid:
          type: string
          description: ID of the shift instance to update.
        startDatetime:
          type: string
          description: The new start time for the updated shift instance.
          format: date-time
        widthInMinutes:
          type: integer
          description: The width of the updated shift instance
          format: int32
        wfmAgentSid:
          type: string
          description: The updated wfm agent to be assigned to @shift_segment_sid.
        isLocked:
          type: boolean
          description: "If true, locks @shift_instance_sid, so that it may not be
            updated again without being unlocked.\n if true and the shift instance
            already is locked, the instance will not have any fields updated.\n If
            false, will unlock a currently locked shift instance and allow it to be
            updated."
        plannedShrinkagePercent:
          type: number
          description: the percentage shrinkage expected for this shift [0.0, 100.0].
            0.0 = no shrinkage,  100 = no agents
          format: float
      description: Request message for the UpdateShiftInstanceV2 RPC
    api.v1alpha1.wfm.UpdateShiftInstanceV2Res:
      type: object
      properties:
        shiftInstance:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: The updated shift instance.
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: A list of diagnostics for any errors encountered, which prevented
            the update.
      description: Response message for the UpdateShiftInstanceV2 RPC
    api.v1alpha1.wfm.UpdateShiftInstanceWithSegmentsRequest:
      type: object
      properties:
        shiftInstance:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: "Instance to update with member shift segments to replace.\n
            Any existing shift segments belonging to the instances will be deleted."
        ignoreDiagnosticsErrors:
          type: boolean
          description: "If set to true, it will update the shift instance regardless
            of any diagnostics errors,\n otherwise it will return those diagnostic
            errors and not do the update."
      description: Request message for the UpdateShiftInstanceWithSegments RPC.
    api.v1alpha1.wfm.UpdateShiftInstanceWithSegmentsResponse:
      type: object
      properties:
        shiftInstance:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftInstance'
          description: Instance that was updated, with member shift segments and call
            stats.
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: A list of diagnostics for any errors encountered with the shift
            instance in the request.
      description: Reponse message for the UpdateShiftInstanceWithSegments RPC.
    api.v1alpha1.wfm.UpdateShiftTemplateReq:
      type: object
      properties:
        shiftTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ShiftTemplate'
          description: Shift template to update
      description: Request message for the UpdateShiftTemplate RPC
    api.v1alpha1.wfm.UpdateShiftTemplateRes:
      type: object
      properties: {}
      description: Response message for the UpdateShiftTemplate RPC
    api.v1alpha1.wfm.UpdateSkillProficienciesReq:
      type: object
      properties:
        skillProficiencies:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProficiency'
          description: Skill proficiencies to update.
      description: Request message for the UpdateSkillProficiencies RPC
    api.v1alpha1.wfm.UpdateSkillProficienciesRes:
      type: object
      properties: {}
      description: Response message for the UpdateSkillProficiencies RPC
    api.v1alpha1.wfm.UpdateSkillProfileAveragesUsingHistoricalDataReq:
      type: object
      properties:
        skillProfileSids:
          type: array
          items:
            type: string
          description: IDs of the skill profiles to calculate the averages of, if
            none are sent it calculates it for all skill profiles the org has.
        datetimeRange:
          allOf:
          - $ref: '#/components/schemas/api.commons.DatetimeRange'
          description: "The datetime range of the training data to use to calculate
            the averages, if a nil range is given the following range is used:\n @training_data_range_end_datetime
            - @averages_calculation_range_in_months to the @training_data_range_end_datetime
            from the forecasting parameters.\n If @averages_calculation_range_in_months
            is 0, it will use the @training_data_range_start_datetime as the start
            datetime of the range."
        excludeSkillProfilesWithManualAverages:
          type: boolean
          description: "If true, it will exclude skill profiles that have manual averages
            in them from the calculation (even if those skill profiles are in @skill_profile_sids).\n
            Otherwise they will be included in the calculation."
        skillProfileGroupSids:
          type: array
          items:
            type: string
          description: IDs of the skill profile groups to calculate the averages of,
            if none are sent it calculates it for all skill profile groups that the
            org has.
      description: Request message for the UpdateSkillProfileAveragesUsingHistoricalData
        RPC
    api.v1alpha1.wfm.UpdateSkillProfileAveragesUsingHistoricalDataRes:
      type: object
      properties: {}
      description: Response message for the UpdateSkillProfileAveragesUsingHistoricalData
        RPC
    api.v1alpha1.wfm.UpdateSkillProfileGroupAssociationsReq:
      type: object
      properties:
        skillProfileGroupSid:
          type: string
          description: IDs of the skill profile groups to update the associations
            of.
        skillProfileSidsToAssociate:
          type: array
          items:
            type: string
          description: IDs of the skill profiles to associate with this group.
        skillProfileSidsToDisassociate:
          type: array
          items:
            type: string
          description: IDs of the skill profiles to disassociate with this group.
      description: Request message for the UpdateSkillProfileGroupAssociations RPC.
    api.v1alpha1.wfm.UpdateSkillProfileGroupAssociationsRes:
      type: object
      properties: {}
      description: Response message for the UpdateSkillProfileGroupAssociations RPC.
    api.v1alpha1.wfm.UpdateSkillProfileGroupReq:
      type: object
      properties:
        skillProfileGroup:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProfileGroup'
          description: "Skill profile group to update.\n @skill_profile_group_sids
            will be ignored since associations cannot be updated by this method."
      description: Request message for the UpdateSkillProfileGroup RPC.
    api.v1alpha1.wfm.UpdateSkillProfileGroupRes:
      type: object
      properties: {}
      description: Response message for the UpdateSkillProfileGroup RPC.
    api.v1alpha1.wfm.UpdateSkillProfileProficienciesReq:
      type: object
      properties:
        proficiencies:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.UpdateSkillProfileProficienciesReq_Proficiency'
          description: Proficiencies to update.
      description: Request message for the UpdateSkillProfileProficiencies RPC.
    api.v1alpha1.wfm.UpdateSkillProfileProficienciesReq_Proficiency:
      type: object
      properties:
        skillProfileSid:
          type: string
          description: ID of the skill profile that contains the @skill_sid.
        skillSid:
          type: string
          description: ID of the skill profile skill to update the proficiency.
        proficiency:
          type: integer
          description: Updated value to give the proficiency.
          format: int32
    api.v1alpha1.wfm.UpdateSkillProfileProficienciesRes:
      type: object
      properties: {}
      description: Response message for the UpdateSkillProfileProficiencies RPC.
    api.v1alpha1.wfm.UpdateSkillProfileReq:
      type: object
      properties:
        skillProfileSid:
          type: string
          description: skill profile id to modify.
        name:
          type: string
          description: new name that the skill profile will have.
        description:
          type: string
          description: new description that the skill profile will have.
        averageSpeedOfAnswerInSeconds:
          type: number
          description: average time that calls took to be answered.
          format: float
        averageHandleTimeInSeconds:
          type: number
          description: average duration of answered calls.
          format: float
        averageAfterCallWorkInSeconds:
          type: number
          description: average time that agents spent in wrap up.
          format: float
        averageTimeToAbortInSeconds:
          type: number
          description: average time that callers waited before hanging unanswered
            calls.
          format: float
        areAveragesManual:
          type: boolean
          description: indicates whether or not the averages were manually entered
            by the user (if false then the averages were automatically calculated
            from the historical data).
      description: Request message for the UpdateSkillProfile RPC.
    api.v1alpha1.wfm.UpdateSkillProfileRes:
      type: object
      properties: {}
      description: Response message for the UpdateSkillProfile RPC.
    api.v1alpha1.wfm.UpdateTourAgentCollectionReq:
      type: object
      properties:
        tourAgentCollection:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.TourAgentCollection'
          description: The Tour Agent Collection to update.
      description: Request message for the UpdateTourAgentCollection RPC.
    api.v1alpha1.wfm.UpdateTourAgentCollectionRes:
      type: object
      properties: {}
      description: Response message for the UpdateTourAgentCollection RPC.
    api.v1alpha1.wfm.UpdateTourShiftInstanceConfigReq:
      type: object
      properties:
        tourShiftInstanceConfig:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.TourShiftInstanceConfig'
          description: The Tour Shift Instance Config to update.
      description: Request message for the UpdateTourShiftInstanceConfig RPC.
    api.v1alpha1.wfm.UpdateTourShiftInstanceConfigRes:
      type: object
      properties: {}
      description: Response message for the UpdateTourShiftInstanceConfig RPC.
    api.v1alpha1.wfm.UpdateTourShiftSegmentConfigReq:
      type: object
      properties:
        tourShiftSegmentConfig:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.TourShiftSegmentConfig'
          description: The Tour Shift Segment Config to update.
      description: Request message for the UpdateTourShiftSegmentConfig RPC.
    api.v1alpha1.wfm.UpdateTourShiftSegmentConfigRes:
      type: object
      properties: {}
      description: Response message for the CreateTourPattern RPC.
    api.v1alpha1.wfm.UpdateWFMAgentReq:
      type: object
      properties:
        wfmAgent:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.WFMAgent'
          description: Wfm agent to update.
      description: Request message for the UpdateWFMAgent RPC
    api.v1alpha1.wfm.UpdateWFMAgentRes:
      type: object
      properties: {}
      description: Response message for the UpdateWFMAgent RPC
    api.v1alpha1.wfm.UpsertForecastDataDeltaReq:
      type: object
      properties:
        delta:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.CallDataByInterval'
          description: "Delta to store\n The @start_datetime, @is_delta, and @skill_profile_category
            fields DO NOT need to be set."
      description: Request message for the UpsertForecastDataDelta RPC
    api.v1alpha1.wfm.UpsertForecastDataDeltaRes:
      type: object
      properties:
        delta:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.CallDataByInterval'
          description: Delta that was stored.
      description: Response message for the UpsertForecastDataDelta RPC
    api.v1alpha1.wfm.UpsertForecastDataDeltasReq:
      type: object
      properties:
        deltas:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.CallDataByInterval'
          description: "Deltas to store\n The @start_datetime, @is_delta, and @skill_profile_category
            fields DO NOT need to be set."
      description: Request message for the UpsertForecastDataDeltas RPC
    api.v1alpha1.wfm.UpsertForecastDataDeltasRes:
      type: object
      properties: {}
      description: Response message for the UpsertForecastDataDeltas RPC
    api.v1alpha1.wfm.UpsertForecastingParametersReq:
      type: object
      properties:
        forecastingParameters:
          allOf:
          - $ref: '#/components/schemas/api.commons.ForecastingParameters'
          description: parameters used for forecasts and training data samples.
      description: Request message for the UpsertForecastingParameters RPC.
    api.v1alpha1.wfm.UpsertForecastingParametersRes:
      type: object
      properties: {}
      description: Response message for the UpsertForecastingParameters RPC.
    api.v1alpha1.wfm.UpsertHistoricalDataDeltaReq:
      type: object
      properties:
        delta:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.HistoricalDataInterval'
          description: Training data delta to create/update.
      description: Request message for the UpsertHistoricalDataDelta RPC
    api.v1alpha1.wfm.UpsertHistoricalDataDeltaRes:
      type: object
      properties:
        delta:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.HistoricalDataInterval'
          description: Updated delta that was stored.
      description: Response message for the UpsertHistoricalDataDelta RPC
    api.v1alpha1.wfm.UpsertHistoricalDataDeltasReq:
      type: object
      properties:
        deltas:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.HistoricalDataInterval'
          description: Training data delta to create/update.
      description: Request message for the UpsertHistoricalDataDelta RPC.
    api.v1alpha1.wfm.UpsertHistoricalDataDeltasRes:
      type: object
      properties: {}
      description: Response message for the UpsertHistoricalDataDelta RPC.
    api.v1alpha1.wfm.UpsertNonSkillActivityAssociationReq:
      type: object
      properties:
        nonSkillActivitySid:
          type: string
          description: ID of the non skill activity to upsert the association of.
        node:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Node that the non skill activity will be associated with.
        associationType:
          type: integer
          description: Type of association that the non skill activity will have with
            the @node.
          format: enum
        scheduleScenarioSid:
          type: string
          description: ID of the schedule scenario that this non skill activity belongs
            to.
      description: Request message for the UpsertNonSkillActivityAssociation RPC
    api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes:
      type: object
      properties:
        upsertSucceeded:
          type: boolean
          description: Indicates whether the upsert took effect if true, or that there
            are conflicting entities which would be affected, that must be updated/removed
            first if false.
        nodesAffected:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: Nodes that will effectively lose the non skill activity as
            a candidate, through inheritance.
        rulesUsingActivity:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes_EntityMapping'
          description: "Set of entities that are currently referencing the @non_skill_activity_sid.\n
            The @right_entity will be the placement rule or constraint rule in conflict,
            and their parent entity will be the @left_entity"
      description: Response message for the UpsertNonSkillActivityAssociation RPC
    api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes_EntityMapping:
      type: object
      properties:
        leftEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: When possible, the parent entity of the pair.
        rightEntity:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.ParentEntity'
          description: When possible, the child or member entity of the pair.
      description: Pair of parent entities, used to relate two entities.
    api.v1alpha1.wfm.UpsertProfileForecastReq:
      type: object
      properties:
        skillProfileSid:
          type: string
          description: "ID of the skill profile that the forecast will belong to.\n
            Deprecated as of Sep/8/2023: use skill_profile_category instead."
        callProfileTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.CallProfileTemplate'
          description: Template to use to generate the forecast that will be stored.
        fixedAveragesForecast:
          type: boolean
          description: "If @fixed_averages_forecast is set to true it will do a fixed
            averages forecast,\n and will only use the fixed averages fields and @total_calls_profile
            from the @call_profile_template.\n Otherwise, it will do a regular profile
            forecast and only the fixed averages fields @call_profile_template will
            be ignored."
        skillProfileCategory:
          allOf:
          - $ref: '#/components/schemas/api.commons.SkillProfileCategory'
          description: Skill profile category that the forecast belongs to.
      description: Request message for the UpsertProfileForecast RPC
    api.v1alpha1.wfm.UpsertProfileForecastRes:
      type: object
      properties: {}
      description: Response message for the UpsertProfileForecast RPC
    api.v1alpha1.wfm.UpsertRealTimeManagementStateColorRequest:
      type: object
      properties:
        state:
          type: integer
          description: The state to associate with @rgba_color_id.
          format: enum
        rgbaColorId:
          type: string
          description: The rgba_color_id to create a state color association with.
      description: Request message for UpsertRealTimeManagementStateColor
    api.v1alpha1.wfm.UpsertRealTimeManagementStateColorResponse:
      type: object
      properties:
        stateColor:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.RealTimeManagementStateColor'
          description: The resulting real time management state color.
      description: Response message for UpsertRealTimeManagementStateColor
    api.v1alpha1.wfm.UpsertRegressionForecastReq:
      type: object
      properties:
        regressionTemplate:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.RegressionTemplate'
          description: Forecast template used to build the regression forecast
        averageSpeedOfAnswerInSeconds:
          type: number
          description: "the following only apply for avgs_processing_type=RegressionForecasterAvgsProcessingType.FIXED_AVERAGES\n
            optional"
          format: float
        averageHandleTimeInSeconds:
          type: number
          description: optional
          format: float
        averageAfterCallWorkInSeconds:
          type: number
          description: optional
          format: float
        averageTimeToAbortInSeconds:
          type: number
          description: optional
          format: float
        skillProfileSidsToForecast:
          type: array
          items:
            type: string
          description: IDs of the skill Profiles of which to save the generated forecast.
      description: Request message for the UpsertRegressionForecast RPC
    api.v1alpha1.wfm.UpsertRegressionForecastRes:
      type: object
      properties: {}
      description: Response message for the UpsertRegressionForecast RPC
    api.v1alpha1.wfm.UpsertTourPatternWithMembersReq:
      type: object
      properties:
        tourPattern:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.TourPattern'
          description: "The tour pattern to upsert, including any members.\n Must
            include at least one Tour Week Pattern and one Tour Agent Collection.\n
            Will replace the existing Tour Pattern and all members in database for
            @tour_pattern.shift_template_sid."
      description: Request message for the UpsertTourPatternWithMembers RPC.
    api.v1alpha1.wfm.UpsertTourPatternWithMembersRes:
      type: object
      properties:
        tourPattern:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.wfm.TourPattern'
          description: The newly created tour pattern, returned with new SIDs and
            week pattern numbers.
        diagnostics:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.Diagnostic'
          description: Diagnostics for any issues encountered with the fields on the
            given @tour_pattern.
      description: Response message for the UpsertTourPatternWithMembers RPC.
    api.v1alpha1.wfm.WFMAgent:
      type: object
      properties:
        wfmAgentSid:
          type: string
          description: Unique ID for this object.
        tcnAgentSid:
          type: string
          description: "Reference to the affiliated tcn agent.\n If set to nil, that
            means that this WFM Agent is not assigned to a TCN agent."
        name:
          type: string
          description: "Name for WFM Agent.\n If it's for a TCN agent this value will
            always match that TCN agent's name."
        datetimeSetToInactive:
          type: string
          description: Null by default, indicates date which agent was removed or
            deactivated.
          format: date-time
        memberConstraintRules:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.ConstraintRule'
          description: The constraint rules associated with @wfm_agent_sid.
        memberSkillProficiencies:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.SkillProficiency'
          description: List of skill proficiencies associated with @wfm_agent_sid.
        memberAgentAvailabilityPatterns:
          type: array
          items:
            $ref: '#/components/schemas/api.v1alpha1.wfm.AgentAvailabilityPattern'
          description: List of agent availability patterns associated with this wfm
            agent.
        createdAt:
          type: string
          description: Date of creation of the agent.
          format: date-time
        tcnAgentIsEnabled:
          type: boolean
          description: "If this WFM agent is for a TCN agent, it indicates whether
            or not this TCN Agent is enabled or not.\n Field is read only and cannot
            be modified."
      description: Represents a wfm agent object refering to an agent in the TCN system.
    api.v1alpha1.wfm.WeekMap_WeekMapDOW:
      type: object
      properties:
        dayOfWeek:
          type: integer
          description: Which day of the week the entity represents.
          format: enum
        startMinuteInDay:
          type: integer
          description: Which minute the entity starts at.
          format: int32
        endMinuteInDay:
          type: integer
          description: Which minute the entity ends at.
          format: int32
        value:
          allOf:
          - $ref: '#/components/schemas/api.commons.OptionTypes'
          description: Value that this day of the week has.
    api.v1alpha1.workflows.CreateWorkflowDefinitionRequest:
      type: object
      properties:
        workflowDefinition:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.workflows.PersistedWorkflowDefinition'
          description: workflow definition is the flow definition object
      description: CreateWorkflowDefinitionRequest is the request object for creating
        a flow definition
    api.v1alpha1.workflows.CreateWorkflowDefinitionResponse:
      type: object
      properties:
        workflowDefinition:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.workflows.PersistedWorkflowDefinition'
          description: workflow_definition is the persisted flow definition object
            (with the flow_definition_id set)
      description: CreateWorkflowDefinitionResponse is the response object for creating
        a flow definition
    api.v1alpha1.workflows.DeleteWorkflowDefinitionRequest:
      type: object
      properties:
        workflowDefinitionId:
          type: string
          description: workflow_definition_id is the identifier for the flow definition
            to delete
      description: DeleteWorkflowDefinitionRequest is the request object for deleting
        a flow definition
    api.v1alpha1.workflows.DeleteWorkflowDefinitionResponse:
      type: object
      properties:
        workflowDefinition:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.workflows.PersistedWorkflowDefinition'
          description: workflow_definition is the deleted flow definition object
      description: DeleteWorkflowDefinitionResponse is the response object for deleting
        a flow definition
    api.v1alpha1.workflows.GetWorkflowDefinitionRequest:
      type: object
      properties:
        workflowDefinitionId:
          type: string
          description: flow_definition_id is the identifier for the flow definition
            to retrieve
      description: GetWorkflowDefinitionRequest is the request object for retrieving
        a flow definition
    api.v1alpha1.workflows.GetWorkflowDefinitionResponse:
      type: object
      properties:
        workflowDefinition:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.workflows.PersistedWorkflowDefinition'
          description: workflow_1definition is the flow definition object
      description: GetWorkflowDefinitionResponse is the response object for retrieving
        a flow definition
    api.v1alpha1.workflows.ListWorkflowDefinitionsRequest:
      type: object
      properties:
        orgId:
          type: string
          description: org_id is the organization identifier to list flow definitions
            for
        application:
          type: string
          description: application is the application identifier to list flow definitions
            for. If this is specified, the output is filtered to only include flow
            definitions for the application
        labels:
          type: array
          items:
            type: string
          description: labels can be used to filter grouped/tagged flow definitions
      description: ListWorkflowDefinitionsRequest is the request object for listing
        flow definitions
    api.v1alpha1.workflows.ListWorkflowDefinitionsResponse:
      type: object
      properties:
        workflowDefinition:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.workflows.PersistedWorkflowDefinition'
          description: workflow_definition is the flow definition object
      description: ListWorkflowDefinitionsResponse is the response object for listing
        flow definitions
    api.v1alpha1.workflows.PersistedWorkflowDefinition:
      type: object
      properties:
        flowDefinitionId:
          type: string
          description: flow_definition_id is the unique identifier for the flow definition.
            This is generated by the system, therefor its value is meaningless on
            create
        orgId:
          type: string
          description: org_id that owns this definition. Must match the org_id of
            the authenticated user
        application:
          type: string
          description: application that owns this definition
        name:
          type: string
          description: this definition name
        labels:
          type: array
          items:
            type: string
          description: labels can be used to group/tag flow definitions together into
            logical categories
        description:
          type: string
          description: this definition description
        definition:
          type: string
          description: the JSON serialized form of the flow definition
        createTime:
          type: string
          description: create_time is the time the flow definition was created. Not
            used for the update request
          format: date-time
        updateTime:
          type: string
          description: update_time is the time the flow definition was last updated.
            Not used for the create request
          format: date-time
        deleteTime:
          type: string
          description: delete_time is the time the flow definition was soft-deleted.
            Not used for the create request
          format: date-time
        extra:
          type: string
          description: extra is a JSON serialized string that can be used to store
            extra data for the flow definition (e.g. UI positioning data)
      description: PersistedWorkflowDefinition is the flow definition object
    api.v1alpha1.workflows.UpdateWorkflowDefinitionRequest:
      type: object
      properties:
        workflowDefinition:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.workflows.PersistedWorkflowDefinition'
          description: flow_definition is the object to be updated. Only the name,
            description, definition graph and the extra information are updated
      description: UpdateWorkflowDefinitionRequest is the request object for updating
        a flow definition
    api.v1alpha1.workflows.UpdateWorkflowDefinitionResponse:
      type: object
      properties:
        workflowDefinition:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.workflows.PersistedWorkflowDefinition'
          description: flow_definition is the updated flow definition object
      description: UpdateWorkflowDefinitionResponse is the response object for updating
        a flow definition
    api.v1alpha1.workflows.ValidateWorkflowDefinitionRequest:
      type: object
      properties:
        workflowDefinition:
          allOf:
          - $ref: '#/components/schemas/api.v1alpha1.workflows.PersistedWorkflowDefinition'
          description: workflow_definition is the object to be validated
      description: ValidateWorkflowDefinitionRequest is the request object for validating
        a flow definition
    api.v1alpha1.workflows.ValidateWorkflowDefinitionResponse:
      type: object
      properties:
        valid:
          type: boolean
          description: valid is true if the flow definition is valid, false otherwise
        error:
          type: string
          description: error is the error message if the flow definition is invalid
      description: ValidateWorkflowDefinitionResponse is the response object for validating
        a flow definition
    google.longrunning.Operation:
      type: object
      properties:
        name:
          type: string
          description: "The server-assigned name, which is only unique within the
            same service that\n originally returns it. If you use the default HTTP
            mapping, the\n `name` should be a resource name ending with `operations/{unique_id}`."
        metadata:
          allOf:
          - $ref: '#/components/schemas/google.protobuf.Any'
          description: "Service-specific metadata associated with the operation.  It
            typically\n contains progress information and common metadata such as
            create time.\n Some services might not provide such metadata.  Any method
            that returns a\n long-running operation should document the metadata type,
            if any."
        done:
          type: boolean
          description: "If the value is `false`, it means the operation is still in
            progress.\n If `true`, the operation is completed, and either `error`
            or `response` is\n available."
        error:
          allOf:
          - $ref: '#/components/schemas/google.rpc.Status'
          description: The error result of the operation in case of failure or cancellation.
        response:
          allOf:
          - $ref: '#/components/schemas/google.protobuf.Any'
          description: "The normal response of the operation in case of success.  If
            the original\n method returns no data on success, such as `Delete`, the
            response is\n `google.protobuf.Empty`.  If the original method is standard\n
            `Get`/`Create`/`Update`, the response should be the resource.  For other\n
            methods, the response should have the type `XxxResponse`, where `Xxx`\n
            is the original method name.  For example, if the original method name\n
            is `TakeSnapshot()`, the inferred response type is\n `TakeSnapshotResponse`."
      description: "This resource represents a long-running operation that is the
        result of a\n network API call."
    google.protobuf.Any:
      type: object
      properties:
        '@type':
          type: string
          description: The type of the serialized message.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that
        describes the type of the serialized message.
    google.rpc.Status:
      type: object
      properties:
        code:
          type: integer
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
          format: int32
        message:
          type: string
          description: A developer-facing error message, which should be in English.
            Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details]
            field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/google.protobuf.Any'
          description: A list of messages that carry the error details.  There is
            a common set of message types for APIs to use.
      description: 'The `Status` type defines a logical error model that is suitable
        for different programming environments, including REST APIs and RPC APIs.
        It is used by [gRPC](https://github.com/grpc). Each `Status` message contains
        three pieces of data: error code, error message, and error details. You can
        find out more about this error model and how to work with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).'
    google.type.Decimal:
      type: object
      properties:
        value:
          type: string
          description: "The decimal value, as a string.\n\n The string representation
            consists of an optional sign, `+` (`U+002B`)\n or `-` (`U+002D`), followed
            by a sequence of zero or more decimal digits\n (\"the integer\"), optionally
            followed by a fraction, optionally followed\n by an exponent.\n\n The
            fraction consists of a decimal point followed by zero or more decimal\n
            digits. The string must contain at least one digit in either the integer\n
            or the fraction. The number formed by the sign, the integer and the\n
            fraction is referred to as the significand.\n\n The exponent consists
            of the character `e` (`U+0065`) or `E` (`U+0045`)\n followed by one or
            more decimal digits.\n\n Services **should** normalize decimal values
            before storing them by:\n\n   - Removing an explicitly-provided `+` sign
            (`+2.5` -> `2.5`).\n   - Replacing a zero-length integer value with `0`
            (`.5` -> `0.5`).\n   - Coercing the exponent character to lower-case (`2.5E8`
            -> `2.5e8`).\n   - Removing an explicitly-provided zero exponent (`2.5e0`
            -> `2.5`).\n\n Services **may** perform additional normalization based
            on its own needs\n and the internal decimal implementation selected, such
            as shifting the\n decimal point and exponent value together (example:
            `2.5e-1` <-> `0.25`).\n Additionally, services **may** preserve trailing
            zeroes in the fraction\n to indicate increased precision, but are not
            required to do so.\n\n Note that only the `.` character is supported to
            divide the integer\n and the fraction; `,` **should not** be supported
            regardless of locale.\n Additionally, thousand separators **should not**
            be supported. If a\n service does support them, values **must** be normalized.\n\n
            The ENBF grammar is:\n\n     DecimalString =\n       [Sign] Significand
            [Exponent];\n\n     Sign = '+' | '-';\n\n     Significand =\n       Digits
            ['.'] [Digits] | [Digits] '.' Digits;\n\n     Exponent = ('e' | 'E') [Sign]
            Digits;\n\n     Digits = { '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7'
            | '8' | '9' };\n\n Services **should** clearly document the range of supported
            values, the\n maximum supported precision (total number of digits), and,
            if applicable,\n the scale (number of digits after the decimal point),
            as well as how it\n behaves when receiving out-of-bounds values.\n\n Services
            **may** choose to accept values passed as input even when the\n value
            has a higher precision or scale than the service supports, and\n **should**
            round the value to fit the supported scale. Alternatively, the\n service
            **may** error with `400 Bad Request` (`INVALID_ARGUMENT` in gRPC)\n if
            precision would be lost.\n\n Services **should** error with `400 Bad Request`
            (`INVALID_ARGUMENT` in\n gRPC) if the service receives a value outside
            of the supported range."
      description: "A representation of a decimal value, such as 2.5. Clients may
        convert values\n into language-native decimal formats, such as Java's [BigDecimal][]
        or\n Python's [decimal.Decimal][].\n\n [BigDecimal]:\n https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html\n
        [decimal.Decimal]: https://docs.python.org/3/library/decimal.html"
    services.billing.entities.v1alpha1.BasicConfig:
      type: object
      properties:
        rate:
          type: number
          description: Required. the amount to rate a single event
          format: double
      description: "BasicConfig represents the basic config for a rating module when\n
        there is no other data needed"
    services.billing.entities.v1alpha1.BasicUnitConfig:
      type: object
      properties:
        unitSize:
          type: string
          description: "Required. the size of an individual unit. For example, a unit\n
            size of 300 (with bytes as a unit of measurement) and an event\n of size
            400 bytes will get billed as if it were 2 units."
        rate:
          type: number
          description: Required. the amount to rate each unit
          format: double
        minUnits:
          type: string
          description: "Optional. the minimum number of units to rate; for example,
            a\n unit size of 5 seconds and a min_units of 2 would mean that\n any
            event less than 10 seconds would be billed as if it were\n two units (10
            seconds)."
        maxUnits:
          type: string
          description: "Optional. the maximum number of units to rate; for example,
            a\n unit size of 5 seconds and a max_units of 2 would mean that\n any
            event more than 10 seconds would be billed as if it were\n two units (10
            seconds)."
      description: "BasicUnitConfig represents basic config for a rating module that\n
        rates based on event units"
    services.billing.entities.v1alpha1.BillingPlan:
      type: object
      properties:
        billingPlanId:
          type: string
          description: the billing plan identifier
        createTime:
          type: string
          description: time the billing plan was created
          format: date-time
        updateTime:
          type: string
          description: time the billing plan was last updated
          format: date-time
        startTime:
          type: string
          description: the time from which this billing plan will take effect
          format: date-time
        endTime:
          type: string
          description: the time this billing plan ended; can be null
          format: date-time
        deleteTime:
          type: string
          description: the time this billing plan was deleted; can be null
          format: date-time
        rateDefinitionIds:
          type: array
          items:
            type: string
          description: the billing plan rate definitions
        status:
          type: integer
          description: the billing plan status
          format: enum
        actualStartTime:
          type: string
          format: date-time
      description: BillingPlan represents a collection of rate definitions
    services.billing.entities.v1alpha1.BillingPlanSnapshot:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        rates:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha1.RateDefinition'
      description: "BillingPlanSnapshot represents a snapshot of a billing plan\n
        during a specific time period"
    services.billing.entities.v1alpha1.Invoice:
      type: object
      properties:
        invoiceId:
          type: string
        billingCycle:
          type: string
          description: the billing cycle this invoice was created for
        createTime:
          type: string
          description: the time this invoice was created
          format: date-time
        updateTime:
          type: string
          format: date-time
        deleteTime:
          type: string
          format: date-time
        items:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha1.InvoiceItem'
          description: the items on this invoice
        url:
          type: string
          description: the url to download the invoice
        clientId:
          type: string
          description: the client this invoice is for
      description: "Invoice represents a collection of invoice items\n billed to an
        org for a given billing cycle."
    services.billing.entities.v1alpha1.InvoiceItem:
      type: object
      properties:
        invoiceItemId:
          type: string
        product:
          type: integer
          description: the product this item represents
          format: enum
        price:
          type: number
          description: the price for this product
          format: double
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        description:
          type: string
          description: description of the item
        date:
          type: string
          description: the time this item was made
          format: date-time
        columns:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha1.InvoiceItemColumn'
          description: other data columns
        clientId:
          type: string
          description: the client this item is for
      description: InvoiceItem represents a single line item on an invoice.
    services.billing.entities.v1alpha1.InvoiceItemColumn:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        columnValue:
          type: string
      description: InvoiceItemColumn represents a single column on an invoice item.
    services.billing.entities.v1alpha1.MatchingConfig:
      type: object
      properties:
        name:
          type: string
          description: the name of the matching configuration.
        areaCode:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.MatchingConfigAreaCode'
        countryPrefix:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.MatchingConfigCountryPrefix'
      description: "MatchingConfig represents the configuration for matching\n an
        event to a rate definition."
    services.billing.entities.v1alpha1.MatchingConfigAreaCode:
      type: object
      properties:
        name:
          type: string
        areaCodes:
          type: array
          items:
            type: string
    services.billing.entities.v1alpha1.MatchingConfigCountryPrefix:
      type: object
      properties:
        countryCode:
          type: integer
          description: The country code to match.
          format: int32
        prefixes:
          type: array
          items:
            type: string
          description: "The list of prefixes (if any) to match after successfully
            matching\n the country code."
      description: "MatchingConfigCountryPrefix represents the configuration for matching\n
        an event to a rate definition using the country code and a set of\n prefixes.
        The longest prefix match is used."
    services.billing.entities.v1alpha1.RateDefinition:
      type: object
      properties:
        rateDefinitionId:
          type: string
          description: the resource identifier
        rateDefinitionFeatureId:
          type: string
          description: unused
        rateDefinitionGroupId:
          type: string
          description: a group identifier for this rate definition; optional
        eventType:
          type: integer
          description: the event type this definition rates
          format: enum
        configType:
          type: integer
          description: the config type of this definitioin
          format: enum
        matchingRule:
          type: integer
          description: the matching rule for this definition
          format: enum
        matchingConfig:
          allOf:
          - $ref: '#/components/schemas/services.billing.entities.v1alpha1.MatchingConfig'
          description: the matching config for this definition
        config:
          allOf:
          - $ref: '#/components/schemas/services.billing.entities.v1alpha1.RateDefinitionConfig'
          description: the configuration for this definition
        createTime:
          type: string
          description: the time the rate definition was created
          format: date-time
        updateTime:
          type: string
          description: the time the rate definition was last updated
          format: date-time
        deleteTime:
          type: string
          description: the time this rate definition was deleted (if applicable)
          format: date-time
        matchingSha:
          type: string
          description: the matching sha for this definition
      description: RateDefinition defines a rating configuration.
    services.billing.entities.v1alpha1.RateDefinitionConfig:
      type: object
      properties:
        agentSeatsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        agentTextMessageChatConfig:
          allOf:
          - $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
          description: omni configs
        agentTextMessageEmailMessageConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        agentTextMessageEmailSizeConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicUnitConfig'
        agentTextMessageSmsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        taskMessageSentEmailMessageConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        taskMessageSentEmailSizeConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicUnitConfig'
        taskMessageSentSmsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        connectedInboxPollConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        managerTextMessageChatConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        managerTextMessageEmailMessageConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        managerTextMessageEmailSizeConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicUnitConfig'
        managerTextMessageSmsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        customerTextMessageChatConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        customerTextMessageEmailMessageConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        customerTextMessageEmailSizeConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicUnitConfig'
        customerTextMessageSmsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        agentTextMessageChatSizeConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicUnitConfig'
        managerTextMessageChatSizeConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicUnitConfig'
        customerTextMessageChatSizeConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicUnitConfig'
        connectedInboxCreatedConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        agentTextMessageSmsSizeConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicUnitConfig'
        managerTextMessageSmsSizeConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicUnitConfig'
        customerTextMessageSmsSizeConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicUnitConfig'
        taskMessageSentSmsSizeConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicUnitConfig'
        agentChatMessageUnitsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        agentEmailMessageUnitsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        agentSmsMessageUnitsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        managerChatMessageUnitsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        managerEmailMessageUnitsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        managerSmsMessageUnitsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        customerChatMessageUnitsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        customerEmailMessageUnitsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        customerSmsMessageUnitsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        systemChatMessageUnitsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        systemEmailMessageUnitsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        systemSmsMessageUnitsConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
        complianceRndQueryConfig:
          allOf:
          - $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
          description: compliance configs
        complianceRndQueryCachedConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BasicConfig'
      description: RateDefinitionConfig defines the configuration for a rate definition.
    services.billing.entities.v1alpha2.BasicConfig:
      type: object
      properties:
        rate:
          type: number
          format: double
        rateDecimal:
          allOf:
          - $ref: '#/components/schemas/google.type.Decimal'
          description: Required. the amount to rate a single event
      description: "BasicConfig represents the basic config for a rating module when\n
        there is no other data needed"
    services.billing.entities.v1alpha2.BasicUnitConfig:
      type: object
      properties:
        unitSize:
          type: string
          description: "Required. the size of an individual unit. For example, a unit\n
            size of 300 (with bytes as a unit of measurement) and an event\n of size
            400 bytes will get billed as if it were 2 units."
        rate:
          type: number
          format: double
        minUnits:
          type: string
          description: "Optional. the minimum number of units to rate; for example,
            a\n unit size of 5 seconds and a min_units of 2 would mean that\n any
            event less than 10 seconds would be billed as if it were\n two units (10
            seconds). This is per event."
        maxUnits:
          type: string
          description: "Optional. the maximum number of units to rate; for example,
            a\n unit size of 5 seconds and a max_units of 2 would mean that\n any
            event more than 10 seconds would be billed as if it were\n two units (10
            seconds). This is per event."
        minUnitsPerCycle:
          type: string
          description: Optional. the minimum number of units to rate per cycle
        maxUnitsPerCycle:
          type: string
          description: Optional. the maximum number of units to rate per cycle
        rateDecimal:
          allOf:
          - $ref: '#/components/schemas/google.type.Decimal'
          description: Required. the amount to rate each unit
      description: "BasicUnitConfig represents basic config for a rating module that\n
        rates based on event units"
    services.billing.entities.v1alpha2.Invoice:
      type: object
      properties:
        billingCycle:
          type: string
        createTime:
          type: string
          format: date-time
        items:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha2.InvoiceItem'
        downloadUrl:
          type: string
    services.billing.entities.v1alpha2.InvoiceItem:
      type: object
      properties:
        clientId:
          type: string
        product:
          type: integer
          format: enum
        description:
          type: string
        date:
          type: string
          format: date-time
        price:
          type: number
          format: double
        columns:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha2.InvoiceItemColumn'
        ratedAmount:
          $ref: '#/components/schemas/google.type.Decimal'
        productId:
          type: string
      description: InvoiceItem represents a single line item on an invoice.
    services.billing.entities.v1alpha2.InvoiceItemColumn:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      description: InvoiceItemColumn represents a single column on an invoice item.
    services.billing.entities.v1alpha2.MatchingConfig:
      type: object
      properties:
        name:
          type: string
          description: the name of the matching configuration.
        countryPrefix:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.MatchingConfigCountryPrefix'
      description: "MatchingConfig represents the configuration for matching\n an
        event to a rate definition."
    services.billing.entities.v1alpha2.MatchingConfigCountryPrefix:
      type: object
      properties:
        countryCode:
          type: integer
          description: The country code to match.
          format: int32
        prefixes:
          type: array
          items:
            type: string
          description: "The list of prefixes (if any) to match after successfully
            matching\n the country code."
      description: "MatchingConfigCountryPrefix represents the configuration for matching\n
        an event to a rate definition using the country code and a set of\n prefixes.
        The longest prefix match is used."
    services.billing.entities.v1alpha2.RateDefinition:
      type: object
      properties:
        rateDefinitionId:
          type: string
        eventType:
          type: integer
          format: enum
        configType:
          type: integer
          format: enum
        matchingRule:
          type: integer
          format: enum
        matchingConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.MatchingConfig'
        matchingSha:
          type: string
          description: a hash of the matching rule and config
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        deleteTime:
          type: string
          format: date-time
        effectiveTime:
          type: string
          description: the time this rate definition becomes effective (or now if
            not set)
          format: date-time
        config:
          allOf:
          - $ref: '#/components/schemas/services.billing.entities.v1alpha2.RateDefinitionConfig'
          description: the configuration for this definition
        groupId:
          type: string
          description: a group identifier for this rate definition; optional
        configSha:
          type: string
          description: a hash of the config
        threadId:
          type: string
          description: "the thread id for this rate definition; generated by the system\n
            on creation of a default rate definition, otherwise needs to be\n set
            on create requests."
    services.billing.entities.v1alpha2.RateDefinitionConfig:
      type: object
      properties:
        agentSeats:
          allOf:
          - $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
          description: omni (1000 - 1999)
        connectedInboxPoll:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        connectedInboxCreated:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        agentMessageChat:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        agentMessageChatSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        agentMessageChatUnits:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        agentMessageChatSizeTotal:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        agentMessageEmail:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        agentMessageEmailSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        agentMessageEmailUnits:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        agentMessageEmailSizeTotal:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        agentMessageSms:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        agentMessageSmsSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        agentMessageSmsUnits:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        agentMessageSmsSizeTotal:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        managerMessageChat:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        managerMessageChatSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        managerMessageChatUnits:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        managerMessageChatSizeTotal:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        managerMessageEmail:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        managerMessageEmailSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        managerMessageEmailUnits:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        managerMessageEmailSizeTotal:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        managerMessageSms:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        managerMessageSmsSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        managerMessageSmsUnits:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        managerMessageSmsSizeTotal:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        systemMessageChat:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        systemMessageChatSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        systemMessageChatUnits:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        systemMessageChatSizeTotal:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        systemMessageEmail:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        systemMessageEmailSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        systemMessageEmailUnits:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        systemMessageEmailSizeTotal:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        systemMessageSms:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        systemMessageSmsSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        systemMessageSmsUnits:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        systemMessageSmsSizeTotal:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        customerMessageChat:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        customerMessageChatSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        customerMessageChatUnits:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        customerMessageChatSizeTotal:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        customerMessageEmail:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        customerMessageEmailSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        customerMessageEmailUnits:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        customerMessageEmailSizeTotal:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        customerMessageSms:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        customerMessageSmsSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        customerMessageSmsUnits:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
        customerMessageSmsSizeTotal:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicUnitConfig'
        complianceRndQuery:
          allOf:
          - $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
          description: compliance configs (2000 - 2999)
        complianceRndQueryCached:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.BasicConfig'
    services.billing.entities.v1alpha2.RateSnapshot:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        rates:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha2.RateDefinition'
        userId:
          type: string
      description: RateSnapshot represents a snapshot of rates for a given time period.
    services.billing.entities.v1alpha3.BasicConfig:
      type: object
      properties:
        rate:
          allOf:
          - $ref: '#/components/schemas/google.type.Decimal'
          description: Required. the amount to rate a single event
        precision:
          type: integer
          description: "Optional. the precision to use (in decimal places) when calculating\n
            the rate. For example, a rate of 1.234 with a precision of 2 would\n be
            billed as 1.23. If not set, will round to nearest whole number."
          format: int32
      description: "BasicConfig represents the basic config for a rating module when\n
        there is no other data needed"
    services.billing.entities.v1alpha3.BasicUnitConfig:
      type: object
      properties:
        unitSize:
          type: string
          description: "Required. the size of an individual unit. For example, a unit\n
            size of 300 (with bytes as a unit of measurement) and an event\n of size
            400 bytes will get billed as if it were 2 units."
        minUnits:
          type: string
          description: "Optional. the minimum number of units to rate; for example,
            a\n unit size of 5 seconds and a min_units of 2 would mean that\n any
            event less than 10 seconds would be billed as if it were\n two units (10
            seconds). This is per event."
        maxUnits:
          type: string
          description: "Optional. the maximum number of units to rate; for example,
            a\n unit size of 5 seconds and a max_units of 2 would mean that\n any
            event more than 10 seconds would be billed as if it were\n two units (10
            seconds). This is per event."
        rate:
          allOf:
          - $ref: '#/components/schemas/google.type.Decimal'
          description: Required. the amount to rate each unit
        precision:
          type: integer
          description: "Optional. the precision to use (in decimal places) when calculating\n
            the rate. For example, a rate of 1.234 with a precision of 2 would\n be
            billed as 1.23. If not set, will round to nearest whole number."
          format: int32
      description: "BasicUnitConfig represents basic config for a rating module that\n
        rates based on event units"
    services.billing.entities.v1alpha3.BillingPlan:
      type: object
      properties:
        billingPlanId:
          type: string
        title:
          type: string
        type:
          type: integer
          format: enum
        isDraft:
          type: boolean
        startTime:
          type: string
          format: date-time
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        deleteTime:
          type: string
          format: date-time
        userId:
          type: string
    services.billing.entities.v1alpha3.CountryCodePrefix:
      type: object
      properties:
        countryCode:
          type: integer
          description: The country code to match.
          format: int32
        prefixes:
          type: array
          items:
            type: string
          description: "The list of prefixes (if any) to match after successfully\n
            matching the country code."
    services.billing.entities.v1alpha3.Invoice:
      type: object
      properties:
        billingCycle:
          type: string
        createTime:
          type: string
          format: date-time
        rows:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha3.InvoiceRow'
        downloadUrl:
          type: string
    services.billing.entities.v1alpha3.InvoiceColumn:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    services.billing.entities.v1alpha3.InvoiceRow:
      type: object
      properties:
        clientId:
          type: string
        productId:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
        columns:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha3.InvoiceColumn'
        ratedAmount:
          $ref: '#/components/schemas/google.type.Decimal'
    services.billing.entities.v1alpha3.OmniSmsConfig:
      type: object
      properties:
        prefixes:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.CountryCodePrefix'
        config:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
    services.billing.entities.v1alpha3.OmniSmsUnitConfig:
      type: object
      properties:
        prefixes:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.CountryCodePrefix'
        config:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
    services.billing.entities.v1alpha3.Product:
      type: object
      properties:
        categoryOne:
          type: string
        categoryTwo:
          type: string
        categoryThree:
          type: string
        productName:
          type: string
    services.billing.entities.v1alpha3.ProductConfig:
      type: object
      properties:
        communicationsOmniChatAgentMessageUnit:
          allOf:
          - $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
          description: "communications (1000-9999)\n omni (1000 - 1999)"
        communicationsOmniChatAgentAttachment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniChatAgentAccumulatedAttachments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniChatCustomerMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
        communicationsOmniChatCustomerAttachment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniChatCustomerAccumulatedAttachments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniChatManagerMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
        communicationsOmniChatManagerAttachment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniChatManagerAccumulatedAttachments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniChatSystemMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
        communicationsOmniChatSystemAttachment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniChatSystemAccumulatedAttachments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniEmailAgentMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
        communicationsOmniEmailAgentSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniEmailAgentAccumulatedSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniEmailCustomerMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
        communicationsOmniEmailCustomerSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniEmailCustomerAccumulatedSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniEmailManagerMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
        communicationsOmniEmailManagerSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniEmailManagerAccumulatedSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniEmailSystemMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
        communicationsOmniEmailSystemSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniEmailSystemAccumulatedSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicUnitConfig'
        communicationsOmniSmsAgentMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.OmniSmsConfig'
        communicationsOmniSmsAgentAttatchment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.OmniSmsUnitConfig'
        communicationsOmniSmsAgentAccumulatedAttatchments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.OmniSmsUnitConfig'
        communicationsOmniSmsCustomerMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.OmniSmsConfig'
        communicationsOmniSmsCustomerAttatchment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.OmniSmsUnitConfig'
        communicationsOmniSmsCustomerAccumulatedAttatchments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.OmniSmsUnitConfig'
        communicationsOmniSmsManagerMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.OmniSmsConfig'
        communicationsOmniSmsManagerAttatchment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.OmniSmsUnitConfig'
        communicationsOmniSmsManagerAccumulatedAttatchments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.OmniSmsUnitConfig'
        communicationsOmniSmsSystemMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.OmniSmsConfig'
        communicationsOmniSmsSystemAttatchment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.OmniSmsUnitConfig'
        communicationsOmniSmsSystemAccumulatedAttatchments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.OmniSmsUnitConfig'
        communicationsOmniAgentSeats:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
        communicationsOmniResourcesConnectedInboxPoll:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
        communicationsOmniResourcesConnectedInboxCreated:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
        dataManagementComplianceComplianceRndQuery:
          allOf:
          - $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
          description: "data management (10000 - 19999)\n compliance (10000 - 10999)"
        dataManagementComplianceComplianceRndQueryCached:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BasicConfig'
    services.billing.entities.v1alpha3.RateDefinition:
      type: object
      properties:
        rateDefinitionId:
          type: string
        skuId:
          type: string
        product:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.Product'
        config:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.ProductConfig'
        isDraft:
          type: boolean
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        deleteTime:
          type: string
          format: date-time
    services.billing.entities.v1alpha4.BasicConfig:
      type: object
      properties:
        rate:
          allOf:
          - $ref: '#/components/schemas/google.type.Decimal'
          description: Required. the amount to rate a single event
        precision:
          type: integer
          description: "Optional. the precision to use (in decimal places) when calculating\n
            the rate. For example, a rate of 1.234 with a precision of 2 would\n be
            billed as 1.23. If not set, will round to nearest whole number."
          format: int32
      description: "BasicConfig represents the basic config for a rating module when\n
        there is no other data needed"
    services.billing.entities.v1alpha4.BasicUnitConfig:
      type: object
      properties:
        unitSize:
          type: string
          description: "Required. the size of an individual unit. For example, a unit\n
            size of 300 (with bytes as a unit of measurement) and an event\n of size
            400 bytes will get billed as if it were 2 units."
        minUnits:
          type: string
          description: "Optional. the minimum number of units to rate; for example,
            a\n unit size of 5 seconds and a min_units of 2 would mean that\n any
            event less than 10 seconds would be billed as if it were\n two units (10
            seconds). This is per event."
        maxUnits:
          type: string
          description: "Optional. the maximum number of units to rate; for example,
            a\n unit size of 5 seconds and a max_units of 2 would mean that\n any
            event more than 10 seconds would be billed as if it were\n two units (10
            seconds). This is per event."
        rate:
          allOf:
          - $ref: '#/components/schemas/google.type.Decimal'
          description: Required. the amount to rate each unit
        precision:
          type: integer
          description: "Optional. the precision to use (in decimal places) when calculating\n
            the rate. For example, a rate of 1.234 with a precision of 2 would\n be
            billed as 1.23. If not set, will round to nearest whole number."
          format: int32
      description: "BasicUnitConfig represents basic config for a rating module that\n
        rates based on event units"
    services.billing.entities.v1alpha4.BillingPlan:
      type: object
      properties:
        billingPlanId:
          type: string
        title:
          type: string
        type:
          type: integer
          format: enum
        isDraft:
          type: boolean
        startTime:
          type: string
          format: date-time
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        deleteTime:
          type: string
          format: date-time
        userId:
          type: string
        orgId:
          type: string
          description: "Optional. if set, this billing plan is for the org, and as\n
            a draft can only be applied to that org."
    services.billing.entities.v1alpha4.BillingTag:
      type: object
      properties:
        billingTagId:
          type: string
        name:
          type: string
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        deleteTime:
          type: string
          format: date-time
        category:
          type: string
        billingCategory:
          type: integer
          format: enum
    services.billing.entities.v1alpha4.CountryCodePrefix:
      type: object
      properties:
        countryCode:
          type: integer
          description: The country code to match.
          format: int32
        prefixes:
          type: array
          items:
            type: string
          description: "The list of prefixes (if any) to match after successfully\n
            matching the country code."
        matchingRuleId:
          type: string
          description: The id of the matching rule.
        name:
          type: string
    services.billing.entities.v1alpha4.Invoice:
      type: object
      properties:
        billingCycle:
          type: string
        createTime:
          type: string
          format: date-time
        rows:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha4.InvoiceRow'
        downloadUrl:
          type: string
    services.billing.entities.v1alpha4.InvoiceColumn:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    services.billing.entities.v1alpha4.InvoiceRow:
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha4.InvoiceColumn'
    services.billing.entities.v1alpha4.MatchingConfig:
      type: object
      properties:
        countryCodePrefix:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.CountryCodePrefix'
      description: MatchingConfig -
    services.billing.entities.v1alpha4.MatchingRule:
      type: object
      properties:
        matchingRuleId:
          type: string
        config:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.ProductConfig'
        createTime:
          type: string
          format: date-time
        deleteTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        ruleConfig:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.MatchingConfig'
        countryCodePrefix:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.CountryCodePrefix'
    services.billing.entities.v1alpha4.OmniSmsConfig:
      type: object
      properties:
        name:
          type: string
        prefixes:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.CountryCodePrefix'
        config:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
    services.billing.entities.v1alpha4.OmniSmsUnitConfig:
      type: object
      properties:
        name:
          type: string
        prefixes:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.CountryCodePrefix'
        config:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
    services.billing.entities.v1alpha4.ProductConfig:
      type: object
      properties:
        communicationsOmniChatAgentMessageUnit:
          allOf:
          - $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
          description: "communications (1000-9999)\n omni (1000 - 1999)"
        communicationsOmniChatAgentAttachment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniChatAgentAccumulatedAttachments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniChatCustomerMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
        communicationsOmniChatCustomerAttachment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniChatCustomerAccumulatedAttachments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniChatManagerMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
        communicationsOmniChatManagerAttachment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniChatManagerAccumulatedAttachments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniChatSystemMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
        communicationsOmniChatSystemAttachment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniChatSystemAccumulatedAttachments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniEmailAgentMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
        communicationsOmniEmailAgentSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniEmailAgentAccumulatedSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniEmailCustomerMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
        communicationsOmniEmailCustomerSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniEmailCustomerAccumulatedSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniEmailManagerMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
        communicationsOmniEmailManagerSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniEmailManagerAccumulatedSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniEmailSystemMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
        communicationsOmniEmailSystemSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniEmailSystemAccumulatedSize:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicUnitConfig'
        communicationsOmniSmsAgentMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.OmniSmsConfig'
        communicationsOmniSmsAgentAttachment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.OmniSmsUnitConfig'
        communicationsOmniSmsAgentAccumulatedAttachments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.OmniSmsUnitConfig'
        communicationsOmniSmsCustomerMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.OmniSmsConfig'
        communicationsOmniSmsCustomerAttachment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.OmniSmsUnitConfig'
        communicationsOmniSmsCustomerAccumulatedAttachments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.OmniSmsUnitConfig'
        communicationsOmniSmsManagerMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.OmniSmsConfig'
        communicationsOmniSmsManagerAttachment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.OmniSmsUnitConfig'
        communicationsOmniSmsManagerAccumulatedAttachments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.OmniSmsUnitConfig'
        communicationsOmniSmsSystemMessageUnit:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.OmniSmsConfig'
        communicationsOmniSmsSystemAttachment:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.OmniSmsUnitConfig'
        communicationsOmniSmsSystemAccumulatedAttachments:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.OmniSmsUnitConfig'
        communicationsOmniAgentSeats:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
        communicationsOmniResourcesConnectedInboxPoll:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
        communicationsOmniResourcesConnectedInboxCreated:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
        dataManagementComplianceComplianceRndQuery:
          allOf:
          - $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
          description: "data management (10000 - 19999)\n compliance (10000 - 10999)"
        dataManagementComplianceComplianceRndQueryCached:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
        workforceEngagementWorkforceOptimizationVoiceAnalyticsCallTranscripts:
          allOf:
          - $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
          description: vanalytics (20000 - 21000)
        workforceEngagementWorkforceOptimizationVoiceAnalyticsAccumulatedCallTranscripts:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BasicConfig'
    services.billing.entities.v1alpha4.RateDefinition:
      type: object
      properties:
        rateDefinitionId:
          type: string
        skuId:
          type: string
        billingTag:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingTag'
        config:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.ProductConfig'
        isDraft:
          type: boolean
        isOverwrite:
          type: boolean
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        deleteTime:
          type: string
          format: date-time
        billingTagId:
          type: string
    services.billing.v1alpha1.CommitBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha1.CommitBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha1.CommitDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha1.CommitDefaultBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha1.CreateBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BillingPlan'
    services.billing.v1alpha1.CreateBillingPlanResponse:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha1.CreateDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BillingPlan'
    services.billing.v1alpha1.CreateDefaultBillingPlanResponse:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha1.CreateDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.RateDefinition'
    services.billing.v1alpha1.CreateDefaultRateDefinitionResponse:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha1.CreateInvoiceRequest:
      type: object
      properties:
        invoiceId:
          type: string
        invoice:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.Invoice'
    services.billing.v1alpha1.CreateInvoiceResponse:
      type: object
      properties:
        invoiceId:
          type: string
    services.billing.v1alpha1.CreateRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.RateDefinition'
    services.billing.v1alpha1.CreateRateDefinitionResponse:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha1.DeleteBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha1.DeleteBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha1.DeleteDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha1.DeleteDefaultBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha1.DeleteDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha1.DeleteDefaultRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha1.DeleteInvoiceRequest:
      type: object
      properties:
        invoiceId:
          type: string
    services.billing.v1alpha1.DeleteInvoiceResponse:
      type: object
      properties: {}
    services.billing.v1alpha1.DeleteRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha1.DeleteRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha1.DuplicateBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BillingPlan'
    services.billing.v1alpha1.DuplicateBillingPlanResponse:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha1.DuplicateDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BillingPlan'
    services.billing.v1alpha1.DuplicateDefaultBillingPlanResponse:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha1.ExportInvoiceRequest:
      type: object
      properties:
        invoiceId:
          type: string
        format:
          type: integer
          format: enum
        invoiceDate:
          type: string
          format: date-time
    services.billing.v1alpha1.ExportInvoiceResponse:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.Invoice'
    services.billing.v1alpha1.GetActiveBillingPlanRequest:
      type: object
      properties:
        orgId:
          type: string
        effectiveTime:
          type: string
          format: date-time
    services.billing.v1alpha1.GetActiveBillingPlanResponse:
      type: object
      properties:
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BillingPlan'
    services.billing.v1alpha1.GetBillingPlanHistoryRequest:
      type: object
      properties:
        orgId:
          type: string
        groupIds:
          type: array
          items:
            type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    services.billing.v1alpha1.GetBillingPlanHistoryResponse:
      type: object
      properties:
        history:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha1.BillingPlanSnapshot'
    services.billing.v1alpha1.GetBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha1.GetBillingPlanResponse:
      type: object
      properties:
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BillingPlan'
    services.billing.v1alpha1.GetInvoiceRequest:
      type: object
      properties:
        invoiceId:
          type: string
    services.billing.v1alpha1.GetInvoiceResponse:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.Invoice'
    services.billing.v1alpha1.GetRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha1.GetRateDefinitionResponse:
      type: object
      properties:
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.RateDefinition'
    services.billing.v1alpha1.ListBillingPlansRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha1.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha1.Page'
    services.billing.v1alpha1.ListBillingPlansResponse:
      type: object
      properties:
        billingPlans:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha1.BillingPlan'
        token:
          type: string
    services.billing.v1alpha1.ListInvoicesRequest:
      type: object
      properties:
        invoiceId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha1.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha1.Page'
    services.billing.v1alpha1.ListInvoicesResponse:
      type: object
      properties:
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha1.Invoice'
        token:
          type: string
    services.billing.v1alpha1.ListRateDefinitionsRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha1.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha1.Page'
    services.billing.v1alpha1.ListRateDefinitionsResponse:
      type: object
      properties:
        rateDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha1.RateDefinition'
        token:
          type: string
    services.billing.v1alpha1.Page:
      type: object
      properties:
        limit:
          type: string
        token:
          type: string
    services.billing.v1alpha1.Sort:
      type: object
      properties:
        key:
          type: string
        direction:
          type: integer
          format: enum
    services.billing.v1alpha1.UpdateBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BillingPlan'
        updateFields:
          type: string
          format: field-mask
    services.billing.v1alpha1.UpdateBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha1.UpdateDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.BillingPlan'
        updateFields:
          type: string
          format: field-mask
    services.billing.v1alpha1.UpdateDefaultBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha1.UpdateDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.RateDefinition'
        updateFields:
          type: string
          format: field-mask
    services.billing.v1alpha1.UpdateDefaultRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha1.UpdateInvoiceRequest:
      type: object
      properties:
        invoiceId:
          type: string
        invoice:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.Invoice'
        updateFields:
          type: string
          format: field-mask
    services.billing.v1alpha1.UpdateInvoiceResponse:
      type: object
      properties: {}
    services.billing.v1alpha1.UpdateRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha1.RateDefinition'
        updateFields:
          type: string
          format: field-mask
    services.billing.v1alpha1.UpdateRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha2.CreateDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.RateDefinition'
    services.billing.v1alpha2.CreateDefaultRateDefinitionResponse:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha2.CreateDefaultRateDefinitionsRequest:
      type: object
      properties:
        rates:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha2.CreateDefaultRateDefinitionRequest'
    services.billing.v1alpha2.CreateDefaultRateDefinitionsResponse:
      type: object
      properties:
        rates:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha2.CreateDefaultRateDefinitionResponse'
    services.billing.v1alpha2.CreateRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.RateDefinition'
        defaultRateDefinitionId:
          type: string
    services.billing.v1alpha2.CreateRateDefinitionResponse:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha2.CreateRateDefinitionsRequest:
      type: object
      properties:
        rates:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha2.CreateRateDefinitionRequest'
    services.billing.v1alpha2.CreateRateDefinitionsResponse:
      type: object
      properties:
        rates:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha2.CreateRateDefinitionResponse'
    services.billing.v1alpha2.DeleteDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha2.DeleteDefaultRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha2.DeleteDefaultRateDefinitionsRequest:
      type: object
      properties:
        rateDefinitionIds:
          type: array
          items:
            type: string
    services.billing.v1alpha2.DeleteDefaultRateDefinitionsResponse:
      type: object
      properties: {}
    services.billing.v1alpha2.DeleteRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha2.DeleteRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha2.DeleteRateDefinitionsRequest:
      type: object
      properties:
        rateDefinitionIds:
          type: array
          items:
            type: string
    services.billing.v1alpha2.DeleteRateDefinitionsResponse:
      type: object
      properties: {}
    services.billing.v1alpha2.ExportInvoiceRequest:
      type: object
      properties:
        format:
          type: integer
          format: enum
        invoiceDate:
          type: string
          format: date-time
    services.billing.v1alpha2.ExportInvoiceResponse:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.Invoice'
    services.billing.v1alpha2.GetRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha2.GetRateDefinitionResponse:
      type: object
      properties:
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.RateDefinition'
    services.billing.v1alpha2.GetRateHistoryRequest:
      type: object
      properties:
        orgId:
          type: string
        groupIds:
          type: array
          items:
            type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    services.billing.v1alpha2.GetRateHistoryResponse:
      type: object
      properties:
        snapshots:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha2.RateSnapshot'
    services.billing.v1alpha2.ListActiveRateDefinitionsRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha2.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha2.Page'
    services.billing.v1alpha2.ListActiveRateDefinitionsResponse:
      type: object
      properties:
        rateDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha2.RateDefinition'
        token:
          type: string
    services.billing.v1alpha2.ListRateDefinitionsRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha2.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha2.Page'
    services.billing.v1alpha2.ListRateDefinitionsResponse:
      type: object
      properties:
        rateDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha2.RateDefinition'
        token:
          type: string
    services.billing.v1alpha2.Page:
      type: object
      properties:
        limit:
          type: string
        token:
          type: string
    services.billing.v1alpha2.Sort:
      type: object
      properties:
        key:
          type: string
        direction:
          type: integer
          format: enum
    services.billing.v1alpha2.UpdateDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.RateDefinition'
        updateFields:
          type: string
          format: field-mask
    services.billing.v1alpha2.UpdateDefaultRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha2.UpdateRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha2.RateDefinition'
        updateFields:
          type: string
          format: field-mask
    services.billing.v1alpha2.UpdateRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha3.ApplyBillingPlanDraftRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        startTime:
          type: string
          format: date-time
        orgIds:
          type: array
          items:
            type: string
    services.billing.v1alpha3.ApplyBillingPlanDraftResponse:
      type: object
      properties:
        billingPlanIds:
          type: array
          items:
            type: string
    services.billing.v1alpha3.ApplyDefaultBillingPlanDraftRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        startTime:
          type: string
          format: date-time
        orgIds:
          type: array
          items:
            type: string
    services.billing.v1alpha3.ApplyDefaultBillingPlanDraftResponse:
      type: object
      properties:
        billingPlanIds:
          type: array
          items:
            type: string
    services.billing.v1alpha3.CreateBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BillingPlan'
    services.billing.v1alpha3.CreateBillingPlanResponse:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha3.CreateDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BillingPlan'
    services.billing.v1alpha3.CreateDefaultBillingPlanResponse:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha3.CreateDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.RateDefinition'
    services.billing.v1alpha3.CreateDefaultRateDefinitionResponse:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha3.CreateRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.RateDefinition'
    services.billing.v1alpha3.CreateRateDefinitionResponse:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha3.DeleteBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha3.DeleteBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha3.DeleteDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha3.DeleteDefaultBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha3.DeleteDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha3.DeleteDefaultRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha3.DeleteRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha3.DeleteRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha3.ExportInvoiceRequest:
      type: object
      properties:
        format:
          type: integer
          format: enum
        invoiceDate:
          type: string
          format: date-time
    services.billing.v1alpha3.ExportInvoiceResponse:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.Invoice'
    services.billing.v1alpha3.GetBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha3.GetBillingPlanResponse:
      type: object
      properties:
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BillingPlan'
    services.billing.v1alpha3.GetDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha3.GetDefaultBillingPlanResponse:
      type: object
      properties:
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BillingPlan'
    services.billing.v1alpha3.GetDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha3.GetDefaultRateDefinitionResponse:
      type: object
      properties:
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.RateDefinition'
    services.billing.v1alpha3.GetRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha3.GetRateDefinitionResponse:
      type: object
      properties:
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.RateDefinition'
    services.billing.v1alpha3.ListBillingPlansRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha3.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha3.Page'
    services.billing.v1alpha3.ListBillingPlansResponse:
      type: object
      properties:
        billingPlans:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha3.BillingPlan'
        token:
          type: string
    services.billing.v1alpha3.ListDefaultBillingPlansRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha3.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha3.Page'
    services.billing.v1alpha3.ListDefaultBillingPlansResponse:
      type: object
      properties:
        billingPlans:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha3.BillingPlan'
        token:
          type: string
    services.billing.v1alpha3.ListDefaultRateDefinitionsRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha3.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha3.Page'
    services.billing.v1alpha3.ListDefaultRateDefinitionsResponse:
      type: object
      properties:
        rateDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha3.RateDefinition'
        token:
          type: string
    services.billing.v1alpha3.ListProductsRequest:
      type: object
      properties: {}
    services.billing.v1alpha3.ListProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha3.Product'
    services.billing.v1alpha3.ListRateDefinitionsRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha3.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha3.Page'
    services.billing.v1alpha3.ListRateDefinitionsResponse:
      type: object
      properties:
        rateDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha3.RateDefinition'
        token:
          type: string
    services.billing.v1alpha3.Page:
      type: object
      properties:
        limit:
          type: string
        token:
          type: string
    services.billing.v1alpha3.Sort:
      type: object
      properties:
        key:
          type: string
        direction:
          type: integer
          format: enum
    services.billing.v1alpha3.UpdateBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BillingPlan'
        updateMask:
          type: string
          format: field-mask
    services.billing.v1alpha3.UpdateBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha3.UpdateDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.BillingPlan'
        updateMask:
          type: string
          format: field-mask
    services.billing.v1alpha3.UpdateDefaultBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha3.UpdateDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.RateDefinition'
        updateMask:
          type: string
          format: field-mask
    services.billing.v1alpha3.UpdateDefaultRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha3.UpdateRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha3.RateDefinition'
        updateMask:
          type: string
          format: field-mask
    services.billing.v1alpha3.UpdateRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha4.ApplyBillingPlanDraftRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        startTime:
          type: string
          format: date-time
        orgIds:
          type: array
          items:
            type: string
    services.billing.v1alpha4.ApplyBillingPlanDraftResponse:
      type: object
      properties:
        billingPlanIds:
          type: array
          items:
            type: string
    services.billing.v1alpha4.ApplyDefaultBillingPlanDraftRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        startTime:
          type: string
          format: date-time
        orgIds:
          type: array
          items:
            type: string
    services.billing.v1alpha4.ApplyDefaultBillingPlanDraftResponse:
      type: object
      properties:
        billingPlanIds:
          type: array
          items:
            type: string
    services.billing.v1alpha4.CloneBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        title:
          type: string
    services.billing.v1alpha4.CloneBillingPlanResponse:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha4.CloneDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        title:
          type: string
    services.billing.v1alpha4.CloneDefaultBillingPlanResponse:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha4.CreateBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingPlan'
    services.billing.v1alpha4.CreateBillingPlanResponse:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha4.CreateBillingTagRequest:
      type: object
      properties:
        billingTagId:
          type: string
        billingTag:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingTag'
    services.billing.v1alpha4.CreateBillingTagResponse:
      type: object
      properties:
        billingTagId:
          type: string
    services.billing.v1alpha4.CreateDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingPlan'
    services.billing.v1alpha4.CreateDefaultBillingPlanResponse:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha4.CreateDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.RateDefinition'
    services.billing.v1alpha4.CreateDefaultRateDefinitionResponse:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha4.CreateMatchingRuleRequest:
      type: object
      properties:
        matchingRuleId:
          type: string
        matchingRule:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.MatchingRule'
    services.billing.v1alpha4.CreateMatchingRuleResponse:
      type: object
      properties:
        matchingRuleId:
          type: string
    services.billing.v1alpha4.CreateRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.RateDefinition'
    services.billing.v1alpha4.CreateRateDefinitionResponse:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha4.DeleteBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha4.DeleteBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha4.DeleteBillingTagRequest:
      type: object
      properties:
        billingTagId:
          type: string
    services.billing.v1alpha4.DeleteBillingTagResponse:
      type: object
      properties: {}
    services.billing.v1alpha4.DeleteDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha4.DeleteDefaultBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha4.DeleteDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha4.DeleteDefaultRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha4.DeleteMatchingRuleRequest:
      type: object
      properties:
        matchingRuleId:
          type: string
    services.billing.v1alpha4.DeleteMatchingRuleResponse:
      type: object
      properties: {}
    services.billing.v1alpha4.DeleteRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha4.DeleteRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha4.ExportInvoiceRequest:
      type: object
      properties:
        format:
          type: integer
          format: enum
        invoiceDate:
          type: string
          format: date-time
    services.billing.v1alpha4.ExportInvoiceResponse:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.Invoice'
    services.billing.v1alpha4.GetBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha4.GetBillingPlanResponse:
      type: object
      properties:
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingPlan'
    services.billing.v1alpha4.GetBillingTagRequest:
      type: object
      properties:
        billingTagId:
          type: string
    services.billing.v1alpha4.GetBillingTagResponse:
      type: object
      properties:
        billingTag:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingTag'
    services.billing.v1alpha4.GetDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
    services.billing.v1alpha4.GetDefaultBillingPlanResponse:
      type: object
      properties:
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingPlan'
    services.billing.v1alpha4.GetDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha4.GetDefaultRateDefinitionResponse:
      type: object
      properties:
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.RateDefinition'
    services.billing.v1alpha4.GetMatchingRuleRequest:
      type: object
      properties:
        matchingRuleId:
          type: string
    services.billing.v1alpha4.GetMatchingRuleResponse:
      type: object
      properties:
        matchingRule:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.MatchingRule'
    services.billing.v1alpha4.GetRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
    services.billing.v1alpha4.GetRateDefinitionResponse:
      type: object
      properties:
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.RateDefinition'
    services.billing.v1alpha4.ListBillingPlansRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha4.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha4.Page'
    services.billing.v1alpha4.ListBillingPlansResponse:
      type: object
      properties:
        billingPlans:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingPlan'
        token:
          type: string
    services.billing.v1alpha4.ListBillingTagsRequest:
      type: object
      properties:
        billingTagId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha4.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha4.Page'
    services.billing.v1alpha4.ListBillingTagsResponse:
      type: object
      properties:
        billingTags:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingTag'
        token:
          type: string
    services.billing.v1alpha4.ListDefaultBillingPlansRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha4.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha4.Page'
    services.billing.v1alpha4.ListDefaultBillingPlansResponse:
      type: object
      properties:
        billingPlans:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingPlan'
        token:
          type: string
    services.billing.v1alpha4.ListDefaultRateDefinitionsRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha4.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha4.Page'
    services.billing.v1alpha4.ListDefaultRateDefinitionsResponse:
      type: object
      properties:
        rateDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha4.RateDefinition'
        token:
          type: string
    services.billing.v1alpha4.ListMatchingRulesRequest:
      type: object
      properties:
        matchingRuleId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha4.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha4.Page'
    services.billing.v1alpha4.ListMatchingRulesResponse:
      type: object
      properties:
        matchingRules:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha4.MatchingRule'
        token:
          type: string
    services.billing.v1alpha4.ListRateDefinitionsRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        filter:
          type: string
        fields:
          type: string
          format: field-mask
        sort:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.v1alpha4.Sort'
        page:
          $ref: '#/components/schemas/services.billing.v1alpha4.Page'
    services.billing.v1alpha4.ListRateDefinitionsResponse:
      type: object
      properties:
        rateDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/services.billing.entities.v1alpha4.RateDefinition'
        token:
          type: string
    services.billing.v1alpha4.Page:
      type: object
      properties:
        limit:
          type: string
        token:
          type: string
    services.billing.v1alpha4.Sort:
      type: object
      properties:
        key:
          type: string
        direction:
          type: integer
          format: enum
    services.billing.v1alpha4.UpdateBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingPlan'
        updateMask:
          type: string
          format: field-mask
    services.billing.v1alpha4.UpdateBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha4.UpdateBillingTagRequest:
      type: object
      properties:
        billingTagId:
          type: string
        billingTag:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingTag'
        updateMask:
          type: string
          format: field-mask
    services.billing.v1alpha4.UpdateBillingTagResponse:
      type: object
      properties: {}
    services.billing.v1alpha4.UpdateDefaultBillingPlanRequest:
      type: object
      properties:
        billingPlanId:
          type: string
        billingPlan:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.BillingPlan'
        updateMask:
          type: string
          format: field-mask
    services.billing.v1alpha4.UpdateDefaultBillingPlanResponse:
      type: object
      properties: {}
    services.billing.v1alpha4.UpdateDefaultRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.RateDefinition'
        updateMask:
          type: string
          format: field-mask
    services.billing.v1alpha4.UpdateDefaultRateDefinitionResponse:
      type: object
      properties: {}
    services.billing.v1alpha4.UpdateMatchingRuleRequest:
      type: object
      properties:
        matchingRuleId:
          type: string
        matchingRule:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.MatchingRule'
        updateMask:
          type: string
          format: field-mask
    services.billing.v1alpha4.UpdateMatchingRuleResponse:
      type: object
      properties: {}
    services.billing.v1alpha4.UpdateRateDefinitionRequest:
      type: object
      properties:
        rateDefinitionId:
          type: string
        rateDefinition:
          $ref: '#/components/schemas/services.billing.entities.v1alpha4.RateDefinition'
        updateMask:
          type: string
          format: field-mask
    services.billing.v1alpha4.UpdateRateDefinitionResponse:
      type: object
      properties: {}
    services.omnichannel.asm.entities.v1alpha1.AsmSession:
      type: object
      properties:
        asmSessionSid:
          type: string
          description: asm session sid
        asmSessionStart:
          type: string
          description: time the asm session started
          format: date-time
        asmSessionEnd:
          type: string
          description: time the asm session ended
          format: date-time
        voiceSession:
          allOf:
          - $ref: '#/components/schemas/services.omnichannel.asm.entities.v1alpha1.VoiceSession'
          description: voice session is there is one
    services.omnichannel.asm.entities.v1alpha1.AsmUserDetails:
      type: object
      properties:
        userId:
          type: string
          description: agents user id
        name:
          type: string
          description: agents name
        agentSid:
          type: string
          description: the agents sid
        agentStatus:
          type: integer
          description: enum of agents status
          format: enum
        agentProfileGroupName:
          type: string
          description: agents profile group name
        currentConversationSid:
          type: string
          description: the agents current conversation
        averageCustomerWaitTimeSeconds:
          type: string
          description: time from first customer message to agent response. between
            all conversations.
        averageTimeToRespondSeconds:
          type: string
          description: responste time between all conversations.
        lastEventTime:
          type: string
          description: last event time
          format: date-time
        skills:
          type: object
          additionalProperties:
            type: string
          description: Agents Skills
        asmSessionSid:
          type: string
          description: Asm Session Sid
        events:
          type: array
          items:
            $ref: '#/components/schemas/services.omnichannel.asm.entities.v1alpha1.DashboardAgentResponseEvent'
          description: the list of response events
        loginTime:
          type: string
          description: login time
          format: date-time
    services.omnichannel.asm.entities.v1alpha1.DashboardAgentResponseEvent:
      type: object
      properties:
        responseTimeSeconds:
          type: string
          description: the time it took to respond in seconds
        time:
          type: string
          description: the time of the event
          format: date-time
        isInitialAgentMessage:
          type: boolean
          description: whether or not this was the initial message sent by the agent
      description: The response event information for an agent
    services.omnichannel.asm.entities.v1alpha1.VoiceRegistration:
      type: object
      properties:
        username:
          type: string
          description: The pin used to log in via a connected phone
        password:
          type: string
          description: The pass used to log in via a connected phone
        dialUrl:
          type: string
          description: The extention appended
        pstnPhone:
          type: string
          description: "pstn phone number that will be used for the agent to dial
            in\n if it's an empty string then the voip connection must be used"
        defaultTimeZone:
          type: string
          description: default time zone -
        expirationTimestamp:
          type: string
          description: expiration Timestamp When the registration will expire
    services.omnichannel.asm.entities.v1alpha1.VoiceSession:
      type: object
      properties:
        voiceSessionSid:
          type: string
          description: voice session sid
        voiceSessionStart:
          type: string
          description: time the voice session started
          format: date-time
        voiceSessionEnd:
          type: string
          description: time the voice session ended
          format: date-time
    services.omnichannel.asm.v1alpha1.CreateSessionRequest:
      type: object
      properties: {}
    services.omnichannel.asm.v1alpha1.CreateSessionResponse:
      type: object
      properties:
        asmSession:
          allOf:
          - $ref: '#/components/schemas/services.omnichannel.asm.entities.v1alpha1.AsmSession'
          description: asm session
    services.omnichannel.asm.v1alpha1.DisableVoiceRequest:
      type: object
      properties:
        asmSessionSid:
          type: string
          description: asm session to have voice disabled.
    services.omnichannel.asm.v1alpha1.DisableVoiceResponse:
      type: object
      properties: {}
    services.omnichannel.asm.v1alpha1.EnableVoiceRequest:
      type: object
      properties:
        asmSessionSid:
          type: string
          description: asm session sid to start voice
        huntGroupSid:
          type: string
          description: hunt group voice session will be assigned to
        skills:
          type: object
          additionalProperties:
            type: string
          description: Skills voice session is going to requere.
    services.omnichannel.asm.v1alpha1.EnableVoiceResponse:
      type: object
      properties:
        voiceSession:
          allOf:
          - $ref: '#/components/schemas/services.omnichannel.asm.entities.v1alpha1.VoiceSession'
          description: voice session that was enabled
        voiceRegistration:
          allOf:
          - $ref: '#/components/schemas/services.omnichannel.asm.entities.v1alpha1.VoiceRegistration'
          description: the registration with new voice session
    services.omnichannel.asm.v1alpha1.EndSessionRequest:
      type: object
      properties:
        asmSessionSid:
          type: string
          description: the asm session sid to be ended
        reason:
          type: string
          description: reason why session is ended
    services.omnichannel.asm.v1alpha1.EndSessionResponse:
      type: object
      properties: {}
    services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest:
      type: object
      properties: {}
    services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse:
      type: object
      properties:
        asmSession:
          allOf:
          - $ref: '#/components/schemas/services.omnichannel.asm.entities.v1alpha1.AsmSession'
          description: current asm session
    services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest:
      type: object
      properties: {}
    services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse:
      type: object
      properties:
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/services.omnichannel.asm.entities.v1alpha1.AsmUserDetails'
          description: list of Sessions in the system with enrichments
        asmUserDetails:
          type: array
          items:
            $ref: '#/components/schemas/services.omnichannel.asm.entities.v1alpha1.AsmUserDetails'
    services.omnichannel.asm.v1alpha1.PushEventResponse:
      type: object
      properties: {}
    services.omnichannel.asm.v1alpha1.PushEventsRequest:
      type: object
      properties:
        amsSessionSid:
          type: string
        asmEvents:
          type: array
          items:
            $ref: '#/components/schemas/api.commons.AsmEvent'
        asmSessionSid:
          type: string
    services.omnichannel.oauth.v1alpha1.GetConnectedInboxOAuthURLRequest:
      type: object
      properties:
        authenticationType:
          type: integer
          format: enum
        returningRedirectUri:
          type: string
    services.omnichannel.oauth.v1alpha1.GetConnectedInboxOAuthURLResponse:
      type: object
      properties:
        oauthUrl:
          type: string
    services.omnichannel.tasks.v1alpha1.BulkCancelTasksRequest:
      type: object
      properties:
        filter:
          type: string
          description: "filter follows google's aip 160 and currently supports:\n
            \ - campaign_sid = {int}"
    services.omnichannel.tasks.v1alpha1.BulkCancelTasksResponse:
      type: object
      properties:
        ghostReferenceId:
          type: string
          description: send back ghost notifier reference ID
    services.omnichannel.tasks.v1alpha1.CancelTasksRequest:
      type: object
      properties:
        taskSid:
          type: array
          items:
            type: string
    services.omnichannel.tasks.v1alpha1.CancelTasksResponse:
      type: object
      properties: {}
    services.org.exile_certificate_manager.v1alpha1.AssignExileConfigurationRequest:
      type: object
      properties:
        exileCertificateId:
          type: string
          description: The id of the exile certificate to update.
        exileConfigurationId:
          type: string
          description: The id of the exile configuration to assign.
      description: AssignExileConfigurationRequest is the request for assigning a
        exile configuration
    services.org.exile_certificate_manager.v1alpha1.AssignExileConfigurationResponse:
      type: object
      properties: {}
      description: AssignExileConfigurationResponse is the response for assigning
        a exile configuration
    services.org.exile_certificate_manager.v1alpha1.CreateExileCertificateRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the exile certificate to be created.
        description:
          type: string
          description: The description of the exile certificate to be created.
      description: CreateExileCertificateRequest is the request for creating a exile
        certificate.
    services.org.exile_certificate_manager.v1alpha1.CreateExileCertificateResponse:
      type: object
      properties:
        encodedExileCertificate:
          type: string
          description: The base-64 encoded certificate that was created.
        exileCertificate:
          allOf:
          - $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.ExileCertificate'
          description: The newly created exile certificate.
      description: CreateExileCertificateResponse is the response for creating a exile
        certificate.
    services.org.exile_certificate_manager.v1alpha1.CreateExileConfigurationRequest:
      type: object
      properties:
        name:
          type: string
          description: The configuration name.
        description:
          type: string
          description: The configuration description.
        type:
          type: integer
          description: The type of exile configuration
          format: enum
        parameters:
          type: string
          description: "The parameters of the exile configuration\n See services.org.exile_certificate_manager.v1alpha1.ExileConfiguration\n
            for the required information."
      description: CreateExileConfigurationRequest is the request to create a exile
        configuration
    services.org.exile_certificate_manager.v1alpha1.CreateExileConfigurationResponse:
      type: object
      properties:
        exileConfigurationId:
          type: string
          description: "The id of the exile configuration that was created.\n DEPRECATED:
            Use exile_configuration instead."
        exileConfiguration:
          allOf:
          - $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.ExileConfiguration'
          description: The newly created exile configuration.
      description: CreateExileConfigurationResponse is the response to creating a
        exile configuration
    services.org.exile_certificate_manager.v1alpha1.DeleteExileConfigurationRequest:
      type: object
      properties:
        exileConfigurationId:
          type: string
          description: The id of the exile configuration to delete.
      description: DeleteExileConfigurationRequest is the request to delete a exile
        configuration
    services.org.exile_certificate_manager.v1alpha1.DeleteExileConfigurationResponse:
      type: object
      properties: {}
      description: DeleteExileConfigurationResponse is the response to deleting a
        exile configuration
    services.org.exile_certificate_manager.v1alpha1.ExileCertificate:
      type: object
      properties:
        exileCertificateId:
          type: string
          description: The id of the exile certificate.
        orgId:
          type: string
          description: The id of the organization.
        name:
          type: string
          description: The certificate name.
        description:
          type: string
          description: The certificate description.
        hash:
          type: string
          description: The certificate hash/fingerprint.
        expirationDate:
          type: string
          description: The certificate expiration date.
          format: date-time
        creationDate:
          type: string
          description: The certificate creation date.
          format: date-time
        requestBy:
          type: string
          description: The requestor of the certificate (user ID or automated system)
        revoked:
          type: boolean
          description: Whether or not the certifcate has been revoked
        exileConfigurationId:
          type: string
          description: The id of the exile configuration associated with the certificate.
        renewalInstance:
          type: string
          description: The number of times the certificate has been renewed.
      description: ExileCertificate contains the organization's exile certificate.
    services.org.exile_certificate_manager.v1alpha1.ExileConfiguration:
      type: object
      properties:
        exileConfigurationId:
          type: string
          description: The id of the exile configuration
        orgId:
          type: string
          description: The id of the organization.
        name:
          type: string
          description: The configuration name.
        description:
          type: string
          description: The configuration description.
        type:
          type: integer
          description: The type of exile configuration
          format: enum
        parameters:
          type: string
          description: "The parameters of the exile configuration\n This is a JSON
            string with the following information:\n   1. Database Host\n   2. Database
            URL\n   3. Database Port\n   4. Database Username\n   5. Database Password\n
            \  6. Max Number Connections\n   7. Max Number Exile Jobs"
      description: ExileConfiguration contains the organization's exile configuration
        for its certificates.
    services.org.exile_certificate_manager.v1alpha1.ListExileCertificatesRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: The fields on the entity to include in the response.
          format: field-mask
      description: ListExileCertificatesRequest is the request for listing exile certificate.
    services.org.exile_certificate_manager.v1alpha1.ListExileCertificatesResponse:
      type: object
      properties:
        exileCertificates:
          type: array
          items:
            $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.ExileCertificate'
          description: The list of exile certificate.
      description: ListExileCertificateResponses is the response for listing exile
        certificate.
    services.org.exile_certificate_manager.v1alpha1.ListExileConfigurationsRequest:
      type: object
      properties:
        fieldMask:
          type: string
          description: The fields on the entity to include in the response.
          format: field-mask
      description: ListExileConfigurationsRequest is the request to list exile configurations.
    services.org.exile_certificate_manager.v1alpha1.ListExileConfigurationsResponse:
      type: object
      properties:
        exileConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.ExileConfiguration'
          description: The list of exile configurations.
      description: ListExileConfigurationsResponse is the response to listing exile
        configurations.
    services.org.exile_certificate_manager.v1alpha1.RevokeExileCertificateRequest:
      type: object
      properties:
        exileCertificateId:
          type: string
          description: The id of the exile certificate to delete.
      description: RevokeExileCertificateRequest is the request for revoking a exile
        certificate.
    services.org.exile_certificate_manager.v1alpha1.RevokeExileCertificateResponse:
      type: object
      properties: {}
      description: RevokeExileCertificateResponse is the response for revoking a exile
        certificate.
    services.org.exile_certificate_manager.v1alpha1.UnassignExileConfigurationRequest:
      type: object
      properties:
        exileCertificateId:
          type: string
          description: The id of the exile certificate to update.
      description: UnassignExileConfigurationRequest is the request for unassigning
        a exile configuration
    services.org.exile_certificate_manager.v1alpha1.UnassignExileConfigurationResponse:
      type: object
      properties: {}
      description: UnassignExileConfigurationResponse is the response for unassigning
        a exile configuration
    services.org.exile_certificate_manager.v1alpha1.UpdateExileConfigurationRequest:
      type: object
      properties:
        configuration:
          allOf:
          - $ref: '#/components/schemas/services.org.exile_certificate_manager.v1alpha1.ExileConfiguration'
          description: The exile configuration to update.
        fieldMask:
          type: string
          description: The fields to update.
          format: field-mask
      description: UpdateExileConfigurationRequest is the request to update a exile
        configuration
    services.org.exile_certificate_manager.v1alpha1.UpdateExileConfigurationResponse:
      type: object
      properties: {}
      description: UpdateExileConfigurationResponse is the response to updating a
        exile configuration
    services.org.hunt_groups.v1alpha1.AdminCopyHuntGroupToOrganizationRequest:
      type: object
      properties:
        fromOrganizationId:
          type: string
          description: The id of the source organization where the hunt group is copied
            from.
        toOrganizationId:
          type: string
          description: The id of the destination organization where the hunt group
            is copied to.
        huntGroupSid:
          type: string
          description: The sid of the hunt group to copy.
        newHuntGroupName:
          type: string
          description: The name of the new hunt group.
      description: AdminCopyHuntGroupToOrganizationRequest is the request message
        for the AdminCopyHuntGroupToOrganization rpc.
    services.org.hunt_groups.v1alpha1.AdminCopyHuntGroupToOrganizationResponse:
      type: object
      properties: {}
      description: AdminCopyHuntGroupToOrganizationResponse is the response message
        for the AdminCopyHuntGroupToOrganization rpc.
    services.org.hunt_groups.v1alpha1.AgentStatusOption:
      type: object
      properties:
        agentStatus:
          type: integer
          description: The status of the agent on which the trigger is based
          format: enum
        duration:
          type: string
          description: "The duration of the trigger (in seconds)\n Used for agent
            status: all but Logged In"
        pauseCode:
          allOf:
          - $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.TriggerPauseCode'
          description: "The pause code to use for the trigger\n Use pause code only
            if either system_pause_code or custom_pause_code is set\n Used for agent
            status: Paused"
        callTypes:
          allOf:
          - $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.TriggerCallTypes'
          description: "The call types to use for the trigger\n Used for agent status:
            On Call, Wrap Up"
        scheduledCallbackPresent:
          type: boolean
          description: "Whether to use the scheduled callback for the trigger\n Used
            for agent status: Manual Dial Call"
      description: AgentStatusOption is the status option to use for the trigger
    services.org.hunt_groups.v1alpha1.AgentTrigger:
      type: object
      properties:
        agentTriggerSid:
          type: string
          description: The sid of the agent trigger
        description:
          type: string
          description: The description of the agent trigger
        agentStatusOption:
          allOf:
          - $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.AgentStatusOption'
          description: The agent status option to use for the trigger
        triggerActionOption:
          allOf:
          - $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.TriggerActionOption'
          description: The action option to use for the trigger
      description: AgentTrigger is the entity for a hunt group agent trigger.
    services.org.hunt_groups.v1alpha1.CopyHuntGroupAgentTriggerRequest:
      type: object
      properties:
        fromHuntGroupSid:
          type: string
          description: The sid of the hunt group from which the trigger is copied
        toHuntGroupSid:
          type: string
          description: The sid of the hunt group to which the trigger is copied
        agentTrigger:
          allOf:
          - $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.AgentTrigger'
          description: The agent trigger to copy
      description: CopyHuntGroupAgentTriggerRequest is the request message for the
        CopyHuntGroupAgentTrigger rpc.
    services.org.hunt_groups.v1alpha1.CopyHuntGroupAgentTriggerResponse:
      type: object
      properties: {}
      description: CopyHuntGroupAgentTriggerResponse is the response message for the
        CopyHuntGroupAgentTrigger rpc.
    services.org.hunt_groups.v1alpha1.CopyHuntGroupExileLinkRequest:
      type: object
      properties:
        toHuntGroupSid:
          type: string
          description: The sid of the hunt group to copy the exile link to.
        exileLink:
          allOf:
          - $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.ExileLink'
          description: The exile link to copy from the source hunt group.
      description: CopyHuntGroupExileLinkRequest is the request message for the CopyHuntGroupExileLink
        rpc.
    services.org.hunt_groups.v1alpha1.CopyHuntGroupExileLinkResponse:
      type: object
      properties: {}
      description: CopyHuntGroupExileLinkResponse is the response message for the
        CopyHuntGroupExileLink rpc.
    services.org.hunt_groups.v1alpha1.ExileLink:
      type: object
      properties:
        parameterSid:
          type: string
          description: The sid or the unique ID of the exile link stored in the database.
        huntGroupSid:
          type: string
          description: The sid of the hunt group which the exile link is associated
            with.
        name:
          type: string
          description: The display name of the exile link.
        description:
          type: string
          description: The description of the exile link.
        order:
          type: string
          description: The order of the exile link, used when displaying.
        inboundData:
          allOf:
          - $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.ExileLinkData'
          description: The parameter data for inbound calls.
        outboundData:
          allOf:
          - $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.ExileLinkData'
          description: The parameter data for outbound calls.
      description: ExileLink defines a link between a hunt group and the exile service.
    services.org.hunt_groups.v1alpha1.ExileLinkData:
      type: object
      properties:
        recordId:
          allOf:
          - $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.ExileLinkParameter'
          description: The record ID of the data.
        alternateId:
          allOf:
          - $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.ExileLinkParameter'
          description: The alternate ID of the data.
      description: ExileLinkData to be passed to exile.
    services.org.hunt_groups.v1alpha1.ExileLinkParameter:
      type: object
      properties:
        contactFieldSid:
          type: string
          description: The ID for the contact field.
        helperValue:
          type: string
          description: The helper value of the parameter.
        parameterSourceType:
          type: integer
          description: The source type of the parameter.
          format: enum
      description: ExileLinkParameter describes the data or data source.
    services.org.hunt_groups.v1alpha1.ListHuntGroupAgentTriggersRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group to list the triggers for
      description: ListHuntGroupAgentTriggersRequest is the request message for the
        ListHuntGroupAgentTriggers rpc.
    services.org.hunt_groups.v1alpha1.ListHuntGroupAgentTriggersResponse:
      type: object
      properties:
        agentTriggers:
          type: array
          items:
            $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.AgentTrigger'
          description: The list of agent triggers for the hunt group
      description: ListHuntGroupAgentTriggersResponse is the response message for
        the ListHuntGroupAgentTriggers rpc.
    services.org.hunt_groups.v1alpha1.ListHuntGroupExileLinksRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The hunt group sid of the desired exile links
      description: ListHuntGroupExileLinksRequest is the request for ListHuntGroupExileLinks
        rpc.
    services.org.hunt_groups.v1alpha1.ListHuntGroupExileLinksResponse:
      type: object
      properties:
        exileLinks:
          type: array
          items:
            $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.ExileLink'
          description: The links for exile
      description: ListHuntGroupExileLinksResponse is the response for ListHuntGroupExileLinks
        rpc.
    services.org.hunt_groups.v1alpha1.TriggerActionOption:
      type: object
      properties:
        action:
          type: integer
          description: The action to take when the trigger is activated
          format: enum
        displayMessage:
          type: string
          description: "The message to be displayed when the trigger is activated\n
            Used for action: Display Message"
        advanceToStatus:
          type: integer
          description: "The status to advance to when the trigger is activated\n Used
            for action: Advance Status\n Following are the valid status transitions:\n
            Waiting -> Paused\n Paused -> Waiting\n On Call -> Wrap Up\n Preview Call
            -> On Call, Waiting\n Manual Dial Call -> Waiting\n Wrap Up -> Waiting,
            Paused"
          format: enum
        webLinkSid:
          type: string
          description: "The sid of the web link to execute when the trigger is activated\n
            Used for action: Execute Web Link"
        integrationLinkSid:
          type: string
          description: "The sid of the integration link to execute when the trigger
            is activated\n Used for action: Execute Integration Link"
        exileLinkSid:
          type: string
          description: "The sid of the exile link to execute when the trigger is activated\n
            Used for action: Execute Exile Link"
    services.org.hunt_groups.v1alpha1.TriggerCallTypes:
      type: object
      properties:
        outbound:
          type: boolean
          description: The call type for outbound calls
        inbound:
          type: boolean
          description: The call type for inbound calls
        manual:
          type: boolean
          description: The call type for internal calls
        preview:
          type: boolean
          description: The call type for preview calls
      description: TriggerCallTypes is the call types to use for the trigger
    services.org.hunt_groups.v1alpha1.TriggerPauseCode:
      type: object
      properties:
        systemPauseCode:
          type: integer
          description: The system pause code to use for the trigger
          format: enum
        customPauseCode:
          type: string
          description: "The custom pause code to use for the trigger\n It is name
            of a pause code from a pause code set"
      description: TriggerPauseCode is the pause code to use for the trigger
    services.org.hunt_groups.v1alpha1.UpdateHuntGroupAgentTriggersRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group to update the trigger for
        agentTriggers:
          type: array
          items:
            $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.AgentTrigger'
          description: The list of agent triggers to update
      description: UpdateHuntGroupAgentTriggersRequest is the request message for
        the UpdateHuntGroupAgentTriggers rpc.
    services.org.hunt_groups.v1alpha1.UpdateHuntGroupAgentTriggersResponse:
      type: object
      properties: {}
      description: UpdateHuntGroupAgentTriggersResponse is the response message for
        the UpdateHuntGroupAgentTriggers rpc.
    services.org.hunt_groups.v1alpha1.UpdateHuntGroupExileLinksRequest:
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group to update the exile links for.
        exileLinks:
          type: array
          items:
            $ref: '#/components/schemas/services.org.hunt_groups.v1alpha1.ExileLink'
          description: The list of exile links to update.
      description: UpdateHuntGroupExileLinksRequest is the request message for the
        UpdateHuntGroupExileLinks rpc.
    services.org.hunt_groups.v1alpha1.UpdateHuntGroupExileLinksResponse:
      type: object
      properties: {}
      description: UpdateHuntGroupExileLinksResponse is the response message for the
        UpdateHuntGroupExileLinks RPC method.
    services.pbx.v1.AssignRandomExtensionRequest:
      type: object
      properties: {}
    services.pbx.v1.AssignRandomExtensionResponse:
      type: object
      properties:
        extension:
          type: integer
          format: int32
    services.pbx.v1.CreateRingGroupRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        ringStrategy:
          type: integer
          format: enum
        pbxUserIds:
          type: array
          items:
            type: string
        extension:
          type: integer
          format: int32
    services.pbx.v1.CreateRingGroupResponse:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/services.pbx.v1.RingGroup'
    services.pbx.v1.DeleteRingGroupRequest:
      type: object
      properties:
        groupId:
          type: string
    services.pbx.v1.DeleteRingGroupResponse:
      type: object
      properties: {}
    services.pbx.v1.PBXUser:
      type: object
      properties:
        pbxUserId:
          type: string
        orgUserId:
          type: string
        sipAccounts:
          type: array
          items:
            $ref: '#/components/schemas/services.pbx.v1.SIPAccount'
      description: "-------------------------\n Entity Definitions\n -------------------------"
    services.pbx.v1.QueryPbxUsersRequest:
      type: object
      properties:
        pbxUserId:
          type: string
        responseMask:
          type: string
          format: field-mask
      description: "-------------------------\n  RPC Messages\n -------------------------"
    services.pbx.v1.QueryPbxUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/services.pbx.v1.PBXUser'
    services.pbx.v1.QueryRingGroupsRequest:
      type: object
      properties:
        groupId:
          type: string
        responseMask:
          type: string
          format: field-mask
    services.pbx.v1.QueryRingGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/services.pbx.v1.RingGroup'
    services.pbx.v1.RingGroup:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        extension:
          type: integer
          format: int32
        ringStrategy:
          type: integer
          format: enum
        pbxUsers:
          type: array
          items:
            $ref: '#/components/schemas/services.pbx.v1.PBXUser'
    services.pbx.v1.SIPAccount:
      type: object
      properties:
        sipId:
          type: string
        isActive:
          type: boolean
        extension:
          type: integer
          format: int32
        ringGroups:
          type: array
          items:
            $ref: '#/components/schemas/services.pbx.v1.RingGroup'
    services.pbx.v1.UpdatePbxUserRequest:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/services.pbx.v1.PBXUser'
        updateMask:
          type: string
          format: field-mask
    services.pbx.v1.UpdatePbxUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/services.pbx.v1.PBXUser'
    services.pbx.v1.UpdateRingGroupRequest:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/services.pbx.v1.RingGroup'
        updateMask:
          type: string
          format: field-mask
    services.pbx.v1.UpdateRingGroupResponse:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/services.pbx.v1.RingGroup'
    services.pbx.v2.AssignRandomExtensionRequest:
      type: object
      properties: {}
    services.pbx.v2.AssignRandomExtensionResponse:
      type: object
      properties:
        extension:
          type: string
    services.pbx.v2.CreateRingGroupRequest:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/services.pbx.v2.RingGroup'
    services.pbx.v2.CreateRingGroupResponse:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/services.pbx.v2.RingGroup'
    services.pbx.v2.DeleteRingGroupRequest:
      type: object
      properties:
        groupId:
          type: string
    services.pbx.v2.DeleteRingGroupResponse:
      type: object
      properties: {}
    services.pbx.v2.GetPBXUserRequest:
      type: object
      properties:
        pbxUserId:
          type: string
    services.pbx.v2.GetPBXUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/services.pbx.v2.PBXUser'
    services.pbx.v2.GetRingGroupRequest:
      type: object
      properties:
        ringGroupId:
          type: string
    services.pbx.v2.GetRingGroupResponse:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/services.pbx.v2.RingGroup'
    services.pbx.v2.GetSIPAccountRequest:
      type: object
      properties:
        sipAccountId:
          type: string
    services.pbx.v2.GetSIPAccountResponse:
      type: object
      properties:
        sipAccount:
          type: array
          items:
            $ref: '#/components/schemas/services.pbx.v2.SIPAccount'
    services.pbx.v2.ListPBXUsersRequest:
      type: object
      properties: {}
      description: "-------------------------\n  RPC Messages\n -------------------------"
    services.pbx.v2.ListPBXUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/services.pbx.v2.PBXUser'
    services.pbx.v2.ListRingGroupsRequest:
      type: object
      properties: {}
    services.pbx.v2.ListRingGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/services.pbx.v2.RingGroup'
    services.pbx.v2.ListSIPAccountsRequest:
      type: object
      properties: {}
    services.pbx.v2.ListSIPAccountsResponse:
      type: object
      properties:
        sipAccounts:
          type: array
          items:
            $ref: '#/components/schemas/services.pbx.v2.SIPAccount'
    services.pbx.v2.PBXUser:
      type: object
      properties:
        pbxUserId:
          type: string
        orgUserId:
          type: string
        sipAccountIds:
          type: array
          items:
            type: string
      description: "-------------------------\n Entity Definitions\n -------------------------"
    services.pbx.v2.RingGroup:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        extension:
          type: string
        ringStrategy:
          type: integer
          format: enum
        sipAccountIds:
          type: array
          items:
            type: string
    services.pbx.v2.SIPAccount:
      type: object
      properties:
        sipId:
          type: string
        isActive:
          type: boolean
        extension:
          type: string
        ringGroupIds:
          type: array
          items:
            type: string
        orgUserId:
          type: string
    services.pbx.v2.UpdateRingGroupRequest:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/services.pbx.v2.RingGroup'
        updateMask:
          type: string
          format: field-mask
    services.pbx.v2.UpdateRingGroupResponse:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/services.pbx.v2.RingGroup'
    services.pbx.v2.UpdateSIPAccountRequest:
      type: object
      properties:
        sipAccount:
          $ref: '#/components/schemas/services.pbx.v2.SIPAccount'
        updateMask:
          type: string
          format: field-mask
    services.pbx.v2.UpdateSIPAccountResponse:
      type: object
      properties:
        sipAccount:
          $ref: '#/components/schemas/services.pbx.v2.SIPAccount'
    services.translations.v1alpha1.BulkDeleteTranslationsRequest:
      type: object
      properties:
        translationIds:
          type: array
          items:
            type: string
      description: Req/Res for bulk deleting translations
    services.translations.v1alpha1.BulkDeleteTranslationsResponse:
      type: object
      properties: {}
    services.translations.v1alpha1.DisableContextRequest:
      type: object
      properties:
        context:
          type: string
      description: Req/Res for disabling a context
    services.translations.v1alpha1.DisableContextResponse:
      type: object
      properties: {}
    services.translations.v1alpha1.EnableContextRequest:
      type: object
      properties:
        context:
          type: string
      description: Req/Res for enabling a context
    services.translations.v1alpha1.EnableContextResponse:
      type: object
      properties: {}
    services.translations.v1alpha1.GetSystemMessageRequest:
      type: object
      properties:
        context:
          type: string
          description: The context to get the system message for.
      description: "GetSystemMessageRequest is the request message for the GetSystemMessage
        method.\n Takes a context and returns the system message."
    services.translations.v1alpha1.GetSystemMessageResponse:
      type: object
      properties:
        systemMessage:
          type: string
          description: The system message.
      description: GetSystemMessageResponse is the response message for the GetSystemMessage
        method.
    services.translations.v1alpha1.ListContextsRequest:
      type: object
      properties: {}
      description: Req/Res for listing contexts
    services.translations.v1alpha1.ListContextsResponse:
      type: object
      properties:
        contexts:
          type: array
          items:
            type: string
          description: This is still populated for backwards compatibility
        localizationContexts:
          type: array
          items:
            $ref: '#/components/schemas/services.translations.v1alpha1.LocalizationContext'
    services.translations.v1alpha1.ListLanguagesRequest:
      type: object
      properties: {}
      description: Req/Res for listing languages
    services.translations.v1alpha1.ListLanguagesResponse:
      type: object
      properties:
        languages:
          type: array
          items:
            $ref: '#/components/schemas/services.translations.v1alpha1.LocalizationLanguage'
    services.translations.v1alpha1.ListTranslationsRequest:
      type: object
      properties:
        context:
          type: string
          description: The context of the translations.
        languageTag:
          type: string
          description: The BCP 47 language tag of the translations.
      description: "ListTranslationsRequest is the request message for the ListTranslations
        method.\n Takes a context and language tag and returns all translations."
    services.translations.v1alpha1.ListTranslationsResponse:
      type: object
      properties:
        translations:
          type: array
          items:
            $ref: '#/components/schemas/services.translations.v1alpha1.Translation'
      description: ListTranslationsResponse is the response message for the ListTranslations
        method.
    services.translations.v1alpha1.LocalizationContext:
      type: object
      properties:
        context:
          type: string
          description: The context.
        systemMessage:
          type: string
          description: The system message.
        enabled:
          type: boolean
          description: The enabled status of the context.
      description: The core context object for localization
    services.translations.v1alpha1.LocalizationLanguage:
      type: object
      properties:
        languageTag:
          type: string
          description: The BCP 47 language tag.
        englishName:
          type: string
          description: The name of the language.
      description: The core language object for localization
    services.translations.v1alpha1.SetSystemMessageRequest:
      type: object
      properties:
        context:
          type: string
          description: The context to set the system message for.
        systemMessage:
          type: string
          description: The system message.
      description: "SetSystemMessageRequest is the request message for the SetSystemMessage
        method.\n Takes a context and a system message."
    services.translations.v1alpha1.SetSystemMessageResponse:
      type: object
      properties: {}
      description: SetSystemMessageResponse is the response message for the SetSystemMessage
        method.
    services.translations.v1alpha1.TestSystemMessageRequest:
      type: object
      properties:
        systemMessage:
          type: string
          description: The system message to test.
        template:
          type: string
          description: The template to test.
        languageTag:
          type: string
          description: The BCP 47 language tag of the translation.
      description: "TestSystemMessageRequest is the request message for the TestSystemMessage
        method.\n Takes a system message, template, and language tag and returns the
        translation."
    services.translations.v1alpha1.TestSystemMessageResponse:
      type: object
      properties:
        translation:
          type: string
          description: The translation.
      description: TestSystemMessageResponse is the response message for the TestSystemMessage
        method.
    services.translations.v1alpha1.TranslateTemplateRequest:
      type: object
      properties:
        template:
          type: string
          description: The template to translate.
        context:
          type: string
          description: The context of the template.
      description: "TranslateTemplateRequest is the request message for the Translate
        method.\n Takes a template, context, and translates to all available languages."
    services.translations.v1alpha1.TranslateTemplateResponse:
      type: object
      properties:
        translations:
          type: array
          items:
            $ref: '#/components/schemas/services.translations.v1alpha1.Translation'
      description: TranslateTemplateResponse is the response message for the Translate
        method.
    services.translations.v1alpha1.Translation:
      type: object
      properties:
        translationId:
          type: string
          description: The ID of the translation.
        template:
          type: string
          description: The template.
        context:
          type: string
          description: The context of the template.
        languageTag:
          type: string
          description: The BCP 47 language tag of the translation.
        llmTranslation:
          type: string
          description: The LLM translation.
        manualTranslation:
          type: string
          description: The manual translation if exixts.
        createTime:
          type: string
          description: Creation time of the translation.
          format: date-time
      description: Translation is the core entity of the translation service.
    services.translations.v1alpha1.TriggerLLMTranslationRequest:
      type: object
      properties:
        translationId:
          type: string
          description: The ID of the translation to trigger the LLM translation.
      description: "TriggerLLMTranslationRequest is the request message for the TriggerLLMTranslation
        method.\n Takes a translation ID and triggers the LLM translation."
    services.translations.v1alpha1.TriggerLLMTranslationResponse:
      type: object
      properties:
        translation:
          allOf:
          - $ref: '#/components/schemas/services.translations.v1alpha1.Translation'
          description: The updated translation.
      description: TriggerLLMTranslationResponse is the response message for the TriggerLLMTranslation
        method.
    services.translations.v1alpha1.TriggerLLMTranslationsRequest:
      type: object
      properties:
        context:
          type: string
          description: The context to trigger the LLM translations for.
      description: TriggerLLMTranslationsRequest is the request message for the TriggerLLMTranslations
        method.
    services.translations.v1alpha1.TriggerLLMTranslationsResponse:
      type: object
      properties: {}
    services.translations.v1alpha1.UpdateTranslationRequest:
      type: object
      properties:
        translationId:
          type: string
          description: The ID of the translation to update.
        translation:
          type: string
          description: The new translation.
      description: "UpdateTranslationRequest is the request message for the UpdateTranslation
        method.\n Takes a translation ID and a new translation."
    services.translations.v1alpha1.UpdateTranslationResponse:
      type: object
      properties:
        translation:
          allOf:
          - $ref: '#/components/schemas/services.translations.v1alpha1.Translation'
          description: The updated translation.
      description: UpdateTranslationResponse is the response message for the UpdateTranslation
        method.
    tcnapi.omni.projects.v1.ListProjectsResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/tcnapi.omni.projects.v1.Project'
          description: the list of projects
        nextPageToken:
          type: string
          description: the next page token
      description: response used listing all projects
    tcnapi.omni.projects.v1.Project:
      required:
      - title
      - description
      type: object
      properties:
        name:
          type: string
          description: project identifier
        title:
          type: string
          description: project title
        description:
          type: string
          description: project description
        state:
          readOnly: true
          type: integer
          description: project state
          format: enum
        createTime:
          readOnly: true
          type: string
          description: creation date
          format: date-time
      description: Project -
    wfo.vanalytics.v2.AgentCallLog:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.AgentCallLog_Action'
          description: actions are the agent call log actions.
      description: AgentCallLog resource.
    wfo.vanalytics.v2.AgentCallLogQuery:
      type: object
      properties:
        callSkillsInitial:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.AgentCallLogQuery_CallSkillsInitial'
          description: Query constraints on call skills initial.
        callEnded:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.AgentCallLogQuery_CallEnded'
          description: Query constraints on the reason the call ended.
      description: Query constraints on agent call log.
    wfo.vanalytics.v2.AgentCallLogQuery_CallEnded:
      type: object
      properties:
        reasons:
          type: array
          items:
            type: integer
            format: enum
          description: Query constraints on the reason the call ended.
      description: Query constraints on the reason the call ended.
    wfo.vanalytics.v2.AgentCallLogQuery_CallSkillsInitial:
      type: object
      properties:
        need:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.CallSkillsInitial_Need'
          description: Query constraints on call skills initial need.
        want:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.CallSkillsInitial_Want'
          description: Query constraints on call skills initial want.
      description: Query constraints on call skills initial.
    wfo.vanalytics.v2.AgentCallLog_Action:
      type: object
      properties:
        callSkillsInitial:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.AgentCallLog_CallSkillsInitial'
          description: CallSkillsInitial are the initial call skills on a call.
        callEnded:
          type: string
          description: CallEnded is the reason the call ended.
      description: Action is an agent call log action.
    wfo.vanalytics.v2.AgentCallLog_CallSkillsInitial:
      type: object
      properties:
        need:
          type: array
          items:
            type: string
          description: need is all the call skills that are needed.
        want:
          type: array
          items:
            type: string
          description: want is all the call skills that are wanted.
      description: CallSkillsInitial are the initial call skills on a call.
    wfo.vanalytics.v2.AuditRequest:
      type: object
      properties:
        since:
          type: string
          format: date-time
        until:
          type: string
          format: date-time
    wfo.vanalytics.v2.AuditResponse:
      type: object
      properties:
        audioTime:
          type: number
          description: audio time in seconds within billing period
          format: double
        billedAudioTime:
          type: number
          description: billed_audio time in seconds within billing period
          format: double
        lastUsage:
          type: string
          description: "last_usage is the date of the last transcription\n within
            the billing period"
          format: date-time
        billedTranscripts:
          type: string
          description: "billed_transcripts is the number of billed transcripts\n within
            the billing period"
    wfo.vanalytics.v2.BillingSpan:
      type: object
      properties:
        calls:
          type: string
          description: Number of calls/transcripts in the billing period.
        hours:
          type: string
          description: "Total hours in the billing period. Each call is rounded up
            to\n the next 15 seconds and the total for the month is rounded up to\n
            the next hour."
        cost:
          type: number
          description: Cost is the total cost for the billing period.
          format: double
        startTime:
          type: string
          description: "Start time is the start time of the billing span. Transcripts
            in this span\n must have create_time >= start_time."
          format: date-time
        endTime:
          type: string
          description: "End time is the end time of the billing span. Transcripts
            in this span must\n have a create_time < end_time."
          format: date-time
    wfo.vanalytics.v2.BoolExpr_Filter:
      type: object
      properties:
        filterSid:
          type: string
          description: Required. Filter sid.
      description: Filter defines a filter.
    wfo.vanalytics.v2.BulkCreateFlagReviewRequest:
      type: object
      properties:
        flagSid:
          type: string
          description: "Optional. The ID of the flag for the flag reviews. When not
            provided\n all deleted flags will be given a review."
        notes:
          type: string
          description: Optional. Any notes written for the flag reviews.
      description: BulkCreateFlagReviewRequest is a request for creating many flag
        reviews.
    wfo.vanalytics.v2.BulkCreateFlagReviewResponse:
      type: object
      properties: {}
      description: BulkCreateFlagReviewResponse is a response for creating many flag
        reviews.
    wfo.vanalytics.v2.BulkDeleteTranscriptsRequest:
      type: object
      properties:
        query:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery'
          description: Required. A query which determines which transcripts to delete.
      description: BulkDeleteTranscriptsRequest defines the bulk delete transcripts
        request.
    wfo.vanalytics.v2.BulkDeleteTranscriptsResponse:
      type: object
      properties:
        total:
          type: integer
          description: The number of transcripts deleted.
          format: uint32
      description: BulkDeleteTranscriptsResponse defines the bulk delete transcripts
        response.
    wfo.vanalytics.v2.BulkRestoreTranscriptsRequest:
      type: object
      properties:
        query:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery'
          description: Required. A query which determines which transcripts to restore.
      description: BulkRestoreTranscriptsRequest defines the bulk restore transcripts
        request.
    wfo.vanalytics.v2.BulkRestoreTranscriptsResponse:
      type: object
      properties:
        total:
          type: integer
          description: The number of transcripts restored.
          format: uint32
      description: BulkRestoreTranscriptsResponse defines the bulk restore transcripts
        response.
    wfo.vanalytics.v2.Call:
      type: object
      properties:
        callSid:
          type: string
          description: The unique identifier for the call.
        callType:
          type: integer
          description: The type of call.
          format: enum
        audioTime:
          type: integer
          description: The total audio time of a call.
          format: uint32
        threads:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Call_Thread'
          description: The text from the call in threads.
        silence:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_Silence'
          description: The silence stats for this call.
        talkOver:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_TalkOver'
          description: The stats for when 2 participants are talking at the same time.
        talkTime:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: The total time duration of talk time in this call.
        callerId:
          type: string
          description: The phone number that initiated the call.
        groupName:
          type: string
          description: The hunt group name for the agent who made the call.
        agentResponse:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Call_AgentResponse'
          description: The agent responses for this call.
        huntGroupSids:
          type: array
          items:
            type: string
          description: The hunt groups sids for this call.
        numberFormat:
          type: string
          description: The number format for numbers in the agent response for this
            call.
        agentCallLog:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.AgentCallLog'
          description: Agent call log for this call.
        phone:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_Phone'
          description: The phone data.
        audioBytes:
          type: string
          description: The audio bytes for this call.
      description: Call specific transcript metadata.
    wfo.vanalytics.v2.CallSkillsInitial_Need:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: "Requires all call specific transcript hits to have a needed
            agent\n call log in the list."
        all:
          type: boolean
          description: Requires all values to match.
      description: Query constraints on call skills initial need.
    wfo.vanalytics.v2.CallSkillsInitial_Want:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: "Requires all call specific transcript hits to have a wanted
            agent\n call log in the list."
        all:
          type: boolean
          description: Requires all values to match.
      description: Query constraints on call skills initial want.
    wfo.vanalytics.v2.Call_AgentResponse:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
      description: AgentResponse contains the agent responses aka dispositions.
    wfo.vanalytics.v2.Call_AudioBytes:
      type: object
      properties:
        gte:
          type: string
          description: Optional. Queries where greater than or equal.
        lte:
          type: string
          description: Optional. Queries where less than or equal.
        gt:
          type: string
          description: Optional. Queries where greater than.
        lt:
          type: string
          description: Optional. Queries where less than.
      description: AudioBytes defines a query on audio_bytes.
    wfo.vanalytics.v2.Call_AudioTime:
      type: object
      properties:
        gte:
          type: integer
          description: Queries where greater than or equal.
          format: int32
        lte:
          type: integer
          description: Queries where less than or equal.
          format: int32
        gt:
          type: integer
          description: Queries where greater than.
          format: int32
        lt:
          type: integer
          description: Queries where less than.
          format: int32
      description: Query constraints on audio time.
    wfo.vanalytics.v2.Call_CallSid:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: "Requires all call specific transcript hits to have a call
            sid in the\n list."
      description: Query constraints on call sid.
    wfo.vanalytics.v2.Call_CallType:
      type: object
      properties:
        any:
          type: array
          items:
            type: integer
            format: enum
          description: "Requires all call specific transcript hits to have a call
            type in the\n list."
      description: Query constraints on call type.
    wfo.vanalytics.v2.Call_CallerId:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: "Requires all call specific transcript hits to have a caller
            id in the\n list."
      description: Query constraints on caller id.
    wfo.vanalytics.v2.Call_GroupName:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: "Requires all call specific transcript hits to have a group
            name in the\n list."
      description: Query constraints on group name.
    wfo.vanalytics.v2.Call_HuntGroupSids:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: "Requires all call specific transcript hits to have a hunt
            group sid\n in the list."
      description: Query constraints on hunt group sids.
    wfo.vanalytics.v2.Call_Phone:
      type: object
      properties:
        raw:
          type: string
          description: The raw phone number.
      description: The phone data.
    wfo.vanalytics.v2.Call_Segment:
      type: object
      properties:
        text:
          type: string
          description: The text in the segment.
        offset:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: The offset time duration from the beginning of the conversation.
        duration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: The duration of the segment.
      description: A segment of text.
    wfo.vanalytics.v2.Call_Silence:
      type: object
      properties:
        duration:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Silence_Duration'
          description: The silence duration stats.
        occurrence:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Silence_Occurrence'
          description: The silence occurence stats.
        threshold:
          type: integer
          description: "The threshold in milliseconds of how much time without talking
            is\n required before it is considered silence."
          format: uint32
      description: The silence stats for the call.
    wfo.vanalytics.v2.Call_TalkOver:
      type: object
      properties:
        duration:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TalkOver_Duration'
          description: The talk over duration stats.
        occurrence:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TalkOver_Occurrence'
          description: The talk over occurence stats.
        threshold:
          type: integer
          description: "The threshold in milliseconds of how much overlap is required\n
            before it is considered talk over."
          format: uint32
      description: The talk over stats for the call.
    wfo.vanalytics.v2.Call_TalkTime:
      type: object
      properties:
        gte:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Queries where greater than or equal.
        lte:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Queries where less than or equal.
        gt:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Queries where greater than.
        lt:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Queries where less than.
      description: Query constraints on talk time.
    wfo.vanalytics.v2.Call_Thread:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the thread.
          format: int32
        segments:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Call_Segment'
          description: The text of the thread in segments.
        userId:
          type: string
          description: The user id of the participant on this thread.
        sentiment:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Sentiment'
          description: The sentiment of the thread.
      description: A thread is the text from one participant.
    wfo.vanalytics.v2.Correction:
      type: object
      properties:
        correctionSid:
          type: string
          description: Output only. The unique id of this correction.
        transcriptSid:
          type: string
          description: Required. The transcript sid of the transcript that the correction
            is on.
        startOffset:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Required. Start offset of the selected words in the transcript.
        endOffset:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Required. End offset of the selected words in the transcript.
        proposedText:
          type: string
          description: Required. Proposed text of what the transcript selected text
            should be.
        channel:
          type: integer
          description: Required. Channel that the words were spoken on.
          format: uint32
      description: Correction is a resource in the Vanalytics API.
    wfo.vanalytics.v2.CreateCorrectionRequest:
      type: object
      properties:
        correction:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Correction'
          description: The correction resource to create.
      description: CreateCorrectionRequest is a request for creating a correction.
    wfo.vanalytics.v2.CreateCorrectionResponse:
      type: object
      properties:
        correction:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Correction'
          description: The correction resource that was created.
      description: CreateCorrectionResponse is a response for creating a correction.
    wfo.vanalytics.v2.CreateFilterRequest:
      type: object
      properties:
        filter:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Filter'
          description: The filter resource to create.
    wfo.vanalytics.v2.CreateFlagRequest:
      type: object
      properties:
        flag:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Flag'
          description: The flag resource to create.
      description: CreateFlagRequest is a request for creating a flag.
    wfo.vanalytics.v2.CreateFlagReviewRequest:
      type: object
      properties:
        flagReview:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FlagReview'
          description: FlagReview resource to create.
      description: CreateFlagReviewRequest is a request for creating a flag review.
    wfo.vanalytics.v2.CreateFlagTranscriptRequest:
      type: object
      properties:
        transcriptSids:
          type: array
          items:
            type: string
          description: Required. The transcript sids to be flagged.
        flag:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Flag'
          description: Required. The flag for flagging the transcripts.
      description: CreateFlagTranscriptRequest is a request for creating a flag transcript.
    wfo.vanalytics.v2.CreateFlagTranscriptResponse:
      type: object
      properties: {}
      description: CreateFlagTranscriptResponse is a response for creating a flag
        transcript.
    wfo.vanalytics.v2.DeleteCorrectionRequest:
      type: object
      properties:
        correctionSid:
          type: string
          description: Required. The unique id of the correction to be deleted.
        return:
          type: boolean
          description: Optional. Return the correction that was deleted.
    wfo.vanalytics.v2.DeleteCorrectionResponse:
      type: object
      properties:
        correction:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Correction'
          description: Optional. The correction that was deleted.
    wfo.vanalytics.v2.DeleteFilterRequest:
      type: object
      properties:
        filterSid:
          type: string
          description: Required. The unique id of the filter to be deleted.
        return:
          type: boolean
          description: Optional. Return the filter that was deleted.
    wfo.vanalytics.v2.DeleteFilterResponse:
      type: object
      properties:
        filter:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Filter'
          description: Optional. The filter that was deleted.
    wfo.vanalytics.v2.DeleteFlagRequest:
      type: object
      properties:
        flagSid:
          type: string
          description: Required. The unique id of the flag to be deleted.
        return:
          type: boolean
          description: Optional. Return the flag that was deleted.
      description: DeleteFlagRequest is a request for deleting a flag.
    wfo.vanalytics.v2.DeleteFlagResponse:
      type: object
      properties:
        flag:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Flag'
          description: Optional. The flag that was deleted.
      description: DeleteFlagResponse is a response for deleting a flag.
    wfo.vanalytics.v2.DnclList:
      type: object
      properties:
        listId:
          type: string
          description: Required. Dncl list id to add the item to.
        contentType:
          type: integer
          description: Required. Specifies the dncl list content type.
          format: enum
        expirePeriod:
          type: integer
          description: Optional. Expected duration to keep item in DNCL.
          format: enum
        expireOffset:
          type: string
          description: "Optional. Specifies how many expire periods\n to calculate.
            i.e. number of weeks."
        agentResponseKey:
          type: string
          description: Optional. Specifies an agent response to get the scrub value
            from.
    wfo.vanalytics.v2.Filter:
      type: object
      properties:
        filterSid:
          type: string
          description: Output only. The unique id of this filter.
        name:
          type: string
          description: "Required. The name of this filter. Must be non empty and unique
            across all\n filters within an organization."
        createTime:
          type: string
          description: "Output only. The timestamp when this filter was created. Assigned
            by the\n server."
          format: date-time
        version:
          type: string
          description: Output only. The version of this filter.
        transcriptQuery:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery'
          description: The transcript query to be used to filter transcripts.
      description: A filter resource in the Vanalytics API.
    wfo.vanalytics.v2.FilterSnapshot:
      type: object
      properties:
        filterSnapshotSid:
          type: string
          description: Output only. The unique id of this filter snapshot.
        filterSid:
          type: string
          description: Output only. The unique id of this filter.
        name:
          type: string
          description: "Required. The name of this filter. Must be non empty and unique
            across all\n filters within an organization."
        createTime:
          type: string
          description: "Output only. Assigned by the server. The timestamp when this
            filter was\n created."
          format: date-time
        version:
          type: string
          description: Output only. The version of this filter.
        transcriptQuery:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery'
          description: The transcript query to be used to filter transcripts.
      description: Filter snapshot resource.
    wfo.vanalytics.v2.Flag:
      type: object
      properties:
        flagSid:
          type: string
          description: Output only. The unique id of this flag.
        name:
          type: string
          description: "Required. The name of this flag. Must be non empty and unique
            across all\n flags within an organization."
        reviewGroupId:
          type: string
          description: "Optional. The org permission group id which users must have
            in order to\n to review flagged transcripts. When not provided flagged
            transcripts will\n not require review."
        notifyGroupId:
          type: string
          description: Optional. The notify group id for this flag.
        priority:
          type: integer
          description: Optional. The priority of the flag. Defaults to 0.
          format: int32
        version:
          type: string
          description: Output only. The version of this flag.
        filters:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Filter'
          description: Output only. Filters associated with this flag.
        mustReview:
          type: boolean
          description: Output only. Determines whether this flag must be reviewed.
        mustNotify:
          type: boolean
          description: Output only. Determines whether this flag must be notified.
        boolExpr:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Flag_BoolExpr'
          description: "Required. Boolean expression of filters which a transcript
            must match\n for this flag to be applied."
        dnclList:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.DnclList'
          description: "Optional. Specifies dncl lists to update\n if a transcript
            is flagged."
      description: Flag is a resource in the Vanalytics API.
    wfo.vanalytics.v2.FlagFilter:
      type: object
      properties:
        flagFilterSid:
          type: string
          description: Output only. The unique id of this flag filter.
        filterSid:
          type: string
          description: Required. The unique id of the filter.
        flagSid:
          type: string
          description: Required. The unique id of the flag.
        flag:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Flag'
          description: Output only. The flag for this flag filter.
        filter:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Filter'
          description: Output only. The filter for this flag filter.
      description: FlagFilter is a resource in the Vanalytics API.
    wfo.vanalytics.v2.FlagReview:
      type: object
      properties:
        flagReviewSid:
          type: string
          description: Output only. The unique id of this flag review.
        transcriptSid:
          type: string
          description: Required. The transcript_sid of the reviewed transcript.
        createTime:
          type: string
          description: "Output only. The timestamp when this flag review was created.
            Assigned by the\n server."
          format: date-time
        notes:
          type: string
          description: Optional. Any notes written for the flag review.
        flagSnapshotSid:
          type: string
          description: The ID of the flag snapshot for this flag review.
      description: "FlagReview resource in the Vanalytics API. It represents a flag
        review\n for transcripts that have been flagged."
    wfo.vanalytics.v2.FlagSnapshot:
      type: object
      properties:
        flagSnapshotSid:
          type: string
          description: Output only. The unique id of this flag.
        flagSid:
          type: string
          description: Output only. The unique id of this flag.
        name:
          type: string
          description: "Required. The name of this flag. Must be non empty and unique
            across all\n flags within an organization."
        reviewGroupId:
          type: string
          description: "Optional. The org permission group id which users must have
            in order to\n to review flagged transcripts. When not provided flagged
            transcripts will\n not require review."
        notifyGroupId:
          type: string
          description: Optional. The notify group id for this flag.
        priority:
          type: integer
          description: Optional. The priority of the flag. Defaults to 0.
          format: int32
        version:
          type: string
          description: Output only. The version of this flag.
        createTime:
          type: string
          description: "Output only. The timestamp when this flag snapshot was created.
            Assigned by the\n server."
          format: date-time
        mustReview:
          type: boolean
          description: Output only. Determines whether this flag must be reviewed.
        mustNotify:
          type: boolean
          description: Output only. Determines whether this flag must be notified.
        boolExpr:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSnapshot_BoolExpr'
          description: "Required. Boolean expression of filters which a transcript
            must match\n for this flag to be applied."
        dnclList:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.DnclList'
          description: "Optional. Specifies dncl lists to update\n if a transcript
            is flagged."
      description: FlagSnapshot is a resource in the Vanalytics API.
    wfo.vanalytics.v2.FlagSnapshot_BoolExpr:
      type: object
      properties:
        and:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSnapshot_BoolExpr'
          description: Optional. Boolean and operator.
        or:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSnapshot_BoolExpr'
          description: Optional. Boolean or operator.
        filter:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.BoolExpr_Filter'
          description: Optional. Filter to match.
        not:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSnapshot_BoolExpr'
          description: Optional. Boolean not operator.
      description: BoolExpr defines a boolean expression of filters.
    wfo.vanalytics.v2.FlagSummary:
      type: object
      properties:
        count:
          type: integer
          description: The number of flags associated with the transcript.
          format: int32
        prioritySum:
          type: integer
          description: The sum of the priorities of the flags associated with the
            transcript.
          format: int32
        priorityMax:
          type: integer
          description: The highest priority of the flags associated with the transcript.
          format: int32
        needReview:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSummary_NeedReview'
          description: Need Review provides info on the flags that need review.
        flags:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSummary_Flag'
          description: Flags contain the flags and filters that are associated with
            the transcript.
        reviewStatus:
          type: integer
          description: The review status of the flagged transcript.
          format: enum
      description: FlagSummary defines a summary of flags which were applied to a
        transcript.
    wfo.vanalytics.v2.FlagSummary_Count:
      type: object
      properties:
        gte:
          type: integer
          description: Optional. Queries count greater than or equal.
          format: int32
        lte:
          type: integer
          description: Optional. Queries count less than or equal.
          format: int32
        gt:
          type: integer
          description: Optional. Queries count greater than.
          format: int32
        lt:
          type: integer
          description: Optional. Queries count less than.
          format: int32
        eq:
          type: integer
          description: Optional. Queries count equal to.
          format: int32
      description: Count defines a query on count.
    wfo.vanalytics.v2.FlagSummary_Filter:
      type: object
      properties:
        joinKey:
          type: string
          description: The join key in form [flag_sid:filter_sid].
        flagSid:
          type: string
          description: The flag sid this filter belongs to.
        filterSid:
          type: string
          description: The unique id of this filter.
        version:
          type: string
          description: The version of this filter.
        name:
          type: string
          description: The name of this filter.
      description: Filter defines a filter which applied some flag to some transcript.
    wfo.vanalytics.v2.FlagSummary_Flag:
      type: object
      properties:
        flagSid:
          type: string
          description: The unique id of this flag.
        name:
          type: string
          description: The name of this flag.
        priority:
          type: integer
          description: The priority of this flag.
          format: int32
        version:
          type: string
          description: The version of this flag.
        filters:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSummary_Filter'
          description: Filters which applied this flag.
        mustReview:
          type: boolean
          description: Determines whether this flag must be reviewed.
        mustNotify:
          type: boolean
          description: Determines whether this flag must be notified.
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSummary_Review'
          description: The reviews of this flag.
      description: "Flag defines a flag that was applied to a transcript by one or
        more filters\n along with a user review when one exists."
    wfo.vanalytics.v2.FlagSummary_Flags:
      type: object
      properties:
        flagSid:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Flags_FlagSid'
          description: Optional. Queries flag sid.
      description: Flags defines a query on flags.
    wfo.vanalytics.v2.FlagSummary_NeedReview:
      type: object
      properties:
        prioritySum:
          type: integer
          description: The sum of the priorities of the flags that need review.
          format: int32
        priorityMax:
          type: integer
          description: The highest priority of the flags that need review.
          format: int32
        count:
          type: integer
          description: The number of flags that need review.
          format: int32
        flagSids:
          type: array
          items:
            type: string
          description: The Flag sids that need review.
      description: NeedReview defines flags which need to be reviewed.
    wfo.vanalytics.v2.FlagSummary_Review:
      type: object
      properties:
        joinKey:
          type: string
          description: The join key in form [flag_sid:user_id].
        flagSid:
          type: string
          description: The flag sid this review belongs to.
        userId:
          type: string
          description: The user id of the reviewer.
      description: Review contains info on the flag review when one exists.
    wfo.vanalytics.v2.FlagSummary_ReviewStatus:
      type: object
      properties:
        any:
          type: array
          items:
            type: integer
            format: enum
          description: Optional. Must have any provided review status.
      description: ReviewStatus defines a query on review status.
    wfo.vanalytics.v2.FlagTranscriptFilter:
      type: object
      properties:
        flagSnapshot:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSnapshot'
          description: FlagSnapshot which flagged target transcript.
        filterSnapshot:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FilterSnapshot'
          description: FilterSnapshot which filtered target transcript.
      description: Flag transcript filter resource.
    wfo.vanalytics.v2.Flag_BoolExpr:
      type: object
      properties:
        and:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Flag_BoolExpr'
          description: Optional. Boolean and operator.
        or:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Flag_BoolExpr'
          description: Optional. Boolean or operator.
        filter:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.BoolExpr_Filter'
          description: Optional. Filter to match.
        not:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Flag_BoolExpr'
          description: Optional. Boolean not operator.
      description: BoolExpr defines a boolean expression of filters.
    wfo.vanalytics.v2.Flags_FlagSid:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Must have any of the provided flag sids.
        all:
          type: array
          items:
            type: string
          description: Optional. Must have all of the provided flag sids.
      description: FlagSid defines a query on flag sid.
    wfo.vanalytics.v2.FuzzinessAuto:
      type: object
      properties:
        low:
          type: integer
          description: The low length threshold.
          format: uint32
        high:
          type: integer
          description: The high length threshold.
          format: uint32
      description: 'Defines an automatic max allowable edit distance based on the
        length of the

        text to match.


        length  <  low -- Must match exactly.

        length  < high -- Must match with one edit allowed.

        length >= high -- Must match with two edits allowed.'
    wfo.vanalytics.v2.GetCorrectionRequest:
      type: object
      properties:
        correctionSid:
          type: string
          description: Required. The unique id of the correction.
    wfo.vanalytics.v2.GetFilterRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the filter.
        filterSid:
          type: string
          description: The unique id of the filter.
    wfo.vanalytics.v2.GetFlagRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the flag.
        flagSid:
          type: string
          description: The unique id of the flag.
      description: GetFlagRequest is a request for getting a flag.
    wfo.vanalytics.v2.GetRecordingUrlRequest:
      type: object
      properties:
        transcriptSid:
          type: string
        kind:
          type: string
          description: Optional. Defaults to "wav". Can be "", "wav" or "mp3".
    wfo.vanalytics.v2.GetRecordingUrlResponse:
      type: object
      properties:
        url:
          type: string
    wfo.vanalytics.v2.GetTranscriptSummaryRequest:
      type: object
      properties:
        transcriptSid:
          type: string
          description: Required - transcript to get summary of.
      description: GetTranscriptSummaryRequest is a request for getting a transcript
        summary.
    wfo.vanalytics.v2.GetTranscriptSummaryResponse:
      type: object
      properties:
        transcriptSummary:
          $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptSummary'
      description: GetTranscriptSummaryResponse is a response for getting a transcript
        summary.
    wfo.vanalytics.v2.Highlight:
      type: object
      properties:
        prefix:
          type: string
          description: The prefix for highlighted text. Defaults to "{{" when empty.
        suffix:
          type: string
          description: The suffix for highlighted text. Defaults to "}}" when empty.
      description: Configuration to enable and control text highlights.
    wfo.vanalytics.v2.ListAgentResponseValuesRequest:
      type: object
      properties:
        key:
          type: string
      description: ListAgentResponseValuesRequest is a request for listing agent reponse
        values.
    wfo.vanalytics.v2.ListAgentResponseValuesResponse:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: Values are the transcript agent response values.
      description: ListAgentResponseValuesResponse is a response for listing agent
        response values.
    wfo.vanalytics.v2.ListBillingSpanRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: Optional. Page size is based on months from now. Defaults to
            12.
          format: uint32
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
    wfo.vanalytics.v2.ListBillingSpanResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of billing spans, or empty
            if there are no\n more billing spans in the list."
        spans:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.BillingSpan'
          description: List of billing spans which contains at most one request page_size.
    wfo.vanalytics.v2.ListCorrectionsRequest:
      type: object
      properties:
        transcriptSid:
          type: string
          description: Required. The transcript sid of the transcript that the corrections
            are on.
      description: ListCorrectionsRequest is a request for listing corrections.
    wfo.vanalytics.v2.ListCorrectionsResponse:
      type: object
      properties:
        corrections:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Correction'
          description: List of corrections.
      description: ListCorrectionsResponse is a response for listing corrections.
    wfo.vanalytics.v2.ListFiltersRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Optional. The number of filters to include in a single response.
            When not\n provided this defaults to 100."
          format: uint32
        orderBy:
          type: string
          description: "Optional. The order by which filters will be listed. Follows
            sql order by\n syntax. When not provided the order defaults to \"name\".\n
            Supported order by includes:\n   + (name)\n   + (name desc)"
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
        conflict:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Filter'
          description: "Optional. The filter by which to find other filters which
            have a conflicting\n name field."
        flagSid:
          type: string
          description: Optional. Lists filters which are associated with given flag
            sid.
    wfo.vanalytics.v2.ListFiltersResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of filters, or empty if there
            are no\n more filters in the list."
        filters:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Filter'
          description: List of filters which contains at most one request page_size.
    wfo.vanalytics.v2.ListFlagFiltersRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Optional. The number of flag filters to include in a single
            response. When not\n provided this defaults to 100."
          format: uint32
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
        flagMask:
          type: string
          description: "Optional. Field mask for response flag. A missing or empty
            field mask is\n interpreted as a field mask containing all possible fields."
          format: field-mask
        filterMask:
          type: string
          description: "Optional. Field mask for response filter. A missing or empty
            field mask is\n interpreted as a field mask containing all possible fields."
          format: field-mask
        flagSids:
          type: array
          items:
            type: string
          description: "Optional. List of flag sids. Requires response filters to
            be associated\n with at least one of the provided flag sids."
      description: ListFlagFiltersRequest is a request for listing flag filters.
    wfo.vanalytics.v2.ListFlagFiltersResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page. Empty when there are no more
            pages.
        flagFilters:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.FlagFilter'
          description: List of flag filters.
      description: ListFlagFiltersResponse is a response for listing flag filters.
    wfo.vanalytics.v2.ListFlagReviewsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Optional. The number of reviews to include in a single response.
            When not\n provided this defaults to 100."
          format: uint32
        orderBy:
          type: string
          description: "Optional. The order by which reviews will be listed. Follows
            sql order by\n syntax. When not provided the order defaults to \"flag_review_sid
            desc\".\n Supported order by includes:\n   + (flag_review_sid desc)\n
            \  + (flag_review_sid)"
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
        transcriptSid:
          type: string
          description: Optional. The transcript sid to look for reviews on.
      description: ListFlagReviewsRequest is a request for listing reviews on a transcript.
    wfo.vanalytics.v2.ListFlagReviewsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of reviews, or empty if there
            are no\n more reviews in the list."
        flagReviews:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.FlagReview'
          description: List of flag reviews.
      description: ListFlagReviewsResponse is a response for listing reviews on a
        transcript.
    wfo.vanalytics.v2.ListFlagSnapshotsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Optional. The number of snapshots to include in a single response.
            When not\n provided this defaults to 100."
          format: uint32
        orderBy:
          type: string
          description: "Optional. The order by which snapshots will be listed. Follows
            sql order by\n syntax. When not provided the order defaults to \"flag_snapshot_sid
            desc\".\n Supported order by includes:\n   + (flag_snapshot_sid desc)\n
            \  + (flag_snapshot_sid)"
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
        flagSnapshotSids:
          type: array
          items:
            type: string
          description: Optional. List of flag_snapshots to filter on.
        mask:
          type: string
          description: "Optional. mask contains a list of fields to be returned. Possible
            paths include\n flag_snapshot_sid, flag_sid, name, review_group_id, notify_group_id,
            create_time,\n version, and priority. If no mask is provided it defaults
            to using all paths."
          format: field-mask
        transcriptSid:
          type: string
          description: Optional. Transcript sid to filter on.
      description: ListFlagSnapshotsRequest is a request for listing flag snapshots.
    wfo.vanalytics.v2.ListFlagSnapshotsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of snapshots, or empty if
            there are no\n more snapshots in the list."
        flagSnapshots:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSnapshot'
          description: List of flag snapshots.
      description: ListFlagSnapshotsResponse is a response for listing flag snapshots.
    wfo.vanalytics.v2.ListFlagTranscriptFiltersRequest:
      type: object
      properties:
        transcriptSid:
          type: string
          description: Required. The target transcript sid.
        flagSnapshotMask:
          type: string
          description: Optional. Flag snapshot fields to include in response. All
            when empty.
          format: field-mask
        filterSnapshotMask:
          type: string
          description: Optional. Filter snapshot fields to include in response. All
            when empty.
          format: field-mask
      description: ListFlagTranscriptFiltersRequest is a request for listing flag
        transcript filters.
    wfo.vanalytics.v2.ListFlagTranscriptFiltersResponse:
      type: object
      properties:
        flagTranscriptFilters:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.FlagTranscriptFilter'
      description: ListFlagTranscriptFiltersResponse is a response for listing flag
        transcript filters.
    wfo.vanalytics.v2.ListFlagsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Optional. The number of flags to include in a single response.
            When not\n provided this defaults to 100."
          format: uint32
        orderBy:
          type: string
          description: "Optional. The order by which flags will be listed. Follows
            sql order by\n syntax. When not provided the order defaults to \"name\".\n
            Supported order by includes:\n   + (name)\n   + (name desc)"
        pageToken:
          type: string
          description: "Optional. The next_page_token returned from a previous List
            request, if any.\n When provided all other request fields are ignored."
        filterSid:
          type: string
          description: Optional. Lists flags which are associated with given filter
            sid.
        flagSids:
          type: array
          items:
            type: string
          description: Optional. Lists flags which have given flag sids.
        readMask:
          type: string
          description: "Optional. Field mask which determines which flag reads will
            be read and\n included in the response."
          format: field-mask
        names:
          type: array
          items:
            type: string
          description: Optional. Listed flags must have one of the provided names.
        priorities:
          type: array
          items:
            type: integer
            format: int32
          description: Optional. Listed flags must have one of the provided priorities.
        mustReview:
          type: array
          items:
            type: boolean
          description: "Optional. Filter by flags that require a review. This does
            not mean\n that the flag has/hasn't been reviewed. This is whether it
            requires one."
        mustNotify:
          type: array
          items:
            type: boolean
          description: Optional. Filter by flags that send notifications.
      description: ListFlagsRequest is a request for listing flags.
    wfo.vanalytics.v2.ListFlagsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: "Token to retrieve the next page of flags, or empty if there
            are no\n more flags in the list."
        flags:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Flag'
          description: List of flags which contains at most one request page_size.
        total:
          type: string
          description: Total number of flags.
      description: ListFlagsResponse is a response for listing flags.
    wfo.vanalytics.v2.ListTranscriptGroupNamesRequest:
      type: object
      properties: {}
      description: ListTranscriptGroupNamesRequest is a request for listing group
        names.
    wfo.vanalytics.v2.ListTranscriptGroupNamesResponse:
      type: object
      properties:
        groupNames:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptGroupName'
          description: Group names are the transcript group names.
      description: ListTranscriptGroupNamesResponse is a response for listing group
        names.
    wfo.vanalytics.v2.Location_ZipCodeProximity:
      type: object
      properties:
        countryCode:
          type: string
          description: Required. Queries on phone number country code.
        zipCode:
          type: string
          description: Required. Queries where phone location is within distance of
            zipcode.
        distance:
          type: string
          description: 'Required. Queries where phone location is within distance
            (km or mi) of zipcode. For example: 100km.'
    wfo.vanalytics.v2.Match:
      type: object
      properties:
        text:
          type: string
          description: "Required. The text to be matched. The field may contain multiple
            terms\n to match when separated by spaces."
        operator:
          type: string
          description: "Determines whether any or all of the terms must be matched.
            Operator must\n be one of: (AND, OR). Defaults to OR when empty."
        fuzzinessAuto:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FuzzinessAuto'
          description: Variable fuzziness based on the match term length.
        fuzzinessValue:
          type: integer
          description: Constant fuzziness with allowed range from 0, 1 and 2.
          format: uint32
      description: Query text terms with optional fuzziness.
    wfo.vanalytics.v2.Moment:
      type: object
      properties:
        timeZone:
          type: string
          description: Required. Timezone of the client.
        interval:
          type: integer
          description: "Optional. Dynamic time period to match which\n defaults to
            today."
          format: enum
    wfo.vanalytics.v2.Phone_Cc:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Queries where cc in list provided.
      description: Cc defines a query on the phone country code.
    wfo.vanalytics.v2.Phone_City:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Queries where city in list provided.
      description: City defines a query on the phone city.
    wfo.vanalytics.v2.Phone_Iso2:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Queries where iso2 in list provided.
      description: Iso2 defines a query on the phone Iso2.
    wfo.vanalytics.v2.Phone_Location:
      type: object
      properties:
        zipCodeProximity:
          $ref: '#/components/schemas/wfo.vanalytics.v2.Location_ZipCodeProximity'
      description: Location defines a query on the phone location.
    wfo.vanalytics.v2.Phone_Ndc:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Queries where ndc in list provided.
      description: Ndc defines a query on the phone ndc.
    wfo.vanalytics.v2.Phone_Prefix:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Queries where prefix in list provided.
      description: Prefix defines a query on the phone prefix.
    wfo.vanalytics.v2.Phone_Raw:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Queries where phone number in list provided.
      description: Query constraints on raw phone number.
    wfo.vanalytics.v2.Phone_RegionCode:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Queries where region code in list provided.
      description: RegionCode defines a query on the phone region code.
    wfo.vanalytics.v2.Phone_RegionName:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Queries where region name in list provided.
      description: RegionName defines a query on the phone region name.
    wfo.vanalytics.v2.Phone_TimeZone:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Queries where time zone in list provided.
      description: TimeZone defines a query on the phone time zone.
    wfo.vanalytics.v2.Phone_Type:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Optional. Queries where type in list provided.
      description: Type defines a query on the phone type.
    wfo.vanalytics.v2.Phone_Utc:
      type: object
      properties:
        any:
          type: array
          items:
            type: number
            format: float
          description: Optional. Queries where utc in list provided.
      description: Utc defines a query on the phone utc.
    wfo.vanalytics.v2.SearchTranscriptsRequest:
      type: object
      properties:
        pageSize:
          type: integer
          description: Number of hits to include in response. Defaults to 10.
          format: uint32
        orderBy:
          type: string
          description: "The order by which transcripts will be listed. Follows SQL
            order by\n syntax. When not provided the order defaults to transcript_sid
            asc."
        readMask:
          type: string
          description: "A field mask which defines which transcript fields to return.
            When empty\n all transcript fields will be returned."
          format: field-mask
        boolQuery:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptBoolQuery'
          description: Query by which to filter transcripts.
        pageToken:
          type: string
          description: The next page token from a previous response.
        highlight:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Highlight'
          description: Configuration to enable and control text highlights.
      description: The request for the search transcripts RPC.
    wfo.vanalytics.v2.SearchTranscriptsResponse:
      type: object
      properties:
        hits:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.SearchTranscriptsResponse_Hit'
          description: One page of search response hits.
        nextPageToken:
          type: string
          description: "A page token which can be provided on a follow up request
            to retrieve the\n next page of transcript hits."
      description: The response for the search transcripts RPC.
    wfo.vanalytics.v2.SearchTranscriptsResponse_Hit:
      type: object
      properties:
        transcript:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Transcript'
          description: A transcript which matched the transcript query.
      description: A search response hit.
    wfo.vanalytics.v2.Segment_Attachment:
      type: object
      properties:
        attachmentSid:
          type: string
          description: The unique identifier of the attachment.
      description: Attachment metadata.
    wfo.vanalytics.v2.Sentiment:
      type: object
      properties:
        overall:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Sentiment_Estimate'
          description: Overall sentiment estimate for the thread.
        worst:
          type: integer
          description: Worst dominating tone across thread samples.
          format: enum
        dominant:
          type: integer
          description: Dominant tone across thread samples.
          format: enum
        last:
          type: integer
          description: Last dominating tone of the thread samples.
          format: enum
        samples:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Sentiment_Sample'
          description: Samples of the thread, split by offset and duration.
      description: The sentiment of a thread.
    wfo.vanalytics.v2.Sentiment_Estimate:
      type: object
      properties:
        positive:
          type: number
          description: Portion of text deemed positive.
          format: float
        neutral:
          type: number
          description: Portion of text deemed neutral.
          format: float
        negative:
          type: number
          description: Portion of text deemed negative.
          format: float
      description: A sentiment estimate.
    wfo.vanalytics.v2.Sentiment_Sample:
      type: object
      properties:
        estimate:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Sentiment_Estimate'
          description: Estimate for the sample.
        offset:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Offset of the sample.
        duration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Duration of the sample (may be empty for certain transcript
            kinds).
      description: A sentiment sample.
    wfo.vanalytics.v2.Silence_Duration:
      type: object
      properties:
        total:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: The total silence duration in the call.
        max:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: The largest silence duration in the call.
        percentage:
          type: integer
          description: The percentage of silence in the call.
          format: uint32
      description: The silence duration stats.
    wfo.vanalytics.v2.Silence_Occurrence:
      type: object
      properties:
        total:
          type: integer
          description: The total number of silence occurences in the call.
          format: uint32
      description: The silence occurence stats.
    wfo.vanalytics.v2.SkillsQuery_Skills:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Must match any one of the skills in the set.
        all:
          type: array
          items:
            type: string
          description: Must match all skills in the set.
      description: Skills represents a set of skills.
    wfo.vanalytics.v2.Sms:
      type: object
      properties:
        conversationSid:
          type: string
          description: The unique identifier of the sms conversation.
        threads:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Sms_Thread'
          description: The text from the sms in threads.
        phone:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Sms_Phone'
          description: The phone data.
        callerId:
          type: string
          description: The phone number of the agent.
        campaignSid:
          type: string
          description: The omni campain this sms belongs to.
      description: Sms specific transcript metadata.
    wfo.vanalytics.v2.Sms_CampaignSid:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: "Requires all sms specific transcript hits to have a campaign
            sid\n in the list."
    wfo.vanalytics.v2.Sms_ConversationSid:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: "Requires all sms specific transcript hits to have a conversation
            sid\n in the list."
      description: Query constraints on conversation sid.
    wfo.vanalytics.v2.Sms_Phone:
      type: object
      properties:
        raw:
          type: string
          description: The raw phone number.
      description: The phone data.
    wfo.vanalytics.v2.Sms_Segment:
      type: object
      properties:
        text:
          type: string
          description: The text in the segment.
        offset:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: The offset time duration from the beginning of the conversation.
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Segment_Attachment'
          description: The attachments associated with the segment.
      description: A segment of text.
    wfo.vanalytics.v2.Sms_Thread:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the thread.
          format: int32
        segments:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.Sms_Segment'
          description: The text of the thread in segments.
        userId:
          type: string
          description: The user id of the participant on this thread.
        sentiment:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Sentiment'
          description: The sentiment of the thread.
      description: A thread is the text from one participant.
    wfo.vanalytics.v2.SpanFuzzy:
      type: object
      properties:
        value:
          type: string
          description: Required. The value to be fuzzy matched.
        fuzzinessAuto:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FuzzinessAuto'
          description: Variable fuzziness based on the match term length.
        fuzzinessValue:
          type: integer
          description: Constant fuzziness with allowed range from 0, 1 and 2.
          format: uint32
      description: Query which matches a span term with fuzziness.
    wfo.vanalytics.v2.SpanNear:
      type: object
      properties:
        slop:
          type: integer
          description: "The number of allowed non matching terms within the span.
            For example, a\n slop of 2 when searching for \"This is my dog\" would
            allow a match on\n \"This is my quick brown dog\"."
          format: int32
        inOrder:
          type: boolean
          description: Requires clauses to be matched in the order.
        clauses:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.SpanNear_Clause'
          description: Required. The clauses to be matched.
      description: Query which matches a list of clauses that are near to each other.
    wfo.vanalytics.v2.SpanNear_Clause:
      type: object
      properties:
        spanNear:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.SpanNear'
          description: A span near clause to match a phrase.
        spanFuzzy:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.SpanFuzzy'
          description: A span near clause to match a fuzzy term.
        spanTerm:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.SpanTerm'
          description: A span near clause to match a term.
      description: Generic clause for use in span near queries.
    wfo.vanalytics.v2.SpanTerm:
      type: object
      properties:
        value:
          type: string
          description: Required. The value to be matched.
      description: Query which matches a span term exactly.
    wfo.vanalytics.v2.TalkOver_Duration:
      type: object
      properties:
        total:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: The total talk over duration in the call.
        max:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: The largest talk over duration in the call.
        percentage:
          type: integer
          description: The percentage of talk over in the call.
          format: uint32
      description: The talk over duration stats.
    wfo.vanalytics.v2.TalkOver_Occurrence:
      type: object
      properties:
        total:
          type: integer
          description: The total number of talk over occurences in the call.
          format: uint32
      description: The talk over occurence stats.
    wfo.vanalytics.v2.Text_Timespan:
      type: object
      properties:
        head:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: The start offset to query text from.
        tail:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: The end offset to query text from.
      description: Timespan determines where text must be matched within a transcript.
    wfo.vanalytics.v2.Threads_Id:
      type: object
      properties:
        any:
          type: array
          items:
            type: integer
            format: int32
          description: Requires all transcript hits to have a thread id in the list.
      description: Query constraints on thread id.
    wfo.vanalytics.v2.Threads_Text:
      type: object
      properties:
        match:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Match'
          description: Query text terms with optional fuzziness.
        spanNear:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.SpanNear'
          description: Query text phrases.
        timespan:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Text_Timespan'
          description: 'Timespan determines where text must be matched within a transcript.

            +------+------+-------------------------------------------+

            | head | tail |              description                  |

            +------+------+-------------------------------------------+

            |  +30 |  +60 | match between (head + 30) and (head + 60) |

            |    0 |  +30 | match between (head +  0) and (head + 30) |

            |    0 |  -30 | match between (head +  0) and (tail - 30) |

            |  -60 |  -30 | match between (tail - 60) and (tail - 30) |

            |  -30 |    0 | match between (tail - 30) and (tail -  0) |

            +------+------+-------------------------------------------+'
        not:
          type: boolean
          description: Query text that does not match.
      description: Query constraints on thread text.
    wfo.vanalytics.v2.Threads_UserId:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Requires all transcript hits to have a user id in the list.
      description: Query constraints on user id.
    wfo.vanalytics.v2.Transcript:
      type: object
      properties:
        call:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call'
          description: Call specific transcript metadata.
        sms:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Sms'
          description: Sms specific transcript metadata.
        channel:
          type: integer
          description: The communication channel of the transcript.
          format: enum
        startTime:
          type: string
          description: The time the transcript was started.
          format: date-time
        deleteTime:
          type: string
          description: The time the transcript was marked as deleted.
          format: date-time
        flagSummary:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSummary'
          description: The flag summary of the transcript.
        transcriptSid:
          type: string
          description: The unique identifier of the transcript.
        summary:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptSummary'
          description: The summary for the transcript.
      description: A textualized interaction between two or more participants.
    wfo.vanalytics.v2.TranscriptBoolQuery:
      type: object
      properties:
        transcript:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery'
          description: Query constraints on transcript.
      description: Boolean query to filter transcripts.
    wfo.vanalytics.v2.TranscriptGroupName:
      type: object
      properties:
        value:
          type: string
          description: value is a group name value.
      description: TranscriptGroupName is the transcript group name.
    wfo.vanalytics.v2.TranscriptQuery:
      type: object
      properties:
        transcriptSid:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_TranscriptSid'
          description: Query constraints on transcript sid.
        channel:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_Channel'
          description: Query constraints on channel.
        metadata:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_Metadata'
          description: Query constraints on metadata.
        threads:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_Threads'
          description: Query constraints on threads.
        flagSummary:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_FlagSummary'
          description: Query constraints on flag summary.
        startTime:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_StartTime'
          description: Query constraints on start time.
        deleteTime:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_DeleteTime'
          description: Query constraints on delete time.
        phone:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_Phone'
          description: Query constraints on phone.
        channelType:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_Channel'
          description: Query constraints on channel type.
        skills:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_SkillsQuery'
          description: Query constraints on skills.
      description: Query to filter transcripts.
    wfo.vanalytics.v2.TranscriptQuery_Call:
      type: object
      properties:
        callSid:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_CallSid'
          description: Query constraints on call sid.
        audioTime:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_AudioTime'
          description: Query constraints on audio time.
        callType:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_CallType'
          description: Query constraints on call type.
        silence:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_Silence'
          description: Query constraints on silence.
        talkOver:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_TalkOver'
          description: Query constraints on talk over.
        talkTime:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_TalkTime'
          description: Query constraints on talk time.
        callerId:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_CallerId'
          description: Query constraints on caller id.
        groupName:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_GroupName'
          description: Query constraints on group name.
        agentResponse:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_AgentResponse'
          description: Query constraints on agent response.
        huntGroupSids:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_HuntGroupSids'
          description: Query constraints on hunt group sids.
        agentCallLog:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.AgentCallLogQuery'
          description: Query constraints on agent call log.
        audioBytes:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Call_AudioBytes'
          description: Query constraints on audio bytes.
      description: Query constraints on call metadata.
    wfo.vanalytics.v2.TranscriptQuery_Channel:
      type: object
      properties:
        any:
          type: array
          items:
            type: integer
            format: enum
          description: Requires all transcript hits to have a channel in the list.
      description: Query constraints on channel.
    wfo.vanalytics.v2.TranscriptQuery_DeleteTime:
      type: object
      properties:
        gte:
          type: string
          description: Queries where greater than or equal.
          format: date-time
        lte:
          type: string
          description: Queries where less than or equal.
          format: date-time
        gt:
          type: string
          description: Queries where greater than.
          format: date-time
        lt:
          type: string
          description: Queries where less than.
          format: date-time
      description: Query constraints on delete time.
    wfo.vanalytics.v2.TranscriptQuery_FlagSummary:
      type: object
      properties:
        needReview:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSummary_NeedReview'
          description: Optional. Queries need review.
        reviewStatus:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSummary_ReviewStatus'
          description: Optional. Queries review status.
        flags:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSummary_Flags'
          description: Optional. Queries flags.
        count:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.FlagSummary_Count'
          description: Optional. Queries count.
      description: FlagSummary defines a query on flag summary fields.
    wfo.vanalytics.v2.TranscriptQuery_Metadata:
      type: object
      properties:
        call:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_Call'
          description: Query constraints on call metadata.
        sms:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_Sms'
          description: Query constraints on sms metadata.
      description: Query constraints on metadata.
    wfo.vanalytics.v2.TranscriptQuery_Phone:
      type: object
      properties:
        cc:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Phone_Cc'
          description: Query constraints on phone country code.
        ndc:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Phone_Ndc'
          description: Query constraints on phone ndc (area code).
        prefix:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Phone_Prefix'
          description: Query constraints on phone subscriber number prefix.
        city:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Phone_City'
          description: Query constraints on phone city.
        iso2:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Phone_Iso2'
          description: Query constraints on phone iso2 country code.
        regionCode:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Phone_RegionCode'
          description: Query constraints on phone region code.
        regionName:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Phone_RegionName'
          description: Query constraints on phone region name.
        timeZone:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Phone_TimeZone'
          description: Query constraints on phone time zone.
        type:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Phone_Type'
          description: Query constraints on phone number type.
        utc:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Phone_Utc'
          description: Query constraints on phone number utc.
        location:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Phone_Location'
          description: Query constraints on phone number location.
        raw:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Phone_Raw'
          description: Query constraints on raw phone number.
      description: Query constraints on phone.
    wfo.vanalytics.v2.TranscriptQuery_SkillsQuery:
      type: object
      properties:
        need:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.SkillsQuery_Skills'
          description: Match against "must-have" skills.
        want:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.SkillsQuery_Skills'
          description: Match against "nice-to-have" skills.
        or:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_SkillsQuery'
          description: Match against groups of skills with logical OR.
      description: Query constraints on skills.
    wfo.vanalytics.v2.TranscriptQuery_Sms:
      type: object
      properties:
        conversationSid:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Sms_ConversationSid'
          description: Query constraints on conversation sid.
        campaignSid:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Sms_CampaignSid'
          description: Query constraints on campaign sid.
      description: Query constraints on sms metadata.
    wfo.vanalytics.v2.TranscriptQuery_StartTime:
      type: object
      properties:
        gte:
          type: string
          description: Queries where greater than or equal.
          format: date-time
        lte:
          type: string
          description: Queries where less than or equal.
          format: date-time
        gt:
          type: string
          description: Queries where greater than.
          format: date-time
        lt:
          type: string
          description: Queries where less than.
          format: date-time
        moment:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Moment'
          description: Optional. Dynamic time period to match.
      description: Query constraints on start time.
    wfo.vanalytics.v2.TranscriptQuery_Threads:
      type: object
      properties:
        and:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_Threads'
          description: Query constraints on all threads in list.
        or:
          type: array
          items:
            $ref: '#/components/schemas/wfo.vanalytics.v2.TranscriptQuery_Threads'
          description: Query constraints on any threads in list.
        id:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Threads_Id'
          description: Query constraints on thread id.
        text:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Threads_Text'
          description: Query constraints on thread text.
        userId:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Threads_UserId'
          description: Query constraints on user id.
      description: Query constraints on threads.
    wfo.vanalytics.v2.TranscriptQuery_TranscriptSid:
      type: object
      properties:
        any:
          type: array
          items:
            type: string
          description: Requires all transcript hits to have a transcript sid in the
            list.
      description: Query constraints on transcript sid.
    wfo.vanalytics.v2.TranscriptSummary:
      type: object
      properties:
        bulletPoints:
          type: array
          items:
            type: string
          description: Summary content provided in multiple bullet points.
        status:
          type: integer
          description: Status of the summary.
          format: enum
      description: TranscriptSummary is an AI generated summary based on a parent
        transcript.
    wfo.vanalytics.v2.UpdateCorrectionRequest:
      type: object
      properties:
        correction:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Correction'
          description: The correction resource to update.
        updateMask:
          type: string
          description: The fields to update.
          format: field-mask
      description: UpdateCorrectionRequest is a request for updating a correction.
    wfo.vanalytics.v2.UpdateCorrectionResponse:
      type: object
      properties:
        correction:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Correction'
          description: The correction resource that was updated.
      description: UpdateCorrectionResponse is a response for updating a correction.
    wfo.vanalytics.v2.UpdateFilterRequest:
      type: object
      properties:
        filter:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Filter'
          description: The new filter data.
        updateMask:
          type: string
          description: "Optional. update_mask contains a list of paths to be updated.
            Possible paths include\n name and transcript_query. If no update_mask
            is provided it defaults to\n using both name and transcript_query."
          format: field-mask
        filterSid:
          type: string
          description: The ID of the filter to be updated.
    wfo.vanalytics.v2.UpdateFlagRequest:
      type: object
      properties:
        flagSid:
          type: string
          description: The ID of the flag to be updated.
        flag:
          allOf:
          - $ref: '#/components/schemas/wfo.vanalytics.v2.Flag'
          description: The flag resource to update.
        updateMask:
          type: string
          description: "Optional. update_mask contains a list of paths to be updated.
            Possible paths include\n name, review_group_id, notify_group_id, and priority.
            If no update_mask\n is provided it defaults to using all paths."
          format: field-mask
      description: UpdateFlagRequest is a request for updating a flag.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: Bearer
      bearerFormat: JWT
tags:
- name: Acd
  description: "Service for interacting with TCN's Agent Call Distribution system.\n
    Accessing all of the methods require an authenticated user with the correct\n
    permissions."
- name: AgentSmith
  description: "AgentSmith is the Public API for the AgentSmith service. This service
    provides the methods for public integrations\n to follow agents and/or create
    virtual agents."
- name: AgentTrainingService
  description: ''
- name: AgentTrainingSupportService
  description: "AgentTrainingSupportService provides customer support\n endpoints
    for agent training."
- name: Ana
  description: ''
- name: Asm
  description: ''
- name: AsmApi
  description: ''
- name: AsmService
  description: ''
- name: AuthConnectionService
  description: ''
- name: BIReportGeneratorService
  description: BIReportGeneratorService is the service for generating BI reports.
- name: Billing
  description: ''
- name: BillingService
  description: ''
- name: BusinessHoursService
  description: ''
- name: CBS
  description: ''
- name: CallQueue
  description: ''
- name: Cfg
  description: "Service for interacting with TCN's configuration system.\n Accessing
    all of the methods requires an authenticated user with\n the correct permissions."
- name: ClassifierFileTemplates
  description: ''
- name: Compliance
  description: ''
- name: ContactManager
  description: ''
- name: Dashboards
  description: ''
- name: DeliveryApi
  description: ''
- name: ExileCertificateManagerService
  description: ExileCertificateManagerService is the service for managing organization's
    exile ceritificate.
- name: ExplorerService
  description: ExplorerService is the service for the explorer API.
- name: FTS
  description: ''
- name: FtsApi
  description: ''
- name: GenericFinviService
  description: ''
- name: GhostNotifierApi
  description: ''
- name: HuntGroupsService
  description: HuntGroupsService is the service for managing hunt groups and their
    related entities.
- name: IdpService
  description: ''
- name: Insights
  description: ''
- name: Integrations
  description: ''
- name: IntegrationsPublic
  description: ''
- name: LMS
  description: ''
- name: LabelsService
  description: ''
- name: Learn
  description: A service for creating and reading learning material
- name: NewsroomAPI
  description: "Service for interacting with TCN's Newsroom API system.\n Accessing
    all of the methods Requestuire an authenticated user with the correct\n permissions."
- name: Notifier
  description: ''
- name: OauthService
  description: ''
- name: ObservedHolidaysService
  description: ''
- name: OmniApi
  description: "Service for interacting with TCN's Omni API system.\n Accessing all
    of the methods require an authenticated user with the correct\n permissions."
- name: Org
  description: ''
- name: OrgLegacy
  description: ''
- name: P3Api
  description: ''
- name: PBXService
  description: ''
- name: PortalManagerApi
  description: ''
- name: Projects
  description: Projects service is the public api for the omni/projects service.
- name: Room303API
  description: ''
- name: Scorecards
  description: ''
- name: ScorecardsSupport
  description: "ScorecardsSupport provies customer support\n specific endpoints for
    Scorecards."
- name: Sds
  description: ''
- name: Sentinel
  description: "A service for internal observability utilities.\n service UIEventLogging
    {"
- name: SkillsService
  description: ''
- name: SmsApi
  description: "Service for interacting with TCN's SMS API system.\n Accessing all
    of the methods require an authenticated user with the correct\n permissions."
- name: Soundboard
  description: ''
- name: Srec
  description: ''
- name: TasksService
  description: ''
- name: Tickets
  description: Tickets service is the public api for the tickets service., for public
    integrations to manage tickets / customer service requests. Can be used by any
    authorized frontend-app.
- name: TranslationsService
  description: ''
- name: TrustsService
  description: ''
- name: UsersService
  description: ''
- name: Vanalytics
  description: ''
- name: VanalyticsSupport
  description: ''
- name: Vmds
  description: ''
- name: VmdsService
  description: ''
- name: WFM
  description: WFM is responsible for call prediction and call volume calculations
    based on call skills and other parameters.
- name: WorkflowDefinitionPersistService
  description: "WorkflowDefinitionPersistService is the service that provides CRUD
    operations for workflow definitions.\n PERMISSION_WORKFLOWS is required for all
    operations"
servers:
- url: https://api.cbf.tcn.com
  description: Server located in United States (Primary)
- url: https://api.bom.tcn.com
  description: Server located in India
- url: https://api.chs.tcn.com
  description: Server located in United States (East)
- url: https://api.fra.tcn.com
  description: Server located in European Union (Germany)
- url: https://api.lon.tcn.com
  description: Server located in United Kingdom
- url: https://api.syd.tcn.com
  description: Server located in Australia
- url: https://api.yul.tcn.com
  description: Server located in Canada
security:
- bearerAuth: []
