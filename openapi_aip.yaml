openapi: 3.0.3
info:
  title: TCN Operator API
  version: v1.0.15
  description: TCN Operator API
paths:
  /tcn/bi/dashboards/v1alpha1/default:loadDefaultDashboard:
    get:
      tags:
      - DashboardsService
      description: LoadDefaultDashboard gets the user's default dashboard.
      operationId: DashboardsService_LoadDefaultDashboard
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.LoadDefaultDashboardResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/bi/dashboards/v1alpha1/default:markDefaultDashboard:
    post:
      tags:
      - DashboardsService
      description: Sets a dashboard as the user's default
      operationId: DashboardsService_MarkDefaultDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.MarkDefaultDashboardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.MarkDefaultDashboardResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/bi/dashboards/v1alpha1/orgs/{org}/regions/{region}/dashboard/{dashboard}:publish:
    post:
      tags:
      - DashboardsService
      description: PublishDashboard publishes a dashboard.
      operationId: DashboardsService_PublishDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboard
        in: path
        description: The dashboard id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.PublishDashboardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.PublishDashboardResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/bi/dashboards/v1alpha1/orgs/{org}/regions/{region}/dashboards:
    get:
      tags:
      - DashboardsService
      description: ListDashboards lists dashboards.
      operationId: DashboardsService_ListDashboards
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: "The maximum number of books to return. The service may return
          fewer than\n this value.\n If unspecified, at most 50 dashboards will be
          returned.\n The maximum value is 1000; values above 1000 will be coerced
          to 1000."
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "A page token, received from a previous `ListDashboards` call.\n
          Provide this to retrieve the subsequent page."
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.ListDashboardsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - DashboardsService
      description: CreateDashboard creates a new dashboard.
      operationId: DashboardsService_CreateDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboardId
        in: query
        description: The dashboard id to create.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/bi/dashboards/v1alpha1/orgs/{org}/regions/{region}/dashboards/{dashboard}:
    get:
      tags:
      - DashboardsService
      description: GetDashboard gets a dashboard.
      operationId: DashboardsService_GetDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboard
        in: path
        description: The dashboard id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - DashboardsService
      description: DeleteDashboard deletes a dashboard.
      operationId: DashboardsService_DeleteDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboard
        in: path
        description: The dashboard id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - DashboardsService
      description: UpdateDashboard updates a dashboard.
      operationId: DashboardsService_UpdateDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboard
        in: path
        description: The dashboard id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: Required. The update mask to apply to the dashboard.
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/journey/jobs/v1alpha1/orgs/{org}/jobs:
    post:
      tags:
      - JobsService
      description: CreateJob
      operationId: JobsService_CreateJob
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.journey.jobs.v1alpha1.Job'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.journey.jobs.v1alpha1.Job'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/journey/project/v1alpha1/orgs/{org}/collection/{collection}/jobs:
    get:
      tags:
      - JobsService
      description: ListJobs
      operationId: JobsService_ListJobs
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: collection
        in: path
        description: The collection id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Returned page.
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: Used to specify the page token.
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.journey.jobs.v1alpha1.ListJobsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/journey/project/v1alpha1/orgs/{org}/collection/{collection}/source/{source}/job/{job}/record/{record}/rejections:
    get:
      tags:
      - RejectionsService
      description: Method to list skill groups
      operationId: RejectionsService_ListRejections
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: collection
        in: path
        description: The collection id.
        required: true
        schema:
          type: string
      - name: source
        in: path
        description: The source id.
        required: true
        schema:
          type: string
      - name: job
        in: path
        description: The job id.
        required: true
        schema:
          type: string
      - name: record
        in: path
        description: The record id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Returned page.
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: Used to specify the page token.
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.journey.rejection.v1alpha1.ListRejectionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/attachment/v1alpha1/orgs/{org}/attachments:
    post:
      tags:
      - AttachmentService
      description: Method to create attachments -
      operationId: AttachmentService_CreateAttachment
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.attachment.v1alpha1.Attachment'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.attachment.v1alpha1.Attachment'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/attachments/v1alpha1/orgs/{org}/attachments:
    get:
      tags:
      - AttachmentService
      description: Method to list attachments
      operationId: AttachmentService_ListAttachments
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.attachment.v1alpha1.ListAttachmentsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/attachments/v1alpha1/orgs/{org}/attachments/{attachment}:
    get:
      tags:
      - AttachmentService
      description: Method to get attachment
      operationId: AttachmentService_GetAttachment
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: attachment
        in: path
        description: The attachment id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.attachment.v1alpha1.Attachment'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/campaigns/v1alpha1/orgs/{org}/campaigns:
    get:
      tags:
      - CampaignService
      description: Method to list campaigns
      operationId: CampaignService_ListCampaigns
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.ListCampaignsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/campaigns/v1alpha1/orgs/{org}/campaigns/{campaign}:
    get:
      tags:
      - CampaignService
      description: Method to get campaign
      operationId: CampaignService_GetCampaign
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: campaign
        in: path
        description: The campaign id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/cannedmessage/v1alpha1/orgs/{org}/cannedMessageGroups:
    get:
      tags:
      - CannedMessageService
      description: ListCannedMessageGroups
      operationId: CannedMessageService_ListCannedMessageGroups
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.ListCannedMessageGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - CannedMessageService
      description: CreateCannedMessageGroup
      operationId: CannedMessageService_CreateCannedMessageGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/cannedmessage/v1alpha1/orgs/{org}/cannedMessageGroups/{cannedMessageGroup}:
    get:
      tags:
      - CannedMessageService
      description: GetCannedMessageGroup
      operationId: CannedMessageService_GetCannedMessageGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - CannedMessageService
      description: DeleteCannedMessageGroup
      operationId: CannedMessageService_DeleteCannedMessageGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: force delete the canned message group
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - CannedMessageService
      description: UpdateCannedMessageGroup
      operationId: CannedMessageService_UpdateCannedMessageGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The update mask to specify which fields should be updated.
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/cannedmessage/v1alpha1/orgs/{org}/cannedMessageGroups/{cannedMessageGroup}/cannedMessages:
    get:
      tags:
      - CannedMessageService
      description: ListCannedMessages -
      operationId: CannedMessageService_ListCannedMessages
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.ListCannedMessagesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - CannedMessageService
      description: CreateCannedMessage -
      operationId: CannedMessageService_CreateCannedMessage
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/cannedmessage/v1alpha1/orgs/{org}/cannedMessageGroups/{cannedMessageGroup}/cannedMessages/{cannedMessage}:
    get:
      tags:
      - CannedMessageService
      description: GetCannedMessage -
      operationId: CannedMessageService_GetCannedMessage
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      - name: cannedMessage
        in: path
        description: The cannedMessage id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - CannedMessageService
      description: DeleteCannedMessage -
      operationId: CannedMessageService_DeleteCannedMessage
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      - name: cannedMessage
        in: path
        description: The cannedMessage id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - CannedMessageService
      description: UpdateCannedMessage -
      operationId: CannedMessageService_UpdateCannedMessage
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      - name: cannedMessage
        in: path
        description: The cannedMessage id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the update mask
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/chatwidget/v1alpha1/orgs/{org}/chatWidgets/{chatWidget}:
    get:
      tags:
      - ChatWidgetService
      description: method to get chat widget
      operationId: ChatWidgetService_GetChatWidget
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: chatWidget
        in: path
        description: The chatWidget id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/chatwidget/v1alpha1/orgs/{org}/chatwidgets:
    get:
      tags:
      - ChatWidgetService
      description: method to list chat widget
      operationId: ChatWidgetService_ListChatWidgets
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: page size
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: page token
        schema:
          type: string
      - name: filter
        in: query
        description: filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ListChatWidgetsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/compliance/v1alpha1/orgs/{org}/complianceConfigs:
    get:
      tags:
      - ComplianceService
      description: Method to list complianceConfigs
      operationId: ComplianceService_ListComplianceConfigs
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ListComplianceConfigsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - ComplianceService
      description: Method to create complianceConfig
      operationId: ComplianceService_CreateComplianceConfig
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: complianceConfigId
        in: query
        description: the complianceConfig id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/compliance/v1alpha1/orgs/{org}/complianceConfigs/{complianceConfig}:
    get:
      tags:
      - ComplianceService
      description: Method to get complianceConfig
      operationId: ComplianceService_GetComplianceConfig
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: complianceConfig
        in: path
        description: The complianceConfig id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/connectedinbox/v1alpha1/orgs/{org}/connectedInboxes:
    get:
      tags:
      - ConnectedInboxService
      description: method to list connected inbox
      operationId: ConnectedInboxService_ListConnectedInboxes
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: page size
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: page token
        schema:
          type: string
      - name: filter
        in: query
        description: filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ListConnectedInboxesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - ConnectedInboxService
      description: method to create a connected inbox
      operationId: ConnectedInboxService_CreateConnectedInbox
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/connectedinbox/v1alpha1/orgs/{org}/connectedInboxes/{connectedInboxe}:
    get:
      tags:
      - ConnectedInboxService
      description: method to get connected inbox
      operationId: ConnectedInboxService_GetConnectedInbox
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: connectedInboxe
        in: path
        description: The connectedInboxe id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - ConnectedInboxService
      description: method to delete a connected inbox
      operationId: ConnectedInboxService_DeleteConnectedInbox
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: connectedInboxe
        in: path
        description: The connectedInboxe id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - ConnectedInboxService
      description: method to update a connected inbox
      operationId: ConnectedInboxService_UpdateConnectedInbox
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: connectedInboxe
        in: path
        description: The connectedInboxe id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the field mask used to update the connected inbox
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/connectedinbox/v1alpha1/orgs/{org}/connectedInboxes/{connectedInboxe}:describe:
    get:
      tags:
      - ConnectedInboxService
      description: method to describe the connected inbox email salt and password
      operationId: ConnectedInboxService_DescribeConnectedInboxCredentials
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: connectedInboxe
        in: path
        description: The connectedInboxe id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.DescribeConnectedInboxCredentialsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/connectedinbox/v1alpha1/orgs/{org}/connectedInboxes/{connectedInboxe}:test:
    get:
      tags:
      - ConnectedInboxService
      description: method to test the connected inbox
      operationId: ConnectedInboxService_TestConnectedInbox
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: connectedInboxe
        in: path
        description: The connectedInboxe id.
        required: true
        schema:
          type: string
      - name: connectedInbox.name
        in: query
        description: the connected inbox identifier
        schema:
          type: string
      - name: connectedInbox.emailAddress
        in: query
        description: email address of the connected inbox
        schema:
          type: string
      - name: connectedInbox.username
        in: query
        description: username of accessing email
        schema:
          type: string
      - name: connectedInbox.password
        in: query
        description: password for accessing email,
        schema:
          type: string
      - name: connectedInbox.checkFrequencyMinutes
        in: query
        description: how often the email should be checked (in minutes)
        schema:
          type: string
      - name: connectedInbox.server
        in: query
        description: server name the email is located on
        schema:
          type: string
      - name: connectedInbox.serverPort
        in: query
        description: server port the email is located on
        schema:
          type: string
      - name: connectedInbox.lastScheduledTime
        in: query
        description: time the email was last scheduled to be checked
        schema:
          type: string
          format: date-time
      - name: connectedInbox.lastCheckedTime
        in: query
        description: time the email was last checked
        schema:
          type: string
          format: date-time
      - name: connectedInbox.purgeThreshold
        in: query
        description: how many emails should build up before getting purged
        schema:
          type: string
      - name: connectedInbox.consecutiveFailures
        in: query
        description: number of consecutive failures allowed before entering an ERROR_STANDBY
          state
        schema:
          type: integer
          format: int32
      - name: connectedInbox.lastError
        in: query
        description: the last error that occured
        schema:
          type: string
      - name: connectedInbox.standbyErrorTime
        in: query
        description: time the email entered ERROR_STANDBY
        schema:
          type: string
          format: date-time
      - name: connectedInbox.lastUpdateTime
        in: query
        description: time the inbox was last update
        schema:
          type: string
          format: date-time
      - name: connectedInbox.maxMessageSize
        in: query
        description: maximum message size
        schema:
          type: integer
          format: int32
      - name: connectedInbox.maxMessages
        in: query
        description: maximum number of messages
        schema:
          type: integer
          format: int32
      - name: connectedInbox.authenticationType
        in: query
        description: type of authentication that should be used
        schema:
          type: integer
          format: enum
      - name: connectedInbox.deleted
        in: query
        description: if the connected inbox deleted
        schema:
          type: boolean
      - name: connectedInbox.oauthReferenceId
        in: query
        description: the id used to reference the oauth information
        schema:
          type: string
      - name: connectedInbox.processedFolder
        in: query
        description: optional custom folder name for messages that are successfully
          processed
        schema:
          type: string
      - name: connectedInbox.failedFolder
        in: query
        description: optional custom folder name for messages that have failed to
          send
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.TestConnectedInboxResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations:
    get:
      tags:
      - ConversationService
      description: Method to list conversations
      operationId: ConversationService_ListConversations
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.ListConversationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - ConversationService
      description: CreateConversation creates a new conversation for an ORG.
      operationId: ConversationService_CreateConversation
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}:
    get:
      tags:
      - ConversationService
      description: Method to get conversation
      operationId: ConversationService_GetConversation
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/assignments:
    get:
      tags:
      - ConversationService
      description: Method to list conversation assignments
      operationId: ConversationService_ListAssignments
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.ListAssignmentsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/collectedData:
    get:
      tags:
      - ConversationService
      description: Method to list collected data
      operationId: ConversationService_ListCollectedData
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.ListCollectedDataResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - ConversationService
      description: Method to create collected data
      operationId: ConversationService_CreateCollectedData
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CollectedData'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CollectedData'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/collectedData/{collectedData}:
    get:
      tags:
      - ConversationService
      description: Method to get collected data
      operationId: ConversationService_GetCollectedData
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: collectedData
        in: path
        description: The collectedData id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CollectedData'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/metadata:
    get:
      tags:
      - ConversationService
      description: ListMetadata retrieves metadata for a conversation.
      operationId: ConversationService_ListMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.ListMetadataResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - ConversationService
      description: "CreateMetadata inserts a new metadata for a conversation when
        it doesn't exist,\n or updates it if it does."
      operationId: ConversationService_CreateMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/metadata/{metadata}:
    get:
      tags:
      - ConversationService
      description: GetMetadata retrieves metadata for a conversation.
      operationId: ConversationService_GetMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: metadata
        in: path
        description: The metadata id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/metadata:batchCreate:
    post:
      tags:
      - ConversationService
      description: "BatchCreateMetadata inserts a new metadata for a conversation
        when it doesn't exist,\n or updates it if it does."
      operationId: ConversationService_BatchCreateMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.BatchCreateMetadataRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.BatchCreateMetadataResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/users/{user}/assignments/{assignment}:
    get:
      tags:
      - ConversationService
      description: Method to get conversation assignment
      operationId: ConversationService_GetAssignment
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      - name: assignment
        in: path
        description: The assignment id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Assignment'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  ? /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/users/{user}/assignments/{assignment}/assignmentMetadata
  : get:
      tags:
      - ConversationService
      description: ListAssignmentMetadata retrieves metadata for a conversation.
      operationId: ConversationService_ListAssignmentMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      - name: assignment
        in: path
        description: The assignment id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.ListAssignmentMetadataResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - ConversationService
      description: "CreateAssignmentMetadata inserts a new metadata for a conversation
        when it doesn't exist,\n or updates it if it does."
      operationId: ConversationService_CreateAssignmentMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      - name: assignment
        in: path
        description: The assignment id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  ? /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/users/{user}/assignments/{assignment}/assignmentMetadata/{assignmentMetadata}
  : get:
      tags:
      - ConversationService
      description: GetAssignmentMetadata retrieves metadata for a conversation.
      operationId: ConversationService_GetAssignmentMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      - name: assignment
        in: path
        description: The assignment id.
        required: true
        schema:
          type: string
      - name: assignmentMetadata
        in: path
        description: The assignmentMetadata id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  ? /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/users/{user}/assignments/{assignment}/assignmentMetadata:batchCreate
  : post:
      tags:
      - ConversationService
      description: "BatchCreateAssignmentMetadata inserts a new metadata for a conversation
        when it doesn't exist,\n or updates it if it does."
      operationId: ConversationService_BatchCreateAssignmentMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      - name: assignment
        in: path
        description: The assignment id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.BatchCreateAssignmentMetadataRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.BatchCreateAssignmentMetadataResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/disposition/v1alpha1/orgs/{org}/dispositions:
    post:
      tags:
      - DispositionService
      description: Method to create disposition
      operationId: DispositionService_CreateDisposition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/disposition/v1alpha1/orgs/{org}/dispositions/{disposition}:
    delete:
      tags:
      - DispositionService
      description: method to delete a disposition
      operationId: DispositionService_DeleteDisposition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: disposition
        in: path
        description: The disposition id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - DispositionService
      description: method to update a disposition
      operationId: DispositionService_UpdateDisposition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: disposition
        in: path
        description: The disposition id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the field mask used to update the disposition
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/dispositions/v1alpha1/orgs/{org}/dispositions:
    get:
      tags:
      - DispositionService
      description: Method to list dispositions
      operationId: DispositionService_ListDispositions
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.ListDispositionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/dispositions/v1alpha1/orgs/{org}/dispositions/{disposition}:
    get:
      tags:
      - DispositionService
      description: Method to get disposition
      operationId: DispositionService_GetDisposition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: disposition
        in: path
        description: The disposition id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/eventlog/v1alpha1:processOmniEventLog:
    post:
      tags:
      - EventlogService
      description: Process an Omni Event Log
      operationId: EventlogService_ProcessOmniEventLog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.eventlog.v1alpha1.ProcessOmniEventLogRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.eventlog.v1alpha1.ProcessOmniEventLogResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/message/v1alpha1/orgs/{org}/messages:
    get:
      tags:
      - MessageService
      description: method to list messages
      operationId: MessageService_ListMessages
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: page size
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: page token
        schema:
          type: string
      - name: filter
        in: query
        description: filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.message.v1alpha1.ListMessagesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/message/v1alpha1/orgs/{org}/messages/{message}:
    get:
      tags:
      - MessageService
      description: method to get message
      operationId: MessageService_GetMessage
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: message
        in: path
        description: The message id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/oauth/v1alpha1/orgs/{org}/oauthConfigs:
    get:
      tags:
      - OauthService
      description: Method to list oauthConfigs
      operationId: OauthService_ListOauthConfigs
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.oauth.v1alpha1.ListOauthConfigsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/oauth/v1alpha1/orgs/{org}/oauthConfigs/{oauthConfig}:
    get:
      tags:
      - OauthService
      description: Method to get oauthConfig
      operationId: OauthService_GetOauthConfig
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: oauthConfig
        in: path
        description: The oauthConfig id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.oauth.v1alpha1.OauthConfig'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - OauthService
      description: method to update an oauth config
      operationId: OauthService_UpdateOauthConfig
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: oauthConfig
        in: path
        description: The oauthConfig id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the field mask used to update the Oauth Config
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.oauth.v1alpha1.OauthConfig'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.oauth.v1alpha1.OauthConfig'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/project/v1alpha1/orgs/{org}/projects:
    get:
      tags:
      - ProjectService
      description: Method to list projects
      operationId: ProjectService_ListProjects
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.project.v1alpha1.ListProjectsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - ProjectService
      description: Method to create a project
      operationId: ProjectService_CreateProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/project/v1alpha1/orgs/{org}/projects/{project}:
    get:
      tags:
      - ProjectService
      description: Method to get a rpoject
      operationId: ProjectService_GetProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - ProjectService
      description: Method to delete a project
      operationId: ProjectService_DeleteProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - ProjectService
      description: Method to update a project
      operationId: ProjectService_UpdateProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the update mask
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/signature/v1alpha1/orgs/{org}/signatures/{signature}:
    delete:
      tags:
      - SignatureService
      description: Method to delete a signature
      operationId: SignatureService_DeleteSignature
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: signature
        in: path
        description: The signature id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - SignatureService
      description: Method to update a signature
      operationId: SignatureService_UpdateSignature
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: signature
        in: path
        description: The signature id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the field mask used to update the signature
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/signatures/v1alpha1/orgs/{org}/signatures:
    get:
      tags:
      - SignatureService
      description: Method to list signatures
      operationId: SignatureService_ListSignatures
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.ListSignaturesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - SignatureService
      description: Method to create a signature
      operationId: SignatureService_CreateSignature
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/signatures/v1alpha1/orgs/{org}/signatures/{signature}:
    get:
      tags:
      - SignatureService
      description: Method to get signature
      operationId: SignatureService_GetSignature
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: signature
        in: path
        description: The signature id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/smsnumber/v1alpha1/orgs/{org}/smsNumbers:
    get:
      tags:
      - SmsNumberService
      description: method to list sms number
      operationId: SmsNumberService_ListSmsNumbers
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: page size
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: page token
        schema:
          type: string
      - name: filter
        in: query
        description: filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.smsnumber.v1alpha1.ListSmsNumbersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/smsnumber/v1alpha1/orgs/{org}/smsNumbers/{smsNumber}:
    get:
      tags:
      - SmsNumberService
      description: method to get sms number
      operationId: SmsNumberService_GetSmsNumber
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: smsNumber
        in: path
        description: The smsNumber id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.smsnumber.v1alpha1.SmsNumber'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/task/v1alpha1/orgs/{org}/tasks:
    get:
      tags:
      - TaskService
      description: method to list tasks
      operationId: TaskService_ListTasks
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: page size
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: page token
        schema:
          type: string
      - name: filter
        in: query
        description: filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.task.v1alpha1.ListTasksResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/task/v1alpha1/orgs/{org}/tasks/{task}:
    get:
      tags:
      - TaskService
      description: method to get task
      operationId: TaskService_GetTask
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: task
        in: path
        description: The task id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/unsubscribelinks/v1alpha1/orgs/{org}/unsubscribeLinks:
    get:
      tags:
      - UnsubscribeLinkService
      description: Method to list unsubscribe links
      operationId: UnsubscribeLinkService_ListUnsubscribeLinks
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.ListUnsubscribeLinksResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - UnsubscribeLinkService
      description: Method to create unsubscribe link
      operationId: UnsubscribeLinkService_CreateUnsubscribeLink
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/unsubscribelinks/v1alpha1/orgs/{org}/unsubscribeLinks/{unsubscribeLink}:
    get:
      tags:
      - UnsubscribeLinkService
      description: Method to get unsubscribe link
      operationId: UnsubscribeLinkService_GetUnsubscribeLink
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: unsubscribeLink
        in: path
        description: The unsubscribeLink id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - UnsubscribeLinkService
      description: Method to delete unsubscribe link
      operationId: UnsubscribeLinkService_DeleteUnsubscribeLink
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: unsubscribeLink
        in: path
        description: The unsubscribeLink id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - UnsubscribeLinkService
      description: Method to update unsubscribe link
      operationId: UnsubscribeLinkService_UpdateUnsubscribeLink
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: unsubscribeLink
        in: path
        description: The unsubscribeLink id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the field mask used to update the unsubscribe link
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/verifiedemail/v1alpha/orgs/{org}/verifiedEmails:
    post:
      tags:
      - VerifiedEmailService
      description: Method to create a verified email
      operationId: VerifiedEmailService_CreateVerifiedEmail
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/verifiedemail/v1alpha/orgs/{org}/verifiedEmails/{verifiedEmail}:
    delete:
      tags:
      - VerifiedEmailService
      description: method to delete verified email
      operationId: VerifiedEmailService_DeleteVerifiedEmail
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: verifiedEmail
        in: path
        description: The verifiedEmail id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/verifiedemail/v1alpha1/orgs/{org}/verifiedEmails:
    get:
      tags:
      - VerifiedEmailService
      description: method to list verified email
      operationId: VerifiedEmailService_ListVerifiedEmails
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: page size
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: page token
        schema:
          type: string
      - name: filter
        in: query
        description: filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.ListVerifiedEmailsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/verifiedemail/v1alpha1/orgs/{org}/verifiedEmails/{verifiedEmail}:
    get:
      tags:
      - VerifiedEmailService
      description: method to get verified email
      operationId: VerifiedEmailService_GetVerifiedEmail
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: verifiedEmail
        in: path
        description: The verifiedEmail id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - VerifiedEmailService
      description: method to update verified email
      operationId: VerifiedEmailService_UpdateVerifiedEmail
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: verifiedEmail
        in: path
        description: The verifiedEmail id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the field mask used to update the email
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/verifiedemail/v1alpha1/orgs/{org}/verifiedEmails/{verifiedEmail}:resend:
    get:
      tags:
      - VerifiedEmailService
      description: method to resend the verification email
      operationId: VerifiedEmailService_ResendVerifiedEmail
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: verifiedEmail
        in: path
        description: The verifiedEmail id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.ResendVerifiedEmailResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/whatsappnumber/v1alpha1/orgs/{org}/whatsAppNumbers:
    get:
      tags:
      - WhatsAppNumberService
      description: method to list whatsApp number
      operationId: WhatsAppNumberService_ListWhatsAppNumbers
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: page size
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: page token
        schema:
          type: string
      - name: filter
        in: query
        description: filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.whatsappnumber.v1alpha1.ListWhatsAppNumbersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/omni/whatsappnumber/v1alpha1/orgs/{org}/whatsAppNumbers/{whatsAppNumber}:
    get:
      tags:
      - WhatsAppNumberService
      description: method to get whatsApp number
      operationId: WhatsAppNumberService_GetWhatsAppNumber
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: whatsAppNumber
        in: path
        description: The whatsAppNumber id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.whatsappnumber.v1alpha1.WhatsAppNumber'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/agentProfileGroups/v1alpha1/regions/{region}/orgs/{org}/agentProfileGroups:
    get:
      tags:
      - AgentProfileGroupsService
      description: Method to list agent profile groups
      operationId: AgentProfileGroupsService_ListAgentProfileGroups
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Returned page.
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: Used to specify the page token.
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.agentProfileGroups.v1alpha1.ListAgentProfileGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - AgentProfileGroupsService
      description: Method to create an agent profile group
      operationId: AgentProfileGroupsService_CreateAgentProfileGroup
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.agentProfileGroups.v1alpha1.AgentProfileGroup'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.agentProfileGroups.v1alpha1.AgentProfileGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/agentProfileGroups/v1alpha1/regions/{region}/orgs/{org}/agentProfileGroups/{agentProfileGroup}:
    get:
      tags:
      - AgentProfileGroupsService
      description: Method to get an agent profile group
      operationId: AgentProfileGroupsService_GetAgentProfileGroup
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: agentProfileGroup
        in: path
        description: The agentProfileGroup id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.agentProfileGroups.v1alpha1.AgentProfileGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - AgentProfileGroupsService
      description: Method to delete an agent profile group
      operationId: AgentProfileGroupsService_DeleteAgentProfileGroup
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: agentProfileGroup
        in: path
        description: The agentProfileGroup id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - AgentProfileGroupsService
      description: Method to update an agent profile group
      operationId: AgentProfileGroupsService_UpdateAgentProfileGroup
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: agentProfileGroup
        in: path
        description: The agentProfileGroup id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: update mask
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.agentProfileGroups.v1alpha1.AgentProfileGroup'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.agentProfileGroups.v1alpha1.AgentProfileGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/agentProfileGroups/v1alpha1/regions/{region}/orgs/{org}/agentProfileGroups/{agentProfileGroup}:assign:
    post:
      tags:
      - AgentProfileGroupsService
      description: Method to Assign an agent profile group to one or more users
      operationId: AgentProfileGroupsService_AssignAgentProfileGroup
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: agentProfileGroup
        in: path
        description: The agentProfileGroup id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.agentProfileGroups.v1alpha1.AssignAgentProfileGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.agentProfileGroups.v1alpha1.AssignAgentProfileGroupResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/billingplan/v1alpha5/defaultBillingPlans:
    get:
      tags:
      - BillingPlanService
      description: "ListDefaultBillingPlans lists default billing plans.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingPlanService_ListDefaultBillingPlans
      parameters:
      - name: pageSize
        in: query
        description: "the maximum number of billing plans to return. If unspecified,
          at most 50 billing plans\n will be returned. The maximum value is 1000;
          values above 1000 will be coerced to 1000."
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "a page token, received from a previous `ListDefaultBillingPlans`
          call. Provide this to retrieve\n the subsequent page. When paginating, all
          other parameters provided to `ListDefaultBillingPlans`\n must match the
          call that provided the page token."
        schema:
          type: string
      - name: skip
        in: query
        description: the number of billing plans to skip.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.ListDefaultBillingPlansResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - BillingPlanService
      description: "CreateDefaultBillingPlan creates a new default billing plan draft
        using the currently active default\n billing plan as the template (if available).
        If no default billing plan is available, this will create\n an empty default
        billing plan.\n Errors:\n   - grpc.AlreadyExits: A billing plan with the same
        title already exists.\n   - grpc.Internal: An internal error occurred.\n   -
        grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingPlanService_CreateDefaultBillingPlan
      parameters:
      - name: defaultBillingPlanId
        in: query
        description: the id of the billing plan to create.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/billingplan/v1alpha5/defaultBillingPlans/{defaultBillingPlan}:
    get:
      tags:
      - BillingPlanService
      description: "GetDefaultBillingPlan gets a default billing plan.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingPlanService_GetDefaultBillingPlan
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - BillingPlanService
      description: "DeleteDefaultBillingPlan deletes a default billing plan draft.\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid, or the plan is not a draft.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingPlanService_DeleteDefaultBillingPlan
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: allowMissing
        in: query
        description: "if set to true, and the billing plan is missing, the request
          will succeed\n but no action will be taken on the server."
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - BillingPlanService
      description: "UpdateDefaultBillingPlan updates a default billing plan draft.\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid, or the plan is not a draft.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingPlanService_UpdateDefaultBillingPlan
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the update mask.
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/billingplan/v1alpha5/defaultBillingPlans/{defaultBillingPlan}:apply:
    post:
      tags:
      - BillingPlanService
      description: "ApplyDefaultBillingPlanDraft applies a default billing plan draft
        to a billing cycle, making a new active\n default billing plan for the cycle
        using the draft as the template. This will also propagate changes (excluding\n
        customized rates) for all ORG billing plans.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid,
        or the plan is not a draft.\n   - grpc.NotFound: The draft billing plan was
        not found.\n   - grpc.PermissionDenied: The caller does not have the required
        permissions.\n   - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingPlanService_ApplyDefaultBillingPlanDraft
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.ApplyDefaultBillingPlanDraftRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.ApplyDefaultBillingPlanDraftResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/billingplan/v1alpha5/defaultBillingPlans/{defaultBillingPlan}:copy:
    post:
      tags:
      - BillingPlanService
      description: "CopyDefaultBillingPlan creates a duplicate of a default billing
        plan.\n Errors:\n   - grpc.AlreadyExits: A billing plan with the same title
        already exists.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingPlanService_CopyDefaultBillingPlan
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.CopyDefaultBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.CopyDefaultBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/billingplan/v1alpha5/org/{org}/billingPlans:
    get:
      tags:
      - BillingPlanService
      description: "ListBillingPlans lists ORG billing plans.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingPlanService_ListBillingPlans
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: "the maximum number of billing plans to return. If unspecified,
          at most 50 billing plans\n will be returned. The maximum value is 1000;
          values above 1000 will be coerced to 1000."
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "a page token, received from a previous `ListBillingPlans` call.
          Provide this to retrieve the\n subsequent page. When paginating, all other
          parameters provided to `ListBillingPlans` must\n match the call that provided
          the page token."
        schema:
          type: string
      - name: skip
        in: query
        description: the number of billing plans to skip.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.ListBillingPlansResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/billingplan/v1alpha5/orgs/{org}/billingPlans:
    post:
      tags:
      - BillingPlanService
      description: "CreateBillingPlan creates a new ORG billing plan draft using the
        currently active ORG billing plan\n as the template (if available). If no
        ORG billing plan is available, it will use the default. If\n no default billing
        plan available, this will fail.\n Errors:\n   - grpc.AlreadyExits: A billing
        plan with the same title already exists.\n   - grpc.FailedPrecondition: The
        default billing plan is not available.\n   - grpc.Internal: An internal error
        occurred.\n   - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingPlanService_CreateBillingPlan
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlanId
        in: query
        description: the id of the billing plan to create.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/billingplan/v1alpha5/orgs/{org}/billingPlans/{billingPlan}:
    get:
      tags:
      - BillingPlanService
      description: "GetBillingPlan gets an ORG billing plan.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The billing plan was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingPlanService_GetBillingPlan
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - BillingPlanService
      description: "DeleteBillingPlan deletes an ORG billing plan draft.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid, or the plan is not a draft.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingPlanService_DeleteBillingPlan
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: allowMissing
        in: query
        description: "if set to true, and the billing plan is missing, the request
          will succeed\n but no action will be taken on the server."
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - BillingPlanService
      description: "UpdateBillingPlan updates an ORG billing plan draft.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid, or the plan is not a draft.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingPlanService_UpdateBillingPlan
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the update mask.
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/billingplan/v1alpha5/orgs/{org}/billingPlans/{billingPlan}:apply:
    post:
      tags:
      - BillingPlanService
      description: "ApplyBillingPlanDraft applies an ORG billing plan draft to a billing
        cycle, making a new active ORG billing\n plan for the cycle using the draft
        as the template.\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid, or the plan is not a draft.\n
        \  - grpc.NotFound: The draft billing plan was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingPlanService_ApplyBillingPlanDraft
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.ApplyBillingPlanDraftRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.ApplyBillingPlanDraftResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/billingplan/v1alpha5/orgs/{org}/billingPlans/{billingPlan}:copy:
    post:
      tags:
      - BillingPlanService
      description: "CopyBillingPlan creates a duplicate of an ORG billing plan.\n
        Errors:\n   - grpc.AlreadyExits: A billing plan with the same title already
        exists.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingPlanService_CopyBillingPlan
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.CopyBillingPlanRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.CopyBillingPlanResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/billingtag/v1alpha5/billingTags:
    get:
      tags:
      - BillingTagService
      description: "ListBillingTags lists billing tags.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingTagService_ListBillingTags
      parameters:
      - name: pageSize
        in: query
        description: "the maximum number of billing tags to return. If unspecified,
          at most 50 billing tags\n will be returned. The maximum value is 1000; values
          above 1000 will be coerced to 1000."
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "a page token, received from a previous `ListBillingTags` call.
          Provide this to retrieve the\n subsequent page. When paginating, all other
          parameters provided to `ListBillingTags` must\n match the call that provided
          the page token."
        schema:
          type: string
      - name: skip
        in: query
        description: the number of billing tags to skip.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.ListBillingTagsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - BillingTagService
      description: "CreateBillingTag creates a new billing tag.\n Errors:\n   - grpc.AlreadyExits:
        A billing tag with the same title already exists.\n   - grpc.Internal: An
        internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingTagService_CreateBillingTag
      parameters:
      - name: billingTagId
        in: query
        description: the id of the billing tag to create.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/billingtag/v1alpha5/billingTags/{billingTag}:
    get:
      tags:
      - BillingTagService
      description: "GetBillingTag gets a billing tag.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The billing tag does not exist.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingTagService_GetBillingTag
      parameters:
      - name: billingTag
        in: path
        description: The billingTag id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/billingtag/v1alpha5/billingTags:batchCreate:
    post:
      tags:
      - BillingTagService
      description: "BatchCreateBillingTags creates new billing tags.\n Errors:\n   -
        grpc.AlreadyExits: A billing tag with the same title already exists.\n   -
        grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument: The
        request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingTagService_BatchCreateBillingTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BatchCreateBillingTagsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BatchCreateBillingTagsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/events/v1alpha5/processEventsJobs:
    get:
      tags:
      - EventService
      description: "ListProcessEventsJobs lists ProcessEventsJobs.\n Errors:\n   -
        grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument: The
        request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: EventService_ListProcessEventsJobs
      parameters:
      - name: pageSize
        in: query
        description: "the maximum number of matching rules to return. If unspecified,
          at most 50 jobs will be\n returned. The maximum value is 1000; values above
          1000 will be coerced to 1000."
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "a page token, received from a previous `ListProcessEventsJobsRequest`
          call. Provide this\n to retrieve the subsequent page. When paginating, all
          other parameters provided to\n `ListProcessEventsJobsRequest` must match
          the call that provided the page token."
        schema:
          type: string
      - name: skip
        in: query
        description: the number of jobs to skip.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.ListProcessEventsJobsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - EventService
      description: "CreateProcessEventsJob creates a new ProcessEventsJob.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: EventService_CreateProcessEventsJob
      parameters:
      - name: processEventsJobId
        in: query
        description: the process events job id.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.ProcessEventsJob'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.ProcessEventsJob'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/events/v1alpha5/processEventsJobs/{processEventsJob}:
    get:
      tags:
      - EventService
      description: "GetProcessEventsJob gets a ProcessEventsJob.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The job does not exist.\n   - grpc.PermissionDenied: The
        caller does not have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable."
      operationId: EventService_GetProcessEventsJob
      parameters:
      - name: processEventsJob
        in: path
        description: The processEventsJob id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.ProcessEventsJob'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - EventService
      description: "DeleteProcessEventsJob deletes a ProcessEventsJob.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The job does not exist.\n   -
        grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: EventService_DeleteProcessEventsJob
      parameters:
      - name: processEventsJob
        in: path
        description: The processEventsJob id.
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: if set to true, all executions of the job will also be deleted.
        schema:
          type: boolean
      - name: allowMissing
        in: query
        description: "if set to true, and the job is missing, the request will succeed\n
          but no action will be taken on the server."
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/events/v1alpha5/processEventsJobs/{processEventsJob}:run:
    post:
      tags:
      - EventService
      description: "RunProcessEventsJob runs a ProcessEventsJob.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The job does not exist.\n   - grpc.PermissionDenied: The
        caller does not have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable."
      operationId: EventService_RunProcessEventsJob
      parameters:
      - name: processEventsJob
        in: path
        description: The processEventsJob id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.RunProcessEventsJobRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.longrunning.Operation'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/invoice/v1alpha5:generateInvoice:
    post:
      tags:
      - InvoiceService
      description: Generates an invoice for a billing cycle.
      operationId: InvoiceService_GenerateInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.invoice.v1alpha5.GenerateInvoiceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.invoice.v1alpha5.GenerateInvoiceResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/matchingrule/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/draftMatchingRules:
    get:
      tags:
      - MatchingRuleService
      description: "ListDraftMatchingRules lists draft MatchingRules.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: MatchingRuleService_ListDraftMatchingRules
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: "the maximum number of matching rules to return. If unspecified,
          at most 50 matching rules\n will be returned. The maximum value is 1000;
          values above 1000 will be coerced to 1000."
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "a page token, received from a previous `ListDraftMatchingRules`
          call. Provide this to retrieve\n the subsequent page. When paginating, all
          other parameters provided to `ListDraftMatchingRules`\n must match the call
          that provided the page token."
        schema:
          type: string
      - name: skip
        in: query
        description: the number of matching rules to skip.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.ListDraftMatchingRulesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - MatchingRuleService
      description: "CreateDraftMatchingRule creates a new draft MatchingRule.\n Errors:\n
        \  - grpc.AlreadyExits: A matching rule with the same configuration already
        exists.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: MatchingRuleService_CreateDraftMatchingRule
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: draftMatchingRuleId
        in: query
        description: the matching rule id.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/matchingrule/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/draftMatchingRules/{draftMatchingRule}:
    get:
      tags:
      - MatchingRuleService
      description: "GetDraftMatchingRule gets a draft MatchingRule.\n Errors:\n   -
        grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument: The
        request is invalid.\n   - grpc.NotFound: The matching rule was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: MatchingRuleService_GetDraftMatchingRule
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: draftMatchingRule
        in: path
        description: The draftMatchingRule id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - MatchingRuleService
      description: "DeleteDraftMatchingRule deletes a draft MatchingRule.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The matching rule was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: MatchingRuleService_DeleteDraftMatchingRule
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: draftMatchingRule
        in: path
        description: The draftMatchingRule id.
        required: true
        schema:
          type: string
      - name: allowMissing
        in: query
        description: "if set to true, and the matching rule is missing, the request
          will succeed\n but no action will be taken on the server."
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/matchingrule/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/draftMatchingRules:batchDelete:
    post:
      tags:
      - MatchingRuleService
      description: "BatchDeleteDraftMatchingRules deletes multiple draft MatchingRules.\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The matching rules were not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: MatchingRuleService_BatchDeleteDraftMatchingRules
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.BatchDeleteDraftMatchingRulesRequest'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/matchingrule/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/matchingRules/{matchingRule}:
    patch:
      tags:
      - MatchingRuleService
      description: "UpdateDraftMatchingRule updates a draft MatchingRule.\n Errors:\n
        \  - grpc.AlreadyExists: A matching rule with the same configuration already
        exists.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The matching rule was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: MatchingRuleService_UpdateDraftMatchingRule
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: matchingRule
        in: path
        description: The matchingRule id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the list of fields to update, defaults to all populated fields.
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/matchingrule/v1alpha5/matchingRules:
    get:
      tags:
      - MatchingRuleService
      description: "ListMatchingRules lists MatchingRules.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: MatchingRuleService_ListMatchingRules
      parameters:
      - name: pageSize
        in: query
        description: "the maximum number of matching rules to return. If unspecified,
          at most 50 matching rules\n will be returned. The maximum value is 1000;
          values above 1000 will be coerced to 1000."
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "a page token, received from a previous `ListMatchingRules` call.
          Provide this to retrieve the\n subsequent page. When paginating, all other
          parameters provided to `ListMatchingRules` must\n match the call that provided
          the page token."
        schema:
          type: string
      - name: skip
        in: query
        description: the number of matching rules to skip.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.ListMatchingRulesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/matchingrule/v1alpha5/matchingRules/{matchingRule}:
    get:
      tags:
      - MatchingRuleService
      description: "GetMatchingRule gets a MatchingRule.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The matching rule was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: MatchingRuleService_GetMatchingRule
      parameters:
      - name: matchingRule
        in: path
        description: The matchingRule id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.MatchingRule'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/matchingrule/v1alpha5/orgs/{org}/billingPlans/{billingPlan}/draftMatchingRules:
    get:
      tags:
      - MatchingRuleService
      description: "ListDraftMatchingRules lists draft MatchingRules.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: MatchingRuleService_ListDraftMatchingRules
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: "the maximum number of matching rules to return. If unspecified,
          at most 50 matching rules\n will be returned. The maximum value is 1000;
          values above 1000 will be coerced to 1000."
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "a page token, received from a previous `ListDraftMatchingRules`
          call. Provide this to retrieve\n the subsequent page. When paginating, all
          other parameters provided to `ListDraftMatchingRules`\n must match the call
          that provided the page token."
        schema:
          type: string
      - name: skip
        in: query
        description: the number of matching rules to skip.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.ListDraftMatchingRulesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/matchingrule/v1alpha5/orgs/{org}/billingPlans/{billingPlan}/draftMatchingRules/{draftMatchingRule}:
    get:
      tags:
      - MatchingRuleService
      description: "GetDraftMatchingRule gets a draft MatchingRule.\n Errors:\n   -
        grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument: The
        request is invalid.\n   - grpc.NotFound: The matching rule was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: MatchingRuleService_GetDraftMatchingRule
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: draftMatchingRule
        in: path
        description: The draftMatchingRule id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/ratedefinition/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/defaultRateDefinitions:
    get:
      tags:
      - RateDefinitionService
      description: "ListDefaultRateDefinitions lists default rate definitions.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: RateDefinitionService_ListDefaultRateDefinitions
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: the maximum number of default rate definitions to return.
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "a page token, received from a previous `ListDefaultRateDefinitions`
          call.\n Provide this to retrieve the subsequent page."
        schema:
          type: string
      - name: skip
        in: query
        description: the number of rate definitions to skip.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.ListDefaultRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - RateDefinitionService
      description: "CreateDefaultRateDefinition creates a new default draft rate definition.\n
        Errors:\n   - grpc.AlreadyExists: A rate already exists for the specified
        SKU.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: RateDefinitionService_CreateDefaultRateDefinition
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: defaultRateDefinitionId
        in: query
        description: the default rate definition id.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/ratedefinition/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/defaultRateDefinitions/{defaultRateDefinition}:
    get:
      tags:
      - RateDefinitionService
      description: "GetDefaultRateDefinition gets a default rate definition.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate was not found.\n   -
        grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: RateDefinitionService_GetDefaultRateDefinition
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: defaultRateDefinition
        in: path
        description: The defaultRateDefinition id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - RateDefinitionService
      description: "DeleteDefaultRateDefinition deletes a default draft rate definition.\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate was not found.\n   -
        grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: RateDefinitionService_DeleteDefaultRateDefinition
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: defaultRateDefinition
        in: path
        description: The defaultRateDefinition id.
        required: true
        schema:
          type: string
      - name: allowMissing
        in: query
        description: "if set to true, and the rate definition is missing, the request
          will succeed\n but no action will be taken on the server."
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - RateDefinitionService
      description: "UpdateDefaultRateDefinition updates a default draft rate definition.\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate was not found.\n   -
        grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: RateDefinitionService_UpdateDefaultRateDefinition
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: defaultRateDefinition
        in: path
        description: The defaultRateDefinition id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the update mask to apply to the default rate definition.
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/ratedefinition/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/defaultRateDefinitions:batchCreate:
    post:
      tags:
      - RateDefinitionService
      description: "BatchCreateDefaultRateDefinitions creates multiple default draft
        rate definitions.\n Errors:\n   - grpc.AlreadyExists: A rate already exists
        for the specified SKU.\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: RateDefinitionService_BatchCreateDefaultRateDefinitions
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.BatchCreateDefaultRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.BatchCreateDefaultRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/ratedefinition/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/defaultRateDefinitions:batchDelete:
    post:
      tags:
      - RateDefinitionService
      description: "BatchDeleteDefaultRateDefinitions deletes multiple default draft
        rate definitions.\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        rates were not found.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: RateDefinitionService_BatchDeleteDefaultRateDefinitions
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.BatchDeleteDefaultRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/ratedefinition/v1alpha5/orgs/{org}/billingPlans/{billingPlan}/rateDefinitions:
    get:
      tags:
      - RateDefinitionService
      description: "ListRateDefinitions lists rate definitions.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: RateDefinitionService_ListRateDefinitions
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: the maximum number of rate definitions to return.
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "a page token, received from a previous `ListRateDefinitions`
          call.\n Provide this to retrieve the subsequent page."
        schema:
          type: string
      - name: skip
        in: query
        description: the number of rate definitions to skip.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.ListRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/ratedefinition/v1alpha5/orgs/{org}/billingPlans/{billingPlan}/rateDefinitions/{rateDefinition}:
    get:
      tags:
      - RateDefinitionService
      description: "GetRateDefinition gets a rate definition.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rate was not found.\n   - grpc.PermissionDenied: The
        caller does not have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable."
      operationId: RateDefinitionService_GetRateDefinition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: rateDefinition
        in: path
        description: The rateDefinition id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - RateDefinitionService
      description: "UpdateRateDefinition updates a draft rate definition.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate was not found.\n   -
        grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: RateDefinitionService_UpdateRateDefinition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: rateDefinition
        in: path
        description: The rateDefinition id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the update mask to apply to the rate definition.
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/ratedefinition/v1alpha5/orgs/{org}/billingPlans/{billingPlan}/rateDefinitions/{rateDefinition}:reset:
    post:
      tags:
      - RateDefinitionService
      description: "ResetRateDefinition resets a draft rate definition to the default
        rate definition value.\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        rate was not found.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: RateDefinitionService_ResetRateDefinition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: rateDefinition
        in: path
        description: The rateDefinition id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.ResetRateDefinitionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.ResetRateDefinitionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/billing/ratedefinition/v1alpha5/orgs/{org}/billingPlans/{billingPlan}/rateDefinitions:batchReset:
    post:
      tags:
      - RateDefinitionService
      description: "BatchResetRateDefinitions resets multiple draft rate definitions
        to their respective default rate definition value.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rates were not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: RateDefinitionService_BatchResetRateDefinitions
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.BatchResetRateDefinitionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.BatchResetRateDefinitionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/exiles/v1alpha1/regions/{region}/orgs/{org}/exileCertificates:
    get:
      tags:
      - ExilesService
      description: Method to list exile certificates
      operationId: ExilesService_ListExileCertificates
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Returned page.
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: Used to specify the page token.
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.ListExileCertificatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - ExilesService
      description: "CreateExileCertificate creates a new TLS certificate and\n returns
        the exile ceritificate for the current organization."
      operationId: ExilesService_CreateExileCertificate
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.ExileCertificate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.ExileCertificate'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/exiles/v1alpha1/regions/{region}/orgs/{org}/exileCertificates/{exileCertificate}:
    get:
      tags:
      - ExilesService
      description: Method to get an exile certificate
      operationId: ExilesService_GetExileCertificate
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: exileCertificate
        in: path
        description: The exileCertificate id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.ExileCertificate'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - ExilesService
      description: RotateExileCertificate rotates the certificate info
      operationId: ExilesService_RotateExileCertificate
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: exileCertificate
        in: path
        description: The exileCertificate id.
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: The name of the exile certificate to rotate.
        schema:
          type: string
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.RotateExileCertificateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/idp/v1alpha1/regions/{region}/orgs/{org}/idpClients:
    get:
      tags:
      - IdpClientService
      description: Method to list idpClients
      operationId: IdpClientService_ListIdpClients
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: Use to specify the page token
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.idp.v1alpha1.ListIdpClientsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - IdpClientService
      description: Method for creating a idpClient
      operationId: IdpClientService_CreateIdpClient
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: idpClientId
        in: query
        description: The idpClient id for the idpClient
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/idp/v1alpha1/regions/{region}/orgs/{org}/idpClients/{idpClient}:
    get:
      tags:
      - IdpClientService
      description: Method to get an IdpClient
      operationId: IdpClientService_GetIdpClient
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: idpClient
        in: path
        description: The idpClient id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - IdpClientService
      description: Method for deleting a idpClient
      operationId: IdpClientService_DeleteIdpClient
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: idpClient
        in: path
        description: The idpClient id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - IdpClientService
      description: Method for updating a idpClient
      operationId: IdpClientService_UpdateIdpClient
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: idpClient
        in: path
        description: The idpClient id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/organizations/v1alpha1/organizations:
    get:
      tags:
      - OrganizationsService
      description: "(-- api-linter: core::0132::method-signature=disabled\n     aip.dev/not-precedent:
        We need to do this because organizations is a top level resource with no parent.\n
        \    Leaving empty signature is specified in google AIP-132. --)\n (-- api-linter:
        core::0132::http-uri-parent=disabled\n     aip.dev/not-precedent: We need
        to do this because there is no parent. --)\n ListOrganizations is a method
        to list organizations."
      operationId: OrganizationsService_ListOrganizations
      parameters:
      - name: pageSize
        in: query
        description: "The maximum number of organizations to return.\n If unspecified,
          at most 50 organizations will be returned.\n The maximum value is 1000;
          values above 1000 will be coerced to 1000."
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "A page token, received from a previous `ListOrganizations` call.\n
          Provide this to retrieve the subsequent page.\n When paginating, all other
          parameters provided to `ListOrganizations` must match\n the call that provided
          the page token."
        schema:
          type: string
      - name: filter
        in: query
        description: The filter to apply to list results.
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.ListOrganizationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - OrganizationsService
      description: "(-- api-linter: core::0133::method-signature=disabled\n     aip.dev/not-precedent:
        We need to pass the allowed countries in the request\n     to create an organization.
        And it will be stored in the Organization Preferences. --)\n CreateOrganization
        is a method to create an organization."
      operationId: OrganizationsService_CreateOrganization
      parameters:
      - name: allowedCountries
        in: query
        description: "Allowed countries is the list of allowed countries preference
          for the organization.\n This represent the string value of the api.commons.Country
          enum.\n This will be stored in the Organization Preferences."
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/organizations/v1alpha1/organizations/{organization}:
    get:
      tags:
      - OrganizationsService
      description: GetOrganization is a method to get an organization.
      operationId: OrganizationsService_GetOrganization
      parameters:
      - name: organization
        in: path
        description: The organization id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - OrganizationsService
      description: UpdateOrganization is a method to update an organization.
      operationId: OrganizationsService_UpdateOrganization
      parameters:
      - name: organization
        in: path
        description: The organization id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The field mask to apply to the organization.
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/organizations/v1alpha1/organizations/{organization}/lastScheduledDate:
    get:
      tags:
      - OrganizationsService
      description: GetLastScheduledDate is a method to get the last scheduled date
        for an organization.
      operationId: OrganizationsService_GetLastScheduledDate
      parameters:
      - name: organization
        in: path
        description: The organization id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.LastScheduledDate'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/organizations/v1alpha1/organizations/{organization}:streamOwnedOrganizations:
    get:
      tags:
      - OrganizationsService
      description: StreamOwnedOrganizations is a method to list all organizations
        under the p3 hierarchy.
      operationId: OrganizationsService_StreamOwnedOrganizations
      parameters:
      - name: organization
        in: path
        description: The organization id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.StreamOwnedOrganizationsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/organizations/v1alpha1/organizations:archiveOrganization:
    post:
      tags:
      - OrganizationsService
      description: "ArchiveOrganization is a method to archive an organization.\n
        An archived organization effectively disappears, but isn't deleted."
      operationId: OrganizationsService_ArchiveOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.ArchiveOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.ArchiveOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/organizations/v1alpha1/organizations:unArchiveOrganization:
    post:
      tags:
      - OrganizationsService
      description: UnArchiveOrganization is a method to restore an archived organization.
      operationId: OrganizationsService_UnArchiveOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.UnArchiveOrganizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.UnArchiveOrganizationResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/adminClientPreferences/{adminClientPreference}:
    get:
      tags:
      - PreferencesService
      description: GetAdminClientPreferences returns the admin client preferences
        for the organization.
      operationId: PreferencesService_GetAdminClientPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: adminClientPreference
        in: path
        description: The adminClientPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AdminClientPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdateAdminClientPreferences updates the admin client preferences
        for the organization.
      operationId: PreferencesService_UpdateAdminClientPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: adminClientPreference
        in: path
        description: The adminClientPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AdminClientPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AdminClientPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/agentPreferences/{agentPreference}:
    get:
      tags:
      - PreferencesService
      description: "AgentPreferences\n\n Method to get the agent preferences"
      operationId: PreferencesService_GetAgentPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: agentPreference
        in: path
        description: The agentPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: Method to update agent preferences
      operationId: PreferencesService_UpdateAgentPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: agentPreference
        in: path
        description: The agentPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/agentQuickViewPreferences/{agentQuickViewPreference}:
    get:
      tags:
      - PreferencesService
      description: Method to get the agent quick view preferences
      operationId: PreferencesService_GetAgentQuickViewPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: agentQuickViewPreference
        in: path
        description: The agentQuickViewPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentQuickViewPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: Method to update agent quick view preferences
      operationId: PreferencesService_UpdateAgentQuickViewPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: agentQuickViewPreference
        in: path
        description: The agentQuickViewPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentQuickViewPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentQuickViewPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/authenticationPreferences/{authenticationPreference}:
    get:
      tags:
      - PreferencesService
      description: Method to get the authentication preferences
      operationId: PreferencesService_GetAuthenticationPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: authenticationPreference
        in: path
        description: The authenticationPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AuthenticationPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: Method to update authentication preferences
      operationId: PreferencesService_UpdateAuthenticationPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: authenticationPreference
        in: path
        description: The authenticationPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AuthenticationPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AuthenticationPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/broadcastPreferences/{broadcastPreference}:
    get:
      tags:
      - PreferencesService
      description: Method to get the broadcast preferences
      operationId: PreferencesService_GetBroadcastPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: broadcastPreference
        in: path
        description: The broadcastPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BroadcastPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: Method to update broadcast preferences
      operationId: PreferencesService_UpdateBroadcastPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: broadcastPreference
        in: path
        description: The broadcastPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BroadcastPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BroadcastPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/businessPreferences/{businessPreference}:
    get:
      tags:
      - PreferencesService
      description: Method to get the business preferences
      operationId: PreferencesService_GetBusinessPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: businessPreference
        in: path
        description: The businessPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BusinessPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: Method to update business preferences
      operationId: PreferencesService_UpdateBusinessPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: businessPreference
        in: path
        description: The businessPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BusinessPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BusinessPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/compliancePreferences/{compliancePreference}:
    get:
      tags:
      - PreferencesService
      description: GetCompliancePreferences returns the compliance preferences for
        the organization.
      operationId: PreferencesService_GetCompliancePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: compliancePreference
        in: path
        description: The compliancePreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.CompliancePreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdateCompliancePreferences updates the compliance preferences
        for the organization.
      operationId: PreferencesService_UpdateCompliancePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: compliancePreference
        in: path
        description: The compliancePreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.CompliancePreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.CompliancePreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/contactPreferences/{contactPreference}:
    get:
      tags:
      - PreferencesService
      description: GetContactPreferences returns the contact preferences for the organization.
      operationId: PreferencesService_GetContactPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: contactPreference
        in: path
        description: The contactPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdateContactPreferences updates the contact preferences for the
        organization.
      operationId: PreferencesService_UpdateContactPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: contactPreference
        in: path
        description: The contactPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/dashboardGeneralPreferences/{dashboardGeneralPreference}:
    get:
      tags:
      - PreferencesService
      description: GetDashboardGeneralPreferences returns the dashboard general preferences
        for the organization.
      operationId: PreferencesService_GetDashboardGeneralPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: dashboardGeneralPreference
        in: path
        description: The dashboardGeneralPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardGeneralPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdateDashboardGeneralPreferences updates the dashboard general
        preferences for the organization.
      operationId: PreferencesService_UpdateDashboardGeneralPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: dashboardGeneralPreference
        in: path
        description: The dashboardGeneralPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardGeneralPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardGeneralPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/dashboardQueuePreferences/{dashboardQueuePreference}:
    get:
      tags:
      - PreferencesService
      description: GetDashboardQueuePreferences returns the dashboard queue preferences
        for the organization.
      operationId: PreferencesService_GetDashboardQueuePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: dashboardQueuePreference
        in: path
        description: The dashboardQueuePreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardQueuePreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdateDashboardQueuePreferences updates the dashboard queue preferences
        for the organization.
      operationId: PreferencesService_UpdateDashboardQueuePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: dashboardQueuePreference
        in: path
        description: The dashboardQueuePreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardQueuePreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardQueuePreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/emailSmsPreferences/{emailSmsPreference}:
    get:
      tags:
      - PreferencesService
      description: GetEmailSmsPreferences returns the email sms preferences for the
        organization.
      operationId: PreferencesService_GetEmailSmsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: emailSmsPreference
        in: path
        description: The emailSmsPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EmailSmsPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdateEmailSmsPreferencesPreferences updates the email sms preferences
        for the organization.
      operationId: PreferencesService_UpdateEmailSmsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: emailSmsPreference
        in: path
        description: The emailSmsPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EmailSmsPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EmailSmsPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/endOfDayPreferences/{endOfDayPreference}:
    get:
      tags:
      - PreferencesService
      description: "(-- api-linter: core::0136::prepositions=disabled\n     aip.dev/not-precedent:
        We need to do this because the name of the preference. --)\n GetEndOfDayPreferences
        returns the end of day preferences for the organization."
      operationId: PreferencesService_GetEndOfDayPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: endOfDayPreference
        in: path
        description: The endOfDayPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EndOfDayPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: "(-- api-linter: core::0136::prepositions=disabled\n     aip.dev/not-precedent:
        We need to do this because the name of the preference. --)\n UpdateEndOfDayPreferences
        updates the end of day preferences for the organization."
      operationId: PreferencesService_UpdateEndOfDayPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: endOfDayPreference
        in: path
        description: The endOfDayPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EndOfDayPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EndOfDayPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/organizationPreferences/{organizationPreference}:
    get:
      tags:
      - PreferencesService
      description: GetOrganizationPreferences returns the organization preferences.
      operationId: PreferencesService_GetOrganizationPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: organizationPreference
        in: path
        description: The organizationPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.OrganizationPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdateOrganizationPreferences updates the organization preferences.
      operationId: PreferencesService_UpdateOrganizationPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: organizationPreference
        in: path
        description: The organizationPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.OrganizationPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.OrganizationPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/phonePreferences/{phonePreference}:
    get:
      tags:
      - PreferencesService
      description: GetPhonePreferences returns the phone preferences.
      operationId: PreferencesService_GetPhonePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: phonePreference
        in: path
        description: The phonePreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.PhonePreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdatePhonePreferences updates the phone preferences.
      operationId: PreferencesService_UpdatePhonePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: phonePreference
        in: path
        description: The phonePreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.PhonePreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.PhonePreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/recordPreferences/{recordPreference}:
    patch:
      tags:
      - PreferencesService
      description: UpdateRecordingPreferences updates Recording preferences for an
        org.
      operationId: PreferencesService_UpdateRecordingPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: recordPreference
        in: path
        description: The recordPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: Field mask for update request
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RecordingPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RecordingPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/recordingPreferences/{recordingPreference}:
    get:
      tags:
      - PreferencesService
      description: GetRecordingPreferences returns all recording options for an org.
      operationId: PreferencesService_GetRecordingPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: recordingPreference
        in: path
        description: The recordingPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RecordingPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/reportFilterPreferences/{reportFilterPreference}:
    get:
      tags:
      - PreferencesService
      description: GetReportFilterPreferences returns all report filter options for
        an org.
      operationId: PreferencesService_GetReportFilterPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: reportFilterPreference
        in: path
        description: The reportFilterPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ReportFilterPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdateReportFilterPreferences updates report filter preferences
        for an org.
      operationId: PreferencesService_UpdateReportFilterPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: reportFilterPreference
        in: path
        description: The reportFilterPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: Field mask for update request
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ReportFilterPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ReportFilterPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/schedulePreferences/{schedulePreference}:
    get:
      tags:
      - PreferencesService
      description: GetSchedulePreferences returns the schedule preferences.
      operationId: PreferencesService_GetSchedulePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: schedulePreference
        in: path
        description: The schedulePreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.SchedulePreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdateSchedulePreferences updates the schedule preferences.
      operationId: PreferencesService_UpdateSchedulePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: schedulePreference
        in: path
        description: The schedulePreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: Field mask for filtering each field.
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.SchedulePreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.SchedulePreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/scorecardsPreferences/{scorecardsPreference}:
    get:
      tags:
      - PreferencesService
      description: GetScorecardsPreferences returns the score card preferences.
      operationId: PreferencesService_GetScorecardsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: scorecardsPreference
        in: path
        description: The scorecardsPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ScorecardsPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdateScorecardsPreferences updates the score cards preferences.
      operationId: PreferencesService_UpdateScorecardsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: scorecardsPreference
        in: path
        description: The scorecardsPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: Field mask for filtering each field.
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ScorecardsPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ScorecardsPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/voiceAnalyticsPreferences:
    get:
      tags:
      - PreferencesService
      description: ListVoiceAnalyticsPreferences returns the voice analytics preferences
        in the current region.
      operationId: PreferencesService_ListVoiceAnalyticsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The maximum number of preferences to return
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: "A page token, received from a previous `ListVoiceAnalyticsPreferences`
          call.\n Provide this to retrieve the subsequent page.\n When paginating,
          all other parameters provided to `ListVoiceAnalyticsPreferences` must match\n
          the call that provided the page token."
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ListVoiceAnalyticsPreferencesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/voiceAnalyticsPreferences/{voiceAnalyticsPreference}:
    get:
      tags:
      - PreferencesService
      description: GetVoiceAnalyticsPreferences returns the voice analytics preferences.
      operationId: PreferencesService_GetVoiceAnalyticsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: voiceAnalyticsPreference
        in: path
        description: The voiceAnalyticsPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.VoiceAnalyticsPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdateVoiceAnalyticsPreferences updates the voice analytics preferences.
      operationId: PreferencesService_UpdateVoiceAnalyticsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: voiceAnalyticsPreference
        in: path
        description: The voiceAnalyticsPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.VoiceAnalyticsPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.VoiceAnalyticsPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/preferences/v1alpha1/orgs/{org}/webhookPreferences/{webhookPreference}:
    get:
      tags:
      - PreferencesService
      description: GetWebhookPreferences returns the webhook preferences.
      operationId: PreferencesService_GetWebhookPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: webhookPreference
        in: path
        description: The webhookPreference id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.WebhookPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - PreferencesService
      description: UpdateWebhookPreferences updates the webhook preferences.
      operationId: PreferencesService_UpdateWebhookPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: webhookPreference
        in: path
        description: The webhookPreference id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.WebhookPreferences'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.WebhookPreferences'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/skills/v1alpha1/regions/{region}/orgs/{org}/skillGroups:
    post:
      tags:
      - SkillsService
      description: Method to create a skill group
      operationId: SkillsService_CreateSkillGroup
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/skills/v1alpha1/regions/{region}/orgs/{org}/skillGroups/{skillGroup}:
    get:
      tags:
      - SkillsService
      description: Method to get a skill group
      operationId: SkillsService_GetSkillGroup
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: skillGroup
        in: path
        description: The skillGroup id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - SkillsService
      description: Method to delete a skill group
      operationId: SkillsService_DeleteSkillGroup
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: skillGroup
        in: path
        description: The skillGroup id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content: {}
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - SkillsService
      description: Method to update a skill group
      operationId: SkillsService_UpdateSkillGroup
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: skillGroup
        in: path
        description: The skillGroup id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: The list of fields to update.
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/skills/v1alpha1/regions/{region}/orgs/{org}/skillgroups:
    get:
      tags:
      - SkillsService
      description: Method to list skill groups
      operationId: SkillsService_ListSkillGroups
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Returned page.
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: Used to specify the page token.
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.ListSkillGroupsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/tokens/v1alpha1/keys:
    get:
      tags:
      - TokensService
      description: "Lists the jwks used for API token verification\n\n Disable list
        method lint rules, this isn't truly an AIP-132 'List' method in\n the sense
        that isn't explicitly associated with the resource itself."
      operationId: TokensService_ListKeys
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.ListKeysResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/tokens/v1alpha1/orgs/{org}/apiTokens:
    get:
      tags:
      - TokensService
      description: Method to list API tokens
      operationId: TokensService_ListAPITokens
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: Standard filter string
        schema:
          type: string
      - name: pageSize
        in: query
        description: Returned page.
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: Used to specify the page token.
        schema:
          type: string
      - name: orderBy
        in: query
        description: Which fields and what sorting order to return the resources in.
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.ListAPITokensResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/tokens/v1alpha1/orgs/{org}/apiTokens/{apiToken}:
    get:
      tags:
      - TokensService
      description: Method to get an API token
      operationId: TokensService_GetAPIToken
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: apiToken
        in: path
        description: The apiToken id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/tokens/v1alpha1/orgs/{org}/apiTokens/{apiToken}:generate:
    post:
      tags:
      - TokensService
      description: Method to create an API token
      operationId: TokensService_GenerateAPIToken
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: apiToken
        in: path
        description: The apiToken id.
        required: true
        schema:
          type: string
      - name: apiTokenId
        in: query
        description: "The ID to use for the API token, wahich will become the final
          component\n of the API token's resource name\n\n There are no restrictions."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.GenerateAPITokenResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/tokens/v1alpha1/orgs/{org}/apiTokens/{apiToken}:recordUse:
    post:
      tags:
      - TokensService
      description: Records that an API token was used, updating its last use time
        to the current time
      operationId: TokensService_RecordAPITokenUse
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: apiToken
        in: path
        description: The apiToken id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.RecordAPITokenUseRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/tokens/v1alpha1/orgs/{org}/apiTokens/{apiToken}:revoke:
    post:
      tags:
      - TokensService
      description: Method to revoke an API token
      operationId: TokensService_RevokeAPIToken
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: apiToken
        in: path
        description: The apiToken id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.RevokeAPITokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/users/v1alpha1/orgs/{org}/users:
    get:
      tags:
      - UsersService
      description: Method to list users
      operationId: UsersService_ListUsers
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: Use to specify the page token
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.users.v1alpha1.ListUsersResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - UsersService
      description: "(-- api-linter: core::0133::method-signature=disabled\n     aip.dev/not-precedent:
        The password of the user is required\n --)\n Method to create an user"
      operationId: UsersService_CreateUser
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: password for new user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/org/users/v1alpha1/orgs/{org}/users/{user}:
    get:
      tags:
      - UsersService
      description: Method to get a user
      operationId: UsersService_GetUser
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - UsersService
      description: Method to update a user
      operationId: UsersService_UpdateUser
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: update mask
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}:
    get:
      tags:
      - TicketService
      description: Public method to list sla conditions
      operationId: TicketService_ListSlaConditions
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ListSlaConditionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/project:
    post:
      tags:
      - TicketService
      description: Method to create a Project
      operationId: TicketService_CreateProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects:
    get:
      tags:
      - TicketService
      description: Method to list Projects
      operationId: TicketService_ListProjects
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ListProjectsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects/{project}:
    get:
      tags:
      - TicketService
      description: Method to get a project
      operationId: TicketService_GetProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - TicketService
      description: Method to delete a Project
      operationId: TicketService_DeleteProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - TicketService
      description: Method to update a Project
      operationId: TicketService_UpdateProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the update mask
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/sla:
    post:
      tags:
      - TicketService
      description: Method to create a Sla
      operationId: TicketService_CreateSla
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/slas:
    get:
      tags:
      - TicketService
      description: Method to list Sla
      operationId: TicketService_ListSlas
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ListSlasResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/slas/{sla}:
    get:
      tags:
      - TicketService
      description: Method to get a rpoject
      operationId: TicketService_GetSla
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: sla
        in: path
        description: The sla id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    delete:
      tags:
      - TicketService
      description: Method to delete a Sla
      operationId: TicketService_DeleteSla
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: sla
        in: path
        description: The sla id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    patch:
      tags:
      - TicketService
      description: Method to update a Sla
      operationId: TicketService_UpdateSla
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: sla
        in: path
        description: The sla id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the update mask
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticket:
    post:
      tags:
      - TicketService
      description: Public Method to create a ticket.
      operationId: TicketService_CreateTicket
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticket/{ticket}:
    patch:
      tags:
      - TicketService
      description: Public Method to update a ticket.
      operationId: TicketService_UpdateTicket
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: ticket
        in: path
        description: The ticket id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the update mask
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticketAction:
    get:
      tags:
      - TicketService
      description: Public method to list ticket_actions
      operationId: TicketService_ListTicketActions
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ListTicketActionsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - TicketService
      description: Public Method to create a ticket_action.
      operationId: TicketService_CreateTicketAction
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticketAction/{ticketAction}:
    patch:
      tags:
      - TicketService
      description: Public Method to update a ticket_action.
      operationId: TicketService_UpdateTicketAction
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: ticketAction
        in: path
        description: The ticketAction id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the update mask
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticketActions/{ticketAction}:
    get:
      tags:
      - TicketService
      description: Public method to get ticket_action
      operationId: TicketService_GetTicketAction
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: ticketAction
        in: path
        description: The ticketAction id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticketActions/{ticketAction}:close:
    get:
      tags:
      - TicketService
      description: Public Method to Close a ticket_action
      operationId: TicketService_CloseTicketAction
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: ticketAction
        in: path
        description: The ticketAction id.
        required: true
        schema:
          type: string
      - name: comment
        in: query
        description: description of the comment
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.CloseTicketActionResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticketTemplate:
    get:
      tags:
      - TicketService
      description: "Public method to list ticket_templates\n (-- api-linter: core::0132::method-signature=disabled\n
        \    aip.dev/not-precedent: We need to do this because reasons. --)"
      operationId: TicketService_ListTicketTemplates
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: projectId
        in: query
        description: "(-- api-linter: core::0132::request-unknown-fields=disabled\n
          \    aip.dev/not-precedent: We really need this field because reasons. --)\n
          project_id"
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ListTicketTemplatesResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
    post:
      tags:
      - TicketService
      description: Public Method to create a ticket_tempalte.
      operationId: TicketService_CreateTicketTemplate
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticketTemplate/{ticketTemplate}:
    patch:
      tags:
      - TicketService
      description: Public Method to update a ticket_template.
      operationId: TicketService_UpdateTicketTemplate
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: ticketTemplate
        in: path
        description: The ticketTemplate id.
        required: true
        schema:
          type: string
      - name: updateMask
        in: query
        description: the update mask
        schema:
          type: string
          format: field-mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticketTemplates/{ticketTemplate}:
    get:
      tags:
      - TicketService
      description: Public method to get ticket_template
      operationId: TicketService_GetTicketTemplate
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: ticketTemplate
        in: path
        description: The ticketTemplate id.
        required: true
        schema:
          type: string
      - name: projectId
        in: query
        description: "(-- api-linter: core::0131::request-unknown-fields=disabled\n
          \    aip.dev/not-precedent: We really need this field because reasons. --)\n
          project_id"
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticketTemplates/{ticketTemplate}:assign:
    get:
      tags:
      - TicketService
      description: Public method to assign ticket_template
      operationId: TicketService_AssignTicketTemplate
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: ticketTemplate
        in: path
        description: The ticketTemplate id.
        required: true
        schema:
          type: string
      - name: projectId
        in: query
        description: template proejct_id
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.AssignTicketTemplateResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/tickets:
    get:
      tags:
      - TicketService
      description: Public method to list tickets
      operationId: TicketService_ListTickets
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: returned page
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        description: used to specify the page token
        schema:
          type: string
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ListTicketsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/tickets/{ticket}:
    get:
      tags:
      - TicketService
      description: Public method to get ticket
      operationId: TicketService_GetTicket
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: ticket
        in: path
        description: The ticket id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/tickets/{ticket}:close:
    get:
      tags:
      - TicketService
      description: Public Method to Close a ticket
      operationId: TicketService_CloseTicket
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: ticket
        in: path
        description: The ticket id.
        required: true
        schema:
          type: string
      - name: comment
        in: query
        description: description of the comment
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.CloseTicketResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/wfo/vana/v1alpha1/orgs/{org}/regions/{region}/zones/{zone}/recordings/{recording}:generateRecordingDownloadUri:
    post:
      tags:
      - RecordingService
      description: Generates a recording download URI.
      operationId: RecordingService_GenerateRecordingDownloadUri
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: zone
        in: path
        description: The zone id.
        required: true
        schema:
          type: string
      - name: recording
        in: path
        description: The recording id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.wfo.vana.v1alpha1.GenerateRecordingDownloadUriRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.wfo.vana.v1alpha1.GenerateRecordingDownloadUriResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
  /tcn/wfo/vana/v1alpha1/orgs/{org}/regions/{region}/zones/{zone}/recordings:search:
    post:
      tags:
      - RecordingService
      description: Searches recordings.
      operationId: RecordingService_SearchRecordings
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: zone
        in: path
        description: The zone id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.wfo.vana.v1alpha1.SearchRecordingsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.wfo.vana.v1alpha1.SearchRecordingsResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.rpc.Status'
components:
  schemas:
    google.longrunning.Operation:
      type: object
      properties:
        name:
          type: string
          description: "The server-assigned name, which is only unique within the
            same service that\n originally returns it. If you use the default HTTP
            mapping, the\n `name` should be a resource name ending with `operations/{unique_id}`."
        metadata:
          allOf:
          - $ref: '#/components/schemas/google.protobuf.Any'
          description: "Service-specific metadata associated with the operation.  It
            typically\n contains progress information and common metadata such as
            create time.\n Some services might not provide such metadata.  Any method
            that returns a\n long-running operation should document the metadata type,
            if any."
        done:
          type: boolean
          description: "If the value is `false`, it means the operation is still in
            progress.\n If `true`, the operation is completed, and either `error`
            or `response` is\n available."
        error:
          allOf:
          - $ref: '#/components/schemas/google.rpc.Status'
          description: The error result of the operation in case of failure or cancellation.
        response:
          allOf:
          - $ref: '#/components/schemas/google.protobuf.Any'
          description: "The normal, successful response of the operation.  If the
            original\n method returns no data on success, such as `Delete`, the response
            is\n `google.protobuf.Empty`.  If the original method is standard\n `Get`/`Create`/`Update`,
            the response should be the resource.  For other\n methods, the response
            should have the type `XxxResponse`, where `Xxx`\n is the original method
            name.  For example, if the original method name\n is `TakeSnapshot()`,
            the inferred response type is\n `TakeSnapshotResponse`."
      description: "This resource represents a long-running operation that is the
        result of a\n network API call."
    google.protobuf.Any:
      type: object
      properties:
        '@type':
          type: string
          description: The type of the serialized message.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that
        describes the type of the serialized message.
    google.rpc.Status:
      type: object
      properties:
        code:
          type: integer
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
          format: int32
        message:
          type: string
          description: A developer-facing error message, which should be in English.
            Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details]
            field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/google.protobuf.Any'
          description: A list of messages that carry the error details.  There is
            a common set of message types for APIs to use.
      description: 'The `Status` type defines a logical error model that is suitable
        for different programming environments, including REST APIs and RPC APIs.
        It is used by [gRPC](https://github.com/grpc). Each `Status` message contains
        three pieces of data: error code, error message, and error details. You can
        find out more about this error model and how to work with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).'
    google.type.Money:
      type: object
      properties:
        currencyCode:
          type: string
          description: The three-letter currency code defined in ISO 4217.
        units:
          type: string
          description: "The whole units of the amount.\n For example if `currencyCode`
            is `\"USD\"`, then 1 unit is one US dollar."
        nanos:
          type: integer
          description: "Number of nano (10^-9) units of the amount.\n The value must
            be between -999,999,999 and +999,999,999 inclusive.\n If `units` is positive,
            `nanos` must be positive or zero.\n If `units` is zero, `nanos` can be
            positive, zero, or negative.\n If `units` is negative, `nanos` must be
            negative or zero.\n For example $-1.75 is represented as `units`=-1 and
            `nanos`=-750,000,000."
          format: int32
      description: Represents an amount of money with its currency type.
    tcn.bi.dashboards.v1alpha1.Dashboard:
      required:
      - title
      type: object
      properties:
        name:
          type: string
          description: dashboard identifier
        title:
          type: string
          description: dashboard title
        description:
          type: string
          description: description of the dashboard
        serializedConfig:
          type: string
          description: serialized configuration ui uses to render the dashboard
        panels:
          type: array
          items:
            $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard_DashboardPanel'
          description: dashboard panels
        isStandard:
          readOnly: true
          type: boolean
          description: flag to indicate if dashboard is standard
        createTime:
          readOnly: true
          type: string
          description: creation date
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: last update date
          format: date-time
      description: Dashboard is a bi resource to display insights.
    tcn.bi.dashboards.v1alpha1.Dashboard_DashboardPanel:
      required:
      - rowLength
      - columnLength
      - rowStart
      - columnStart
      - insightId
      - insightOutputConfigId
      type: object
      properties:
        rowLength:
          type: string
          description: height of panel
        columnLength:
          type: string
          description: length of panel
        rowStart:
          type: string
          description: absolute x position of panel
        columnStart:
          type: string
          description: absoulute y position of panel
        insightId:
          type: string
          description: insight identifier
        insightOutputConfigId:
          type: string
          description: insight output configuration identifier
      description: dashboard panels
    tcn.bi.dashboards.v1alpha1.ListDashboardsResponse:
      type: object
      properties:
        dashboards:
          type: array
          items:
            $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
          description: The list of dashboards.
        nextPageToken:
          type: string
          description: The next page token.
      description: Response to list dashboards.
    tcn.bi.dashboards.v1alpha1.LoadDefaultDashboardResponse:
      type: object
      properties:
        dashboard:
          allOf:
          - $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
          description: The default dashboard.
      description: Response to get the default dashboard.
    tcn.bi.dashboards.v1alpha1.MarkDefaultDashboardRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Required. The name of the dashboard to set as default.
      description: Request to set the default dashboard.
    tcn.bi.dashboards.v1alpha1.MarkDefaultDashboardResponse:
      type: object
      properties:
        dashboard:
          allOf:
          - $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
          description: The default dashboard.
      description: Response to set the default dashboard.
    tcn.bi.dashboards.v1alpha1.PublishDashboardRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Required. The name of the dashboard to publish.
      description: Request to publish a dashboard.
    tcn.bi.dashboards.v1alpha1.PublishDashboardResponse:
      type: object
      properties:
        dashboard:
          allOf:
          - $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
          description: The published dashboard.
      description: Response to publish a dashboard.
    tcn.journey.jobs.v1alpha1.Job:
      type: object
      properties:
        name:
          type: string
          description: 'ex: orgs/{org_id}collection/{collection}/source/{lms}/job/{job_id}'
        jobType:
          type: integer
          description: what type of job produced the entries in the collection
          format: enum
        ignoredCount:
          readOnly: true
          type: string
          description: ignored records
        insertedCount:
          readOnly: true
          type: string
          description: inserted records
        updatedCount:
          readOnly: true
          type: string
          description: updated records
        rejectedCount:
          readOnly: true
          type: string
          description: rejected records
        createTime:
          readOnly: true
          type: string
          description: creation date
          format: date-time
      description: "a Job signifies a change in our collection entries for a collection\n
        usually by a uploading data or retyping collection."
    tcn.journey.jobs.v1alpha1.ListJobsResponse:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/tcn.journey.jobs.v1alpha1.Job'
          description: List Jobs
        nextPageToken:
          type: string
          description: Token to get the next page
      description: List Jobs Response
    tcn.journey.rejection.v1alpha1.ListRejectionsResponse:
      type: object
      properties:
        rejections:
          type: array
          items:
            $ref: '#/components/schemas/tcn.journey.rejection.v1alpha1.Rejection'
          description: list of Rejections returned
        nextPageToken:
          type: string
          description: token for pagination
      description: ListRejectionsResponse
    tcn.journey.rejection.v1alpha1.Rejection:
      type: object
      properties:
        name:
          type: string
          description: 'ex: orgs/{org}/collection/{collection}/source/{lms}/job/{job}/record/{3}'
        data:
          readOnly: true
          type: string
          description: the raw data of the record when we tried to insert
        reason:
          readOnly: true
          type: array
          items:
            type: string
          description: the reasons this record was rejected
        createTime:
          readOnly: true
          type: string
          description: time the rejection was created
          format: date-time
      description: Rejection
    tcn.omni.attachment.v1alpha1.Attachment:
      required:
      - title
      - fileType
      - fileSize
      - filePath
      type: object
      properties:
        name:
          type: string
          description: name identifier for an attachment
        title:
          type: string
          description: attachment file name
        fileType:
          type: string
          description: attachment file type
        fileSize:
          type: string
          description: attachment file size
        filePath:
          type: string
          description: attachment file path
        downloadUri:
          readOnly: true
          type: string
          description: download attachment file url
        createTime:
          readOnly: true
          type: string
          description: time when the attachment was created
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: time when the attachment was last modified
          format: date-time
        tempId:
          type: string
          description: temp id
        contentId:
          type: string
          description: Optional. the id of the attachment in text if inline
        width:
          type: string
          description: Optional. the width of the inline attachment
        height:
          type: string
          description: Optional. the height of the inline attachment
      description: Attachment -
    tcn.omni.attachment.v1alpha1.ListAttachmentsResponse:
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.attachment.v1alpha1.Attachment'
          description: list of attachments
        nextPageToken:
          type: string
          description: next page token
      description: response for list attachments
    tcn.omni.campaign.v1alpha1.Campaign:
      required:
      - title
      - description
      - projectSid
      - complianceConfig
      type: object
      properties:
        name:
          type: string
          description: the campaign identifier
        title:
          type: string
          description: the campaign name
        description:
          type: string
          description: the campaign description
        startTime:
          type: string
          description: time the campaign should start; null == (not scheduled) ||
            (start now)
          format: date-time
        state:
          readOnly: true
          type: integer
          description: campaign State (i.e. running|stopped|paused|etc.)
          format: enum
        channelType:
          type: integer
          description: campaign channel type (chat|email|sms|etc.)
          format: enum
        createTime:
          readOnly: true
          type: string
          description: the time the campaign was created
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the campaign was last modified
          format: date-time
        projectSid:
          type: string
          description: identifier of the project the campaign belongs to
        shortenUri:
          type: boolean
          description: if url's should be shortened
        modules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign_Module'
          description: associated modules for campagin
        timeZone:
          type: string
          description: 'the campaign timezone :: THIS IS IT WORKS TO HANDLE THE NEW
            TIMEZONE FIELD'
        complianceConfig:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign_ComplianceConfig'
          description: compliance configuration
      description: Campaign -
    tcn.omni.campaign.v1alpha1.Campaign_ComplianceConfig:
      type: object
      properties:
        optin:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign_OmniComplianceAction'
          description: opting in to different compliance settings
        optout:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign_OmniComplianceAction'
          description: opting out of different compliance settings
        help:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign_OmniComplianceAction'
          description: help regarding compliance settings
        info:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign_OmniComplianceAction'
          description: information regarding compliance settings
        scrubListId:
          type: string
          description: scrub list identifier
        ruleSetId:
          type: string
          description: rule set identifier
      description: "ComplianceConfig -\n ComplianceConfig -"
    tcn.omni.campaign.v1alpha1.Campaign_Module:
      required:
      - campaignSid
      - moduleType
      - config
      type: object
      properties:
        campaignModuleSid:
          type: string
          description: the campaign module identifier
        campaignSid:
          type: string
          description: the campaign identifier
        moduleType:
          type: integer
          description: module type (inbound|outbound)
          format: enum
        state:
          readOnly: true
          type: integer
          description: campaign module State (running|stopped|etc.)
          format: enum
        config:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Module_Config'
          description: config data specific to the module
        createTime:
          readOnly: true
          type: string
          description: date module was created
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: date module was last modified
          format: date-time
        scheduledStopTime:
          type: string
          description: when campaign is scheduled to stop; null == not a scheduled
            module
          format: date-time
        actualStopTime:
          type: string
          description: time campaign was actually stopped; null == not stopped yet
          format: date-time
        verifiedEmails:
          type: array
          items:
            type: string
          description: identifier of the verified_emails
        smsNumbers:
          type: array
          items:
            type: string
          description: identifier of the sms_numbers
        chatWidgets:
          type: array
          items:
            type: string
          description: identifier of the chat_widgets
        connectedInboxes:
          type: array
          items:
            type: string
          description: identifier of the connected_inboxes
      description: associated modules
    tcn.omni.campaign.v1alpha1.Campaign_OmniComplianceAction:
      type: object
      properties:
        keywords:
          type: array
          items:
            type: string
          description: a list of config keywords
        confirmationMessage:
          type: string
          description: confirmation for the config
        isFuzzyMatch:
          type: boolean
          description: fuzzy match for the config
      description: OmniComplianceAction - configuration action for omni compliance
    tcn.omni.campaign.v1alpha1.Config_ConversationTimeoutMessageConfig:
      type: object
      properties:
        isDisabled:
          type: boolean
          description: disables timeout messages altogether, defaults at false for
            no change is previous behavior
        msg:
          type: string
          description: msg is the configurable message for the timeout. If msg is
            left blank, the canned message is sent
      description: allows the user to configure a custom message for when a conversation
        times out, or to disable the message all together
    tcn.omni.campaign.v1alpha1.ListCampaignsResponse:
      type: object
      properties:
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign'
          description: the list of campaigns
        nextPageToken:
          type: string
          description: the next page token
      description: response used listing all campaigns
    tcn.omni.campaign.v1alpha1.Module_Config:
      type: object
      properties:
        connectedInboxSid:
          type: array
          items:
            type: string
          description: identifier of the connected inbox associated to the CampaignModule
        email:
          type: string
          description: email associated to the CampaignModule
        messageBody:
          type: string
          description: message body
        subject:
          type: string
          description: email subjects
        slaTimeouts:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.type.SLATimeouts'
          description: sla timeouts associated with the CampaignModule
        sendsPerHour:
          type: string
          description: maximum number of sends per hour for outbound CampaignModules
        unsubscribeLinkSid:
          type: array
          items:
            type: string
          description: identifier of associated custom unsubscribe link
        verifiedEmailSid:
          type: array
          items:
            type: string
          description: verified email identifier
        stopOnTaskDeplete:
          type: boolean
          description: stop module with all tasks are completed
        complianceRuleSetId:
          type: string
          description: Optional. compliance rule set to use for this campaign
        paymentPortalIds:
          type: array
          items:
            type: string
          description: Payment Portal Ids
        flowId:
          type: array
          items:
            type: string
          description: Flow Id
        skills:
          type: object
          additionalProperties:
            type: boolean
          description: skills
        providerMetadata:
          type: object
          additionalProperties:
            type: string
          description: "ProviderMetadata\n content_id - the id of the premade message
            in the smartping system"
        countryCodeNumber:
          type: integer
          description: "The country code and postal code field together determine
            timezone for email time based compliance rulesets\n country code"
          format: int32
        postalCodeField:
          type: string
          description: postal code field
        timeoutMessageConfig:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Config_ConversationTimeoutMessageConfig'
          description: allows the user to configure a custom message for when a conversation
            times out, or to disable the message all together
      description: ModuleConfig -
    tcn.omni.cannedmessage.v1alpha1.CannedMessage:
      required:
      - title
      - description
      - messageBody
      type: object
      properties:
        name:
          type: string
          description: canned message name
        title:
          type: string
          description: canned message name
        description:
          type: string
          description: canned message description
        messageBody:
          type: string
          description: message details
        createTime:
          readOnly: true
          type: string
          description: creation date
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: last updated date
          format: date-time
        allowsHtml:
          type: boolean
          description: allows html
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage_Attachment'
          description: attachments
      description: CannedMessage -
    tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup:
      required:
      - cannedMessageGroupSid
      - title
      - description
      type: object
      properties:
        name:
          type: string
          description: canned message name
        cannedMessageGroupSid:
          type: string
          description: canned message group id
        title:
          type: string
          description: canned message group name
        description:
          type: string
          description: canned message group description
        createTime:
          readOnly: true
          type: string
          description: creation date
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: last updated date
          format: date-time
      description: CannedMessageGroup -
    tcn.omni.cannedmessage.v1alpha1.CannedMessage_Attachment:
      type: object
      properties:
        name:
          readOnly: true
          type: string
          description: primary key for an attachment
      description: Attachment - lets remove this ASAP
    tcn.omni.cannedmessage.v1alpha1.ListCannedMessageGroupsResponse:
      type: object
      properties:
        cannedMessageGroups:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
          description: the list of canned message groups
        nextPageToken:
          type: string
          description: the next page token
      description: ListCannedMessageGroupsResponse -
    tcn.omni.cannedmessage.v1alpha1.ListCannedMessagesResponse:
      type: object
      properties:
        cannedMessages:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
          description: the list of canned messages
        nextPageToken:
          type: string
          description: the next page token
      description: ListCannedMessagesResponse -
    tcn.omni.chatwidget.v1alpha1.ChatWidget:
      required:
      - colorProperties
      type: object
      properties:
        name:
          type: string
          description: the chat widget identifier
        colorProperties:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget_ColorProperties'
          description: the chat widget color properties
        email:
          type: string
          description: the chat widget email
        header:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget_Header'
          description: the chat widget header
      description: ChatWidget -
    tcn.omni.chatwidget.v1alpha1.ChatWidget_ColorProperties:
      type: object
      properties:
        primaryColor:
          type: string
          description: the chat widget pirmary color
        headerTextColor:
          type: string
          description: the chat widget header text color
        paragraphTextColor:
          type: string
          description: the chat widget paragraph text color
      description: ColorProperties -
    tcn.omni.chatwidget.v1alpha1.ChatWidget_Header:
      type: object
      properties:
        header:
          type: string
          description: the chat widget header
        subheader:
          type: string
          description: the chat widget subheader
      description: Header -
    tcn.omni.chatwidget.v1alpha1.ListChatWidgetsResponse:
      type: object
      properties:
        chatWidgets:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget'
          description: list of chat widgets
        nextPageToken:
          type: string
          description: next page token
      description: response message ListChatWidgetsResponse
    tcn.omni.compliance.v1alpha1.ComplianceConfig:
      required:
      - optin
      - optout
      - help
      - info
      - scrubListId
      - ruleSetId
      - channelType
      type: object
      properties:
        name:
          type: string
          description: name identifier for a compliance
        optin:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig_OmniComplianceAction'
          description: opting in to different compliance settings
        optout:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig_OmniComplianceAction'
          description: opting out of different compliance settings
        help:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig_OmniComplianceAction'
          description: help regarding compliance settings
        info:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig_OmniComplianceAction'
          description: information regarding compliance settings
        scrubListId:
          type: string
          description: scrub list identifier
        ruleSetId:
          type: string
          description: rule set identifier
        channelType:
          type: integer
          description: channel type this config applies to
          format: enum
        createTime:
          readOnly: true
          type: string
          description: Create time - determines the most recent compliance config
            for the UI to use
          format: date-time
      description: Compliance -
    tcn.omni.compliance.v1alpha1.ComplianceConfig_OmniComplianceAction:
      required:
      - keywords
      - confirmationMessage
      - isFuzzyMatch
      type: object
      properties:
        keywords:
          type: array
          items:
            type: string
          description: a list of config keywords
        confirmationMessage:
          type: string
          description: confirmation for the config
        isFuzzyMatch:
          type: boolean
          description: fuzzy match for the config
      description: OmniComplianceAction - configuration action for omni compliance
    tcn.omni.compliance.v1alpha1.ListComplianceConfigsResponse:
      type: object
      properties:
        complianceConfigs:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig'
          description: list of complianceConfigs
        nextPageToken:
          type: string
          description: next page token
      description: response for list complianceConfigs
    tcn.omni.connectedinbox.v1alpha1.ConnectedInbox:
      required:
      - emailAddress
      - checkFrequencyMinutes
      - server
      - serverPort
      - maxMessageSize
      - maxMessages
      type: object
      properties:
        name:
          type: string
          description: the connected inbox identifier
        emailAddress:
          type: string
          description: email address of the connected inbox
        username:
          type: string
          description: username of accessing email
        password:
          writeOnly: true
          type: string
          description: password for accessing email,
        checkFrequencyMinutes:
          type: string
          description: how often the email should be checked (in minutes)
        server:
          type: string
          description: server name the email is located on
        serverPort:
          type: string
          description: server port the email is located on
        lastScheduledTime:
          readOnly: true
          type: string
          description: time the email was last scheduled to be checked
          format: date-time
        lastCheckedTime:
          readOnly: true
          type: string
          description: time the email was last checked
          format: date-time
        purgeThreshold:
          type: string
          description: how many emails should build up before getting purged
        consecutiveFailures:
          type: integer
          description: number of consecutive failures allowed before entering an ERROR_STANDBY
            state
          format: int32
        lastError:
          readOnly: true
          type: string
          description: the last error that occured
        standbyErrorTime:
          readOnly: true
          type: string
          description: time the email entered ERROR_STANDBY
          format: date-time
        lastUpdateTime:
          readOnly: true
          type: string
          description: time the inbox was last update
          format: date-time
        maxMessageSize:
          type: integer
          description: maximum message size
          format: int32
        maxMessages:
          type: integer
          description: maximum number of messages
          format: int32
        authenticationType:
          type: integer
          description: type of authentication that should be used
          format: enum
        deleted:
          readOnly: true
          type: boolean
          description: if the connected inbox deleted
        oauthReferenceId:
          type: string
          description: the id used to reference the oauth information
        processedFolder:
          type: string
          description: optional custom folder name for messages that are successfully
            processed
        failedFolder:
          type: string
          description: optional custom folder name for messages that have failed to
            send
      description: ConnectedInbox is the public api for the omni/connectedinbox
    tcn.omni.connectedinbox.v1alpha1.DescribeConnectedInboxCredentialsResponse:
      type: object
      properties:
        password:
          type: string
          description: the password of the connected inbox
        emailSalt:
          type: string
          description: the email salt of the connected inbox
      description: response message DescribeConnectedInboxCredentialsResponse
    tcn.omni.connectedinbox.v1alpha1.ListConnectedInboxesResponse:
      type: object
      properties:
        connectedInboxes:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
          description: connected inboxes
        nextPageToken:
          type: string
          description: next page token
      description: response message ListConnectedInboxesResponse
    tcn.omni.connectedinbox.v1alpha1.TestConnectedInboxResponse:
      type: object
      properties: {}
      description: response message TestConnectedInboxResponse
    tcn.omni.conversation.v1alpha1.Assignment:
      required:
      - isActive
      - assignmentType
      type: object
      properties:
        name:
          type: string
          description: primary key or internal identifier for conversation
        isActive:
          type: boolean
          description: is an active
        assignmentType:
          type: integer
          description: type of assignment
          format: enum
        createTime:
          readOnly: true
          type: string
          description: date assignment was created
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: date assignment was last modified
          format: date-time
        user:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Assignment_User'
          description: user data
        asmSessionSid:
          type: string
          description: asm session sid
      description: represents a conversation assignment
    tcn.omni.conversation.v1alpha1.AssignmentMetadata:
      required:
      - value
      type: object
      properties:
        name:
          type: string
          description: the metadata identifier
        createTime:
          readOnly: true
          type: string
          description: the time the metadata was created
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the metadata was last updated
          format: date-time
        title:
          type: integer
          description: "the metadata title\n Title must be provided, including AGENT_RESPONSE_TIME
            (0) as a valid value."
          format: enum
        value:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata_Value'
          description: the metadata value
      description: AssignmentMetadata represents system generated metadata for a conversation.
    tcn.omni.conversation.v1alpha1.AssignmentMetadata_DurationValue:
      required:
      - startTime
      type: object
      properties:
        startTime:
          type: string
          description: the time the duration started
          format: date-time
        endTime:
          type: string
          description: the time the duration ended (if unset, still in progress)
          format: date-time
        duration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: the duration of the time range (won't be set until end_time
            is set)
      description: "DurationValue is a value representing a total duration for a\n
        time range."
    tcn.omni.conversation.v1alpha1.AssignmentMetadata_TimeAggregateValue:
      required:
      - instancesCount
      - totalDuration
      - averageDuration
      - lastInstanceStartTime
      type: object
      properties:
        instancesCount:
          type: string
          description: the number of time instances aggregated
        totalDuration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: the total duration (sum) of all time instances
        averageDuration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: the average duration of all time instances
        lastInstanceStartTime:
          type: string
          description: the time the last insance had started
          format: date-time
      description: "TimeAggregateValue is a value representing an aggregate of\n time
        based data (e.g. total time spent in a conversation, etc.)"
    tcn.omni.conversation.v1alpha1.AssignmentMetadata_Value:
      type: object
      properties:
        timeAggregate:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata_TimeAggregateValue'
          description: aggregate of time instances
        duration:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata_DurationValue'
          description: duration value
      description: Value represents the value of the metadata.
    tcn.omni.conversation.v1alpha1.Assignment_User:
      type: object
      properties:
        username:
          readOnly: true
          type: string
          description: the assigned user's name
      description: metadata details related to the conversation assignment
    tcn.omni.conversation.v1alpha1.BatchCreateAssignmentMetadataRequest:
      required:
      - parent
      - requests
      type: object
      properties:
        parent:
          type: string
          description: the parent of this assignment_metadata
        requests:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CreateAssignmentMetadataRequest'
          description: "the assignment_metadata to create\n (-- api-linter: core::0233::request-requests-field=disabled\n
            \    aip.dev/not-precedent: This is not assignmentMetadatum. --)"
      description: BatchCreateAssignmentMetadataRequest is a request to update or
        insert a new assignment_metadata.
    tcn.omni.conversation.v1alpha1.BatchCreateAssignmentMetadataResponse:
      type: object
      properties:
        assignmentMetadata:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata'
          description: assignment_metadata to created
      description: "BatchCreateAssignmentMetadataResponse is a response to update
        or insert a new assignment_metadata.\n (-- api-linter: core::0233::response-resource-field=disabled\n
        \    aip.dev/not-precedent: The field is not assignmentMetadatum. --)"
    tcn.omni.conversation.v1alpha1.BatchCreateMetadataRequest:
      required:
      - parent
      - requests
      type: object
      properties:
        parent:
          type: string
          description: the parent of this metadata
        requests:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CreateMetadataRequest'
          description: "the metadata to create\n (-- api-linter: core::0233::request-requests-field=disabled\n
            \    aip.dev/not-precedent: This is not metadatum. --)"
      description: BatchCreateMetadataRequest is a request to update or insert a new
        metadata.
    tcn.omni.conversation.v1alpha1.BatchCreateMetadataResponse:
      type: object
      properties:
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata'
          description: metadata to created
      description: "BatchCreateMetadataResponse is a response to update or insert
        a new metadata.\n (-- api-linter: core::0233::response-resource-field=disabled\n
        \    aip.dev/not-precedent: The field is not metadatum. --)"
    tcn.omni.conversation.v1alpha1.CollectedData:
      required:
      - title
      - value
      type: object
      properties:
        name:
          type: string
          description: the conversation identifier
        title:
          type: string
          description: the name of the data
        value:
          type: string
          description: the value of the data
        collectionTime:
          readOnly: true
          type: string
          description: when the data was collected
          format: date-time
        userId:
          type: string
          description: the user that collected the data (if this is not set then it
            was collected by the customer)
      description: represents a a list of information collected for a conversation
    tcn.omni.conversation.v1alpha1.Conversation:
      required:
      - channelType
      - systemAddress
      - customerAddress
      type: object
      properties:
        name:
          type: string
          description: the conversation identifier
        channelType:
          type: integer
          description: channel type
          format: enum
        skills:
          type: object
          additionalProperties:
            type: boolean
          description: skills -
        createTime:
          readOnly: true
          type: string
          description: when the conversation was created
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: when the conversation was last updated
          format: date-time
        state:
          readOnly: true
          type: integer
          description: status of the conversation
          format: enum
        customerEmail:
          type: string
          description: the customer's email address
        customerPhoneNumber:
          type: string
          description: the customer's phone number
        customerTitle:
          type: string
          description: the customer's name
        campaignSid:
          type: string
          description: the campaigns identifier of the inbound campaign this conversation
            is associated with
        referenceId:
          type: string
          description: the indentifire used to reference this converstaion
        lastMessageTime:
          readOnly: true
          type: string
          description: time the last message was received
          format: date-time
        slaTimeouts:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.type.SLATimeouts'
          description: SLA timers
        metadata:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation_Details'
          description: conversation optional metadata
        endTime:
          readOnly: true
          type: string
          description: time the conversation was ended
          format: date-time
        campaignModuleSid:
          type: string
          description: the identifier of the campaign module this conversation is
            associated with
        lastMessageGroupTime:
          readOnly: true
          type: string
          description: "the time that the last group of messages was started. A message
            group is a\n continuous set of messages from the same type of sender"
          format: date-time
        lastMessageGroupSenderType:
          readOnly: true
          type: integer
          description: the sender type of the last message group
          format: enum
        result:
          readOnly: true
          type: integer
          description: the result type of the conversation
          format: enum
        lastStateChangeTime:
          readOnly: true
          type: string
          description: the time the converstion state was last changed
          format: date-time
        systemAddress:
          type: string
          description: the address used by the system to send messages to the customer
        customerAddress:
          type: string
          description: the address used by the customer to send message into the system
        provider:
          type: integer
          description: the procvider used to send messages
          format: enum
        taskSid:
          type: string
          description: the id of the task
      description: Conversation service is the public api for the omni/conversation
        service.
    tcn.omni.conversation.v1alpha1.Conversation_Details:
      type: object
      properties:
        campaignTitle:
          readOnly: true
          type: string
          description: the associated campaign's name
        supportEmail:
          readOnly: true
          type: string
          description: support_email
        campaignShortenUri:
          readOnly: true
          type: boolean
          description: campaign shorten uri
        paymentPortalIds:
          readOnly: true
          type: array
          items:
            type: string
          description: payment portal ids
        stateId:
          readOnly: true
          type: string
          description: state id
        flowId:
          readOnly: true
          type: string
          description: flow id
      description: metadata details related to the conversation
    tcn.omni.conversation.v1alpha1.CreateAssignmentMetadataRequest:
      required:
      - parent
      - assignmentMetadata
      type: object
      properties:
        parent:
          type: string
          description: the parent of this assignment_metadata
        assignmentMetadata:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata'
          description: the assignment_metadata to create
      description: CreateAssignmentMetadataRequest is a request to update or insert
        a new assignment_metadata.
    tcn.omni.conversation.v1alpha1.CreateMetadataRequest:
      required:
      - parent
      - metadata
      type: object
      properties:
        parent:
          type: string
          description: the parent of this metadata
        metadata:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata'
          description: the metadata to create
      description: CreateMetadataRequest is a request to update or insert a new metadata.
    tcn.omni.conversation.v1alpha1.ListAssignmentMetadataResponse:
      type: object
      properties:
        assignmentMetadata:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata'
          description: the listed metadata
        nextPageToken:
          type: string
          description: next page token
      description: ListAssignmentMetadataResponse is a response to list conversation
        assignment_metadata.
    tcn.omni.conversation.v1alpha1.ListAssignmentsResponse:
      type: object
      properties:
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Assignment'
          description: conversation assignments
        nextPageToken:
          type: string
          description: next page token
      description: response message ListAssignmentsResponse
    tcn.omni.conversation.v1alpha1.ListCollectedDataResponse:
      type: object
      properties:
        collectedData:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CollectedData'
          description: collected data
        nextPageToken:
          type: string
          description: next page token
      description: response message ListCollectedDataResponse
    tcn.omni.conversation.v1alpha1.ListConversationsResponse:
      type: object
      properties:
        conversations:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation'
          description: conversations
        nextPageToken:
          type: string
          description: next page token
      description: response message ListConversationsResponse
    tcn.omni.conversation.v1alpha1.ListMetadataResponse:
      type: object
      properties:
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata'
          description: the listed metadata
        nextPageToken:
          type: string
          description: next page token
      description: ListMetadataResponse is a response to list conversation metadata.
    tcn.omni.conversation.v1alpha1.Metadata:
      required:
      - value
      type: object
      properties:
        name:
          type: string
          description: the metadata identifier
        createTime:
          readOnly: true
          type: string
          description: the time the metadata was created
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the metadata was last updated
          format: date-time
        title:
          type: integer
          description: "the metadata title\n Title must be provided, including AGENT_RESPONSE_TIME
            (0) as a valid value."
          format: enum
        value:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata_Value'
          description: the metadata value
      description: Metadata represents system generated metadata for a conversation.
    tcn.omni.conversation.v1alpha1.Metadata_DurationValue:
      required:
      - startTime
      type: object
      properties:
        startTime:
          type: string
          description: the time the duration started
          format: date-time
        endTime:
          type: string
          description: the time the duration ended (if unset, still in progress)
          format: date-time
        duration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: the duration of the time range (won't be set until end_time
            is set)
      description: "DurationValue is a value representing a total duration for a\n
        time range."
    tcn.omni.conversation.v1alpha1.Metadata_FlowDataValue:
      required:
      - stateId
      - flowId
      type: object
      properties:
        stateId:
          type: string
          description: flow state identifier
        flowId:
          type: string
          description: flow identifier
      description: FlowDataValue is a value representing data for a conversation flow.
    tcn.omni.conversation.v1alpha1.Metadata_TimeAggregateValue:
      required:
      - instancesCount
      - totalDuration
      - averageDuration
      - lastInstanceStartTime
      type: object
      properties:
        instancesCount:
          type: string
          description: the number of time instances aggregated
        totalDuration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: the total duration (sum) of all time instances
        averageDuration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: the average duration of all time instances
        lastInstanceStartTime:
          type: string
          description: the time the last insance had started
          format: date-time
      description: "TimeAggregateValue is a value representing an aggregate of\n time
        based data (e.g. total time spent in a conversation, etc.)"
    tcn.omni.conversation.v1alpha1.Metadata_Value:
      type: object
      properties:
        timeAggregate:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata_TimeAggregateValue'
          description: aggregate of time instances
        duration:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata_DurationValue'
          description: duration value
        flowData:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata_FlowDataValue'
          description: flow data
        transcriptLocation:
          type: string
          description: location of conversation transcript
        voiceData:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata_VoiceDataValue'
          description: voice call data
      description: Value represents the value of the metadata.
    tcn.omni.conversation.v1alpha1.Metadata_VoiceDataValue:
      required:
      - orgId
      - callerSid
      type: object
      properties:
        orgId:
          type: string
          description: the organization identifier of the owning org
        callerSid:
          type: string
          description: the call identifier
        callType:
          type: integer
          description: the call type (must be provided, with 0 as a valid value)
          format: int32
      description: VoiceDataValue is a value representing data for a voice call.
    tcn.omni.disposition.v1alpha1.Disposition:
      required:
      - disposition
      type: object
      properties:
        name:
          type: string
          description: name identifier for a disposition
        createTime:
          readOnly: true
          type: string
          description: created date
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: updated date
          format: date-time
        disposition:
          type: string
          description: disposition string
        deleted:
          readOnly: true
          type: boolean
          description: if the disposition was deleted
      description: Disposition -
    tcn.omni.disposition.v1alpha1.ListDispositionsResponse:
      type: object
      properties:
        dispositions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
          description: list of dispositions
        nextPageToken:
          type: string
          description: next page token
      description: response for list dispositions
    tcn.omni.eventlog.v1alpha1.ProcessOmniEventLogRequest:
      required:
      - event
      type: object
      properties:
        event:
          type: string
          description: the event data to be processed
          format: bytes
      description: ProcessOmniEventLogRequest -
    tcn.omni.eventlog.v1alpha1.ProcessOmniEventLogResponse:
      type: object
      properties: {}
      description: ProcessOmniEventLogResponse -
    tcn.omni.message.v1alpha1.ListMessagesResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message'
          description: messages
        nextPageToken:
          type: string
          description: next page token
      description: response message ListMessagesResponse
    tcn.omni.message.v1alpha1.Message:
      required:
      - source
      - destination
      - channelType
      - uiReferenceId
      - payload
      - campaignSid
      - senderType
      - messageFormat
      - provider
      type: object
      properties:
        name:
          type: string
          description: the message identifier
        userId:
          type: string
          description: "this is the user id that sent the message - this can be not
            set which would\n be the case if it's not an agent message"
        source:
          type: string
          description: "this is who the message is from\n chat = if agent then user_id,
            if customer, then customer name\n email = email address\n sms = phone
            number"
        destination:
          type: string
          description: "this is who the message is to\n chat = if agent, then customer
            name, otherwise leave as an empty string\n email = email address\n sms
            = phone number"
        channelType:
          type: integer
          description: the channel type for this message i.e. chat|sms|email|etc
          format: enum
        referenceId:
          type: string
          description: "this is how the message is referenced by the outside world\n
            chat = not set\n email = email message header\n sms = not set"
        providerReferenceId:
          type: string
          description: "this is how the message is referenced by the provider\n chat
            = not set\n email = what ever id the provider gives us\n sms = what ever
            id the provider gives us"
        uiReferenceId:
          type: string
          description: this is an id that the UI generates so it's able to identify
            it when it sees it again
        payload:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message_MessagePayload'
          description: this is the payload of the message
        conversationSid:
          type: string
          description: "the id of the conversation. This is not required to be set
            because the message could\n belong to a outbound campaign only"
        taskSid:
          type: string
          description: "the id of the task. This is not required to be set because
            the message could\n belong to a inbound campaign only"
        state:
          readOnly: true
          type: integer
          description: the current state of the message. To be honest, I'm not sure
            if its needed
          format: enum
        createTime:
          readOnly: true
          type: string
          description: the time the message was created
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the message was last modified
          format: date-time
        campaignSid:
          type: string
          description: identifier of the campaign the message belongs to
        statusMessage:
          type: string
          description: if there is some message coming from the provider. It is set
            here
        subject:
          type: string
          description: "The subject of the conversation\n chat = not set\n email =
            the email subject line\n sms = not set"
        rawDataLocation:
          type: string
          description: where the raw message is stored
        senderType:
          type: integer
          description: if this message is coming from omni boss is a manager message
          format: enum
        messageFormat:
          type: integer
          description: the message format
          format: enum
        provider:
          type: integer
          description: the provider used to send the message
          format: enum
        providerMetadata:
          type: object
          additionalProperties:
            type: string
          description: "ProviderMetadata\n  - SmartPing\n      content_id - the id
            of the premade message in the smartping system"
      description: Message is the public api for the omni/message=
    tcn.omni.message.v1alpha1.MessagePayload_AssignConversation:
      required:
      - userId
      type: object
      properties:
        userId:
          type: string
          description: agent user id
        username:
          type: string
          description: "user name used to display in the UI. This field is only set
            by\n the backend when the payload is being sent to the UI"
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
      description: assign conversation to agent
    tcn.omni.message.v1alpha1.MessagePayload_AttachmentUploadURL:
      required:
      - uploadUri
      - id
      type: object
      properties:
        uploadUri:
          type: string
          description: attachment file upload uri
        id:
          type: string
          description: attachment id
      description: attachment upload details
    tcn.omni.message.v1alpha1.MessagePayload_CannedMessage:
      required:
      - cannedMessageId
      type: object
      properties:
        cannedMessageId:
          type: string
          description: canned message id
      description: CannedMessage - message payload for canned messages
    tcn.omni.message.v1alpha1.MessagePayload_CloseConversation:
      required:
      - primaryAsmSessionSid
      type: object
      properties:
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
      description: CloseConversation - message payload to close conversation
    tcn.omni.message.v1alpha1.MessagePayload_DataMessage:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Data for flows, should always be json
        messageSid:
          type: string
          description: Message id of the html form this is in reply to
      description: DataMessage - message payload for data messages
    tcn.omni.message.v1alpha1.MessagePayload_FinishWrapUp:
      required:
      - primaryAsmSessionSid
      type: object
      properties:
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
      description: FinishWrapUp - message payload to finish wrap up
    tcn.omni.message.v1alpha1.MessagePayload_OffLoadedTextMessage:
      required:
      - location
      type: object
      properties:
        location:
          type: string
          description: location of the offloaded message
        attachments:
          type: array
          items:
            type: string
          description: attachment names if there are some
      description: OffLoadedTextMessage -
    tcn.omni.message.v1alpha1.MessagePayload_QueueInfo:
      required:
      - position
      type: object
      properties:
        position:
          type: string
          description: position in the queue
      description: QueueInfo - message payload for queue information
    tcn.omni.message.v1alpha1.MessagePayload_ReassignmentNotification:
      required:
      - currentUserId
      - newUserId
      type: object
      properties:
        currentUserId:
          type: string
          description: the id of the assigned user
        currentUsername:
          type: string
          description: "current user name used to display in the UI. This field is
            only set by\n the backend when the payload is being sent to the UI"
        newUserId:
          type: string
          description: the id of the user to be assigned
        newUsername:
          type: string
          description: "new user name used to display in the UI. This field is only
            set by\n the backend when the payload is being sent to the UI"
        newUserAsmSessionSid:
          type: string
          description: new user asm session sid
      description: Message payload for reassigning agents
    tcn.omni.message.v1alpha1.MessagePayload_RequestAttachmentUploadURL:
      type: object
      properties: {}
      description: RequestAttachmentUploadURL -
    tcn.omni.message.v1alpha1.MessagePayload_RequestQueueInfo:
      required:
      - position
      type: object
      properties:
        position:
          type: boolean
          description: position in the queue
      description: RequestQueueInfo - message payload for requesting queue information
    tcn.omni.message.v1alpha1.MessagePayload_StartWrapUp:
      required:
      - primaryAsmSessionSid
      type: object
      properties:
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
      description: StartWrapUp - message payload to start wrap up
    tcn.omni.message.v1alpha1.MessagePayload_Suspend:
      required:
      - primaryAsmSessionSid
      type: object
      properties:
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
      description: Suspend - message payload to suspend conversation
    tcn.omni.message.v1alpha1.MessagePayload_TextMessage:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: message containing Urls
        attachments:
          type: array
          items:
            type: string
          description: attachments names if there are some
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
      description: TextMessage -
    tcn.omni.message.v1alpha1.MessagePayload_TypingNotification:
      type: object
      properties: {}
      description: TypingNotification -
    tcn.omni.message.v1alpha1.MessagePayload_UnassignConversation:
      required:
      - userId
      - all
      type: object
      properties:
        userId:
          type: string
          description: the id of the user to unassign
        username:
          type: string
          description: "user name used to display in the UI. This field is only set
            by\n the backend when the payload is being sent to the UI"
        all:
          type: boolean
          description: whether or not all users should be unassigned
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
      description: OmniMessage payload for unassigning an agent(s)
    tcn.omni.message.v1alpha1.Message_MessagePayload:
      type: object
      properties:
        textMessage:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_TextMessage'
          description: text message
        typingNotification:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_TypingNotification'
          description: typing notification
        reassignment:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_ReassignmentNotification'
          description: reassignment notification
        requestAttachmentUploadUri:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_RequestAttachmentUploadURL'
          description: requesting attachment upload uri
        attachmentUploadUri:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_AttachmentUploadURL'
          description: attachment upload uri
        closeConversation:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_CloseConversation'
          description: close conversation
        assignConversation:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_AssignConversation'
          description: assign conversation
        unassignConversation:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_UnassignConversation'
          description: unassign conversation
        finishWrapUp:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_FinishWrapUp'
          description: finished wrap up
        suspend:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_Suspend'
          description: suspend
        startWrapUp:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_StartWrapUp'
          description: start wrap up
        queueInfo:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_QueueInfo'
          description: queue info
        requestQueueInfo:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_RequestQueueInfo'
          description: request queue info
        offLoadedTextMessage:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_OffLoadedTextMessage'
          description: off loaded text message
        cannedMessage:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_CannedMessage'
          description: canned message
        dataMessage:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.message.v1alpha1.MessagePayload_DataMessage'
          description: data message
      description: "Going to add the compliance result to the message\n MessagePayload
        -"
    tcn.omni.oauth.v1alpha1.ListOauthConfigsResponse:
      type: object
      properties:
        oauthConfigs:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.oauth.v1alpha1.OauthConfig'
          description: list of oauthConfigs
        nextPageToken:
          type: string
          description: next page token
      description: response for list oauthConfigs
    tcn.omni.oauth.v1alpha1.OauthConfig:
      required:
      - accessToken
      - refreshToken
      - expiresTime
      - referenceId
      type: object
      properties:
        name:
          type: string
          description: name identifier for oauth
        accessToken:
          type: string
          description: the access token for the oauth config
        refreshToken:
          type: string
          description: the refresh token for the oauth config
        expiresTime:
          type: string
          description: the time the access token expires
          format: date-time
        referenceId:
          type: string
          description: the reference id for the oauth config
      description: Oauth -
    tcn.omni.project.v1alpha1.ListProjectsResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
          description: the list of projects
        nextPageToken:
          type: string
          description: the next page token
      description: response used listing all projects
    tcn.omni.project.v1alpha1.Project:
      required:
      - title
      - description
      - complianceConfig
      type: object
      properties:
        name:
          type: string
          description: project identifier
        title:
          type: string
          description: project title
        description:
          type: string
          description: project description
        state:
          readOnly: true
          type: integer
          description: project state
          format: enum
        createTime:
          readOnly: true
          type: string
          description: creation date
          format: date-time
        complianceConfig:
          type: array
          items:
            type: string
          description: The compliance config
      description: Project -
    tcn.omni.signature.v1alpha1.ListSignaturesResponse:
      type: object
      properties:
        signatures:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
          description: list of signatures
        nextPageToken:
          type: string
          description: next page token
      description: response for list signatures
    tcn.omni.signature.v1alpha1.Signature:
      required:
      - signature
      - title
      - description
      type: object
      properties:
        name:
          type: string
          description: name identifier for a signature
        signature:
          type: string
          description: signature string
        createTime:
          readOnly: true
          type: string
          description: created date
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: updated date
          format: date-time
        deletedTime:
          readOnly: true
          type: string
          description: if the signature was deleted
          format: date-time
        title:
          type: string
          description: tittle of the signature
        description:
          type: string
          description: description of the signature
      description: Signature -
    tcn.omni.smsnumber.v1alpha1.ListSmsNumbersResponse:
      type: object
      properties:
        smsNumbers:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.smsnumber.v1alpha1.SmsNumber'
          description: list of sms number
        nextPageToken:
          type: string
          description: next page token
      description: response message ListSmsNumbersResponse
    tcn.omni.smsnumber.v1alpha1.SmsNumber:
      required:
      - number
      - type
      - provider
      - countryCodeNumber
      type: object
      properties:
        name:
          type: string
          description: the sms number identifier
        number:
          type: string
          description: the sms number
        type:
          type: integer
          description: the type of sms number (Alphanumeric|ShortCode|LongCode)
          format: enum
        provider:
          type: integer
          description: associated provider (Bandwidth|BurseSMS|ect...)
          format: enum
        countryCodeNumber:
          type: integer
          description: country code the sms number belongs to
          format: int32
      description: SmsNumber -
    tcn.omni.task.v1alpha1.ComplianceRuleSet_ComplianceRule:
      required:
      - text
      - permit
      type: object
      properties:
        text:
          type: string
          description: text representation of the compliance rule
        permit:
          type: boolean
          description: whether the compliance rule passed or not
        pluginResponse:
          type: string
          description: extra response data
      description: ComplianceRule -
    tcn.omni.task.v1alpha1.ListTasksResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task'
          description: list of tasks
        nextPageToken:
          type: string
          description: next page token
      description: response message ListTasksResponse
    tcn.omni.task.v1alpha1.Task:
      required:
      - campaignModuleSid
      - campaignSid
      - contactListSid
      - taskConfig
      type: object
      properties:
        name:
          type: string
          description: the task identifier
        state:
          readOnly: true
          type: integer
          description: the task state
          format: enum
        createTime:
          readOnly: true
          type: string
          description: the time the task was created
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the task was last updated
          format: date-time
        campaignModuleSid:
          type: string
          description: campaign module sid
        campaignSid:
          type: string
          description: campaign sid
        contactListSid:
          type: string
          description: identifier of associated contact list
        taskHistory:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task_TaskHistory'
          description: the task history
        dataFields:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task_DataField'
          description: 'list of fields associated to task (can contain different types
            of data : string|int64|ect.)'
        details:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task_Details'
          description: retrievable fields with field mask
        description:
          type: string
          description: Task description
        statusMessage:
          type: string
          description: a message reguarding the task's status, should be ignored if
            there is an associated Message
        scheduleTime:
          type: string
          description: scheduled time for task
          format: date-time
        taskConfig:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task_TaskConfig'
          description: task config
      description: Task -
    tcn.omni.task.v1alpha1.TaskConfig_ConversationSkills:
      type: object
      properties:
        skills:
          type: object
          additionalProperties:
            type: boolean
          description: map of agent skills
      description: ConversationSkills -
    tcn.omni.task.v1alpha1.TaskConfig_TextMessage:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: message containing Urls
        attachments:
          type: array
          items:
            type: string
          description: attachment names
        primaryAsmSessionSid:
          type: string
          description: primary asm session identifier
      description: TextMessage -
    tcn.omni.task.v1alpha1.TaskHistory_ComplianceRuleSet:
      required:
      - id
      - tittle
      - sha
      - rules
      type: object
      properties:
        id:
          type: string
          description: the compliance rule set identifier
        tittle:
          type: string
          description: tittle of the compliance rule set
        sha:
          type: string
          description: the SHA indicating the version of the rule set
        rules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.task.v1alpha1.ComplianceRuleSet_ComplianceRule'
          description: "list of compliance rules ran in this version of the\n rule
            set."
      description: ComplianceRuleSet - The compliance result will be moved into the
        task message
    tcn.omni.task.v1alpha1.TaskHistory_Entry:
      required:
      - address
      - timesUsed
      - lastUsedTime
      type: object
      properties:
        address:
          type: string
          description: the address (email_address|phone_number|etc.)
        timesUsed:
          type: string
          description: times address was used
        lastUsedTime:
          type: string
          description: the time this entry was last used
          format: date-time
      description: Entry -
    tcn.omni.task.v1alpha1.Task_DataField:
      required:
      - fieldSid
      - parentSid
      - title
      - value
      - type
      type: object
      properties:
        fieldSid:
          type: string
          description: the field identifier
        parentSid:
          type: string
          description: the identifier of the "parent" this field belongs to
        title:
          type: string
          description: the title of this field
        value:
          type: string
          description: the value of this field encoded as a string
        type:
          type: integer
          description: the type of value stored in this field (string|json|int|etc.)
          format: enum
      description: DataField -
    tcn.omni.task.v1alpha1.Task_Details:
      type: object
      properties:
        contactListTitle:
          type: string
          description: title of the contact list
      description: Details -
    tcn.omni.task.v1alpha1.Task_TaskConfig:
      required:
      - absoluteTimeoutDuration
      - agentTimeoutDuration
      - subject
      - message
      - userId
      type: object
      properties:
        skills:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.task.v1alpha1.TaskConfig_ConversationSkills'
          description: conversation skills that the task should use
        absoluteTimeoutDuration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: the task's absolute timeout duration
        agentTimeoutDuration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: the task's agent timeout duration
        subject:
          type: string
          description: the task subject
        message:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.task.v1alpha1.TaskConfig_TextMessage'
          description: the task textmessage
        userId:
          type: string
          description: the task's user id
      description: TaskConfig -
    tcn.omni.task.v1alpha1.Task_TaskHistory:
      required:
      - destination
      - source
      type: object
      properties:
        destination:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.task.v1alpha1.TaskHistory_Entry'
          description: list of destination addresses (should not include same destination
            twice)
        source:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.task.v1alpha1.TaskHistory_Entry'
          description: list of source addresses (should not include same source twice)
        ruleSet:
          allOf:
          - $ref: '#/components/schemas/tcn.omni.task.v1alpha1.TaskHistory_ComplianceRuleSet'
          description: the rule set used with the task.  This won't be set if a rule
            set didn't exist when the task ran
        scrubListId:
          type: string
          description: scrub list id the task uses
      description: TaskHistory -
    tcn.omni.type.SLATimeouts:
      type: object
      properties:
        t1:
          type: string
          description: max amount of time in seconds that it should take for an agent
            to respond to a customer message. Will reset after each customer response.
        t2:
          type: string
          description: amount of time in seconds the conversation takes space in an
            agent's queue waiting for a customer's response
        t3:
          type: string
          description: amount of time in seconds that the frontend system will wait
            for an agent response before a conversation gets reassigned
        t10:
          type: string
          description: amount of time in seconds that the backend system will wait
            for an agent response before a conversation gets reassigned
        t11:
          type: string
          description: amount of time in seconds that the backend system will wait
            for a customer response before a conversation gets closed
        t12:
          type: string
          description: amount of time in seconds that the backend system will wait
            until a unassigned conversation is closed timeout
      description: SLATimeouts -
    tcn.omni.unsubscribelink.v1alpha1.ListUnsubscribeLinksResponse:
      type: object
      properties:
        unsubscribeLinks:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
          description: list of unsubscribe links
        nextPageToken:
          type: string
          description: used to specify the next page token
      description: response for list unsubscribe links
    tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink:
      required:
      - title
      - uri
      - description
      type: object
      properties:
        name:
          type: string
          description: name identifier for an unsubscribe link
        title:
          type: string
          description: the title of the unsubscribe link
        uri:
          type: string
          description: the links uri
        validated:
          readOnly: true
          type: boolean
          description: if the link has been validated
        createTime:
          readOnly: true
          type: string
          description: the time the link was created
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the link was last updated
          format: date-time
        validatedTime:
          readOnly: true
          type: string
          description: the time the link was validated
          format: date-time
        description:
          type: string
          description: the link's description
      description: UnsubscribeLink -
    tcn.omni.verifiedemail.v1alpha1.ListVerifiedEmailsResponse:
      type: object
      properties:
        verifiedEmails:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
          description: list of verified email
        nextPageToken:
          type: string
          description: next page token
      description: response message ListVerifiedEmailsResponse
    tcn.omni.verifiedemail.v1alpha1.ResendVerifiedEmailResponse:
      type: object
      properties: {}
      description: response message ResendVerifiedEmail
    tcn.omni.verifiedemail.v1alpha1.VerifiedEmail:
      required:
      - emailAddress
      type: object
      properties:
        name:
          type: string
          description: the verified email identifier
        emailAddress:
          type: string
          description: email_address
        verified:
          readOnly: true
          type: boolean
          description: verified or not
        createTime:
          readOnly: true
          type: string
          description: date created
          format: date-time
        verifiedTime:
          readOnly: true
          type: string
          description: verified_time keep track when it was verified
          format: date-time
        deleted:
          readOnly: true
          type: boolean
          description: deleted or not
        description:
          type: string
          description: description of the verfied email
      description: VerifiedEmail  is the public api for the omni/verifiedEmails service.
    tcn.omni.whatsappnumber.v1alpha1.ListWhatsAppNumbersResponse:
      type: object
      properties:
        whatsAppNumbers:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.whatsappnumber.v1alpha1.WhatsAppNumber'
          description: list of whatsApp number
        nextPageToken:
          type: string
          description: next page token
      description: response message ListWhatsAppNumbersResponse
    tcn.omni.whatsappnumber.v1alpha1.WhatsAppNumber:
      required:
      - number
      - provider
      - countryCodeNumber
      type: object
      properties:
        name:
          type: string
          description: the whatsApp number identifier
        number:
          type: string
          description: the whatsApp number
        provider:
          type: integer
          description: the whatsApp provider
          format: enum
        countryCodeNumber:
          type: integer
          description: the whatsApp country code
          format: int32
      description: WhatsAppNumber  is the public api for the omni/whatsAppNumber service.
    tcn.org.agentProfileGroups.v1alpha1.AgentProfileGroup:
      required:
      - title
      - priorityGroups
      - defaultGroup
      type: object
      properties:
        name:
          type: string
          description: agent profile group identifier
        title:
          type: string
          description: agent profile group title
        priorityGroups:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.agentProfileGroups.v1alpha1.AgentProfileGroup_PriorityGroup'
          description: priority groups for the agent profile group
        updateTime:
          readOnly: true
          type: string
          description: last time agent profile group was updated
          format: date-time
        defaultGroup:
          type: boolean
          description: default group flag
      description: AgentProfileGroup is a type and threshold in array for AgentProfileGroup
    tcn.org.agentProfileGroups.v1alpha1.AgentProfileGroup_PriorityGroup:
      required:
      - threshold
      - channelType
      type: object
      properties:
        threshold:
          type: integer
          description: threshold for the priority group
          format: int32
        channelType:
          type: integer
          description: channel type for the priority group
          format: enum
      description: PriorityGroup is a type and threshold in array for AgentProfileGroup
    tcn.org.agentProfileGroups.v1alpha1.AssignAgentProfileGroupRequest:
      required:
      - name
      - userIds
      type: object
      properties:
        name:
          type: string
          description: name of the agent profile group
        userIds:
          type: array
          items:
            type: string
          description: users to assign the agent profile group
      description: request message AssignAgentProfileGroupRequest
    tcn.org.agentProfileGroups.v1alpha1.AssignAgentProfileGroupResponse:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
          description: assigned users
      description: response message AssignAgentProfileGroupResponse
    tcn.org.agentProfileGroups.v1alpha1.ListAgentProfileGroupsResponse:
      type: object
      properties:
        agentProfileGroups:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.agentProfileGroups.v1alpha1.AgentProfileGroup'
          description: agent profile groups
        nextPageToken:
          type: string
          description: next page token
      description: response message ListAgentProfileGroupsResponse
    tcn.org.billing.billingplan.v1alpha5.ApplyBillingPlanDraftRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: "the name of the billing plan to apply.\n Format: orgs/{org}/billingPlans/{billing_plan}"
        startDate:
          type: string
          description: the date when the applied billing plan will become active,
            or null to apply immediately
          format: date
      description: ApplyBillingPlanDraftRequest -
    tcn.org.billing.billingplan.v1alpha5.ApplyBillingPlanDraftResponse:
      type: object
      properties: {}
      description: ApplyBillingPlanDraftResponse -
    tcn.org.billing.billingplan.v1alpha5.ApplyDefaultBillingPlanDraftRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: "the name of the billing plan to apply.\n Format: defaultBillingPlans/{billing_plan}"
        startDate:
          type: string
          description: the date when the applied billing plan will become active
          format: date
      description: ApplyDefaultBillingPlanDraftRequest -
    tcn.org.billing.billingplan.v1alpha5.ApplyDefaultBillingPlanDraftResponse:
      type: object
      properties: {}
      description: ApplyDefaultBillingPlanDraftResponse -
    tcn.org.billing.billingplan.v1alpha5.BillingPlan:
      required:
      - title
      type: object
      properties:
        name:
          type: string
          description: the name used to identify the billing plan
        title:
          type: string
          description: the human-readable title of the billing plan (only returned
            on draft plans)
        createTime:
          readOnly: true
          type: string
          description: the time the billing plan was created.
          format: date-time
        deleteTime:
          readOnly: true
          type: string
          description: the time the billing plan was deleted.
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the billing plan was last updated.
          format: date-time
        startDate:
          readOnly: true
          type: string
          description: the date the billing plan will become active (only returned
            on active plans).
          format: date
        userId:
          readOnly: true
          type: string
          description: the id of the user who last modified it.
        isDraft:
          readOnly: true
          type: boolean
          description: whether the billing plan is a draft or active.
      description: BillingPlan defines a set of configurations for billing.
    tcn.org.billing.billingplan.v1alpha5.CopyBillingPlanRequest:
      required:
      - name
      - title
      type: object
      properties:
        name:
          type: string
          description: "the name of the billing plan to copy.\n Format: orgs/{org}/billingPlans/{billing_plan}"
        title:
          type: string
          description: the title of the billing plan being created.
      description: CopyBillingPlanRequest -
    tcn.org.billing.billingplan.v1alpha5.CopyBillingPlanResponse:
      type: object
      properties:
        billingPlan:
          type: string
          description: the name of the copied billing plan.
      description: CopyBillingPlanResponse -
    tcn.org.billing.billingplan.v1alpha5.CopyDefaultBillingPlanRequest:
      required:
      - name
      - title
      type: object
      properties:
        name:
          type: string
          description: "the name of the billing plan to copy.\n Format: defaultBillingPlans/{billing_plan}"
        title:
          type: string
          description: the title of the billing plan being created.
      description: CopyDefaultBillingPlanRequest -
    tcn.org.billing.billingplan.v1alpha5.CopyDefaultBillingPlanResponse:
      type: object
      properties:
        defaultBillingPlan:
          type: string
          description: the name of the copied billing plan.
      description: CopyDefaultBillingPlanResponse -
    tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan:
      required:
      - title
      type: object
      properties:
        name:
          type: string
          description: the name used to identify the billing plan
        title:
          type: string
          description: the human-readable title of the billing plan (only returned
            on draft plans)
        createTime:
          readOnly: true
          type: string
          description: the time the billing plan was created.
          format: date-time
        deleteTime:
          readOnly: true
          type: string
          description: the time the billing plan was deleted.
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the billing plan was last updated.
          format: date-time
        startDate:
          readOnly: true
          type: string
          description: the date the billing plan will become active (only returned
            on active plans).
          format: date
        userId:
          readOnly: true
          type: string
          description: the id of the user who last modified it.
        isDraft:
          readOnly: true
          type: boolean
          description: whether the billing plan is a draft or active.
      description: DefaultBillingPlan defines a set of configurations for billing.
    tcn.org.billing.billingplan.v1alpha5.ListBillingPlansResponse:
      type: object
      properties:
        billingPlans:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
          description: the billing plans.
        nextPageToken:
          type: string
          description: "a token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      description: ListBillingPlansResponse -
    tcn.org.billing.billingplan.v1alpha5.ListDefaultBillingPlansResponse:
      type: object
      properties:
        defaultBillingPlans:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
          description: the billing plans.
        nextPageToken:
          type: string
          description: "a token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      description: ListDefaultBillingPlansResponse -
    tcn.org.billing.billingtag.v1alpha5.BatchCreateBillingTagsRequest:
      required:
      - requests
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.CreateBillingTagRequest'
          description: "the billing tags to create.\n a maximum of 1000 billing tags
            can be created in a single request."
      description: BatchCreateBillingTagsRequest -
    tcn.org.billing.billingtag.v1alpha5.BatchCreateBillingTagsResponse:
      type: object
      properties:
        billingTags:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag'
          description: created billing tags
      description: BatchCreateBillingTagsResponse -
    tcn.org.billing.billingtag.v1alpha5.BillingTag:
      required:
      - title
      - productCategory
      type: object
      properties:
        name:
          type: string
          description: the name used to identify the billing tag
        title:
          type: string
          description: the human-readable title of the billing tag
        productCategory:
          type: integer
          description: the category of products this billing tag can be applied to
          format: enum
        createTime:
          readOnly: true
          type: string
          description: the time the billing tag was created.
          format: date-time
        deleteTime:
          readOnly: true
          type: string
          description: the time the billing tag was deleted.
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the billing tag was last updated.
          format: date-time
      description: BillingTag defines a tag or label that can be attached to a sku.
    tcn.org.billing.billingtag.v1alpha5.CreateBillingTagRequest:
      required:
      - billingTag
      type: object
      properties:
        billingTagId:
          type: string
          description: the id of the billing tag to create.
        billingTag:
          allOf:
          - $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag'
          description: the billing tag to create.
      description: CreateBillingTagRequest -
    tcn.org.billing.billingtag.v1alpha5.ListBillingTagsResponse:
      type: object
      properties:
        billingTags:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag'
          description: the billing tags.
        nextPageToken:
          type: string
          description: "a token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      description: ListBillingTagsResponse -
    tcn.org.billing.event.v1alpha5.ListProcessEventsJobsResponse:
      type: object
      properties:
        processEventsJobs:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.ProcessEventsJob'
          description: the list of process events jobs.
        nextPageToken:
          type: string
          description: "a token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      description: ListProcessEventsJobsResponse -
    tcn.org.billing.event.v1alpha5.ProcessEventsJob:
      required:
      - title
      type: object
      properties:
        name:
          type: string
          description: the name used to identify the job
        title:
          type: string
          description: the human-readable title of the job.
        createTime:
          readOnly: true
          type: string
          description: the time the job was created.
          format: date-time
        deleteTime:
          readOnly: true
          type: string
          description: the time the job was deleted.
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the job was last updated.
          format: date-time
        orgIds:
          type: array
          items:
            type: string
          description: the org ids that the job will process events for; defaults
            to all.
        eventTypes:
          type: array
          items:
            type: integer
            format: int32
          description: the event types that the job will process events for; defaults
            to all.
        startTime:
          type: string
          description: "the start time that the job will process events for. If not
            set, defaults to\n the beginning of time."
          format: date-time
        endTime:
          type: string
          description: "the end time that the job will process events for. If not
            set, defaults to\n the end of time."
          format: date-time
      description: ProcessEventsJob is a resource that represents a job to process
        events.
    tcn.org.billing.event.v1alpha5.RunProcessEventsJobRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: "the name of the process events job to be run.\n Format: processEventsJobs/{process_events_job}"
      description: RunProcessEventsJobRequest -
    tcn.org.billing.invoice.v1alpha5.GenerateInvoiceRequest:
      type: object
      properties:
        invoiceTime:
          type: string
          description: "the date of the invoice, or in other words, a date that lies
            within the billing cycle\n for which the invoice is being generated."
          format: date
        format:
          type: integer
          description: the format of the invoice.
          format: enum
      description: GenerateInvoiceRequest -
    tcn.org.billing.invoice.v1alpha5.GenerateInvoiceResponse:
      type: object
      properties:
        billingCycle:
          type: string
          description: the billing cycle for which the invoice was generated.
        generateTime:
          type: string
          description: the time at which the invoice was generated.
          format: date-time
        downloadUri:
          type: string
          description: the download uri for the invoice.
        rows:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.invoice.v1alpha5.GenerateInvoiceResponse_InvoiceRow'
          description: the invoice rows.
      description: GenerateInvoiceResponse -
    tcn.org.billing.invoice.v1alpha5.GenerateInvoiceResponse_InvoiceColumn:
      type: object
      properties:
        name:
          type: string
          description: the name of the column.
        value:
          type: string
          description: the value of the column.
      description: InvoiceColumn -
    tcn.org.billing.invoice.v1alpha5.GenerateInvoiceResponse_InvoiceRow:
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.invoice.v1alpha5.GenerateInvoiceResponse_InvoiceColumn'
          description: the columns of the invoice row.
      description: InvoiceRow -
    tcn.org.billing.matchingrule.type.CountryPrefixes:
      required:
      - countryPrefix
      type: object
      properties:
        countryPrefix:
          type: string
          description: the country prefix to match
        prefixes:
          type: array
          items:
            type: string
          description: the list of prefixes to match; each prefix must start with
            the country prefix.
      description: "CountryPrefixes defines a rule for matching a set of prefixes
        mapped\n to a single country."
    tcn.org.billing.matchingrule.type.MatchingConfig:
      type: object
      properties:
        countryPrefixes:
          allOf:
          - $ref: '#/components/schemas/tcn.org.billing.matchingrule.type.CountryPrefixes'
          description: The country prefixes to be used for matching.
      description: "MatchingConfig defines the configuration for a matching rule.
        This\n should be functionally equivalent to a union type in C."
    tcn.org.billing.matchingrule.v1alpha5.BatchDeleteDraftMatchingRulesRequest:
      required:
      - names
      type: object
      properties:
        parent:
          type: string
          description: "the parent of the matching rules to be deleted.\n Format:
            defaultBillingPlans/{defaultBillingPlan}"
        names:
          type: array
          items:
            type: string
          description: "the names of the matching rules to be deleted.\n a maximum
            of 1000 matching rules can be deleted in a single request.\n Format: defaultBillingPlans/{defaultBillingPlan}/draftMatchingRules/{draftMatchingRule}"
        allowMissing:
          type: boolean
          description: "if set to true, and the matching rule is missing, the request
            will succeed\n but no action will be taken on the server."
      description: BatchDeleteDraftMatchingRulesRequest -
    tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule:
      required:
      - title
      - config
      type: object
      properties:
        name:
          type: string
          description: the matching rule id used to identify the rule.
        title:
          type: string
          description: the human-readable title of the matching rule.
        createTime:
          readOnly: true
          type: string
          description: the time the matching rule was created.
          format: date-time
        deleteTime:
          readOnly: true
          type: string
          description: the time the matching rule was deleted.
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the matching rule was last updated.
          format: date-time
        config:
          allOf:
          - $ref: '#/components/schemas/tcn.org.billing.matchingrule.type.MatchingConfig'
          description: the configuration for the matching rule.
      description: DraftMatchingRule defines a draft rule for matching a set of events.
    tcn.org.billing.matchingrule.v1alpha5.ListDraftMatchingRulesResponse:
      type: object
      properties:
        draftMatchingRules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
          description: the draft matching rules.
        nextPageToken:
          type: string
          description: "a token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      description: ListDraftMatchingRulesResponse -
    tcn.org.billing.matchingrule.v1alpha5.ListMatchingRulesResponse:
      type: object
      properties:
        matchingRules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.MatchingRule'
          description: the matching rules.
        nextPageToken:
          type: string
          description: "a token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      description: ListMatchingRulesResponse -
    tcn.org.billing.matchingrule.v1alpha5.MatchingRule:
      required:
      - title
      - config
      type: object
      properties:
        name:
          type: string
          description: the matching rule id used to identify the rule.
        title:
          type: string
          description: the human-readable title of the matching rule.
        createTime:
          readOnly: true
          type: string
          description: the time the matching rule was created.
          format: date-time
        deleteTime:
          readOnly: true
          type: string
          description: the time the matching rule was deleted.
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the matching rule was last updated.
          format: date-time
        config:
          allOf:
          - $ref: '#/components/schemas/tcn.org.billing.matchingrule.type.MatchingConfig'
          description: the configuration for the matching rule.
      description: MatchingRule defines a rule for matching a set of events.
    tcn.org.billing.ratedefinition.v1alpha5.BatchCreateDefaultRateDefinitionsRequest:
      required:
      - requests
      type: object
      properties:
        parent:
          type: string
          description: "the parent resource where the default rate definitions will
            be created.\n Format: defaultBillingPlans/{default_billing_plan_id}"
        requests:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.CreateDefaultRateDefinitionRequest'
          description: "the default rate definitions to create.\n a maximum of 1000
            rate definitions can be created in a single request."
      description: BatchCreateDefaultRateDefinitionsRequest -
    tcn.org.billing.ratedefinition.v1alpha5.BatchCreateDefaultRateDefinitionsResponse:
      type: object
      properties:
        defaultRateDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
          description: the default rate definitions that were created.
      description: BatchCreateDefaultRateDefinitionsResponse -
    tcn.org.billing.ratedefinition.v1alpha5.BatchDeleteDefaultRateDefinitionsRequest:
      required:
      - names
      type: object
      properties:
        parent:
          type: string
          description: "the parent resource where the default rate definitions will
            be deleted.\n Format: defaultBillingPlans/{default_billing_plan_id}"
        names:
          type: array
          items:
            type: string
          description: "the names of the rate definitions to be deleted.\n a maximum
            of 1000 rate definitions can be deleted in a single request.\n Format:
            defaultBillingPlans/{default_billing_plan_id}/defaultRateDefinitions/{default_rate_definition_id}"
        allowMissing:
          type: boolean
          description: "if set to true, and the rate definition is missing, the request
            will succeed\n but no action will be taken on the server."
      description: BatchDeleteDefaultRateDefinitionsRequest -
    tcn.org.billing.ratedefinition.v1alpha5.BatchResetRateDefinitionsRequest:
      required:
      - names
      type: object
      properties:
        parent:
          type: string
          description: "the parent resource where the rate definitions will be reset.\n
            Format: orgs/{org}/billingPlans/{billing_plan_id}"
        names:
          type: array
          items:
            type: string
          description: "the names of the rate definitions to be reset.\n a maximum
            of 1000 rate definitions can be reset in a single request.\n Format: orgs/{org}/billingPlans/{billing_plan_id}/rateDefinitions/{rate_definition_id}"
        allowMissing:
          type: boolean
          description: "if set to true, and the rate definition is missing, the request
            will succeed\n but no action will be taken on the server."
      description: BatchResetRateDefinitionsRequest -
    tcn.org.billing.ratedefinition.v1alpha5.BatchResetRateDefinitionsResponse:
      type: object
      properties:
        rateDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
          description: the reset rate definitions.
      description: BatchResetRateDefinitionsResponse -
    tcn.org.billing.ratedefinition.v1alpha5.CreateDefaultRateDefinitionRequest:
      required:
      - parent
      - defaultRateDefinition
      type: object
      properties:
        parent:
          type: string
          description: "the parent resource where the rate definition will be created.\n
            Format: defaultBillingPlans/{default_billing_plan_id}"
        defaultRateDefinitionId:
          type: string
          description: the default rate definition id.
        defaultRateDefinition:
          allOf:
          - $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
          description: the default rate definition to create.
      description: CreateDefaultRateDefinitionRequest -
    tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition:
      required:
      - productType
      - rate
      type: object
      properties:
        name:
          type: string
          description: the name used to identify the billing plan
        createTime:
          readOnly: true
          type: string
          description: the time the rate definition was created.
          format: date-time
        deleteTime:
          readOnly: true
          type: string
          description: the time the rate definition was deleted.
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the rate definition was last updated.
          format: date-time
        isDraft:
          readOnly: true
          type: boolean
          description: if the rate definition is a draft
        productType:
          type: integer
          description: the product type of the rate definition
          format: enum
        draftMatchingRule:
          allOf:
          - $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition_DraftMatchingRule'
          description: the draft matching rule
        matchingRule:
          allOf:
          - $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition_MatchingRule'
          description: the active matching rule
        billingTag:
          allOf:
          - $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition_BillingTag'
          description: the billing tag of the rate (if applicable)
        rate:
          allOf:
          - $ref: '#/components/schemas/google.type.Money'
          description: the amount to rate a unit
        precision:
          type: integer
          description: "the precision to use (in decimal places) when calculating
            the price. For example,\n a rate of 1.234 with a precision of 2 would
            produce a final price of 1.23. If not\n set, will round to nearest whole
            number."
          format: int32
        unitSize:
          type: string
          description: "the size of an individual unit (only applicable if the RateDefinition
            is a unit based rate).\n For example, if the rate is a unit based rate
            and the unit size is 300 bytes, an\n event of size 400 bytes will get
            billed as if it were 2 units."
      description: DefaultRateDefinition -
    tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition_BillingTag:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: the name of the billing tag
        title:
          readOnly: true
          type: string
          description: the title of the billing tag
      description: BillingTag -
    tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition_DraftMatchingRule:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: the name of the matching rule
        title:
          readOnly: true
          type: string
          description: the title of the matching rule
      description: DraftMatchingRule -
    tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition_MatchingRule:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: the name of the matching rule
        title:
          readOnly: true
          type: string
          description: the title of the matching rule
      description: MatchingRule -
    tcn.org.billing.ratedefinition.v1alpha5.ListDefaultRateDefinitionsResponse:
      type: object
      properties:
        defaultRateDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
          description: the default rate definitions.
        nextPageToken:
          type: string
          description: a token to retrieve the next page of default rate definitions.
      description: ListDefaultRateDefinitionsResponse -
    tcn.org.billing.ratedefinition.v1alpha5.ListRateDefinitionsResponse:
      type: object
      properties:
        rateDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
          description: the rate definitions.
        nextPageToken:
          type: string
          description: a token to retrieve the next page of rate definitions.
      description: ListRateDefinitionsResponse -
    tcn.org.billing.ratedefinition.v1alpha5.RateDefinition:
      required:
      - productType
      - rate
      type: object
      properties:
        name:
          type: string
          description: the name used to identify the billing plan
        createTime:
          readOnly: true
          type: string
          description: the time the rate definition was created.
          format: date-time
        deleteTime:
          readOnly: true
          type: string
          description: the time the rate definition was deleted.
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: the time the rate definition was last updated.
          format: date-time
        isDraft:
          readOnly: true
          type: boolean
          description: if the rate definition is a draft
        isCustomized:
          readOnly: true
          type: boolean
          description: if the rate definition has been customized
        productType:
          type: integer
          description: the product type of the rate definition
          format: enum
        draftMatchingRule:
          allOf:
          - $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition_DraftMatchingRule'
          description: the draft matching rule
        matchingRule:
          allOf:
          - $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition_MatchingRule'
          description: the active matching rule
        billingTag:
          allOf:
          - $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition_BillingTag'
          description: the billing tag of the rate (if applicable)
        rate:
          allOf:
          - $ref: '#/components/schemas/google.type.Money'
          description: the amount to rate a unit
        precision:
          type: integer
          description: "the precision to use (in decimal places) when calculating
            the price. For example,\n a rate of 1.234 with a precision of 2 would
            produce a final price of 1.23. If not\n set, will round to nearest whole
            number."
          format: int32
        unitSize:
          type: string
          description: "the size of an individual unit (only applicable if the RateDefinition
            is a unit based rate).\n For example, if the rate is a unit based rate
            and the unit size is 300 bytes, an\n event of size 400 bytes will get
            billed as if it were 2 units."
      description: RateDefinition -
    tcn.org.billing.ratedefinition.v1alpha5.RateDefinition_BillingTag:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: the name of the billing tag
        title:
          readOnly: true
          type: string
          description: the title of the billing tag
      description: Billing Tag -
    tcn.org.billing.ratedefinition.v1alpha5.RateDefinition_DraftMatchingRule:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: the name of the matching rule
        title:
          readOnly: true
          type: string
          description: the title of the matching rule
      description: DraftMatchingRule -
    tcn.org.billing.ratedefinition.v1alpha5.RateDefinition_MatchingRule:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: the name of the matching rule
        title:
          readOnly: true
          type: string
          description: the title of the matching rule
      description: Matching Rule -
    tcn.org.billing.ratedefinition.v1alpha5.ResetRateDefinitionRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: "the name of the rate definition to reset.\n Format: orgs/{org}/billingPlans/{billing_plan_id}/rateDefinitions/{rate_definition_id}"
        allowMissing:
          type: boolean
          description: "if set to true, and the rate definition is missing, the request
            will succeed\n but no action will be taken on the server."
      description: ResetRateDefinitionRequest -
    tcn.org.billing.ratedefinition.v1alpha5.ResetRateDefinitionResponse:
      type: object
      properties:
        rateDefinition:
          allOf:
          - $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
          description: the rate definition.
      description: ResetRateDefinitionResponse -
    tcn.org.exiles.v1alpha1.ExileCertificate:
      required:
      - title
      - description
      - hash
      type: object
      properties:
        name:
          type: string
          description: exile certificate name is the certificate id used to identify
            a certificate
        title:
          type: string
          description: exile certificate title is what the certificate is named
        description:
          type: string
          description: exile certificate description of certificate
        hash:
          type: string
          description: exile certificate hash to verify certificates
        expirationTime:
          readOnly: true
          type: string
          description: exile certificate expired date
          format: date-time
        createTime:
          readOnly: true
          type: string
          description: exile certificate created date
          format: date-time
        revoked:
          readOnly: true
          type: boolean
          description: exile certificate revoked shows if the certificate is still
            valid or revoked
        exileConfigId:
          type: string
          description: exile certificate config id links the exile certificate to
            an exile configuration
        renewalInstance:
          readOnly: true
          type: string
          description: exile certificate renewal_instance shows the number of times
            the certificate has been renewed
      description: ExileCertificate defines the structure of an exile certificate
    tcn.org.exiles.v1alpha1.ListExileCertificatesResponse:
      type: object
      properties:
        exileCertificates:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.ExileCertificate'
          description: The list of exile certificates.
        nextPageToken:
          type: string
          description: The next page token.
      description: response used listing all exile certificates
    tcn.org.exiles.v1alpha1.RevokeExileCertificateResponse:
      type: object
      properties: {}
      description: RevokeExileCertificateResponse is the response for revoking a exile
        certificate.
    tcn.org.exiles.v1alpha1.RotateExileCertificateResponse:
      type: object
      properties:
        encodedCertificate:
          type: string
          description: encoded certificate
      description: RotateExileCertificateResponse
    tcn.org.idp.v1alpha1.IdpClient:
      required:
      - redirectUris
      - trustedPeers
      - title
      type: object
      properties:
        name:
          type: string
          description: idpClient identifier
        secret:
          type: string
          description: "The secret of the idpClient.\n This field cannot be updated
            after creation."
        redirectUris:
          type: array
          items:
            type: string
          description: The idpClients allowed redirect uris
        trustedPeers:
          type: array
          items:
            type: string
          description: The idpClients trusted peers
        title:
          type: string
          description: The title of the idpClient
        billingId:
          type: string
          description: The billing id of the idpClient
      description: IdpClient is a type and threshold in array for IDPClient
    tcn.org.idp.v1alpha1.ListIdpClientsResponse:
      type: object
      properties:
        idpClients:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
          description: idpClients
        nextPageToken:
          type: string
          description: next page token
      description: response message ListIdpClientsResponse
    tcn.org.organizations.v1alpha1.ArchiveOrganizationRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The identifier of the organization to archive.
      description: ArchiveOrganizationRequest is the request message for ArchiveOrganization
    tcn.org.organizations.v1alpha1.ArchiveOrganizationResponse:
      type: object
      properties: {}
      description: ArchiveOrganizationResponse is the response message for ArchiveOrganization
    tcn.org.organizations.v1alpha1.LastScheduledDate:
      type: object
      properties:
        lastScheduledTime:
          type: string
          description: "last scheduled outbound broadcast (a hold over from Backoffice)\n
            Named last_scheduled_time to follow the AIP convention."
          format: date-time
      description: LastScheduledDate is the response message for GetLastScheduledDate.
    tcn.org.organizations.v1alpha1.ListOrganizationsResponse:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
          description: The list of organizations.
        nextPageToken:
          type: string
          description: "A token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      description: ListOrganizationsResponse is the response message for ListOrganizations.
    tcn.org.organizations.v1alpha1.Organization:
      required:
      - displayName
      - backofficeTheme
      - crmId
      - timeZone
      - p3OwnerId
      type: object
      properties:
        name:
          type: string
          description: name identifier for an organization
        displayName:
          type: string
          description: organization display name
        enabledRegions:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: Map of regionId to clientSid. Shows an org's enabled regions.
        defaultRegion:
          readOnly: true
          type: string
          description: Default region org was first enabled for
        billingId:
          readOnly: true
          type: string
          description: organization billing id
        clientSid:
          readOnly: true
          type: string
          description: organization client sid
        manualOnlyAccount:
          type: boolean
          description: "organization manual only account\n if ever set to manual only
            can never be unset"
        backofficeTheme:
          type: integer
          description: organization back-office theme
          format: enum
        archived:
          readOnly: true
          type: boolean
          description: Archived specifies this organization as no longer active.
        crmId:
          type: string
          description: Salesforce ID used for integrations.
        timeZone:
          type: string
          description: "organization time zone\n This represents the string value
            of the api.commons.TimeZone enum."
        callbacksServiceId:
          readOnly: true
          type: string
          description: organization callbacks service id
        p3OwnerId:
          type: string
          description: organization parent id
        createTime:
          readOnly: true
          type: string
          description: organization creation date
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: last_updated_date
          format: date-time
      description: Organization contains the basic properties for an organization.
    tcn.org.organizations.v1alpha1.StreamOwnedOrganizationsResponse:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
          description: The list of organizations owned by the parent organization.
      description: StreamOwnedOrganizationsResponse is the response message for StreamOwnedOrganizations.
    tcn.org.organizations.v1alpha1.UnArchiveOrganizationRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The identifier of the organization to unarchive.
      description: UnArchiveOrganizationRequest is the request message for UnArchiveOrganization
    tcn.org.organizations.v1alpha1.UnArchiveOrganizationResponse:
      type: object
      properties: {}
      description: UnArchiveOrganizationResponse is the response message for UnArchiveOrganization
    tcn.org.preferences.v1alpha1.AdminClientPreferences:
      required:
      - useReservedCarrier
      - reservedCarriers
      - agentScreenRecording
      - whitelistDomains
      - whitelistIps
      - callbacksServiceId
      - allowedCountries
      - emailConfig
      type: object
      properties:
        name:
          type: string
          description: name is the identifier of the admin client preferences
        useReservedCarrier:
          type: boolean
          description: Enable the use of reserved carriers.
        reservedCarriers:
          type: array
          items:
            type: string
          description: List of reserved carriers.
        agentScreenRecording:
          type: boolean
          description: Whether agent screen recording is enabled.
        whitelistDomains:
          type: array
          items:
            type: string
          description: Whitelisted domain names for the organization.
        whitelistIps:
          type: array
          items:
            type: string
          description: Whitelisted IPs for the organization.
        callbacksServiceId:
          type: string
          description: Scheduled callbacks service ID.
        allowedCountries:
          type: array
          items:
            type: string
          description: "List of allowed countries for the organization.\n This is
            currently the string version of the api.commons.Country enum."
        emailConfig:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AdminClientPreferences_EmailConfig'
          description: Email configuration for the organization.
      description: "AdminClientPreferences represents the preferences for essential
        organization properties.\n This should only be used by account managers and
        customer support."
    tcn.org.preferences.v1alpha1.AdminClientPreferences_EmailConfig:
      required:
      - id
      - key
      - name
      type: object
      properties:
        id:
          type: string
          description: Email sendgrid API key ID.
        key:
          type: string
          description: Email sendgrid API key.
        name:
          type: string
          description: Email sendgrid API key name.
      description: EmailConfig represents the email configuration for the organization.
    tcn.org.preferences.v1alpha1.AgentPreferences:
      required:
      - defaultAgentDialIn
      - pbxExtensionLength
      - defaultSoftphoneMicrophoneInputVolume
      - defaultSoftphoneSpeakerOutputVolume
      - configDialInNumbers
      - clientDialInNumbers
      - manualDialCallerIdPrivacy
      - useManualDialCallerIdPrivacy
      - messageNotificationsDisabled
      type: object
      properties:
        name:
          type: string
          description: agentPreferences identifier
        defaultAgentDialIn:
          type: string
          description: "(-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
            We need to do this because we use the phrase dial in. --)\n Default agent
            dial-in number"
        pbxExtensionLength:
          type: integer
          description: PBX dial extension length, between 3 to 9 digits long.
          format: int32
        defaultSoftphoneMicrophoneInputVolume:
          type: integer
          description: Default agent softphone microphone input volume, 0-100%.
          format: int32
        defaultSoftphoneSpeakerOutputVolume:
          type: integer
          description: Default agent softphone speaker output volume, 0-100%.
          format: int32
        configDialInNumbers:
          type: array
          items:
            type: string
          description: "(-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
            We need to do this because we use the phrase dial in. --)\n List of agent
            dial-in numbers defined by regional skunk config."
        clientDialInNumbers:
          type: array
          items:
            type: string
          description: "(-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
            We need to do this because we use the phrase dial in. --)\n List of customized
            client-defined dial-in numbers."
        manualDialCallerIdPrivacy:
          type: boolean
          description: Allows agent to use privacy headers on the manual dial caller
            ID.
        useManualDialCallerIdPrivacy:
          type: boolean
          description: The default/initial setting for caller ID privacy.
        messageNotificationsDisabled:
          type: boolean
          description: Whether or not to disable message notifications
      description: Preferences controlling direct agent properties
    tcn.org.preferences.v1alpha1.AgentQuickViewPreferences:
      required:
      - agentIntercomStyles
      - callConnectingStyles
      - intercomDestinationStyles
      - intercomSourceStyles
      - manualCallStyles
      - onCallStyles
      - pausedStyles
      - pbxCallStyles
      - previewCallStyles
      - readyStyles
      - transferCallStyles
      - transferLostStyles
      - wrapUpStyles
      type: object
      properties:
        name:
          type: string
          description: name is the identifier of the agentQuickView preferences
        agentIntercomStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: The list of styles for the agent intercom status.
        callConnectingStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: The list of styles for the call connecting status.
        intercomDestinationStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: The list of styles for the intercom destination status.
        intercomSourceStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: The list of styles for the intercom source status.
        manualCallStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: The list of styles for the manual call status.
        onCallStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: "The list of styles for the in conference status.\n (Previously
            named \"in_conference_styles\" - changed to match the UI and follow the
            Google AIP standard)"
        pausedStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: The list of styles for the paused status.
        pbxCallStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: The list of styles for the pbx call status.
        previewCallStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: The list of styles for the preview call status.
        readyStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: The list of styles for the ready status.
        transferCallStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: The list of styles for the transfer call status.
        transferLostStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: The list of styles for the transfer lost status.
        wrapUpStyles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          description: The list of styles for the wrap up status.
      description: AgentQuickViewPreferences represents the preferences for agentQuickView
        configurations.
    tcn.org.preferences.v1alpha1.AgentStatusSinceStyle:
      required:
      - bgRed
      - bgGreen
      - bgBlue
      - fgRed
      - fgGreen
      - fgBlue
      - agentGuiStage
      - duration
      type: object
      properties:
        bgRed:
          type: string
          description: The background color of the red component.
        bgGreen:
          type: string
          description: The background color of the green component.
        bgBlue:
          type: string
          description: The background color of the blue component.
        fgRed:
          type: string
          description: The foreground (text) color of the red component.
        fgGreen:
          type: string
          description: The foreground (text) color of the green component.
        fgBlue:
          type: string
          description: The foreground (text) color of the blue component.
        agentGuiStage:
          type: integer
          description: "The stage of the agent GUI.\n (Previously named \"agent_gui_status\"
            - changed to follow the Google AIP standard)"
          format: enum
        duration:
          type: string
          description: The duration in status in seconds.
      description: AgentStatusSinceStyle represents the style of the agent status
        since.
    tcn.org.preferences.v1alpha1.AuthenticationPreferences:
      required:
      - authorizationViaIp
      - allowedIps
      - agentApiKey
      - enableMfa
      - blockUnverifiedUsers
      - emailMfaSettings
      - duoMfaSettings
      - allowForcePasswordResetInterval
      - passwordResetDayInterval
      - userAuthorizationViaIp
      - forceSsoProvider
      - enableTotp
      type: object
      properties:
        name:
          type: string
          description: authenticationPreferences identifier
        authorizationViaIp:
          type: boolean
          description: Use IP based authorization
        allowedIps:
          type: array
          items:
            type: string
          description: List of whitelisted IPs
        agentApiKey:
          type: string
          description: Agent API key
        enableMfa:
          type: boolean
          description: Whether or not two factor authentication is enabled
        blockUnverifiedUsers:
          type: boolean
          description: "Whether or not to block login from users without a verified
            email\n This option is only used if two factor authentication is enabled"
        emailMfaSettings:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AuthenticationPreferences_EmailMfaSettings'
          description: Contains the settings needed to set up email mfa for an organization
        duoMfaSettings:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AuthenticationPreferences_DuoMfaSettings'
          description: "Contains the settings needed to set up a duo mfa client for
            an organization\n The duo client secret is not included here - it only
            exists on the update api"
        allowForcePasswordResetInterval:
          type: boolean
          description: Org enables the ability to set the password reset interval
        passwordResetDayInterval:
          type: integer
          description: An interval in the form of days for users in the org to reset
            passwords
          format: int32
        userAuthorizationViaIp:
          type: boolean
          description: Use IP based authorization per user
        forceSsoProvider:
          type: boolean
          description: Restrict sso users from logging in via username and password
        enableTotp:
          type: boolean
          description: Whether or not to enable TOTP for 2FA
      description: Preferences for controlling the organization's authentication properties
    tcn.org.preferences.v1alpha1.AuthenticationPreferences_DuoMfaSettings:
      required:
      - duoClientId
      - duoApiHost
      - enabled
      type: object
      properties:
        duoClientId:
          type: string
          description: Duo Client Id
        duoApiHost:
          type: string
          description: Duo API Host
        enabled:
          type: boolean
          description: Enabled boolean
        duoClientSecret:
          writeOnly: true
          type: string
          description: "The duo client secret used exclusively for MFA during update
            api requests.\n This field must not be populated in other contexts\n (--
            api-linter: core::0203::field-behavior-required=disabled\n     aip.dev/not-precedent:
            We need to do this because reasons it needs to be input only and we don't
            want to have a one of object. --)"
      description: "A message containing the settings needed to set up a duo mfa client
        for an organization\n The duo client secret is not included here - it only
        exists on the update api"
    tcn.org.preferences.v1alpha1.AuthenticationPreferences_EmailMfaSettings:
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          description: Enabled Boolean
      description: A message containing the settings needed for email mfa for an organization
    tcn.org.preferences.v1alpha1.BargeInFiltering:
      required:
      - huntGroup
      - agentStatus
      type: object
      properties:
        huntGroup:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BargeInFiltering_HuntGroup'
          description: Hunt group filtering parameters.
        agentStatus:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BargeInFiltering_AgentStatus'
          description: Agent status filtering parameters.
      description: Barge-in filtering.
    tcn.org.preferences.v1alpha1.BargeInFiltering_AgentStatus:
      required:
      - any
      - waiting
      - onCall
      - wrapUp
      - paused
      - transfer
      - preview
      - manual
      - pbx
      - intercom
      type: object
      properties:
        any:
          type: boolean
          description: Any of the below statuses.
        waiting:
          type: boolean
          description: Waiting status.
        onCall:
          type: boolean
          description: On call status.
        wrapUp:
          type: boolean
          description: Wrap up status .
        paused:
          type: boolean
          description: Paused status.
        transfer:
          type: boolean
          description: Transfer status.
        preview:
          type: boolean
          description: Preview status.
        manual:
          type: boolean
          description: Manual status.
        pbx:
          type: boolean
          description: PBX status.
        intercom:
          type: boolean
          description: Intercom status .
      description: AgentStatus is a message for agent status filtering parameters.
    tcn.org.preferences.v1alpha1.BargeInFiltering_HuntGroup:
      required:
      - any
      - huntGroupSid
      type: object
      properties:
        any:
          type: boolean
          description: Choose any hunt group to filter.
        huntGroupSid:
          type: string
          description: Specific a hunt group SID to filter.
      description: HuntGroup is a message for hunt group filtering parameters.
    tcn.org.preferences.v1alpha1.BroadcastPreferences:
      required:
      - displayListPenetrationStrategy
      - dialListPenetrationStrategy
      - displayFollowTheSun
      - followTheSun
      - sequenceTerminatorOverride
      - broadcastTemplateOrdering
      - startTimeEnabled
      - startTimeDefault
      - stopTimeEnabled
      - stopTimeDefault
      type: object
      properties:
        name:
          type: string
          description: name is the identifier of the webhook preferences
        displayListPenetrationStrategy:
          type: boolean
          description: "Whether the 'Dial List Penetration Strategy' property in templates
            and\n broadcast scheduling is displayed."
        dialListPenetrationStrategy:
          type: boolean
          description: "List penetration strategy to give priority to dialing each
            number in a\n single record before dialing from other records; false for
            depth first,\n true for breadth first search."
        displayFollowTheSun:
          type: boolean
          description: Display the 'Follow the Sun' property in templates and broadcasts.
        followTheSun:
          type: boolean
          description: Whether broadcasts follow the sun (prioritized east to west).
        sequenceTerminatorOverride:
          type: boolean
          description: "Whether to hide the terminator select menu in the standard
            template\n wizard and include only 'Connected, Live, and Machine' options
            in the\n layered template wizard."
        broadcastTemplateOrdering:
          type: integer
          description: Broadcast scheduling template ordering default value.
          format: enum
        startTimeEnabled:
          type: boolean
          description: Whether the default broadcast start time is used.
        startTimeDefault:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BroadcastTime'
          description: Default broadcast start time.
        stopTimeEnabled:
          type: boolean
          description: Whether the default broadcast stop time is used.
        stopTimeDefault:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BroadcastTime'
          description: Default broadcast stop time.
      description: BroadcastPreferences represents the preferences for broadcast configurations.
    tcn.org.preferences.v1alpha1.BroadcastTime:
      required:
      - hours
      - minutes
      - timeZone
      type: object
      properties:
        hours:
          type: integer
          description: Hour of the day (0-23).
          format: int32
        minutes:
          type: integer
          description: Minute of the hour (0-59).
          format: int32
        timeZone:
          type: string
          description: Time zone string representing api commons time zone.
      description: Broadcast start/stop time properties.
    tcn.org.preferences.v1alpha1.BusinessPreferences:
      required:
      - weeksOfData
      - timeZone
      - multiClientAccess
      - customVisualizations
      - timeFilter
      type: object
      properties:
        name:
          type: string
          description: name is the identifier of the webhook preferences
        weeksOfData:
          type: integer
          description: "(-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
            We need to do this because the wording of the field. --)\n Number of weeks
            of past data that are accessible."
          format: int32
        timeZone:
          type: string
          description: Default time zone for business intelligence, currently it represents
            the ana time zone.
        multiClientAccess:
          type: boolean
          description: Whether to allow multi-client access.
        customVisualizations:
          type: boolean
          description: Enable/disable of custom visualizations in BI.
        timeFilter:
          type: string
          description: Time filter for custom dashboard and visualizations.
      description: BusinessPreferences represents the preferences for business configurations.
    tcn.org.preferences.v1alpha1.CompliancePreferences:
      required:
      - displayCellPhoneScrub
      - cellPhoneScrub
      - displayOffHoursCalls
      - offHoursCalls
      - displayNaturalCompliance
      - useNaturalCompliance
      - defaultComplianceRuleSetId
      - displayScheduleRules
      - useScheduleRules
      - defaultScheduleRule
      - doZipCodeScrub
      - zipCodeScrub
      - defaultEmailComplianceListId
      - defaultSmsComplianceListId
      type: object
      properties:
        name:
          type: string
          description: CompliancePreferences identifier
        displayCellPhoneScrub:
          type: boolean
          description: "Whether cell phone scrub from campaign view.\n (Show Cell
            Phone Scrub)"
        cellPhoneScrub:
          type: boolean
          description: "Enable/disable to the ability scrub cell phone numbers.\n
            (Cell Phone Scrub Default)"
        displayOffHoursCalls:
          type: boolean
          description: "Whether after-hours calls are displayed in campaigns.\n (Show
            Time Zone Restriction - previously named \"display_after_hours_calls\")"
        offHoursCalls:
          type: boolean
          description: "Enable/disable after-hours calls in campaigns.\n (Default
            Time Zone Restriction - previously named \"after_hours_calls\")"
        displayNaturalCompliance:
          type: boolean
          description: "Whether the default natural compliance rule set is displayed.\n
            (Display Natural Language Compliance)"
        useNaturalCompliance:
          type: boolean
          description: "Enable using the default natural compliance rule set.\n (Use
            Natural Language Compliance)"
        defaultComplianceRuleSetId:
          type: string
          description: "The id of the compliance rule set to use by default (UUID
            of set).\n (Default Compliance Rule Set)"
        displayScheduleRules:
          type: boolean
          description: "Whether schedule rules are displayed in campaigns.\n (Show
            Schedule Rules)"
        useScheduleRules:
          type: boolean
          description: "Enable the use of the default schedule rules.\n (Default Use
            Schedule Rules)"
        defaultScheduleRule:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ScheduleRuleField'
          description: "Schedule rule to use by default.\n (Default Schedule Rule)"
        doZipCodeScrub:
          type: boolean
          description: "Whether ZIP code scrubbing is enabled.\n (Zip/Postal Code
            Scrub)"
        zipCodeScrub:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactFieldDescription'
          description: "Field for ZIP/postal code scrubbing to use.\n (Zip/Postal
            Code Field)"
        defaultEmailComplianceListId:
          type: string
          description: "The id of th default email compliance list (Name of the scrub
            list).\n (Default Email Compliance List)"
        defaultSmsComplianceListId:
          type: string
          description: "The id of th default sms compliance list (Name of the scrub
            list).\n (Default SMS Compliance List)"
      description: CompliancePreferences is an object containing all fields relating
        to an Org's Compliance preferences.
    tcn.org.preferences.v1alpha1.ContactAreaCode:
      type: object
      properties:
        contactFieldDescription:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactFieldDescription'
          description: Contact field description with sid and name is used to access
            a contact field description resource.
        custom:
          type: integer
          description: Client-defined area code number.
          format: int32
      description: Contact area code type.
    tcn.org.preferences.v1alpha1.ContactFieldDescription:
      required:
      - contactFieldDescriptionSid
      type: object
      properties:
        contactFieldDescriptionSid:
          type: string
          description: Contact field description sid.
        contactFieldDescriptionDisplayName:
          type: string
          description: Contact field name.
      description: Contact field description.
    tcn.org.preferences.v1alpha1.ContactPreferences:
      required:
      - defaultContactImportFormat
      - useContactImportFormat
      - defaultContactAreaCode
      - useContactAreaCode
      - discardRecordDefaultAbsentNumbersHandling
      - defaultContactsImportRandomization
      - defaultEmailColumn
      - defaultDuplicateHandling
      type: object
      properties:
        name:
          type: string
          description: ContactPreferences identifier
        defaultContactImportFormat:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ImportFormat'
          description: Default import format, either custom or standardized.
        useContactImportFormat:
          type: boolean
          description: Whether the selected contact import format preference is used.
        defaultContactAreaCode:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactAreaCode'
          description: Default area code, either custom or predefined field.
        useContactAreaCode:
          type: boolean
          description: Whether the contact area code is enabled.
        discardRecordDefaultAbsentNumbersHandling:
          type: boolean
          description: Default absent numbers handling; false to keep (default) or
            true to discard.
        defaultContactsImportRandomization:
          type: boolean
          description: Whether contacts import randomization is enabled.
        defaultEmailColumn:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactFieldDescription'
          description: The contact field to use as the default in emails.
        defaultDuplicateHandling:
          type: integer
          description: How duplicate contact numbers are handled by default.
          format: enum
      description: ContactPreferences is an object containing all fields relating
        to an Org's Contact preferences
    tcn.org.preferences.v1alpha1.CustomDialOrder:
      required:
      - dialOrderFields
      type: object
      properties:
        dialOrderFields:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactFieldDescription'
          description: One or more contact field description sids.
      description: "Custom dial order fields holds one or more contact field descriptions
        to\n indicate which fields in a contact record, and the order."
    tcn.org.preferences.v1alpha1.CustomImportFormat:
      required:
      - customImportFormatSid
      type: object
      properties:
        customImportFormatSid:
          type: string
          description: Custom import format sid used to identify the contact import
            format.
        customImportFormatDisplayName:
          type: string
          description: Custom import format name is a string value with the name of
            the contact import format.
      description: CustomImportFormat type contains contact import format properties.
    tcn.org.preferences.v1alpha1.DashboardGeneralPreferences:
      required:
      - defaultInfoView
      - defaultTableInclusion
      - defaultInfoGrouping
      - defaultSmallIcon
      - defaultDescendingSort
      - tableTemplateSid
      - defaultInfoSortByValue
      - defaultCallTypes
      - defaultBargeInFiltering
      type: object
      properties:
        name:
          type: string
          description: name is the identifier of the dashboard preferences.
        defaultInfoView:
          type: boolean
          description: Default agent info view; false for icon display, true for table
            view.
        defaultTableInclusion:
          type: boolean
          description: Default agent inclusion, true to include all agents.
        defaultInfoGrouping:
          type: boolean
          description: Default agent grouping, true to group by hunt groups.
        defaultSmallIcon:
          type: boolean
          description: Default agent icon size, false for large icons.
        defaultDescendingSort:
          type: boolean
          description: Default agent sort direction, false to sort by ascending.
        tableTemplateSid:
          type: string
          description: SID for the agent dashboard table template.
        defaultInfoSortByValue:
          type: integer
          description: "Agent dashboard order-by parameter.\n (-- api-linter: core::0140::prepositions=disabled\n
            \    aip.dev/not-precedent: We need to do this because we use the phrase
            sort by. --)"
          format: enum
        defaultCallTypes:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.IncludedCallTypes'
          description: Which call types are enabled in the agents dashboard.
        defaultBargeInFiltering:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BargeInFiltering'
          description: "Controls hunt-group and agent barge-in status parameters.\n
            (-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
            We need to do this because we use the phrase barge-in. --)"
      description: DashboardGeneralPreferences represents the preferences for agent
        general dashboard controls.
    tcn.org.preferences.v1alpha1.DashboardQueuePreferences:
      required:
      - defaultInfoView
      - defaultInfoGrouping
      - defaultSmallIcon
      - defaultDescendingSort
      - defaultAgentSkillsFilter
      - defaultInfoTableTemplate
      - defaultInfoSortByValue
      type: object
      properties:
        name:
          type: string
          description: name is the identifier of the dashboard preferences.
        defaultInfoView:
          type: boolean
          description: Default queue/hold table view; false for icon view, true for
            table view.
        defaultInfoGrouping:
          type: boolean
          description: Default queue/hold table grouping; false for no grouping, true
            for group by queue type.
        defaultSmallIcon:
          type: boolean
          description: Default table icon size; true for small, false for large.
        defaultDescendingSort:
          type: boolean
          description: Default table sort direction; false for descending, true for
            ascending.
        defaultAgentSkillsFilter:
          type: string
          description: "Default skills filter; holds a regional sid pointing to the
            filter in\n the xml_client_property table."
        defaultInfoTableTemplate:
          type: string
          description: "Default table template. holds a regional sid pointing to the
            filter in\n the xml_client_property table."
        defaultInfoSortByValue:
          type: integer
          description: "Default queue/hold info sort-by value.\n (-- api-linter: core::0140::prepositions=disabled\n
            \    aip.dev/not-precedent: We need to do this because we use the phrase
            sort by. --)"
          format: enum
      description: DashboardQueuePreferences represents the preferences for agent
        queue dashboard controls.
    tcn.org.preferences.v1alpha1.DialOrder:
      type: object
      properties:
        standard:
          type: integer
          description: "Standard order enum, (CUSTOM_DIAL_ORDER should not be set
            here but\n indicated by setting a CustomDialOrder below)."
          format: enum
        custom:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.CustomDialOrder'
          description: "Defines a \"Custom Order\" using one or more contact field\n
            description sids."
      description: "Dial order holds either a type enum, or one or more contact field\n
        description fields for custom order."
    tcn.org.preferences.v1alpha1.EmailSmsPreferences:
      required:
      - useCustomLinks
      - clientAcknowledgement
      - emailFromAddresses
      type: object
      properties:
        name:
          type: string
          description: EmailSmsPreferences identifier
        useCustomLinks:
          type: boolean
          description: Default Queue/Hold table view.  'false' for icon view, 'true'
            for table view.
        clientAcknowledgement:
          type: boolean
          description: Default Queue/Hold table grouping. 'false' for no grouping,
            'true' for group by queue type.
        emailFromAddresses:
          type: array
          items:
            type: string
          description: "(-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
            We need to do this because from is a keyword but is the best word to describe
            the type of email. --)\n Choices of emails returned from sending a broadcast"
      description: EmailSmsPreferences is an object for get response and update request
    tcn.org.preferences.v1alpha1.EndOfDayPreferences:
      required:
      - eodMonday
      - eodTuesday
      - eodWednesday
      - eodThursday
      - eodFriday
      - eodSaturday
      - eodSunday
      type: object
      properties:
        name:
          type: string
          description: name is the identifier of the webhook preferences
        eodMonday:
          type: integer
          description: Delivery time for reports on Monday.
          format: int32
        eodTuesday:
          type: integer
          description: Delivery time for reports on Tuesday.
          format: int32
        eodWednesday:
          type: integer
          description: Delivery time for reports on Wednesday.
          format: int32
        eodThursday:
          type: integer
          description: Delivery time for reports on Thursday.
          format: int32
        eodFriday:
          type: integer
          description: Delivery time for reports on Friday.
          format: int32
        eodSaturday:
          type: integer
          description: Delivery time for reports on Saturday.
          format: int32
        eodSunday:
          type: integer
          description: Delivery time for reports on Sunday.
          format: int32
      description: EndOfDayPreferences is for automated report jobs end-of-day delivery
        times.
    tcn.org.preferences.v1alpha1.FileNameSegment:
      required:
      - segmentType
      - formatPattern
      type: object
      properties:
        segmentType:
          type: integer
          description: Segment type
          format: enum
        formatPattern:
          type: string
          description: Format pattern (if applicable)
      description: File name segment
    tcn.org.preferences.v1alpha1.ImportFormat:
      type: object
      properties:
        standard:
          type: integer
          description: Import format enum choice.
          format: enum
        customImportFormat:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.CustomImportFormat'
          description: Custom import format sid is used to access a custom import
            format resource.
      description: Contact import template type.
    tcn.org.preferences.v1alpha1.IncludedCallTypes:
      required:
      - outbound
      - inbound
      - manualDial
      - previewDial
      type: object
      properties:
        outbound:
          type: boolean
          description: Outbound call type.
        inbound:
          type: boolean
          description: Inbound call type.
        manualDial:
          type: boolean
          description: Manual-dial call type.
        previewDial:
          type: boolean
          description: Preview-dial call type.
      description: IncludedCallTypes represents the call types that are enabled in
        the agents dashboard.
    tcn.org.preferences.v1alpha1.ListVoiceAnalyticsPreferencesResponse:
      type: object
      properties:
        voiceAnalyticsPreferences:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.VoiceAnalyticsPreferences'
          description: The list of voice analytics preferences.
        nextPageToken:
          type: string
          description: "A token that can be sent as `page_token` to retrieve the next
            page.\n If this field is omitted, there are no subsequent pages."
      description: ListVoiceAnalyticsPreferencesResponse is the response message for
        ListVoiceAnalyticsPreferences.
    tcn.org.preferences.v1alpha1.OrganizationPreferences:
      required:
      - defaultCountry
      - timeZone
      - backofficeDisplayLanguage
      - operatorDisplayLanguage
      - operatorLanguageDirection
      type: object
      properties:
        name:
          type: string
          description: organizationPreferences identifier
        defaultCountry:
          type: string
          description: Organization's default country
        timeZone:
          type: string
          description: "Operating time zone of organization\n This is currently the
            string version of the api.commons.TimeZone enum."
        backofficeDisplayLanguage:
          type: string
          description: "Display language in backoffice for users of the organization\n
            This is currently the string version of the api.commons.DisplayLanguage
            enum."
        operatorDisplayLanguage:
          type: string
          description: "Display language in operator for users of the organization\n
            If set, must be a valid language tag supported in Operator.\n IETF BCP
            47 - https://en.wikipedia.org/wiki/IETF_language_tag"
        operatorLanguageDirection:
          type: integer
          description: Langauge direction in operator
          format: enum
      description: OrganizationPreferences are general preferences controlling organization
        properties.
    tcn.org.preferences.v1alpha1.PhonePreferences:
      required:
      - agentPreviewDialing
      - defaultRingLengthThreshold
      - displayRingLengthThreshold
      - showCallerId
      - defaultUseCallerId
      - overrideLinkbackRecording
      - callerIdCfdSid
      - defaultDialOrder
      - answeringMachineDetection
      - linkbackRecording
      type: object
      properties:
        name:
          type: string
          description: phonePreferences identifier
        agentPreviewDialing:
          type: boolean
          description: Determines whether broadcasts may be sent as Preview Dial.
        defaultRingLengthThreshold:
          type: integer
          description: The number of seconds to allow ringing to a 3rd party.
          format: int32
        displayRingLengthThreshold:
          type: boolean
          description: Determines whether the setting may be changed while scheduling.
        showCallerId:
          type: boolean
          description: Determines whether the setting may be show/edited while scheduling.
        defaultUseCallerId:
          type: boolean
          description: Determines whether to use Caller ID by default.
        overrideLinkbackRecording:
          type: boolean
          description: "Determines whether broadcast templates may set to record linkbacks\n
            individually."
        callerIdCfdSid:
          type: string
          description: The 'sid' of the Caller ID field description to use as default.
        defaultDialOrder:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DialOrder'
          description: The dial order of a contact record, default 'First Number Only'.
        answeringMachineDetection:
          type: integer
          description: Which type of answering machine detection to use.
          format: enum
        linkbackRecording:
          type: boolean
          description: Determines whether linkback recording is enabled.
      description: Preferences for phone dial options, call ID, and other call properties.
    tcn.org.preferences.v1alpha1.RecordingPreferences:
      required:
      - conventionEnabled
      - fileNamingConvention
      - zipConventionEnabled
      - zipFileNamingConvention
      - exportFileType
      type: object
      properties:
        name:
          type: string
          description: name is the identifier of the recording preferences
        conventionEnabled:
          type: boolean
          description: Whether to use custom recordings file name convention.
        fileNamingConvention:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RecordingsFileNamingConvention'
          description: "File naming convention for recording files.\n Previously called
            file_name_convention."
        zipConventionEnabled:
          type: boolean
          description: Whether to use custom recordings file name convention for zip.
        zipFileNamingConvention:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RecordingsZipFileNamingConvention'
          description: "File name convention for archived/compressed zip recording
            files.\n Previously called zip_file_name_convention."
        exportFileType:
          type: integer
          description: Recording export file type (.wav or .mp3).
          format: enum
      description: RecordingPreferences represents the preferences for recording configurations.
    tcn.org.preferences.v1alpha1.RecordingsFileNamingConvention:
      required:
      - inbound
      - manual
      - outbound
      - preview
      type: object
      properties:
        inbound:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          description: Inbound calls
        manual:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          description: Manual dial calls
        outbound:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          description: Outbound calls
        preview:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          description: Preview dial calls
      description: Call recordings file name convention
    tcn.org.preferences.v1alpha1.RecordingsZipFileNamingConvention:
      required:
      - inbound
      - manual
      - outbound
      - combined
      type: object
      properties:
        inbound:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          description: Inbound calls
        manual:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          description: Manual dial calls
        outbound:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          description: Outbound calls
        combined:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          description: Combined call types (inbound, manual, and outbound)
      description: Call recordings file name convention (for *.zip)
    tcn.org.preferences.v1alpha1.RedactRule:
      required:
      - kind
      - type
      - minConsecutive
      - slop
      type: object
      properties:
        kind:
          type: integer
          description: RedactionKind is the kind of redaction to be applied.
          format: enum
        type:
          type: integer
          description: RedactionType is the type of redaction to be applied.
          format: enum
        minConsecutive:
          type: integer
          description: "When value is non zero only numbers composed of at least\n
            `min_consecutive` digits will be redacted. For example, when the\n transcript
            contains the number `one two three four five six`\n redaction will not
            occur when `min_consecutive` is greater than 6.\n This was documented
            as OPTIONAL in the legacy code."
          format: int32
        maxConsecutive:
          type: integer
          description: "Optional. When value is non zero only numbers composed of
            at most\n `max_consecutive` digits will be redacted. For example, when
            the\n transcript contains the number `one two three four five six`\n redaction
            will not occur when `max_consecutive` is less than 6.\n This only applies
            when `REDACTION_TYPE_RANGE` is selected."
          format: int32
        slop:
          type: integer
          description: "slop is the number of extra words that can be in between digits
            and\n still count as a number. For example: slop of 2 with min_consecutive\n
            3 would allow \"one uh two and three\" to count as a number.\n Slop value
            must be between 0 and 5 inclusive."
          format: int32
      description: RedactRule is the redaction rule to be applied.
    tcn.org.preferences.v1alpha1.ReportFilter:
      type: object
      properties:
        standard:
          type: integer
          description: Standard report filter enum choice.
          format: enum
        customReportFilterSid:
          type: string
          description: Custom report filter xml property SID.
      description: Report filter properties.
    tcn.org.preferences.v1alpha1.ReportFilterPreferences:
      required:
      - defaultAutoReportFilter
      - sendEmptyAutoReports
      - displayBroadcastResendFilter
      - defaultBroadcastResendFilter
      type: object
      properties:
        name:
          type: string
          description: name is the identifier of the webhook preferences
        defaultAutoReportFilter:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ReportFilter'
          description: Default filtering for automated reports.
        sendEmptyAutoReports:
          type: boolean
          description: Whether to send auto-reports even if they are empty.
        displayBroadcastResendFilter:
          type: boolean
          description: Whether or not to display the setting in the 'Resend' window.
        defaultBroadcastResendFilter:
          allOf:
          - $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ReportFilter'
          description: Determines which contact records will be included in the new
            broadcast.
      description: ReportFilterPreferences represents the preferences for the report
        filter configurations.
    tcn.org.preferences.v1alpha1.SchedulePreferences:
      required:
      - displayScheduleUsingTimeZone
      - useScheduleUsingTimeZone
      - scheduleUsingTimeZoneScope
      - displayScheduleAsPaused
      - scheduleAsPaused
      - defaultCompletionThreshold
      - displayCampaignLinking
      - useCampaignLinking
      - campaignLinks
      - defaultCampaignLinkId
      - resendCancelledCampaigns
      type: object
      properties:
        name:
          type: string
          description: SchedulePreferences identifier
        displayScheduleUsingTimeZone:
          type: boolean
          description: Display campaign schedule by time zone
        useScheduleUsingTimeZone:
          type: boolean
          description: Whether or not by default campaigns are scheduled by time zone
        scheduleUsingTimeZoneScope:
          type: integer
          description: Schedule by time zone scope
          format: enum
        displayScheduleAsPaused:
          type: boolean
          description: Display "schedule as paused" field
        scheduleAsPaused:
          type: boolean
          description: Schedule paused by default
        defaultCompletionThreshold:
          type: string
          description: Default completion threshold
        displayCampaignLinking:
          type: boolean
          description: Display "campaign link" field
        useCampaignLinking:
          type: boolean
          description: Use campaign linking by default
        campaignLinks:
          type: object
          additionalProperties:
            type: string
          description: Campaign links map of properties, id/name as key, description
            as value.
        defaultCampaignLinkId:
          type: string
          description: Default campaign link ID (id in CampaignLink associated with
            default)
        resendCancelledCampaigns:
          type: boolean
          description: Whether user canceled campaigns can be resent in the organization.
      description: SchedulePreferences is an object for get response and update request
    tcn.org.preferences.v1alpha1.ScheduleRuleField:
      required:
      - scheduleRuleSid
      - scheduleRuleDisplayName
      type: object
      properties:
        scheduleRuleSid:
          type: string
          description: The sid of the schedule rule.
        scheduleRuleDisplayName:
          type: string
          description: The display name of the schedule rule.
      description: Compliance schedule rule field properties.
    tcn.org.preferences.v1alpha1.ScorecardsPreferences:
      required:
      - callSamplePercentage
      - maxUserEvaluations
      - evaluationInterval
      type: object
      properties:
        name:
          type: string
          description: name is the identifier of the score card preferences
        callSamplePercentage:
          type: integer
          description: "The percentage of randomized calls shown to the user for evaluation.\n
            Must be between 1-100."
          format: int32
        maxUserEvaluations:
          type: integer
          description: "Maximum number of evaluations per user, per category,\n over
            the given time interval"
          format: int32
        evaluationInterval:
          type: integer
          description: The time interval over which calls are listed for scoring.
          format: enum
      description: ScorecardsPreferences represents the preferences for the score
        card.
    tcn.org.preferences.v1alpha1.VoiceAnalyticsPreferences:
      required:
      - enabled
      - notification
      type: object
      properties:
        name:
          type: string
          description: name is the identifier of the voice analytics preferences
        enabled:
          type: boolean
          description: "When enabled call recordings will be transcribed and archived\n
            by localmixer in voice analytics.\n This was documented as OPTIONAL in
            the legacy code."
        silenceThreshold:
          type: integer
          description: "Minimum milliseconds of silence to occur before considered
            to\n be silence by voice analytics.\n The value must be between 0 and
            1000000."
          format: int32
        talkOverlapThreshold:
          type: integer
          description: "Minimum milliseconds of talk over to occur before considered
            to\n be talk over by voice analytics.\n The value must be between 0 and
            1000000.\n Previously named 'talk_over_threshold' - changed to follow
            the Google AIP standard."
          format: int32
        redactAllOrdinal:
          type: boolean
          description: "Redaction settings\n\n When enabled, the voice analytics will
            redact all the ordinal numbers."
        redactAllCardinal:
          type: boolean
          description: When enabled, the voice analytics will redact all the cardinal
            numbers.
        useCardinalRules:
          type: boolean
          description: When enabled, the voice analytics uses the cardinal rules for
            redacting the cardinal numbers.
        cardinalRules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RedactRule'
          description: The cardinal rules to be used for redacting the cardinal numbers.
        notification:
          allOf:
          - $ref: '#/components/schemas/tcn.org.type.v1alpha1.CronExpression'
          description: "Notification settings\n\n Flagging transcript notification
            preferences.\n This was documented as OPTIONAL in the legacy code.\n It
            defaults to every 15 minutes when not specified.\n Previously named 'notify',
            and it was of type string - changed to follow the Google AIP standard."
        regionId:
          type: string
          description: The region where the organization the voice analytics preferences
            belong to is located.
      description: VoiceAnalyticsPreferences represents the preferences for voice
        analytics configurations.
    tcn.org.preferences.v1alpha1.WebhookPreferences:
      required:
      - pushUrlsEnabled
      - callResultPushUrl
      - agentResponsePushUrl
      type: object
      properties:
        name:
          type: string
          description: name is the identifier of the webhook preferences
        pushUrlsEnabled:
          type: boolean
          description: Whether push URLs are enabled.
        callResultPushUrl:
          type: string
          description: Call result of the push URL.
        agentResponsePushUrl:
          type: string
          description: Agent response of the push URL.
      description: "(-- api-linter: core::0140::uri=disabled\n     aip.dev/not-precedent:
        We want to keep using \"url\" since that's used throughout the system--)\n
        WebhookPreferences represents the preferences for webhook configurations."
    tcn.org.skills.v1alpha1.ListSkillGroupsResponse:
      type: object
      properties:
        skillGroups:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
          description: The list of skill groups.
        nextPageToken:
          type: string
          description: The next page token.
      description: response used listing all skill groups
    tcn.org.skills.v1alpha1.SkillGroup:
      required:
      - title
      - description
      type: object
      properties:
        name:
          type: string
          description: skill group identifier
        title:
          type: string
          description: skill group title
        description:
          type: string
          description: skill group description
        skillSets:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup_SkillSet'
          description: skill group skill sets
        createTime:
          readOnly: true
          type: string
          description: creation date
          format: date-time
      description: SkillGroup -
    tcn.org.skills.v1alpha1.SkillGroup_SkillSet:
      required:
      - proficiency
      - skillSid
      type: object
      properties:
        proficiency:
          type: integer
          description: The proficiency of the skill as a percent [1,100].
          format: int32
        skillSid:
          type: string
          description: The sid of the skill
      description: skill set for the skill group
    tcn.org.tokens.v1alpha1.APIToken:
      type: object
      properties:
        name:
          type: string
          description: Unique identifier
        displayName:
          type: string
          description: API token name
        description:
          type: string
          description: API token description
        userId:
          type: string
          description: User the token is associated with
        username:
          readOnly: true
          type: string
          description: Usernme of the user
        permissions:
          type: array
          items:
            type: integer
            format: enum
          description: API token associated permissions
        createTime:
          readOnly: true
          type: string
          description: Creation date
          format: date-time
        expireTime:
          type: string
          description: When the token expirates
          format: date-time
        ttl:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: Time to live (until expiration)
        lastUseTime:
          readOnly: true
          type: string
          description: Last used date
          format: date-time
        revokeTime:
          readOnly: true
          type: string
          description: When (and if) the token was revoked (nil if unrevoked)
          format: date-time
      description: "(-- api-linter: core::0123::resource-singular=disabled\n     aip.dev/not-precedent:
        We need to do this because apiToken is more readable than aPIToken. --)\n\n
        APIToken is the message for a user's personal access token with associated\n
        permissions."
    tcn.org.tokens.v1alpha1.GenerateAPITokenResponse:
      type: object
      properties:
        apiToken:
          allOf:
          - $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
          description: The created API token.
        token:
          type: string
          description: The token, only returned upon generation and to be kept.
      description: Response from generating an API token
    tcn.org.tokens.v1alpha1.ListAPITokensResponse:
      type: object
      properties:
        apiTokens:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
          description: The list of API tokens.
        nextPageToken:
          type: string
          description: The next page token.
      description: Response used for listing all API tokens
    tcn.org.tokens.v1alpha1.ListKeysResponse:
      type: object
      properties:
        jsonKeys:
          type: string
          description: List of signing keys
      description: "(-- api-linter: core::0158::response-next-page-token-field=disabled\n
        \    api-linter: core::0158::response-repeated-first-field=disabled\n     api-linter:
        core::0132::response-unknown-fields=disabled\n     aip.dev/not-precedent:
        This is intended to return a json list of web keys. --)\n Response to list
        the signing keys used for API tokens"
    tcn.org.tokens.v1alpha1.RecordAPITokenUseRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the API token that was used
      description: Request to record that an API token was used
    tcn.org.tokens.v1alpha1.RevokeAPITokenRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The API token to revoke.
      description: Request to revoke a API token
    tcn.org.type.v1alpha1.CronExpression:
      required:
      - minutes
      - hours
      - monthDay
      - month
      - weekDay
      type: object
      properties:
        secondsSchedule:
          type: string
          description: "Seconds (0-59). Optional: Default is \"0\".\n Example: \"30\"
            for the 30th second of the minute."
        minutes:
          type: string
          description: "Minutes (0-59). Specifies the minute of the hour.\n Example:
            \"0\" for the start of the hour, \"30\" for the 30th minute."
        hours:
          type: string
          description: "Hours (0-23). Specifies the hour of the day.\n Example: \"15\"
            for 3 PM, \"0\" for midnight."
        monthDay:
          type: string
          description: "Day of the month (1-31). Specifies the day of the month.\n
            Example: \"1\" for the 1st day of the month, \"*\" for any day."
        month:
          type: string
          description: "Month (1-12). Specifies the month of the year.\n Example:
            \"1\" for January, \"12\" for December, \"*\" for any month."
        weekDay:
          type: string
          description: "Day of the week (0-7, where 0 and 7 both represent Sunday).\n
            Specifies the day of the week.\n Example: \"1\" for Monday, \"5\" for
            Friday, \"*\" for any day of the week."
        year:
          type: string
          description: "Year (optional). Specifies the year.\n Example: \"2002-2005\"
            for all years between 2002 and 2005, \"*\" for any year."
        frequency:
          type: integer
          description: "CronFrequency (optional). Specifies the frequency of the cron
            job.\n Example: \"DAILY\" for a daily cron job."
          format: enum
      description: "CronExpression is a message for the cron expression of a report.\n
        Common symbols used in cron expressions:\n (asterisk) * : Matches any value.\n
        (comma)    , : Specifies a list of values (e.g., 1,3,5).\n (hyphen)   - :
        Specifies a range of values (e.g., 1-5).\n (slash)    / : Specifies increments
        (e.g., */5 for every 5 minutes)."
    tcn.org.users.v1alpha1.ListUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
          description: users
        nextPageToken:
          type: string
          description: next page token
      description: response message ListUsersResponse
    tcn.org.users.v1alpha1.User:
      required:
      - username
      - defaultRegion
      - email
      - givenName
      - familyName
      - defaultApplication
      - permissionGroups
      type: object
      properties:
        name:
          type: string
          description: name identifier for an organization
        username:
          type: string
          description: The Username of the user.
        p3PermissionGroup:
          allOf:
          - $ref: '#/components/schemas/tcn.org.users.v1alpha1.User_P3PermissionGroup'
          description: The ID of the p3 permission group the user has.
        partnerAgentId:
          type: string
          description: The User's partner agent id.
        regionSidMap:
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/tcn.org.users.v1alpha1.User_RegionSids'
          description: The user's regional sids. The key of the map is a region id.
        defaultRegion:
          type: string
          description: region_id of a the user's default region
        email:
          type: string
          description: The User's email.
        emailVerified:
          readOnly: true
          type: boolean
          description: if the users email is verified
        loginDisabled:
          readOnly: true
          type: boolean
          description: Whether or not the user is disabled.
        callerIds:
          type: array
          items:
            type: string
          description: login preferences
        linkbackNumbers:
          type: array
          items:
            type: string
          description: a users array of linkback numbers
        givenName:
          type: string
          description: The user's first/given name.
        familyName:
          type: string
          description: The user's last/family name.
        createTime:
          readOnly: true
          type: string
          description: The date/time the user was created.
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: The date/time the user was last updated.
          format: date-time
        passwordResetRequired:
          type: boolean
          description: Whether or not the user must reset their password on next login.
        lastPasswordResetTime:
          readOnly: true
          type: string
          description: The time of the user's latest password reset
          format: date-time
        connectionId:
          type: string
          description: "connection id is the id of the auth connection that the\n
            user is coming from if it is a delegated user. If the user\n is not delgated
            this will be nil."
        timeZoneOverride:
          type: string
          description: User TimeZone with wrapper for nullable timezone
        defaultApplication:
          type: integer
          description: "UserSettings\n default_app for a user"
          format: enum
        userCallerId:
          type: string
          description: User caller id
        agentProfileGroupId:
          type: string
          description: users assigned agent profile group
        agent:
          readOnly: true
          type: boolean
          description: a bool signalling whether or not the user is also an agent
        accountOwner:
          readOnly: true
          type: boolean
          description: a bool to determine whether or not user is account owner
        whitelistedIps:
          type: array
          items:
            type: string
          description: Whitelisted IPs for the user
        mfaDeadlineTime:
          readOnly: true
          type: string
          description: "Timestamp beyond which the user is required to have multi
            factor authentication set up\n Only populated when getting user session
            data"
          format: date-time
        passwordResetDeadlineTime:
          readOnly: true
          type: string
          description: Timestamp of of when a user must reset their password before
          format: date-time
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.users.v1alpha1.User_PermissionGroup'
          description: The permission groups that the new user will have.
        huntGroup:
          allOf:
          - $ref: '#/components/schemas/tcn.org.users.v1alpha1.User_HuntGroup'
          description: The hunt group that the user belongs to.
        skills:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.users.v1alpha1.User_Skill'
          description: A list of the skills associated with the user
      description: User contains the basic properties for a user.
    tcn.org.users.v1alpha1.User_HuntGroup:
      required:
      - huntGroupSid
      type: object
      properties:
        huntGroupSid:
          type: string
          description: The sid of the hunt group the agent is assigned to
        huntGroupDisplayName:
          readOnly: true
          type: string
          description: The name of the hunt group the agent is assigned to
      description: Object to contain the hunt group fields
    tcn.org.users.v1alpha1.User_P3PermissionGroup:
      required:
      - p3PermissionGroupId
      type: object
      properties:
        p3PermissionGroupId:
          type: string
          description: Unique id for this p3 permission group.
        p3PermissionGroupDisplayName:
          readOnly: true
          type: string
          description: Name to identify by.
      description: P3PermissionGroup defines the p3 permission group entity.
    tcn.org.users.v1alpha1.User_PermissionGroup:
      required:
      - permissionGroupId
      type: object
      properties:
        permissionGroupId:
          type: string
          description: Unique id for this permission group.
        permissionGroupDisplayName:
          readOnly: true
          type: string
          description: Name to identify by.
      description: PermissionGroup defines the permission group entity.
    tcn.org.users.v1alpha1.User_RegionSids:
      type: object
      properties:
        loginSid:
          readOnly: true
          type: string
          description: The login sid for the region.
        agentSid:
          readOnly: true
          type: string
          description: THe agent sid for the region.
        clientSid:
          readOnly: true
          type: string
          description: THe client sid for the region.
      description: The entity object used in the region_sid_map.
    tcn.org.users.v1alpha1.User_Skill:
      required:
      - skillSid
      type: object
      properties:
        skillSid:
          type: string
          description: The sid of the skill
        skillDisplayName:
          readOnly: true
          type: string
          description: The name of the skill
      description: Object to contain the skill name and id
    tcn.tickets.ticket.v1alpha1.ActionType:
      required:
      - value
      - actionTitle
      type: object
      properties:
        value:
          type: string
          description: action id values
        actionTitle:
          type: string
          description: action_title
      description: ActionType
    tcn.tickets.ticket.v1alpha1.AssignTicketTemplateResponse:
      type: object
      properties:
        isAssigned:
          type: boolean
          description: closing status
      description: AssignTicketTemplateResponse -  Response Messages
    tcn.tickets.ticket.v1alpha1.CallbackContext:
      type: object
      properties:
        callerLineIdentification:
          type: string
          description: caller_line_identification
        phoneNumber:
          type: string
          description: phone_number
        regionCode:
          type: string
          description: region_code
        callerTitle:
          type: string
          description: caller_title
        callerRegionCode:
          type: string
          description: caller_region_code
      description: Message for Voice Callback Context
    tcn.tickets.ticket.v1alpha1.CloseTicketActionResponse:
      type: object
      properties:
        isStatus:
          type: boolean
          description: closing status
      description: CloseTicketActionResponse - Close TicketAction Response Messages
    tcn.tickets.ticket.v1alpha1.CloseTicketResponse:
      type: object
      properties:
        isStatus:
          type: boolean
          description: closing status
      description: CloseTicketResponse - Close Ticket Response Messages
    tcn.tickets.ticket.v1alpha1.EmailbackContext:
      type: object
      properties:
        contactTitle:
          type: string
          description: contact_title
        senderEmail:
          type: string
          description: sender_email
        receiverEmail:
          type: string
          description: receiver_email
      description: Message for EMAIL Callback Context
    tcn.tickets.ticket.v1alpha1.ListActionsResponse:
      type: object
      properties:
        actionTypes:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ActionType'
          description: "Action Type\n (-- api-linter: core::0132::response-unknown-fields=disabled\n
            \    aip.dev/not-precedent: We really need this field because reasons.
            --)"
        nextPageToken:
          type: string
          description: the next page token
      description: get all action's types  particular data
    tcn.tickets.ticket.v1alpha1.ListProjectsResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
          description: the list of project
        nextPageToken:
          type: string
          description: the next page token
      description: response used listing all project
    tcn.tickets.ticket.v1alpha1.ListSlaConditionsResponse:
      type: object
      properties:
        slaConditions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.SlaConditions'
          description: "SlaConditions Type\n (-- api-linter: core::0132::response-unknown-fields=disabled\n
            \    aip.dev/not-precedent: We really need this field because reasons.
            --)"
        nextPageToken:
          type: string
          description: the next page token
      description: get all action's types  particular data
    tcn.tickets.ticket.v1alpha1.ListSlasResponse:
      type: object
      properties:
        slas:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
          description: the list of Sla
        nextPageToken:
          type: string
          description: the next page token
      description: response used listing all Sla
    tcn.tickets.ticket.v1alpha1.ListTicketActionsResponse:
      type: object
      properties:
        ticketActions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
          description: the list of TicketAction
        nextPageToken:
          type: string
          description: the next page token
      description: response used listing all ticket_action
    tcn.tickets.ticket.v1alpha1.ListTicketTemplatesResponse:
      type: object
      properties:
        ticketTemplates:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
          description: the list of TicketTemplate
        nextPageToken:
          type: string
          description: the next page token
      description: response used listing all ticket_templates
    tcn.tickets.ticket.v1alpha1.ListTicketsResponse:
      type: object
      properties:
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
          description: the list of Ticket
        nextPageToken:
          type: string
          description: the next page token
      description: response used listing all tickets
    tcn.tickets.ticket.v1alpha1.Metadata:
      required:
      - title
      - value
      type: object
      properties:
        title:
          type: string
          description: title -
        value:
          type: string
          description: value -
      description: Metadata - Contains a key value pair of strings, Will have metadata
        of an agent conversations
    tcn.tickets.ticket.v1alpha1.Project:
      required:
      - title
      - projectCode
      type: object
      properties:
        name:
          type: string
          description: project identifier
        title:
          type: string
          description: project name
        projectCode:
          type: string
          description: project code
        enabled:
          type: boolean
          description: True/False Identifies if a template is active or inactive
        templateDescription:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TemplateDescription'
          description: A list of template base details
      description: Project -
    tcn.tickets.ticket.v1alpha1.Sla:
      required:
      - title
      - description
      - timeSpan
      type: object
      properties:
        name:
          type: string
          description: sla identifier
        title:
          type: string
          description: sla name
        description:
          type: string
          description: sla description
        timeSpan:
          allOf:
          - $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TimeSpan'
          description: sla time_span
      description: sla -
    tcn.tickets.ticket.v1alpha1.SlaConditions:
      type: object
      properties:
        conditionId:
          type: string
          description: condition_id
        title:
          type: string
          description: title
      description: SlaConditions
    tcn.tickets.ticket.v1alpha1.SmsbackContext:
      type: object
      properties:
        contactTitle:
          type: string
          description: contact_title
        senderSms:
          type: string
          description: sender_sms
        receiverSms:
          type: string
          description: receiver_sms
        senderRegionCode:
          type: string
          description: sender_region_code
        receiverRegionCode:
          type: string
          description: receiver_region_code
      description: Message for SMS Callback Context
    tcn.tickets.ticket.v1alpha1.TemplateDescription:
      type: object
      properties:
        ticketTemplateId:
          type: string
          description: ticket_template_id
        title:
          type: string
          description: title
      description: TemplateDescription
    tcn.tickets.ticket.v1alpha1.Ticket:
      required:
      - projectSid
      - projectTitle
      - title
      - createrId
      type: object
      properties:
        name:
          type: string
          description: identifier - ticket_code
        projectSid:
          type: string
          description: The imported/enabled ticket_project project_sid from omni.project
        projectTitle:
          type: string
          description: project_title
        title:
          type: string
          description: The title of the ticket
        description:
          type: string
          description: The description of the ticket
        createrId:
          type: string
          description: The userId (uuid) who created the ticket
        createTime:
          readOnly: true
          type: string
          description: The created time of the Ticket Object
          format: date-time
        metadatas:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Metadata'
          description: A list of conversation context meatadata
        slas:
          type: array
          items:
            type: string
          description: A list of sla  assotiated with a ticket
        ticketActions:
          type: array
          items:
            type: string
          description: A list of actions  assotiated with a ticket
        ticketStatus:
          type: integer
          description: Status of the ticket - NEW,OPEN,CLOSED
          format: enum
        ticketAssignees:
          type: array
          items:
            type: string
          description: assignee list
        ticketParticipants:
          type: array
          items:
            type: string
          description: participant list - Any user who participates in the ticket
            life cycle
      description: Ticket - Fields for Ticket creation, List tickets and view ticket
    tcn.tickets.ticket.v1alpha1.TicketAction:
      required:
      - actionSkills
      - ticketCode
      type: object
      properties:
        name:
          type: string
          description: identifier - ticket_action_id
        actionIdentification:
          type: string
          description: action id from ACTION_MASTER table
        startTime:
          type: string
          description: Start Date of the ACTION
          format: date-time
        expiryTime:
          type: string
          description: Expiry date of the ACTION
          format: date-time
        ticketActionStatus:
          type: integer
          description: Ticket action status can be 1 == AVAILABLE and 2 == NOT AVAILABLE
          format: enum
        actionSkills:
          type: array
          items:
            type: string
          description: Skills needed for the action to be completed
        slas:
          type: array
          items:
            type: string
          description: SLA Id for the ACTION
        workDoneDetail:
          type: string
          description: work done by detail
        voiceContext:
          allOf:
          - $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.CallbackContext'
          description: Voice Callback Context
        smsContext:
          allOf:
          - $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.SmsbackContext'
          description: SMS Callback Context
        emailContext:
          allOf:
          - $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.EmailbackContext'
          description: Email Callback Context
        actionType:
          allOf:
          - $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ActionType'
          description: Action Type
        ticketCode:
          type: string
          description: ticket_code
      description: TICKET_ACTION - New messgae have actions mapped to tickets
    tcn.tickets.ticket.v1alpha1.TicketTemplate:
      required:
      - templateJson
      - templateEntityVersion
      - title
      type: object
      properties:
        name:
          type: string
          description: identifier of Ticket Template
        templateJson:
          type: string
          description: A formatted string which the FE uses to retrieve all template
            related information
        templateEntityVersion:
          type: string
          description: Version of the Template
        title:
          type: string
          description: Name of the Template
        createrId:
          type: string
          description: Template created by user
        author:
          type: string
          description: Template modified by user
        createTime:
          readOnly: true
          type: string
          description: Template create time
          format: date-time
        updateTime:
          readOnly: true
          type: string
          description: Template modified time
          format: date-time
        enabled:
          type: boolean
          description: True/False Identifies if a template is active or inactive
      description: Ticket Template
    tcn.tickets.ticket.v1alpha1.TimeSpan:
      required:
      - value
      - span
      type: object
      properties:
        value:
          type: string
          description: Value of of the time_span
        span:
          type: integer
          description: Span - In minutes,hour,day,week,month,year
          format: enum
      description: TimeSpan
    tcn.wfo.vana.v1alpha1.GenerateRecordingDownloadUriRequest:
      required:
      - recording
      type: object
      properties:
        recording:
          type: string
          description: "Required. The recording resource name.\n Format: \"orgs/{org}/regions/{region}/zones/{zone}/recordings/{recording}\""
        fileType:
          type: string
          description: Optional. File type which can be wav or mp3. Defaults to wav.
      description: The generate recording download uri request.
    tcn.wfo.vana.v1alpha1.GenerateRecordingDownloadUriResponse:
      type: object
      properties:
        uri:
          type: string
          description: The generated recording download uri.
      description: The generate recording download uri response.
    tcn.wfo.vana.v1alpha1.Recording:
      type: object
      properties:
        name:
          type: string
          description: "Output only. The fully qualified resource name of the recording.\n
            Format: \"orgs/{org}/regions/{region}/zones/{zone}/recordings/{recording}\""
        callSid:
          type: string
          description: The unique identifier of the call recorded.
        callType:
          type: integer
          description: The type of call recorded.
          format: enum
        duration:
          pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
          type: string
          description: The duration of the recording.
        agentPhone:
          type: string
          description: The phone number of the agent.
        clientPhone:
          type: string
          description: The phone number of the client.
        campaign:
          type: string
          description: The name of the campaign.
        recordingType:
          type: integer
          description: The type of the recording.
          format: enum
        startTime:
          type: string
          description: The start time of the recording.
          format: date-time
        agentUserIds:
          type: array
          items:
            type: string
          description: The user IDs of participating agents.
      description: The recording resource.
    tcn.wfo.vana.v1alpha1.SearchRecordingsRequest:
      required:
      - parent
      type: object
      properties:
        parent:
          type: string
          description: "Required. The parent resource name.\n Format: \"orgs/{org}/regions/{region}/zones/{zone}\""
        pageSize:
          type: integer
          description: Optional. Number of recordings to return. Defaults to 10.
          format: int32
        pageToken:
          type: string
          description: Optional. A token to retrieve the next page of results.
        filter:
          type: string
          description: Optional. AIP-160 filter expression for search results.
        orderBy:
          type: string
          description: "Optional. Comma-separated list of fields to order by, followed
            by `asc`\n or `desc` postfix. Case insensitive."
        readMask:
          type: string
          description: Optional. Mask specifying which fields to read. Defaults to
            all fields.
          format: field-mask
      description: The search recordings request.
    tcn.wfo.vana.v1alpha1.SearchRecordingsResponse:
      type: object
      properties:
        recordings:
          type: array
          items:
            $ref: '#/components/schemas/tcn.wfo.vana.v1alpha1.Recording'
          description: The list of recordings found.
        nextPageToken:
          type: string
          description: Token for the next page of results.
      description: The search recordings response.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: Bearer
      bearerFormat: JWT
tags:
- name: AgentProfileGroupsService
  description: AgentProfileGroupService
- name: AttachmentService
  description: Attachments service is the public api for the omni/attachments service.
- name: BillingPlanService
  description: BillingPlanService manages billing plans.
- name: BillingTagService
  description: BillingTagService manages billing tags.
- name: CampaignService
  description: Campaigns service is the public api for the omni/campaigns service.
- name: CannedMessageService
  description: CannedMessageService -
- name: ChatWidgetService
  description: ChatWidgetService is the public api for the omni/chatwidgetdata service.
- name: ComplianceService
  description: Compliance service is the public api for the omni/complianceConfig
    service.
- name: ConnectedInboxService
  description: ConnectedInboxService is the public api for the omni/connectedInbox
    service.
- name: ConversationService
  description: Conversation service is the public api for the omni/conversation service.
- name: DashboardsService
  description: DashboardsService is the public API for the bi/dashboards service.
- name: DispositionService
  description: Dispositions service is the public api for the omni/dispositions service.
- name: EventService
  description: EventService -
- name: EventlogService
  description: Eventlog Service -
- name: ExilesService
  description: ExilesService
- name: IdpClientService
  description: IdpClientService
- name: InvoiceService
  description: InvoiceService -
- name: JobsService
  description: "JobsService\n (-- api-linter: core::0121::resource-must-support-get=disabled\n
    \    aip.dev/not-precedent: dont need a get method --)"
- name: MatchingRuleService
  description: MatchingRuleService -
- name: MessageService
  description: MessageService is the public api for the omni/message service.
- name: OauthService
  description: OAuth service is the public api for the omni/oauthConfig service.
- name: OrganizationsService
  description: OrganizationsService is the service that provides methods to manage
    organizations.
- name: PreferencesService
  description: "(-- api-linter: core::0121::resource-must-support-list=disabled\n
    \    aip.dev/not-precedent: PreferencesService doesn't support list calls. --)\n
    PreferencesService is the service that provides and handles preferences/settings."
- name: ProjectService
  description: Projects service is the public api for the omni/projects service.
- name: RateDefinitionService
  description: RateDefinitionService -
- name: RecordingService
  description: The recording service.
- name: RejectionsService
  description: "RejectionService\n (-- api-linter: core::0121::resource-must-support-get=disabled\n
    \    aip.dev/not-precedent: We do not need a get method --)"
- name: SignatureService
  description: Signatures service is the public api for the omni/signatures service.
- name: SkillsService
  description: SkillsService
- name: SmsNumberService
  description: SmsNumberService is the public api for the omni/smsnumber service.
- name: TaskService
  description: TaskService is the public api for the omni/task service.
- name: TicketService
  description: Ticket service is the public api for the tickets.
- name: TokensService
  description: TokensService
- name: UnsubscribeLinkService
  description: UnsubscribeLinks service is the public api for the omni/unsubscribelinks
    service.
- name: UsersService
  description: UsersService
- name: VerifiedEmailService
  description: VerifiedEmailService is the public api for the omni/verifiedEmails
    service.
- name: WhatsAppNumberService
  description: WhatsAppNumberService is the public api for the omni/whatsappnumber
    service.
servers:
- url: https://api.cbf.tcn.com
  description: Server located in United States (Primary)
- url: https://api.bom.tcn.com
  description: Server located in India
- url: https://api.chs.tcn.com
  description: Server located in United States (East)
- url: https://api.fra.tcn.com
  description: Server located in European Union (Germany)
- url: https://api.lon.tcn.com
  description: Server located in United Kingdom
- url: https://api.syd.tcn.com
  description: Server located in Australia
- url: https://api.yul.tcn.com
  description: Server located in Canada
security:
- bearerAuth: []
